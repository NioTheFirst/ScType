LendingPair
TransferHelper
Address
Clones
ERC721Receivable
Math
ReentrancyGuard
SafeERC20
SafeMath
IERC20
IERC721
IInterestRateModel
ILPTokenMaster
ILendingController
ILendingPair
IOwnable
IWETH
IUniswapV3Helper
contract name: LendingPair
WARNING!!!!
LendingPair_types.txt
Finance File not Found
"LendingPair_types.txt" opened successfully.
[*c], LendingPair

[sef], TOKA, decimals

[sef], TOKB, decimals

[sef], LENDINGCONTR, uniMinOutputPct, 1, {c, -1, -1, 0}

{c, -1, -1, 0}
['c', '-1', '-1', '0']
[sef], LENDINGCONTR, interestRateModel, 1, {c, -1, -1, 0, INTERESTMODEL}

{c, -1, -1, 0, INTERESTMODEL}
['c', '-1', '-1', '0', 'INTERESTMODEL']
[sef], INTERESTMODEL, interestRatePerBlock

[sef], INTERESTMODEL, lpRate

[sef], LENDINGCONTR, tokenPrices, 2, {c, 1, -1, 0}, {c, 2, -1, 0}

{c, 1, -1, 0}
['c', '1', '-1', '0']
{c, 2, -1, 0}
['c', '2', '-1', '0']
[sef], LENDINGCONTR, colFactor, 1, {c, -1, -1, 20}

{c, -1, -1, 20}
['c', '-1', '-1', '20']
[sef], LENDINGCONTR, liqFeeCaller

[sef], LENDINGCONTR, liqFeeSystem

[sef], Clones, clone, 1, {t, [1], [-1], 0}

{t, [1], [-1], 0}
['t', '[1]', '[-1]', '0']
[sef], V3HELPER, positionTokens, 2, {c, -1, -1, 0}, {c, -1, -1, 0}

{c, -1, -1, 0}
['c', '-1', '-1', '0']
{c, -1, -1, 0}
['c', '-1', '-1', '0']
[sef], V3HELPER, positionAmounts, 2, {c, -1, -1, 0}, {c, -1, -1, 0}

{c, -1, -1, 0}
['c', '-1', '-1', '0']
{c, -1, -1, 0}
['c', '-1', '-1', '0']
[sef], V3HELPER, removeLiquidity, 2, {c, -1, -1, 0}, {c, -1, -1, 0}

{c, -1, -1, 0}
['c', '-1', '-1', '0']
{c, -1, -1, 0}
['c', '-1', '-1', '0']
[sef], Math, min , 1, {t, [1], [-1], 0}

{t, [1], [-1], 0}
['t', '[1]', '[-1]', '0']
[t], global, LIQ_MIN_HEALTH

[t], global,  lendingController, -1, -1, 0, LENDINGCONTR

[t], global, tokenA, -1, -1, 0, TOKA

[t], global, tokenB, -1, -1, 0, TOKB

[t], global, uniManager

[t], global, uniV3Helper, -1, -1, 0, V3HELPER

[t], global, WETH

[t], global, lastBlockAccrued

[t], global, _NOT_ENTERED

[t], global, _ENTERED

[t], global, feeRecipient

[t], global, _status

[tref], pendingSystemFees

[tref], uniPosition

[tref], debtSharesOf

[tref], supplySharesOf

[tref], totalSupplyAmount

[tref], totalSupplyShares

[tref], totalDebtAmount

[tref], totalDebtShares

[tref], lpToken

[tref], decimals

[t], initialize, _lpTokenMaster

[t], initialize, _lendingController

[t], initialize, _uniV3Helper

[t], initialize, _feeRecipient

[t], initialize, _tokenA, -1, -1, 0, TOKA

[t], initialize, _tokenB, -1, -1, 0, TOKB

[t], depositUniPosition, _account

[t], depositUniPosition, _positionID

[t], repayAll, _account

[t], repayAll, _token

[t], repayAll, _maxAmount, 1, -1, 0

[t], repayAllETH, _account

[t], repayAllETH, _maxAmount, 1, -1, 0

[t], accrue, _token

[t], collectSystemFee, _token

[t], collectSystemFee, _amount, 1, -1, 0

[t], transferLp, _token

[t], transferLp, _from

[t], transferLp, _to

[t], transferLp, _amount, 1, -1, 0

[t], liquidateAccount, _account

[t], liquidateAccount, _repayToken

[t], liquidateAccount, _repayAmount

[t], liquidateAccount, _minSupplyOutput

[t], accountHealth, _account

[t], supplyRatePerBlock, _token

[t], borrowRatePerBlock, _token

[t], checkAccountHealth, _account

[*] LendingPair run
Checking... receive Visibility: external
[x] No Binary
Checking... initialize Visibility: external
[o] Marked
Checking... depositUniPosition Visibility: external
[o] Marked
Checking... withdrawUniPosition Visibility: external
[x] No Binary
Checking... uniClaimDeposit Visibility: external
[x] No Binary
Checking... uniClaimWithdraw Visibility: external
[x] No Binary
Checking... depositRepay Visibility: external
[x] No Binary
Checking... depositRepayETH Visibility: external
[x] No Binary
Checking... deposit Visibility: external
[x] No Binary
Checking... withdrawBorrow Visibility: external
[x] No Binary
Checking... withdrawBorrowETH Visibility: external
[x] No Binary
Checking... withdraw Visibility: external
[x] No Binary
Checking... withdrawAll Visibility: external
[x] No Binary
Checking... withdrawAllETH Visibility: external
[x] No Binary
Checking... borrow Visibility: external
[x] No Binary
Checking... repayAll Visibility: external
[o] Marked
Checking... repayAllETH Visibility: external
[o] Marked
Checking... repay Visibility: external
[x] No Binary
Checking... accrue Visibility: public
[o] Marked
Checking... collectSystemFee Visibility: external
[o] Marked
Checking... transferLp Visibility: external
[o] Marked
Checking... liquidateAccount Visibility: external
[o] Marked
Checking... accountHealth Visibility: public
[o] Marked
Checking... debtOf Visibility: external
[x] No Binary
Checking... supplyOf Visibility: external
[x] No Binary
Checking... borrowBalanceConverted Visibility: external
[x] No Binary
Checking... supplyBalanceConverted Visibility: external
[x] No Binary
Checking... supplyRatePerBlock Visibility: external
[o] Marked
Checking... borrowRatePerBlock Visibility: external
[x] No Binary
Checking... checkAccountHealth Visibility: public
[o] Marked
Checking... convertTokenValues Visibility: external
[x] No Binary
Checking... _depositRepay Visibility: internal
[x] Not visible 
Checking... _withdrawBorrow Visibility: internal
[x] Not visible 
Checking... _unwrapUniPosition Visibility: internal
[x] Not visible 
Checking... _repayDebtFromSupply Visibility: internal
[x] Not visible 
Checking... _uniCollectFees Visibility: internal
[x] Not visible 
Checking... _mintSupplyAmount Visibility: internal
[x] Not visible 
Checking... _burnSupplyShares Visibility: internal
[x] Not visible 
Checking... _mintDebtAmount Visibility: internal
[x] Not visible 
Checking... _burnDebtShares Visibility: internal
[x] Not visible 
Checking... _accrueDebt Visibility: internal
[x] Not visible 
Checking... _withdrawShares Visibility: internal
[x] Not visible 
Checking... _borrow Visibility: internal
[x] Not visible 
Checking... _repayShares Visibility: internal
[x] Not visible 
Checking... _deposit Visibility: internal
[x] Not visible 
Checking... _createLpToken Visibility: internal
[x] Not visible 
Checking... _amountToShares Visibility: internal
[x] Not visible 
Checking... _sharesToAmount Visibility: internal
[x] Not visible 
Checking... _debtToShares Visibility: internal
[x] Not visible 
Checking... _sharesToDebt Visibility: internal
[x] Not visible 
Checking... _supplyToShares Visibility: internal
[x] Not visible 
Checking... _sharesToSupply Visibility: internal
[x] Not visible 
Checking... _debtOf Visibility: internal
[x] Not visible 
Checking... _supplyOf Visibility: internal
[x] Not visible 
Checking... _interestRatePerBlock Visibility: internal
[x] Not visible 
Checking... _interestRateModel Visibility: internal
[x] Not visible 
Checking... _borrowBalanceConverted Visibility: internal
[x] Not visible 
Checking... _supplyBalanceConverted Visibility: internal
[x] Not visible 
Checking... _supplyCreditUni Visibility: internal
[x] Not visible 
Checking... _convertTokenValues Visibility: internal
[x] Not visible 
Checking... _validateToken Visibility: internal
[x] Not visible 
Checking... _validateUniPosition Visibility: internal
[x] Not visible 
Checking... _checkDepositLimit Visibility: internal
[x] Not visible 
Checking... _checkDepositsEnabled Visibility: internal
[x] Not visible 
Checking... _checkBorrowEnabled Visibility: internal
[x] Not visible 
Checking... _checkBorrowLimits Visibility: internal
[x] Not visible 
Checking... _lpRate Visibility: internal
[x] Not visible 
Checking... slitherConstructorConstantVariables Visibility: internal
[x] Not visible 
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
State_var: uniManager
Finding type for uniManager...
IERC721
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
State_var: lendingController
Finding type for lendingController...
ILendingController
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
State_var: tokenA
Finding type for tokenA...
address
State_var: tokenB
Finding type for tokenB...
address
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
State_var: WETH
Finding type for WETH...
IWETH
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
State_var: feeRecipient
Finding type for feeRecipient...
address
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
State_var: _ENTERED
Finding type for _ENTERED...
uint256
State_var: _status
Finding type for _status...
uint256
contract name: TransferHelper
WARNING!!!!
TransferHelper_types.txt
Finance File not Found
Type File not found.
[x] TransferHelper not run
contract name: Address
WARNING!!!!
Address_types.txt
Finance File not Found
Type File not found.
[x] Address not run
contract name: Clones
WARNING!!!!
Clones_types.txt
Finance File not Found
Type File not found.
[x] Clones not run
contract name: ERC721Receivable
WARNING!!!!
ERC721Receivable_types.txt
Finance File not Found
Type File not found.
[x] ERC721Receivable not run
contract name: Math
WARNING!!!!
Math_types.txt
Finance File not Found
Type File not found.
[x] Math not run
contract name: ReentrancyGuard
WARNING!!!!
ReentrancyGuard_types.txt
Finance File not Found
Type File not found.
[x] ReentrancyGuard not run
contract name: SafeERC20
WARNING!!!!
SafeERC20_types.txt
Finance File not Found
Type File not found.
[x] SafeERC20 not run
contract name: SafeMath
WARNING!!!!
SafeMath_types.txt
Finance File not Found
Type File not found.
[x] SafeMath not run
contract name: IERC20
WARNING!!!!
IERC20_types.txt
Finance File not Found
Type File not found.
[x] IERC20 not run
contract name: IERC721
WARNING!!!!
IERC721_types.txt
Finance File not Found
Type File not found.
[x] IERC721 not run
contract name: IInterestRateModel
WARNING!!!!
IInterestRateModel_types.txt
Finance File not Found
Type File not found.
[x] IInterestRateModel not run
contract name: ILPTokenMaster
WARNING!!!!
ILPTokenMaster_types.txt
Finance File not Found
Type File not found.
[x] ILPTokenMaster not run
contract name: ILendingController
WARNING!!!!
ILendingController_types.txt
Finance File not Found
Type File not found.
[x] ILendingController not run
contract name: ILendingPair
WARNING!!!!
ILendingPair_types.txt
Finance File not Found
Type File not found.
[x] ILendingPair not run
contract name: IOwnable
WARNING!!!!
IOwnable_types.txt
Finance File not Found
Type File not found.
[x] IOwnable not run
contract name: IWETH
WARNING!!!!
IWETH_types.txt
Finance File not Found
Type File not found.
[x] IWETH not run
contract name: IUniswapV3Helper
WARNING!!!!
IUniswapV3Helper_types.txt
Finance File not Found
Type File not found.
[x] IUniswapV3Helper not run
Seen contract: {} Contract name out: LendingPair
[*] LendingPair run
Reading Function: receive
Function receive not marked
Mark Iterations TRUE, proceeding anyway
Function name: receive
Function Visibility (test): external
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "receive":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: initialize
Function name: initialize
Function Visibility (test): external
_lpTokenMaster
Finding type for _lpTokenMaster...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _lpTokenMaster Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_lendingController
Finding type for _lendingController...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _lendingController Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_uniV3Helper
Finding type for _uniV3Helper...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _uniV3Helper Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_feeRecipient
Finding type for _feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _feeRecipient Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_tokenA
Finding type for _tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: _tokenA Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
_tokenB
Finding type for _tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: _tokenB Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
clearning node...
clearing ir...?
tokenA_1(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
has variable
typecheckig node...
tokenA_1(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: initialize
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_21 = CONVERT 0 to address
has variable
[i] TMP_21 cleared
clearing ir...?
TMP_22(bool) = tokenA_1 == TMP_21
has variable
[i] TMP_22 cleared
clearing ir...?
TMP_23(None) = SOLIDITY_CALL require(bool,string)(TMP_22,LendingPair: already initialized)
typecheckig node...
TMP_21 = CONVERT 0 to address
Function name: initialize
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_21 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_21

Name: TMP_21 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_22(bool) = tokenA_1 == TMP_21
Function name: initialize
[i]Type for TMP_22

Name: TMP_22 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_23(None) = SOLIDITY_CALL require(bool,string)(TMP_22,LendingPair: already initialized)
[i]Type for TMP_23

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_24 = CONVERT 0 to address
has variable
[i] TMP_24 cleared
clearing ir...?
TMP_25(bool) = _tokenA_1 != TMP_24
has variable
[i] TMP_25 cleared
clearing ir...?
TMP_26 = CONVERT 0 to address
has variable
[i] TMP_26 cleared
clearing ir...?
TMP_27(bool) = _tokenB_1 != TMP_26
has variable
[i] TMP_27 cleared
clearing ir...?
TMP_28(bool) = TMP_25 && TMP_27
has variable
[i] TMP_28 cleared
clearing ir...?
TMP_29(None) = SOLIDITY_CALL require(bool,string)(TMP_28,LendingPair: cannot be ZERO address)
typecheckig node...
TMP_24 = CONVERT 0 to address
Function name: initialize
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_24 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_24

Name: TMP_24 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_25(bool) = _tokenA_1 != TMP_24
Function name: initialize
[i]Type for TMP_25

Name: TMP_25 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_26 = CONVERT 0 to address
Function name: initialize
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_26 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_26

Name: TMP_26 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_27(bool) = _tokenB_1 != TMP_26
Function name: initialize
[i]Type for TMP_27

Name: TMP_27 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_28(bool) = TMP_25 && TMP_27
Function name: initialize
[i]Type for TMP_28

Name: TMP_28 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_29(None) = SOLIDITY_CALL require(bool,string)(TMP_28,LendingPair: cannot be ZERO address)
[i]Type for TMP_29

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_30 = CONVERT _lendingController_1 to ILendingController
has variable
[i] TMP_30 cleared
clearing ir...?
lendingController_1(ILendingController) := TMP_30(ILendingController)
has variable
typecheckig node...
TMP_30 = CONVERT _lendingController_1 to ILendingController
Function name: initialize

Name: _lendingController Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_30 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_30

Name: TMP_30 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_1(ILendingController) := TMP_30(ILendingController)
Function name: initialize
asgn

Name: TMP_30 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lendingController Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for lendingController

Name: lendingController Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_31 = CONVERT _uniV3Helper_1 to IUniswapV3Helper
has variable
[i] TMP_31 cleared
clearing ir...?
uniV3Helper_1(IUniswapV3Helper) := TMP_31(IUniswapV3Helper)
has variable
typecheckig node...
TMP_31 = CONVERT _uniV3Helper_1 to IUniswapV3Helper
Function name: initialize

Name: _uniV3Helper Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_31 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_31

Name: TMP_31 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniV3Helper_1(IUniswapV3Helper) := TMP_31(IUniswapV3Helper)
Function name: initialize
asgn

Name: TMP_31 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: uniV3Helper Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for uniV3Helper

Name: uniV3Helper Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
feeRecipient_1(address) := _feeRecipient_1(address)
has variable
typecheckig node...
feeRecipient_1(address) := _feeRecipient_1(address)
Function name: initialize
asgn

Name: _feeRecipient Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeRecipient Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for feeRecipient

Name: feeRecipient Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
tokenA_2(address) := _tokenA_1(address)
has variable
typecheckig node...
tokenA_2(address) := _tokenA_1(address)
Function name: initialize
asgn

Name: _tokenA Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef

Name: tokenA Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for tokenA

Name: tokenA Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
tokenB_1(address) := _tokenB_1(address)
has variable
typecheckig node...
tokenB_1(address) := _tokenB_1(address)
Function name: initialize
asgn

Name: _tokenB Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef

Name: tokenB Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for tokenB

Name: tokenB Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_5(uint256) -> lastBlockAccrued_0[tokenA_2]
has variable
clearing ir...?
lastBlockAccrued_1(mapping(address => uint256)) := ϕ(['lastBlockAccrued_0'])
has variable
clearing ir...?
REF_5 (->lastBlockAccrued_1) := block.number(uint256)
has variable
typecheckig node...
REF_5(uint256) -> lastBlockAccrued_0[tokenA_2]
Function name: initialize
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
lastBlockAccrued
[i]Type for REF_5

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_5(uint256) -> lastBlockAccrued_0[tokenA_2]
XXXXX
lastBlockAccrued_1(mapping(address => uint256)) := ϕ(['lastBlockAccrued_0'])
Function name: initialize
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_5 (->lastBlockAccrued_1) := block.number(uint256)
Function name: initialize
asgn
block.number

Name: REF_5 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_5

Name: REF_5 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_5 (->lastBlockAccrued_1) := block.number(uint256)
XXXXX
clearning node...
clearing ir...?
REF_6(uint256) -> lastBlockAccrued_1[tokenB_1]
has variable
clearing ir...?
lastBlockAccrued_2(mapping(address => uint256)) := ϕ(['lastBlockAccrued_1'])
has variable
clearing ir...?
REF_6 (->lastBlockAccrued_2) := block.number(uint256)
has variable
typecheckig node...
REF_6(uint256) -> lastBlockAccrued_1[tokenB_1]
Function name: initialize
INDEX

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_6

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastBlockAccrued_2(mapping(address => uint256)) := ϕ(['lastBlockAccrued_1'])
Function name: initialize
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_6 (->lastBlockAccrued_2) := block.number(uint256)
Function name: initialize
asgn
block.number

Name: REF_6 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_6

Name: REF_6 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_6 (->lastBlockAccrued_2) := block.number(uint256)
XXXXX
clearning node...
clearing ir...?
REF_7(uint256) -> decimals_0[tokenA_2]
has variable
clearing ir...?
TMP_32 = CONVERT tokenA_2 to IERC20
has variable
[i] TMP_32 cleared
clearing ir...?
TMP_33(uint8) = HIGH_LEVEL_CALL, dest:TMP_32(IERC20), function:decimals, arguments:[]  
has variable
[i] TMP_33 cleared
clearing ir...?
tokenA_3(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_2', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
has variable
clearing ir...?
tokenB_2(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_1', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
clearing ir...?
decimals_1(mapping(address => uint256)) := ϕ(['decimals_0'])
has variable
clearing ir...?
REF_7 (->decimals_1) := TMP_33(uint8)
has variable
typecheckig node...
REF_7(uint256) -> decimals_0[tokenA_2]
Function name: initialize
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
decimals
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_7

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_32 = CONVERT tokenA_2 to IERC20
Function name: initialize

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef

Name: TMP_32 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_32

Name: TMP_32 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
TMP_33(uint8) = HIGH_LEVEL_CALL, dest:TMP_32(IERC20), function:decimals, arguments:[]  
Function name: initialize
High Call: decimals
func name:decimals
other func name:decimals
TMP_33
hlc contract name: TOKA func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_33

Name: TMP_33 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenA_3(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_2', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: initialize
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_2(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_1', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: initialize
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
decimals_1(mapping(address => uint256)) := ϕ(['decimals_0'])
Function name: initialize
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_7 (->decimals_1) := TMP_33(uint8)
Function name: initialize
asgn

Name: TMP_33 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_7 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_7

Name: REF_7 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_9(uint256) -> decimals_1[tokenB_2]
has variable
clearing ir...?
TMP_34 = CONVERT tokenB_2 to IERC20
has variable
[i] TMP_34 cleared
clearing ir...?
TMP_35(uint8) = HIGH_LEVEL_CALL, dest:TMP_34(IERC20), function:decimals, arguments:[]  
has variable
[i] TMP_35 cleared
clearing ir...?
tokenA_4(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_3', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
has variable
clearing ir...?
tokenB_3(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9', 'tokenB_2'])
has variable
clearing ir...?
decimals_2(mapping(address => uint256)) := ϕ(['decimals_1'])
has variable
clearing ir...?
REF_9 (->decimals_2) := TMP_35(uint8)
has variable
typecheckig node...
REF_9(uint256) -> decimals_1[tokenB_2]
Function name: initialize
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_9

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_34 = CONVERT tokenB_2 to IERC20
Function name: initialize

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef

Name: TMP_34 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_34

Name: TMP_34 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
TMP_35(uint8) = HIGH_LEVEL_CALL, dest:TMP_34(IERC20), function:decimals, arguments:[]  
Function name: initialize
High Call: decimals
func name:decimals
other func name:decimals
TMP_35
hlc contract name: TOKB func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_35

Name: TMP_35 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenA_4(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_3', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: initialize
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_3(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9', 'tokenB_2'])
Function name: initialize
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
decimals_2(mapping(address => uint256)) := ϕ(['decimals_1'])
Function name: initialize
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_9 (->decimals_2) := TMP_35(uint8)
Function name: initialize
asgn

Name: TMP_35 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_9 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_9

Name: REF_9 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_11(uint256) -> decimals_2[tokenA_4]
has variable
clearing ir...?
TMP_36(bool) = REF_11 >= 6
has variable
[i] TMP_36 cleared
clearing ir...?
REF_12(uint256) -> decimals_2[tokenB_3]
has variable
clearing ir...?
TMP_37(bool) = REF_12 >= 6
has variable
[i] TMP_37 cleared
clearing ir...?
TMP_38(bool) = TMP_36 && TMP_37
has variable
[i] TMP_38 cleared
clearing ir...?
TMP_39(None) = SOLIDITY_CALL require(bool,string)(TMP_38,LendingPair: min 6 decimals)
typecheckig node...
REF_11(uint256) -> decimals_2[tokenA_4]
Function name: initialize
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_11

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_36(bool) = REF_11 >= 6
Function name: initialize
testing gt...
val: 6
val: 6
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_36

Name: TMP_36 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_12(uint256) -> decimals_2[tokenB_3]
Function name: initialize
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_12

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_37(bool) = REF_12 >= 6
Function name: initialize
testing gt...
val: 6
val: 6
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_37

Name: TMP_37 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_38(bool) = TMP_36 && TMP_37
Function name: initialize
[i]Type for TMP_38

Name: TMP_38 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_39(None) = SOLIDITY_CALL require(bool,string)(TMP_38,LendingPair: min 6 decimals)
[i]Type for TMP_39

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_13(address) -> lpToken_0[tokenA_4]
has variable
clearing ir...?
TMP_40(address) = INTERNAL_CALL, LendingPair._createLpToken(address,address)(_lpTokenMaster_1,tokenA_4)
has variable
[i] TMP_40 cleared
clearing ir...?
lpToken_1(mapping(address => address)) := ϕ(['lpToken_0'])
has variable
clearing ir...?
REF_13 (->lpToken_1) := TMP_40(address)
has variable
typecheckig node...
REF_13(address) -> lpToken_0[tokenA_4]
Function name: initialize
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
lpToken
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: address
address
Final Type: address
[i]Type for REF_13

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_40(address) = INTERNAL_CALL, LendingPair._createLpToken(address,address)(_lpTokenMaster_1,tokenA_4)
Function name: initialize
Internal call...
_createLpToken
_lpTokenMaster
tokenA
Function: _createLpToken
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
added
xyz
Function name: _createLpToken
Function Visibility: internal
clearning node...
clearing ir...?
_lpTokenMaster_1(address) := ϕ(['_lpTokenMaster_1'])
has variable
[i] _lpTokenMaster cleared
clearing ir...?
_underlying_1(address) := ϕ(['tokenA_4', 'tokenB_4'])
has variable
[i] _underlying cleared
clearing ir...?
lendingController_34(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
typecheckig node...
_lpTokenMaster_1(address) := ϕ(['_lpTokenMaster_1'])
Function name: _createLpToken
Phi
[i]Type for _lpTokenMaster

Name: _lpTokenMaster Function: _createLpToken
Num: -1
Den: -1
Norm: u
LF: _lpTokenMaster
Fields: 
Finance Type: undef
done.
_underlying_1(address) := ϕ(['tokenA_4', 'tokenB_4'])
Function name: _createLpToken
Phi
[i]Type for _underlying

Name: _underlying Function: _createLpToken
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
lendingController_34(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: _createLpToken
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_302(address) = LIBRARY_CALL, dest:Clones, function:Clones.clone(address), arguments:['_lpTokenMaster_1'] 
has variable
[i] TMP_302 cleared
clearing ir...?
TMP_303 = CONVERT TMP_302 to ILPTokenMaster
has variable
[i] TMP_303 cleared
clearing ir...?
newLPToken_1(ILPTokenMaster) := TMP_303(ILPTokenMaster)
has variable
[i] newLPToken cleared
typecheckig node...
TMP_302(address) = LIBRARY_CALL, dest:Clones, function:Clones.clone(address), arguments:['_lpTokenMaster_1'] 
Function name: _createLpToken
Library Call: clone
hlc contract name: Clones func_name: clone
('t', [1], [-1], 0, None)
_lpTokenMaster
wfc len: 1
Check copy_toekn_tuple
([-1], [-1, -1], 0, None, -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_302

Name: TMP_302 Function: _createLpToken
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_303 = CONVERT TMP_302 to ILPTokenMaster
Function name: _createLpToken

Name: TMP_302 Function: _createLpToken
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_303 Function: _createLpToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_303

Name: TMP_303 Function: _createLpToken
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
newLPToken_1(ILPTokenMaster) := TMP_303(ILPTokenMaster)
Function name: _createLpToken
asgn

Name: TMP_303 Function: _createLpToken
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: newLPToken Function: _createLpToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newLPToken

Name: newLPToken Function: _createLpToken
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_304 = CONVERT lendingController_34 to address
has variable
[i] TMP_304 cleared
clearing ir...?
HIGH_LEVEL_CALL, dest:newLPToken_1(ILPTokenMaster), function:initialize, arguments:['_underlying_1', 'TMP_304']  
clearing ir...?
lendingController_35(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_34', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
typecheckig node...
TMP_304 = CONVERT lendingController_34 to address
Function name: _createLpToken

Name: lendingController Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_304 Function: _createLpToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_304

Name: TMP_304 Function: _createLpToken
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:newLPToken_1(ILPTokenMaster), function:initialize, arguments:['_underlying_1', 'TMP_304']  
High Call: initialize
func name:initialize
other func name:initialize
done.
lendingController_35(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_34', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: _createLpToken
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_306 = CONVERT newLPToken_1 to address
has variable
[i] TMP_306 cleared
clearing ir...?
RETURN TMP_306
typecheckig node...
TMP_306 = CONVERT newLPToken_1 to address
Function name: _createLpToken

Name: newLPToken Function: _createLpToken
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_306 Function: _createLpToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_306

Name: TMP_306 Function: _createLpToken
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_306
RETURN

Name: TMP_306 Function: _createLpToken
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_createLpToken":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _createLpToken

Name: TMP_306 Function: _createLpToken
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_40

Name: TMP_40 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
lpToken_1(mapping(address => address)) := ϕ(['lpToken_0'])
Function name: initialize
Phi
[i]Type for lpToken

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_13 (->lpToken_1) := TMP_40(address)
Function name: initialize
asgn

Name: TMP_40 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_13 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_13

Name: REF_13 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_14(address) -> lpToken_1[tokenB_4]
has variable
clearing ir...?
TMP_41(address) = INTERNAL_CALL, LendingPair._createLpToken(address,address)(_lpTokenMaster_1,tokenB_4)
has variable
[i] TMP_41 cleared
clearing ir...?
lpToken_2(mapping(address => address)) := ϕ(['lpToken_1'])
has variable
clearing ir...?
REF_14 (->lpToken_2) := TMP_41(address)
has variable
typecheckig node...
REF_14(address) -> lpToken_1[tokenB_4]
Function name: initialize
INDEX

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_14

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_41(address) = INTERNAL_CALL, LendingPair._createLpToken(address,address)(_lpTokenMaster_1,tokenB_4)
Function name: initialize
Internal call...
_createLpToken
_lpTokenMaster
tokenB
Function: _createLpToken
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
0

Name: PIC_1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_41 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_41

Name: TMP_41 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lpToken_2(mapping(address => address)) := ϕ(['lpToken_1'])
Function name: initialize
Phi
[i]Type for lpToken

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_14 (->lpToken_2) := TMP_41(address)
Function name: initialize
asgn

Name: TMP_41 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_14 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_14

Name: REF_14 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "initialize":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
tokenA_1(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: initialize
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_21 = CONVERT 0 to address
Function name: initialize
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_21 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_21

Name: TMP_21 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_22(bool) = tokenA_1 == TMP_21
Function name: initialize
[i]Type for TMP_22

Name: TMP_22 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_23(None) = SOLIDITY_CALL require(bool,string)(TMP_22,LendingPair: already initialized)
[i]Type for TMP_23

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_24 = CONVERT 0 to address
Function name: initialize
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_24 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_24

Name: TMP_24 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_25(bool) = _tokenA_1 != TMP_24
Function name: initialize
[i]Type for TMP_25

Name: TMP_25 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_26 = CONVERT 0 to address
Function name: initialize
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_26 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_26

Name: TMP_26 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_27(bool) = _tokenB_1 != TMP_26
Function name: initialize
[i]Type for TMP_27

Name: TMP_27 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_28(bool) = TMP_25 && TMP_27
Function name: initialize
[i]Type for TMP_28

Name: TMP_28 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_29(None) = SOLIDITY_CALL require(bool,string)(TMP_28,LendingPair: cannot be ZERO address)
[i]Type for TMP_29

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_30 = CONVERT _lendingController_1 to ILendingController
Function name: initialize

Name: _lendingController Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_30 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_30

Name: TMP_30 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_1(ILendingController) := TMP_30(ILendingController)
Function name: initialize
asgn

Name: TMP_30 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lendingController Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for lendingController

Name: lendingController Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_31 = CONVERT _uniV3Helper_1 to IUniswapV3Helper
Function name: initialize

Name: _uniV3Helper Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_31 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_31

Name: TMP_31 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniV3Helper_1(IUniswapV3Helper) := TMP_31(IUniswapV3Helper)
Function name: initialize
asgn

Name: TMP_31 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: uniV3Helper Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for uniV3Helper

Name: uniV3Helper Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
feeRecipient_1(address) := _feeRecipient_1(address)
Function name: initialize
asgn

Name: _feeRecipient Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeRecipient Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for feeRecipient

Name: feeRecipient Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
tokenA_2(address) := _tokenA_1(address)
Function name: initialize
asgn

Name: _tokenA Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef

Name: tokenA Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for tokenA

Name: tokenA Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
typecheckig node...
tokenB_1(address) := _tokenB_1(address)
Function name: initialize
asgn

Name: _tokenB Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef

Name: tokenB Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for tokenB

Name: tokenB Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_5(uint256) -> lastBlockAccrued_0[tokenA_2]
Function name: initialize
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
lastBlockAccrued
[i]Type for REF_5

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_5(uint256) -> lastBlockAccrued_0[tokenA_2]
XXXXX
lastBlockAccrued_1(mapping(address => uint256)) := ϕ(['lastBlockAccrued_0'])
Function name: initialize
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_5 (->lastBlockAccrued_1) := block.number(uint256)
Function name: initialize
asgn
block.number

Name: REF_5 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_5

Name: REF_5 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_5 (->lastBlockAccrued_1) := block.number(uint256)
XXXXX
typecheckig node...
REF_6(uint256) -> lastBlockAccrued_1[tokenB_1]
Function name: initialize
INDEX

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_6

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastBlockAccrued_2(mapping(address => uint256)) := ϕ(['lastBlockAccrued_1'])
Function name: initialize
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_6 (->lastBlockAccrued_2) := block.number(uint256)
Function name: initialize
asgn
block.number

Name: REF_6 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_6

Name: REF_6 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_6 (->lastBlockAccrued_2) := block.number(uint256)
XXXXX
typecheckig node...
REF_7(uint256) -> decimals_0[tokenA_2]
Function name: initialize
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
decimals
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_7

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_32 = CONVERT tokenA_2 to IERC20
Function name: initialize

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef

Name: TMP_32 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[i]Type for TMP_32

Name: TMP_32 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
TMP_33(uint8) = HIGH_LEVEL_CALL, dest:TMP_32(IERC20), function:decimals, arguments:[]  
Function name: initialize
High Call: decimals
func name:decimals
other func name:decimals
TMP_33
hlc contract name: TOKA func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_33

Name: TMP_33 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenA_3(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_2', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: initialize
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_2(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_1', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: initialize
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
decimals_1(mapping(address => uint256)) := ϕ(['decimals_0'])
Function name: initialize
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_7 (->decimals_1) := TMP_33(uint8)
Function name: initialize
asgn

Name: TMP_33 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_7 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_7

Name: REF_7 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_9(uint256) -> decimals_1[tokenB_2]
Function name: initialize
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_9

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_34 = CONVERT tokenB_2 to IERC20
Function name: initialize

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef

Name: TMP_34 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[i]Type for TMP_34

Name: TMP_34 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
TMP_35(uint8) = HIGH_LEVEL_CALL, dest:TMP_34(IERC20), function:decimals, arguments:[]  
Function name: initialize
High Call: decimals
func name:decimals
other func name:decimals
TMP_35
hlc contract name: TOKB func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_35

Name: TMP_35 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenA_4(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_3', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: initialize
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_3(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9', 'tokenB_2'])
Function name: initialize
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
decimals_2(mapping(address => uint256)) := ϕ(['decimals_1'])
Function name: initialize
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_9 (->decimals_2) := TMP_35(uint8)
Function name: initialize
asgn

Name: TMP_35 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_9 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_9

Name: REF_9 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_11(uint256) -> decimals_2[tokenA_4]
Function name: initialize
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_11

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_36(bool) = REF_11 >= 6
Function name: initialize
testing gt...
val: 6
val: 6
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_36

Name: TMP_36 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_12(uint256) -> decimals_2[tokenB_3]
Function name: initialize
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_12

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_37(bool) = REF_12 >= 6
Function name: initialize
testing gt...
val: 6
val: 6
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_37

Name: TMP_37 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_38(bool) = TMP_36 && TMP_37
Function name: initialize
[i]Type for TMP_38

Name: TMP_38 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_39(None) = SOLIDITY_CALL require(bool,string)(TMP_38,LendingPair: min 6 decimals)
[i]Type for TMP_39

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_13(address) -> lpToken_0[tokenA_4]
Function name: initialize
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
lpToken
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: address
address
Final Type: address
[i]Type for REF_13

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_40(address) = INTERNAL_CALL, LendingPair._createLpToken(address,address)(_lpTokenMaster_1,tokenA_4)
Function name: initialize
Internal call...
_createLpToken
_lpTokenMaster
tokenA
Function: _createLpToken
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
0

Name: PIC_1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_40 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_40

Name: TMP_40 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
lpToken_1(mapping(address => address)) := ϕ(['lpToken_0'])
Function name: initialize
Phi
[i]Type for lpToken

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_13 (->lpToken_1) := TMP_40(address)
Function name: initialize
asgn

Name: TMP_40 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_13 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_13

Name: REF_13 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_14(address) -> lpToken_1[tokenB_4]
Function name: initialize
INDEX

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_14

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_41(address) = INTERNAL_CALL, LendingPair._createLpToken(address,address)(_lpTokenMaster_1,tokenB_4)
Function name: initialize
Internal call...
_createLpToken
_lpTokenMaster
tokenB
Function: _createLpToken
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
0

Name: PIC_1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_41 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_41

Name: TMP_41 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lpToken_2(mapping(address => address)) := ϕ(['lpToken_1'])
Function name: initialize
Phi
[i]Type for lpToken

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_14 (->lpToken_2) := TMP_41(address)
Function name: initialize
asgn

Name: TMP_41 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_14 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_14

Name: REF_14 Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "initialize":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: initialize
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: depositUniPosition
Function name: depositUniPosition
Function Visibility (test): external
_account
Finding type for _account...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _account Function: depositUniPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_positionID
Finding type for _positionID...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _positionID Function: depositUniPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
uniManager_1(IERC721) := ϕ(['uniManager_13', 'uniManager_6', 'uniManager_0', 'uniManager_11', 'uniManager_4'])
has variable
clearing ir...?
uniPosition_1(mapping(address => uint256)) := ϕ(['uniPosition_0', 'uniPosition_4', 'uniPosition_13', 'uniPosition_6', 'uniPosition_17', 'uniPosition_18', 'uniPosition_7', 'uniPosition_16'])
has variable
typecheckig node...
uniManager_1(IERC721) := ϕ(['uniManager_13', 'uniManager_6', 'uniManager_0', 'uniManager_11', 'uniManager_4'])
Function name: depositUniPosition
Phi
[i]Type for uniManager

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniPosition_1(mapping(address => uint256)) := ϕ(['uniPosition_0', 'uniPosition_4', 'uniPosition_13', 'uniPosition_6', 'uniPosition_17', 'uniPosition_18', 'uniPosition_7', 'uniPosition_16'])
Function name: depositUniPosition
Phi
[i]Type for uniPosition

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._checkDepositsEnabled()()
typecheckig node...
INTERNAL_CALL, LendingPair._checkDepositsEnabled()()
Internal call...
_checkDepositsEnabled
Function: _checkDepositsEnabled
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: _checkDepositsEnabled
Function Visibility: internal
clearning node...
clearing ir...?
lendingController_40(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
typecheckig node...
lendingController_40(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: _checkDepositsEnabled
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_359(bool) = HIGH_LEVEL_CALL, dest:lendingController_40(ILendingController), function:depositsEnabled, arguments:[]  
has variable
[i] TMP_359 cleared
clearing ir...?
lendingController_41(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_40', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
clearing ir...?
TMP_360(None) = SOLIDITY_CALL require(bool,string)(TMP_359,LendingPair: deposits disabled)
typecheckig node...
TMP_359(bool) = HIGH_LEVEL_CALL, dest:lendingController_40(ILendingController), function:depositsEnabled, arguments:[]  
Function name: _checkDepositsEnabled
High Call: depositsEnabled
func name:depositsEnabled
other func name:depositsEnabled
TMP_359
[i]Type for TMP_359

Name: TMP_359 Function: _checkDepositsEnabled
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_41(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_40', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: _checkDepositsEnabled
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
TMP_360(None) = SOLIDITY_CALL require(bool,string)(TMP_359,LendingPair: deposits disabled)
[i]Type for TMP_360

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_checkDepositsEnabled":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _checkDepositsEnabled
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateUniPosition(uint256)(_positionID_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateUniPosition(uint256)(_positionID_1)
Internal call...
_validateUniPosition
_positionID
Function: _validateUniPosition
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _validateUniPosition
Function Visibility: internal
clearning node...
clearing ir...?
_positionID_1(uint256) := ϕ(['_positionID_1'])
has variable
[i] _positionID cleared
clearing ir...?
uniV3Helper_13(IUniswapV3Helper) := ϕ(['uniV3Helper_12', 'uniV3Helper_1', 'uniV3Helper_14', 'uniV3Helper_0', 'uniV3Helper_10', 'uniV3Helper_7'])
has variable
typecheckig node...
_positionID_1(uint256) := ϕ(['_positionID_1'])
Function name: _validateUniPosition
Phi
[i]Type for _positionID

Name: _positionID Function: _validateUniPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniV3Helper_13(IUniswapV3Helper) := ϕ(['uniV3Helper_12', 'uniV3Helper_1', 'uniV3Helper_14', 'uniV3Helper_0', 'uniV3Helper_10', 'uniV3Helper_7'])
Function name: _validateUniPosition
Phi
[i]Type for uniV3Helper

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_13(address,address) = HIGH_LEVEL_CALL, dest:uniV3Helper_13(IUniswapV3Helper), function:positionTokens, arguments:['_positionID_1']  
has variable
clearing ir...?
uniV3Helper_14(IUniswapV3Helper) := ϕ(['uniV3Helper_13', 'uniV3Helper_12', 'uniV3Helper_1', 'uniV3Helper_14', 'uniV3Helper_10', 'uniV3Helper_7'])
has variable
clearing ir...?
uniTokenA_1(address)= UNPACK TUPLE_13 index: 0 
has variable
[i] uniTokenA cleared
clearing ir...?
uniTokenB_1(address)= UNPACK TUPLE_13 index: 1 
has variable
[i] uniTokenB cleared
typecheckig node...
TUPLE_13(address,address) = HIGH_LEVEL_CALL, dest:uniV3Helper_13(IUniswapV3Helper), function:positionTokens, arguments:['_positionID_1']  
Function name: _validateUniPosition
High Call: positionTokens
func name:positionTokens
other func name:positionTokens
TUPLE_13
hlc contract name: V3HELPER func_name: positionTokens
('c', [-1], [-1], 0, None)
_positionID
('c', [-1], [-1], 0, None)
_positionID
wfc len: 2
COPIED
[i]Type for TUPLE_13

Name: TUPLE_13 Function: _validateUniPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniV3Helper_14(IUniswapV3Helper) := ϕ(['uniV3Helper_13', 'uniV3Helper_12', 'uniV3Helper_1', 'uniV3Helper_14', 'uniV3Helper_10', 'uniV3Helper_7'])
Function name: _validateUniPosition
Phi
[i]Type for uniV3Helper

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
done.
uniTokenA_1(address)= UNPACK TUPLE_13 index: 0 
Function name: _validateUniPosition
Reading tuple TUPLE_13 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: address
address
Final Type: address
[i]Type for uniTokenA

Name: uniTokenA Function: _validateUniPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
uniTokenB_1(address)= UNPACK TUPLE_13 index: 1 
Function name: _validateUniPosition
Reading tuple TUPLE_13 index 1
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: address
address
Final Type: address
[i]Type for uniTokenB

Name: uniTokenB Function: _validateUniPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(uniTokenA_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(uniTokenA_1)
Internal call...
_validateToken
uniTokenA
Function: _validateToken
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 0, None, [], -1]
added
xyz
Function name: _validateToken
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_62', '_token_1', 'TMP_80', '_toToken_1', 'TMP_100', '_borrowedToken_1', '_token_1', '_repayToken_1', '_token_1', '_token_1', 'uniTokenA_1', '_token_1', '_token_1', 'TMP_123', '_fromToken_1', '_returnToken_1', '_suppliedToken_1', 'uniTokenB_1', '_token_1', '_token_1', '_returnToken_1', '_token_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
tokenA_48(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
has variable
clearing ir...?
tokenB_53(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_62', '_token_1', 'TMP_80', '_toToken_1', 'TMP_100', '_borrowedToken_1', '_token_1', '_repayToken_1', '_token_1', '_token_1', 'uniTokenA_1', '_token_1', '_token_1', 'TMP_123', '_fromToken_1', '_returnToken_1', '_suppliedToken_1', 'uniTokenB_1', '_token_1', '_token_1', '_returnToken_1', '_token_1', '_token_1', '_token_1'])
Function name: _validateToken
Phi
[i]Type for _token

Name: _token Function: _validateToken
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
tokenA_48(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: _validateToken
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_53(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: _validateToken
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_348(bool) = _token_1 == tokenA_48
has variable
[i] TMP_348 cleared
clearing ir...?
TMP_349(bool) = _token_1 == tokenB_53
has variable
[i] TMP_349 cleared
clearing ir...?
TMP_350(bool) = TMP_348 || TMP_349
has variable
[i] TMP_350 cleared
clearing ir...?
TMP_351(None) = SOLIDITY_CALL require(bool,string)(TMP_350,LendingPair: invalid token)
typecheckig node...
TMP_348(bool) = _token_1 == tokenA_48
Function name: _validateToken
[i]Type for TMP_348

Name: TMP_348 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_349(bool) = _token_1 == tokenB_53
Function name: _validateToken
[i]Type for TMP_349

Name: TMP_349 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_350(bool) = TMP_348 || TMP_349
Function name: _validateToken
[i]Type for TMP_350

Name: TMP_350 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_351(None) = SOLIDITY_CALL require(bool,string)(TMP_350,LendingPair: invalid token)
[i]Type for TMP_351

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_validateToken":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _validateToken
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(uniTokenB_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(uniTokenB_1)
Internal call...
_validateToken
uniTokenB
Function: _validateToken
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, None, [], -1]
0
done.
WORKLIST iteration 0 for function call "_validateUniPosition":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _validateUniPosition
done.
clearning node...
clearing ir...?
REF_15(uint256) -> uniPosition_3[_account_1]
has variable
clearing ir...?
TMP_44(bool) = REF_15 == 0
has variable
[i] TMP_44 cleared
clearing ir...?
TMP_45(None) = SOLIDITY_CALL require(bool,string)(TMP_44,LendingPair: one position per account)
typecheckig node...
REF_15(uint256) -> uniPosition_3[_account_1]
Function name: depositUniPosition
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
uniPosition
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_15

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_44(bool) = REF_15 == 0
Function name: depositUniPosition
[i]Type for TMP_44

Name: TMP_44 Function: depositUniPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_45(None) = SOLIDITY_CALL require(bool,string)(TMP_44,LendingPair: one position per account)
[i]Type for TMP_45

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_46 = CONVERT this to address
has variable
[i] TMP_46 cleared
clearing ir...?
HIGH_LEVEL_CALL, dest:uniManager_3(IERC721), function:safeTransferFrom, arguments:['msg.sender', 'TMP_46', '_positionID_1']  
clearing ir...?
uniManager_4(IERC721) := ϕ(['uniManager_13', 'uniManager_6', 'uniManager_11', 'uniManager_3', 'uniManager_4'])
has variable
typecheckig node...
TMP_46 = CONVERT this to address
Function name: depositUniPosition
[i]Type for TMP_46

Name: TMP_46 Function: depositUniPosition
Num: -1
Den: -1
Norm: u
LF: LendingPair
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:uniManager_3(IERC721), function:safeTransferFrom, arguments:['msg.sender', 'TMP_46', '_positionID_1']  
High Call: safeTransferFrom
func name:safeTransferFrom
other func name:safeTransferFrom
done.
uniManager_4(IERC721) := ϕ(['uniManager_13', 'uniManager_6', 'uniManager_11', 'uniManager_3', 'uniManager_4'])
Function name: depositUniPosition
Phi
[i]Type for uniManager

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_17(uint256) -> uniPosition_3[_account_1]
has variable
clearing ir...?
uniPosition_4(mapping(address => uint256)) := ϕ(['uniPosition_3'])
has variable
clearing ir...?
REF_17 (->uniPosition_4) := _positionID_1(uint256)
has variable
typecheckig node...
REF_17(uint256) -> uniPosition_3[_account_1]
Function name: depositUniPosition
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
uniPosition
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_17

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniPosition_4(mapping(address => uint256)) := ϕ(['uniPosition_3'])
Function name: depositUniPosition
Phi
[i]Type for uniPosition

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_17 (->uniPosition_4) := _positionID_1(uint256)
Function name: depositUniPosition
asgn

Name: _positionID Function: depositUniPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_17 Function: depositUniPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_17

Name: REF_17 Function: depositUniPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit DepositUniPosition(_account_1,_positionID_1)
typecheckig node...
Emit DepositUniPosition(_account_1,_positionID_1)
WORKLIST iteration 0 for function call "depositUniPosition":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: depositUniPosition
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: withdrawUniPosition
Function withdrawUniPosition not marked
Mark Iterations TRUE, proceeding anyway
Function name: withdrawUniPosition
Function Visibility (test): external
clearning node...
clearing ir...?
uniManager_5(IERC721) := ϕ(['uniManager_13', 'uniManager_6', 'uniManager_0', 'uniManager_11', 'uniManager_4'])
has variable
clearing ir...?
uniPosition_5(mapping(address => uint256)) := ϕ(['uniPosition_0', 'uniPosition_4', 'uniPosition_13', 'uniPosition_6', 'uniPosition_17', 'uniPosition_18', 'uniPosition_7', 'uniPosition_16'])
has variable
typecheckig node...
uniManager_5(IERC721) := ϕ(['uniManager_13', 'uniManager_6', 'uniManager_0', 'uniManager_11', 'uniManager_4'])
Function name: withdrawUniPosition
Phi
[i]Type for uniManager

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniPosition_5(mapping(address => uint256)) := ϕ(['uniPosition_0', 'uniPosition_4', 'uniPosition_13', 'uniPosition_6', 'uniPosition_17', 'uniPosition_18', 'uniPosition_7', 'uniPosition_16'])
Function name: withdrawUniPosition
Phi
[i]Type for uniPosition

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_18(uint256) -> uniPosition_5[msg.sender]
has variable
clearing ir...?
positionID_1(uint256) := REF_18(uint256)
has variable
[i] positionID cleared
typecheckig node...
REF_18(uint256) -> uniPosition_5[msg.sender]
Function name: withdrawUniPosition
INDEX
[i]Type for REF_18

Name: REF_18 Function: withdrawUniPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
positionID_1(uint256) := REF_18(uint256)
Function name: withdrawUniPosition
asgn

Name: REF_18 Function: withdrawUniPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: positionID Function: withdrawUniPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for positionID

Name: positionID Function: withdrawUniPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_49 = CONVERT this to address
has variable
[i] TMP_49 cleared
clearing ir...?
HIGH_LEVEL_CALL, dest:uniManager_5(IERC721), function:safeTransferFrom, arguments:['TMP_49', 'msg.sender', 'positionID_1']  
clearing ir...?
uniManager_6(IERC721) := ϕ(['uniManager_5', 'uniManager_13', 'uniManager_6', 'uniManager_11', 'uniManager_4'])
has variable
typecheckig node...
TMP_49 = CONVERT this to address
Function name: withdrawUniPosition
[i]Type for TMP_49

Name: TMP_49 Function: withdrawUniPosition
Num: -1
Den: -1
Norm: u
LF: LendingPair
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:uniManager_5(IERC721), function:safeTransferFrom, arguments:['TMP_49', 'msg.sender', 'positionID_1']  
High Call: safeTransferFrom
func name:safeTransferFrom
other func name:safeTransferFrom
done.
uniManager_6(IERC721) := ϕ(['uniManager_5', 'uniManager_13', 'uniManager_6', 'uniManager_11', 'uniManager_4'])
Function name: withdrawUniPosition
Phi
[i]Type for uniManager

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_20(uint256) -> uniPosition_5[msg.sender]
has variable
clearing ir...?
uniPosition_6(mapping(address => uint256)) := ϕ(['uniPosition_5'])
has variable
clearing ir...?
REF_20 (->uniPosition_6) := 0(uint256)
has variable
typecheckig node...
REF_20(uint256) -> uniPosition_5[msg.sender]
Function name: withdrawUniPosition
INDEX
[i]Type for REF_20

Name: REF_20 Function: withdrawUniPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniPosition_6(mapping(address => uint256)) := ϕ(['uniPosition_5'])
Function name: withdrawUniPosition
Phi
[i]Type for uniPosition

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_20 (->uniPosition_6) := 0(uint256)
Function name: withdrawUniPosition
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_20 Function: withdrawUniPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_20

Name: REF_20 Function: withdrawUniPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair.checkAccountHealth(address)(msg.sender)
typecheckig node...
INTERNAL_CALL, LendingPair.checkAccountHealth(address)(msg.sender)
Internal call...
checkAccountHealth
msg.sender
Function: checkAccountHealth
ic
done.
clearning node...
clearing ir...?
Emit WithdrawUniPosition(positionID_1)
typecheckig node...
Emit WithdrawUniPosition(positionID_1)
WORKLIST iteration 0 for function call "withdrawUniPosition":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: uniClaimDeposit
Function uniClaimDeposit not marked
Mark Iterations TRUE, proceeding anyway
Function name: uniClaimDeposit
Function Visibility (test): external
clearning node...
clearing ir...?
tokenA_6(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
has variable
clearing ir...?
tokenB_6(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
typecheckig node...
tokenA_6(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: uniClaimDeposit
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_6(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: uniClaimDeposit
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_1(uint256,uint256) = INTERNAL_CALL, LendingPair._uniCollectFees(address)(msg.sender)
has variable
clearing ir...?
amountA_1(uint256)= UNPACK TUPLE_1 index: 0 
has variable
[i] amountA cleared
clearing ir...?
amountB_1(uint256)= UNPACK TUPLE_1 index: 1 
has variable
[i] amountB cleared
typecheckig node...
TUPLE_1(uint256,uint256) = INTERNAL_CALL, LendingPair._uniCollectFees(address)(msg.sender)
Function name: uniClaimDeposit
Internal call...
_uniCollectFees
msg.sender
Function: _uniCollectFees
ic
[i]Type for TUPLE_1

Name: TUPLE_1 Function: uniClaimDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amountA_1(uint256)= UNPACK TUPLE_1 index: 0 
Function name: uniClaimDeposit
Reading tuple TUPLE_1 index 0
Finding type for amountA...
uint256
[i]Type for amountA

Name: amountA Function: uniClaimDeposit
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amountB_1(uint256)= UNPACK TUPLE_1 index: 1 
Function name: uniClaimDeposit
Reading tuple TUPLE_1 index 1
Finding type for amountB...
uint256
[i]Type for amountB

Name: amountB Function: uniClaimDeposit
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_53(uint256) = INTERNAL_CALL, LendingPair._mintSupplyAmount(address,address,uint256)(tokenA_7,msg.sender,amountA_1)
has variable
[i] TMP_53 cleared
typecheckig node...
TMP_53(uint256) = INTERNAL_CALL, LendingPair._mintSupplyAmount(address,address,uint256)(tokenA_7,msg.sender,amountA_1)
Function name: uniClaimDeposit
Internal call...
_mintSupplyAmount
tokenA
msg.sender
amountA
Function: _mintSupplyAmount
ic
[i]Type for TMP_53

Name: TMP_53 Function: uniClaimDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_54(uint256) = INTERNAL_CALL, LendingPair._mintSupplyAmount(address,address,uint256)(tokenB_8,msg.sender,amountB_1)
has variable
[i] TMP_54 cleared
typecheckig node...
TMP_54(uint256) = INTERNAL_CALL, LendingPair._mintSupplyAmount(address,address,uint256)(tokenB_8,msg.sender,amountB_1)
Function name: uniClaimDeposit
Internal call...
_mintSupplyAmount
tokenB
msg.sender
amountB
Function: _mintSupplyAmount
ic
[i]Type for TMP_54

Name: TMP_54 Function: uniClaimDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "uniClaimDeposit":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: uniClaimWithdraw
Function uniClaimWithdraw not marked
Mark Iterations TRUE, proceeding anyway
Function name: uniClaimWithdraw
Function Visibility (test): external
clearning node...
clearing ir...?
tokenA_9(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
has variable
clearing ir...?
tokenB_10(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
typecheckig node...
tokenA_9(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: uniClaimWithdraw
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_10(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: uniClaimWithdraw
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_2(uint256,uint256) = INTERNAL_CALL, LendingPair._uniCollectFees(address)(msg.sender)
has variable
clearing ir...?
amountA_1(uint256)= UNPACK TUPLE_2 index: 0 
has variable
[i] amountA cleared
clearing ir...?
amountB_1(uint256)= UNPACK TUPLE_2 index: 1 
has variable
[i] amountB cleared
typecheckig node...
TUPLE_2(uint256,uint256) = INTERNAL_CALL, LendingPair._uniCollectFees(address)(msg.sender)
Function name: uniClaimWithdraw
Internal call...
_uniCollectFees
msg.sender
Function: _uniCollectFees
ic
[i]Type for TUPLE_2

Name: TUPLE_2 Function: uniClaimWithdraw
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amountA_1(uint256)= UNPACK TUPLE_2 index: 0 
Function name: uniClaimWithdraw
Reading tuple TUPLE_2 index 0
Finding type for amountA...
uint256
[i]Type for amountA

Name: amountA Function: uniClaimWithdraw
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amountB_1(uint256)= UNPACK TUPLE_2 index: 1 
Function name: uniClaimWithdraw
Reading tuple TUPLE_2 index 1
Finding type for amountB...
uint256
[i]Type for amountB

Name: amountB Function: uniClaimWithdraw
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, TransferHelper._safeTransfer(address,address,uint256)(tokenA_10,msg.sender,amountA_1)
typecheckig node...
INTERNAL_CALL, TransferHelper._safeTransfer(address,address,uint256)(tokenA_10,msg.sender,amountA_1)
Internal call...
_safeTransfer
tokenA
msg.sender
amountA
Function: _safeTransfer
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, TransferHelper._safeTransfer(address,address,uint256)(tokenB_12,msg.sender,amountB_1)
typecheckig node...
INTERNAL_CALL, TransferHelper._safeTransfer(address,address,uint256)(tokenB_12,msg.sender,amountB_1)
Internal call...
_safeTransfer
tokenB
msg.sender
amountB
Function: _safeTransfer
ic
done.
WORKLIST iteration 0 for function call "uniClaimWithdraw":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: depositRepay
Function depositRepay not marked
Mark Iterations TRUE, proceeding anyway
Function name: depositRepay
Function Visibility (test): external
_account
Finding type for _account...
address
_token
Finding type for _token...
address
_amount
Finding type for _amount...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
Internal call...
_validateToken
_token
Function: _validateToken
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair.accrue(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair.accrue(address)(_token_1)
Internal call...
accrue
_token
Function: accrue
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._depositRepay(address,address,uint256)(_account_1,_token_1,_amount_1)
typecheckig node...
INTERNAL_CALL, LendingPair._depositRepay(address,address,uint256)(_account_1,_token_1,_amount_1)
Internal call...
_depositRepay
_account
_token
_amount
Function: _depositRepay
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, TransferHelper._safeTransferFrom(address,address,uint256)(_token_1,msg.sender,_amount_1)
typecheckig node...
INTERNAL_CALL, TransferHelper._safeTransferFrom(address,address,uint256)(_token_1,msg.sender,_amount_1)
Internal call...
_safeTransferFrom
_token
msg.sender
_amount
Function: _safeTransferFrom
ic
done.
WORKLIST iteration 0 for function call "depositRepay":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: depositRepayETH
Function depositRepayETH not marked
Mark Iterations TRUE, proceeding anyway
Function name: depositRepayETH
Function Visibility (test): external
_account
Finding type for _account...
address
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
clearning node...
clearing ir...?
WETH_5(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_14', 'WETH_0', 'WETH_4', 'WETH_21'])
has variable
typecheckig node...
WETH_5(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_14', 'WETH_0', 'WETH_4', 'WETH_21'])
Function name: depositRepayETH
Phi
[i]Type for WETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
done.
clearning node...
clearing ir...?
TMP_62 = CONVERT WETH_6 to address
has variable
[i] TMP_62 cleared
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(TMP_62)
typecheckig node...
TMP_62 = CONVERT WETH_6 to address
Function name: depositRepayETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_62 Function: depositRepayETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: depositRepayETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, LendingPair._validateToken(address)(TMP_62)
Internal call...
_validateToken
TMP_62
Function: _validateToken
ic
done.
clearning node...
clearing ir...?
TMP_64 = CONVERT WETH_7 to address
has variable
[i] TMP_64 cleared
clearing ir...?
INTERNAL_CALL, LendingPair.accrue(address)(TMP_64)
typecheckig node...
TMP_64 = CONVERT WETH_7 to address
Function name: depositRepayETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_64 Function: depositRepayETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_64

Name: TMP_64 Function: depositRepayETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, LendingPair.accrue(address)(TMP_64)
Internal call...
accrue
TMP_64
Function: accrue
ic
done.
clearning node...
clearing ir...?
TMP_66 = CONVERT WETH_8 to address
has variable
[i] TMP_66 cleared
clearing ir...?
INTERNAL_CALL, LendingPair._depositRepay(address,address,uint256)(_account_1,TMP_66,msg.value)
typecheckig node...
TMP_66 = CONVERT WETH_8 to address
Function name: depositRepayETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_66 Function: depositRepayETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_66

Name: TMP_66 Function: depositRepayETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, LendingPair._depositRepay(address,address,uint256)(_account_1,TMP_66,msg.value)
Internal call...
_depositRepay
_account
TMP_66
msg.value
Function: _depositRepay
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, TransferHelper._depositWeth()()
typecheckig node...
INTERNAL_CALL, TransferHelper._depositWeth()()
Internal call...
_depositWeth
Function: _depositWeth
ic
done.
WORKLIST iteration 0 for function call "depositRepayETH":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: deposit
Function deposit not marked
Mark Iterations TRUE, proceeding anyway
Function name: deposit
Function Visibility (test): external
_account
Finding type for _account...
address
_token
Finding type for _token...
address
_amount
Finding type for _amount...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
Internal call...
_validateToken
_token
Function: _validateToken
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair.accrue(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair.accrue(address)(_token_1)
Internal call...
accrue
_token
Function: accrue
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._deposit(address,address,uint256)(_account_1,_token_1,_amount_1)
typecheckig node...
INTERNAL_CALL, LendingPair._deposit(address,address,uint256)(_account_1,_token_1,_amount_1)
Internal call...
_deposit
_account
_token
_amount
Function: _deposit
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, TransferHelper._safeTransferFrom(address,address,uint256)(_token_1,msg.sender,_amount_1)
typecheckig node...
INTERNAL_CALL, TransferHelper._safeTransferFrom(address,address,uint256)(_token_1,msg.sender,_amount_1)
Internal call...
_safeTransferFrom
_token
msg.sender
_amount
Function: _safeTransferFrom
ic
done.
WORKLIST iteration 0 for function call "deposit":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: withdrawBorrow
Function withdrawBorrow not marked
Mark Iterations TRUE, proceeding anyway
Function name: withdrawBorrow
Function Visibility (test): external
_token
Finding type for _token...
address
_amount
Finding type for _amount...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
Internal call...
_validateToken
_token
Function: _validateToken
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair.accrue(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair.accrue(address)(_token_1)
Internal call...
accrue
_token
Function: accrue
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._withdrawBorrow(address,uint256)(_token_1,_amount_1)
typecheckig node...
INTERNAL_CALL, LendingPair._withdrawBorrow(address,uint256)(_token_1,_amount_1)
Internal call...
_withdrawBorrow
_token
_amount
Function: _withdrawBorrow
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, TransferHelper._safeTransfer(address,address,uint256)(_token_1,msg.sender,_amount_1)
typecheckig node...
INTERNAL_CALL, TransferHelper._safeTransfer(address,address,uint256)(_token_1,msg.sender,_amount_1)
Internal call...
_safeTransfer
_token
msg.sender
_amount
Function: _safeTransfer
ic
done.
WORKLIST iteration 0 for function call "withdrawBorrow":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: withdrawBorrowETH
Function withdrawBorrowETH not marked
Mark Iterations TRUE, proceeding anyway
Function name: withdrawBorrowETH
Function Visibility (test): external
_amount
Finding type for _amount...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
WETH_10(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_14', 'WETH_0', 'WETH_4', 'WETH_21'])
has variable
typecheckig node...
WETH_10(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_14', 'WETH_0', 'WETH_4', 'WETH_21'])
Function name: withdrawBorrowETH
Phi
[i]Type for WETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
done.
clearning node...
clearing ir...?
TMP_80 = CONVERT WETH_11 to address
has variable
[i] TMP_80 cleared
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(TMP_80)
typecheckig node...
TMP_80 = CONVERT WETH_11 to address
Function name: withdrawBorrowETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_80 Function: withdrawBorrowETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_80

Name: TMP_80 Function: withdrawBorrowETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, LendingPair._validateToken(address)(TMP_80)
Internal call...
_validateToken
TMP_80
Function: _validateToken
ic
done.
clearning node...
clearing ir...?
TMP_82 = CONVERT WETH_12 to address
has variable
[i] TMP_82 cleared
clearing ir...?
INTERNAL_CALL, LendingPair.accrue(address)(TMP_82)
typecheckig node...
TMP_82 = CONVERT WETH_12 to address
Function name: withdrawBorrowETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_82 Function: withdrawBorrowETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_82

Name: TMP_82 Function: withdrawBorrowETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, LendingPair.accrue(address)(TMP_82)
Internal call...
accrue
TMP_82
Function: accrue
ic
done.
clearning node...
clearing ir...?
TMP_84 = CONVERT WETH_13 to address
has variable
[i] TMP_84 cleared
clearing ir...?
INTERNAL_CALL, LendingPair._withdrawBorrow(address,uint256)(TMP_84,_amount_1)
typecheckig node...
TMP_84 = CONVERT WETH_13 to address
Function name: withdrawBorrowETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_84 Function: withdrawBorrowETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_84

Name: TMP_84 Function: withdrawBorrowETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, LendingPair._withdrawBorrow(address,uint256)(TMP_84,_amount_1)
Internal call...
_withdrawBorrow
TMP_84
_amount
Function: _withdrawBorrow
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, TransferHelper._wethWithdrawTo(address,uint256)(msg.sender,_amount_1)
typecheckig node...
INTERNAL_CALL, TransferHelper._wethWithdrawTo(address,uint256)(msg.sender,_amount_1)
Internal call...
_wethWithdrawTo
msg.sender
_amount
Function: _wethWithdrawTo
ic
done.
WORKLIST iteration 0 for function call "withdrawBorrowETH":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: withdraw
Function withdraw not marked
Mark Iterations TRUE, proceeding anyway
Function name: withdraw
Function Visibility (test): external
_token
Finding type for _token...
address
_amount
Finding type for _amount...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
Internal call...
_validateToken
_token
Function: _validateToken
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair.accrue(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair.accrue(address)(_token_1)
Internal call...
accrue
_token
Function: accrue
ic
done.
clearning node...
clearing ir...?
TMP_90(uint256) = INTERNAL_CALL, LendingPair._supplyToShares(address,uint256)(_token_1,_amount_1)
has variable
[i] TMP_90 cleared
clearing ir...?
INTERNAL_CALL, LendingPair._withdrawShares(address,uint256)(_token_1,TMP_90)
typecheckig node...
TMP_90(uint256) = INTERNAL_CALL, LendingPair._supplyToShares(address,uint256)(_token_1,_amount_1)
Function name: withdraw
Internal call...
_supplyToShares
_token
_amount
Function: _supplyToShares
ic
[i]Type for TMP_90

Name: TMP_90 Function: withdraw
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, LendingPair._withdrawShares(address,uint256)(_token_1,TMP_90)
Internal call...
_withdrawShares
_token
TMP_90
Function: _withdrawShares
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, TransferHelper._safeTransfer(address,address,uint256)(_token_1,msg.sender,_amount_1)
typecheckig node...
INTERNAL_CALL, TransferHelper._safeTransfer(address,address,uint256)(_token_1,msg.sender,_amount_1)
Internal call...
_safeTransfer
_token
msg.sender
_amount
Function: _safeTransfer
ic
done.
WORKLIST iteration 0 for function call "withdraw":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: withdrawAll
Function withdrawAll not marked
Mark Iterations TRUE, proceeding anyway
Function name: withdrawAll
Function Visibility (test): external
_token
Finding type for _token...
address
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
clearning node...
clearing ir...?
supplySharesOf_1(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_15', 'supplySharesOf_12', 'supplySharesOf_0', 'supplySharesOf_8', 'supplySharesOf_4', 'supplySharesOf_18', 'supplySharesOf_21', 'supplySharesOf_19'])
has variable
typecheckig node...
supplySharesOf_1(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_15', 'supplySharesOf_12', 'supplySharesOf_0', 'supplySharesOf_8', 'supplySharesOf_4', 'supplySharesOf_18', 'supplySharesOf_21', 'supplySharesOf_19'])
Function name: withdrawAll
Phi
[i]Type for supplySharesOf

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
Internal call...
_validateToken
_token
Function: _validateToken
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair.accrue(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair.accrue(address)(_token_1)
Internal call...
accrue
_token
Function: accrue
ic
done.
clearning node...
clearing ir...?
REF_21(mapping(address => uint256)) -> supplySharesOf_4[_token_1]
has variable
clearing ir...?
REF_22(uint256) -> REF_21[msg.sender]
has variable
clearing ir...?
shares_1(uint256) := REF_22(uint256)
has variable
[i] shares cleared
typecheckig node...
REF_21(mapping(address => uint256)) -> supplySharesOf_4[_token_1]
Function name: withdrawAll
INDEX
[i]Type for REF_21

Name: REF_21 Function: withdrawAll
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_22(uint256) -> REF_21[msg.sender]
Function name: withdrawAll
INDEX
[i]Type for REF_22

Name: REF_22 Function: withdrawAll
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
shares_1(uint256) := REF_22(uint256)
Function name: withdrawAll
asgn

Name: REF_22 Function: withdrawAll
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: withdrawAll
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for shares

Name: shares Function: withdrawAll
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._withdrawShares(address,uint256)(_token_1,shares_1)
typecheckig node...
INTERNAL_CALL, LendingPair._withdrawShares(address,uint256)(_token_1,shares_1)
Internal call...
_withdrawShares
_token
shares
Function: _withdrawShares
ic
done.
clearning node...
clearing ir...?
TMP_97(uint256) = INTERNAL_CALL, LendingPair._sharesToSupply(address,uint256)(_token_1,shares_1)
has variable
[i] TMP_97 cleared
clearing ir...?
INTERNAL_CALL, TransferHelper._safeTransfer(address,address,uint256)(_token_1,msg.sender,TMP_97)
typecheckig node...
TMP_97(uint256) = INTERNAL_CALL, LendingPair._sharesToSupply(address,uint256)(_token_1,shares_1)
Function name: withdrawAll
Internal call...
_sharesToSupply
_token
shares
Function: _sharesToSupply
ic
[i]Type for TMP_97

Name: TMP_97 Function: withdrawAll
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, TransferHelper._safeTransfer(address,address,uint256)(_token_1,msg.sender,TMP_97)
Internal call...
_safeTransfer
_token
msg.sender
TMP_97
Function: _safeTransfer
ic
done.
WORKLIST iteration 0 for function call "withdrawAll":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: withdrawAllETH
Function withdrawAllETH not marked
Mark Iterations TRUE, proceeding anyway
Function name: withdrawAllETH
Function Visibility (test): external
clearning node...
clearing ir...?
WETH_15(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_14', 'WETH_0', 'WETH_4', 'WETH_21'])
has variable
clearing ir...?
supplySharesOf_5(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_15', 'supplySharesOf_12', 'supplySharesOf_0', 'supplySharesOf_8', 'supplySharesOf_4', 'supplySharesOf_18', 'supplySharesOf_21', 'supplySharesOf_19'])
has variable
typecheckig node...
WETH_15(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_14', 'WETH_0', 'WETH_4', 'WETH_21'])
Function name: withdrawAllETH
Phi
[i]Type for WETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
supplySharesOf_5(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_15', 'supplySharesOf_12', 'supplySharesOf_0', 'supplySharesOf_8', 'supplySharesOf_4', 'supplySharesOf_18', 'supplySharesOf_21', 'supplySharesOf_19'])
Function name: withdrawAllETH
Phi
[i]Type for supplySharesOf

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
done.
clearning node...
clearing ir...?
TMP_100 = CONVERT WETH_16 to address
has variable
[i] TMP_100 cleared
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(TMP_100)
typecheckig node...
TMP_100 = CONVERT WETH_16 to address
Function name: withdrawAllETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: withdrawAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_100

Name: TMP_100 Function: withdrawAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, LendingPair._validateToken(address)(TMP_100)
Internal call...
_validateToken
TMP_100
Function: _validateToken
ic
done.
clearning node...
clearing ir...?
TMP_102 = CONVERT WETH_17 to address
has variable
[i] TMP_102 cleared
clearing ir...?
INTERNAL_CALL, LendingPair.accrue(address)(TMP_102)
typecheckig node...
TMP_102 = CONVERT WETH_17 to address
Function name: withdrawAllETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: withdrawAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: withdrawAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, LendingPair.accrue(address)(TMP_102)
Internal call...
accrue
TMP_102
Function: accrue
ic
done.
clearning node...
clearing ir...?
TMP_104 = CONVERT WETH_18 to address
has variable
[i] TMP_104 cleared
clearing ir...?
REF_23(mapping(address => uint256)) -> supplySharesOf_8[TMP_104]
has variable
clearing ir...?
REF_24(uint256) -> REF_23[msg.sender]
has variable
clearing ir...?
shares_1(uint256) := REF_24(uint256)
has variable
[i] shares cleared
typecheckig node...
TMP_104 = CONVERT WETH_18 to address
Function name: withdrawAllETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_104 Function: withdrawAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_104

Name: TMP_104 Function: withdrawAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_23(mapping(address => uint256)) -> supplySharesOf_8[TMP_104]
Function name: withdrawAllETH
INDEX
[i]Type for REF_23

Name: REF_23 Function: withdrawAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_24(uint256) -> REF_23[msg.sender]
Function name: withdrawAllETH
INDEX
[i]Type for REF_24

Name: REF_24 Function: withdrawAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
shares_1(uint256) := REF_24(uint256)
Function name: withdrawAllETH
asgn

Name: REF_24 Function: withdrawAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: withdrawAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for shares

Name: shares Function: withdrawAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_105 = CONVERT WETH_18 to address
has variable
[i] TMP_105 cleared
clearing ir...?
INTERNAL_CALL, LendingPair._withdrawShares(address,uint256)(TMP_105,shares_1)
typecheckig node...
TMP_105 = CONVERT WETH_18 to address
Function name: withdrawAllETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_105 Function: withdrawAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_105

Name: TMP_105 Function: withdrawAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, LendingPair._withdrawShares(address,uint256)(TMP_105,shares_1)
Internal call...
_withdrawShares
TMP_105
shares
Function: _withdrawShares
ic
done.
clearning node...
clearing ir...?
TMP_107 = CONVERT WETH_19 to address
has variable
[i] TMP_107 cleared
clearing ir...?
TMP_108(uint256) = INTERNAL_CALL, LendingPair._sharesToSupply(address,uint256)(TMP_107,shares_1)
has variable
[i] TMP_108 cleared
clearing ir...?
INTERNAL_CALL, TransferHelper._wethWithdrawTo(address,uint256)(msg.sender,TMP_108)
clearing ir...?
WETH_21(IWETH) := ϕ(['WETH_2'])
has variable
typecheckig node...
TMP_107 = CONVERT WETH_19 to address
Function name: withdrawAllETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_107 Function: withdrawAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_107

Name: TMP_107 Function: withdrawAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_108(uint256) = INTERNAL_CALL, LendingPair._sharesToSupply(address,uint256)(TMP_107,shares_1)
Function name: withdrawAllETH
Internal call...
_sharesToSupply
TMP_107
shares
Function: _sharesToSupply
ic
[i]Type for TMP_108

Name: TMP_108 Function: withdrawAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, TransferHelper._wethWithdrawTo(address,uint256)(msg.sender,TMP_108)
Internal call...
_wethWithdrawTo
msg.sender
TMP_108
Function: _wethWithdrawTo
ic
done.
WETH_21(IWETH) := ϕ(['WETH_2'])
Function name: withdrawAllETH
Phi
[i]Type for WETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "withdrawAllETH":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: borrow
Function borrow not marked
Mark Iterations TRUE, proceeding anyway
Function name: borrow
Function Visibility (test): external
_token
Finding type for _token...
address
_amount
Finding type for _amount...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
Internal call...
_validateToken
_token
Function: _validateToken
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair.accrue(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair.accrue(address)(_token_1)
Internal call...
accrue
_token
Function: accrue
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._borrow(address,uint256)(_token_1,_amount_1)
typecheckig node...
INTERNAL_CALL, LendingPair._borrow(address,uint256)(_token_1,_amount_1)
Internal call...
_borrow
_token
_amount
Function: _borrow
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, TransferHelper._safeTransfer(address,address,uint256)(_token_1,msg.sender,_amount_1)
typecheckig node...
INTERNAL_CALL, TransferHelper._safeTransfer(address,address,uint256)(_token_1,msg.sender,_amount_1)
Internal call...
_safeTransfer
_token
msg.sender
_amount
Function: _safeTransfer
ic
done.
WORKLIST iteration 0 for function call "borrow":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: repayAll
Function name: repayAll
Function Visibility (test): external
_account
Finding type for _account...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _account Function: repayAll
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_token
Finding type for _token...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _token Function: repayAll
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_maxAmount
Finding type for _maxAmount...
uint256
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: _maxAmount Function: repayAll
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
debtSharesOf_1(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
has variable
typecheckig node...
debtSharesOf_1(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
Function name: repayAll
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: nonReentrant
Function Visibility: internal
clearning node...
clearing ir...?
_NOT_ENTERED_2(uint256) := ϕ(['_NOT_ENTERED_0'])
has variable
clearing ir...?
_ENTERED_1(uint256) := ϕ(['_ENTERED_0'])
has variable
clearing ir...?
_status_2(uint256) := ϕ(['_status_1', '_status_0', '_status_4'])
has variable
typecheckig node...
_NOT_ENTERED_2(uint256) := ϕ(['_NOT_ENTERED_0'])
Function name: nonReentrant
Phi
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_ENTERED_1(uint256) := ϕ(['_ENTERED_0'])
Function name: nonReentrant
Phi
[i]Type for _ENTERED

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_status_2(uint256) := ϕ(['_status_1', '_status_0', '_status_4'])
Function name: nonReentrant
Phi
[i]Type for _status

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_373(bool) = _status_2 != _ENTERED_1
has variable
[i] TMP_373 cleared
clearing ir...?
TMP_374(None) = SOLIDITY_CALL require(bool,string)(TMP_373,ReentrancyGuard: reentrant call)
typecheckig node...
TMP_373(bool) = _status_2 != _ENTERED_1
Function name: nonReentrant
[i]Type for TMP_373

Name: TMP_373 Function: nonReentrant
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_374(None) = SOLIDITY_CALL require(bool,string)(TMP_373,ReentrancyGuard: reentrant call)
[i]Type for TMP_374

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_status_3(uint256) := _ENTERED_1(uint256)
has variable
typecheckig node...
_status_3(uint256) := _ENTERED_1(uint256)
Function name: nonReentrant
asgn

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _status Function: nonReentrant
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_status_4(uint256) := _NOT_ENTERED_2(uint256)
has variable
typecheckig node...
_status_4(uint256) := _NOT_ENTERED_2(uint256)
Function name: nonReentrant
asgn

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _status Function: nonReentrant
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "nonReentrant":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: nonReentrant
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
Internal call...
_validateToken
_token
Function: _validateToken
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, None, [], -1]
added
xyz
Function name: _validateToken
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_62', '_token_1', 'TMP_80', '_toToken_1', 'TMP_100', '_borrowedToken_1', '_token_1', '_repayToken_1', '_token_1', '_token_1', 'uniTokenA_1', '_token_1', '_token_1', 'TMP_123', '_fromToken_1', '_returnToken_1', '_suppliedToken_1', 'uniTokenB_1', '_token_1', '_token_1', '_returnToken_1', '_token_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
tokenA_48(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
has variable
clearing ir...?
tokenB_53(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_62', '_token_1', 'TMP_80', '_toToken_1', 'TMP_100', '_borrowedToken_1', '_token_1', '_repayToken_1', '_token_1', '_token_1', 'uniTokenA_1', '_token_1', '_token_1', 'TMP_123', '_fromToken_1', '_returnToken_1', '_suppliedToken_1', 'uniTokenB_1', '_token_1', '_token_1', '_returnToken_1', '_token_1', '_token_1', '_token_1'])
Function name: _validateToken
Phi
[i]Type for _token

Name: _token Function: _validateToken
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
tokenA_48(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: _validateToken
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_53(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: _validateToken
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_348(bool) = _token_1 == tokenA_48
has variable
[i] TMP_348 cleared
clearing ir...?
TMP_349(bool) = _token_1 == tokenB_53
has variable
[i] TMP_349 cleared
clearing ir...?
TMP_350(bool) = TMP_348 || TMP_349
has variable
[i] TMP_350 cleared
clearing ir...?
TMP_351(None) = SOLIDITY_CALL require(bool,string)(TMP_350,LendingPair: invalid token)
typecheckig node...
TMP_348(bool) = _token_1 == tokenA_48
Function name: _validateToken
[i]Type for TMP_348

Name: TMP_348 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_349(bool) = _token_1 == tokenB_53
Function name: _validateToken
[i]Type for TMP_349

Name: TMP_349 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_350(bool) = TMP_348 || TMP_349
Function name: _validateToken
[i]Type for TMP_350

Name: TMP_350 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_351(None) = SOLIDITY_CALL require(bool,string)(TMP_350,LendingPair: invalid token)
[i]Type for TMP_351

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_validateToken":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _validateToken
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair.accrue(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair.accrue(address)(_token_1)
Internal call...
accrue
_token
Function: accrue
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: accrue
Function Visibility: public
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_64', 'supplyToken_3', '_token_1', '_token_1', 'TMP_125', 'TMP_102', '_token_1', 'TMP_82', '_repayToken_1', '_token_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
pendingSystemFees_1(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_0'])
has variable
clearing ir...?
lastBlockAccrued_3(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3', 'lastBlockAccrued_4', 'lastBlockAccrued_0', 'lastBlockAccrued_5', 'lastBlockAccrued_2'])
has variable
clearing ir...?
totalSupplyAmount_1(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_64', 'supplyToken_3', '_token_1', '_token_1', 'TMP_125', 'TMP_102', '_token_1', 'TMP_82', '_repayToken_1', '_token_1', '_token_1', '_token_1'])
Function name: accrue
Phi
[i]Type for _token

Name: _token Function: accrue
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
pendingSystemFees_1(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_0'])
Function name: accrue
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastBlockAccrued_3(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3', 'lastBlockAccrued_4', 'lastBlockAccrued_0', 'lastBlockAccrued_5', 'lastBlockAccrued_2'])
Function name: accrue
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_1(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: accrue
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_29(uint256) -> lastBlockAccrued_3[_token_1]
has variable
clearing ir...?
TMP_146(bool) = REF_29 < block.number
has variable
[i] TMP_146 cleared
clearing ir...?
CONDITION TMP_146
typecheckig node...
REF_29(uint256) -> lastBlockAccrued_3[_token_1]
Function name: accrue
INDEX

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_29

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_146(bool) = REF_29 < block.number
Function name: accrue
testing lt...
block.number
[i]Type for TMP_146

Name: TMP_146 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_146
Condition...
Conidtion: 
TMP_146
TMP_146
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_147(uint256) = INTERNAL_CALL, LendingPair._accrueDebt(address)(_token_1)
has variable
[i] TMP_147 cleared
clearing ir...?
newDebt_1(uint256) := TMP_147(uint256)
has variable
[i] newDebt cleared
typecheckig node...
TMP_147(uint256) = INTERNAL_CALL, LendingPair._accrueDebt(address)(_token_1)
Function name: accrue
Internal call...
_accrueDebt
_token
Function: _accrueDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
added
xyz
Function name: _accrueDebt
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1'])
has variable
[i] _token cleared
clearing ir...?
lastBlockAccrued_5(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3', 'lastBlockAccrued_4', 'lastBlockAccrued_0', 'lastBlockAccrued_5', 'lastBlockAccrued_2'])
has variable
clearing ir...?
totalDebtAmount_7(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1'])
Function name: _accrueDebt
Phi
[i]Type for _token

Name: _token Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
lastBlockAccrued_5(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3', 'lastBlockAccrued_4', 'lastBlockAccrued_0', 'lastBlockAccrued_5', 'lastBlockAccrued_2'])
Function name: _accrueDebt
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_7(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
Function name: _accrueDebt
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_86(uint256) -> totalDebtAmount_7[_token_1]
has variable
clearing ir...?
TMP_278(bool) = REF_86 > 0
has variable
[i] TMP_278 cleared
clearing ir...?
CONDITION TMP_278
typecheckig node...
REF_86(uint256) -> totalDebtAmount_7[_token_1]
Function name: _accrueDebt
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_86

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_278(bool) = REF_86 > 0
Function name: _accrueDebt
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_278

Name: TMP_278 Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_278
Condition...
Conidtion: 
TMP_278
TMP_278
clearning node...
clearing ir...?
REF_87(uint256) -> lastBlockAccrued_5[_token_1]
has variable
clearing ir...?
TMP_279(uint256) = block.number (c)- REF_87
has variable
[i] TMP_279 cleared
clearing ir...?
blocksElapsed_1(uint256) := TMP_279(uint256)
has variable
[i] blocksElapsed cleared
typecheckig node...
REF_87(uint256) -> lastBlockAccrued_5[_token_1]
Function name: _accrueDebt
INDEX

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_87

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_279(uint256) = block.number (c)- REF_87
Function name: _accrueDebt
block.number
[i]Type for TMP_279

Name: TMP_279 Function: _accrueDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
blocksElapsed_1(uint256) := TMP_279(uint256)
Function name: _accrueDebt
asgn

Name: TMP_279 Function: _accrueDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: blocksElapsed Function: _accrueDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for blocksElapsed

Name: blocksElapsed Function: _accrueDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
blocksElapsed_1(uint256) := TMP_279(uint256)
XXXXX
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_280(uint256) = INTERNAL_CALL, LendingPair._interestRatePerBlock(address)(_token_1)
has variable
[i] TMP_280 cleared
clearing ir...?
totalDebtAmount_8(mapping(address => uint256)) := ϕ(['totalDebtAmount_16'])
has variable
clearing ir...?
TMP_281(uint256) = TMP_280 (c)* blocksElapsed_1
has variable
[i] TMP_281 cleared
clearing ir...?
pendingInterestRate_1(uint256) := TMP_281(uint256)
has variable
[i] pendingInterestRate cleared
typecheckig node...
TMP_280(uint256) = INTERNAL_CALL, LendingPair._interestRatePerBlock(address)(_token_1)
Function name: _accrueDebt
Internal call...
_interestRatePerBlock
_token
Function: _interestRatePerBlock
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
added
xyz
Function name: _interestRatePerBlock
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
totalSupplyAmount_15(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
clearing ir...?
totalDebtAmount_14(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', '_token_1'])
Function name: _interestRatePerBlock
Phi
[i]Type for _token

Name: _token Function: _interestRatePerBlock
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
totalSupplyAmount_15(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: _interestRatePerBlock
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_14(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
Function name: _interestRatePerBlock
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_323(IInterestRateModel) = INTERNAL_CALL, LendingPair._interestRateModel()()
has variable
[i] TMP_323 cleared
clearing ir...?
TMP_324 = CONVERT this to address
has variable
[i] TMP_324 cleared
clearing ir...?
REF_109(uint256) -> totalSupplyAmount_16[_token_1]
has variable
clearing ir...?
REF_110(uint256) -> totalDebtAmount_15[_token_1]
has variable
clearing ir...?
TMP_325(uint256) = HIGH_LEVEL_CALL, dest:TMP_323(IInterestRateModel), function:interestRatePerBlock, arguments:['TMP_324', '_token_1', 'REF_109', 'REF_110']  
has variable
[i] TMP_325 cleared
clearing ir...?
totalSupplyAmount_17(mapping(address => uint256)) := ϕ(['totalSupplyAmount_4', 'totalSupplyAmount_12', 'totalSupplyAmount_16', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
clearing ir...?
totalDebtAmount_16(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6', 'totalDebtAmount_15'])
has variable
clearing ir...?
RETURN TMP_325
typecheckig node...
TMP_323(IInterestRateModel) = INTERNAL_CALL, LendingPair._interestRateModel()()
Function name: _interestRatePerBlock
Internal call...
_interestRateModel
Function: _interestRateModel
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: _interestRateModel
Function Visibility: internal
clearning node...
clearing ir...?
lendingController_36(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
typecheckig node...
lendingController_36(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: _interestRateModel
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_326(address) = HIGH_LEVEL_CALL, dest:lendingController_36(ILendingController), function:interestRateModel, arguments:[]  
has variable
[i] TMP_326 cleared
clearing ir...?
lendingController_37(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_36', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
clearing ir...?
TMP_327 = CONVERT TMP_326 to IInterestRateModel
has variable
[i] TMP_327 cleared
clearing ir...?
RETURN TMP_327
typecheckig node...
TMP_326(address) = HIGH_LEVEL_CALL, dest:lendingController_36(ILendingController), function:interestRateModel, arguments:[]  
Function name: _interestRateModel
High Call: interestRateModel
func name:interestRateModel
other func name:interestRateModel
TMP_326
hlc contract name: LENDINGCONTR func_name: interestRateModel
('c', [-1], [-1], 0, 'INTERESTMODEL')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'INTERESTMODEL', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_326

Name: TMP_326 Function: _interestRateModel
Num: -1
Den: -1
Norm: 0
LF: INTERESTMODEL
Fields: 
Finance Type: undef
done.
lendingController_37(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_36', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: _interestRateModel
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
TMP_327 = CONVERT TMP_326 to IInterestRateModel
Function name: _interestRateModel

Name: TMP_326 Function: _interestRateModel
Num: -1
Den: -1
Norm: 0
LF: INTERESTMODEL
Fields: 
Finance Type: undef

Name: TMP_327 Function: _interestRateModel
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_327

Name: TMP_327 Function: _interestRateModel
Num: -1
Den: -1
Norm: 0
LF: INTERESTMODEL
Fields: 
Finance Type: undef
done.
RETURN TMP_327
RETURN

Name: TMP_327 Function: _interestRateModel
Num: -1
Den: -1
Norm: 0
LF: INTERESTMODEL
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_interestRateModel":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _interestRateModel

Name: TMP_327 Function: _interestRateModel
Num: -1
Den: -1
Norm: 0
LF: INTERESTMODEL
Fields: 
Finance Type: undef
___
[i]Type for TMP_323

Name: TMP_323 Function: _interestRatePerBlock
Num: -1
Den: -1
Norm: 0
LF: INTERESTMODEL
Fields: 
Finance Type: undef
done.
TMP_324 = CONVERT this to address
Function name: _interestRatePerBlock
[i]Type for TMP_324

Name: TMP_324 Function: _interestRatePerBlock
Num: -1
Den: -1
Norm: u
LF: LendingPair
Fields: 
Finance Type: undef
done.
REF_109(uint256) -> totalSupplyAmount_16[_token_1]
Function name: _interestRatePerBlock
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalSupplyAmount
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_109

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_110(uint256) -> totalDebtAmount_15[_token_1]
Function name: _interestRatePerBlock
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalDebtAmount
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_110

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_325(uint256) = HIGH_LEVEL_CALL, dest:TMP_323(IInterestRateModel), function:interestRatePerBlock, arguments:['TMP_324', '_token_1', 'REF_109', 'REF_110']  
Function name: _interestRatePerBlock
High Call: interestRatePerBlock
func name:interestRatePerBlock
other func name:interestRatePerBlock
TMP_325
hlc contract name: INTERESTMODEL func_name: interestRatePerBlock
wfc len: 0
COPIED
[i]Type for TMP_325

Name: TMP_325 Function: _interestRatePerBlock
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_17(mapping(address => uint256)) := ϕ(['totalSupplyAmount_4', 'totalSupplyAmount_12', 'totalSupplyAmount_16', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: _interestRatePerBlock
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_16(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6', 'totalDebtAmount_15'])
Function name: _interestRatePerBlock
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_325
RETURN

Name: TMP_325 Function: _interestRatePerBlock
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_interestRatePerBlock":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _interestRatePerBlock

Name: TMP_325 Function: _interestRatePerBlock
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_280

Name: TMP_280 Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_8(mapping(address => uint256)) := ϕ(['totalDebtAmount_16'])
Function name: _accrueDebt
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_281(uint256) = TMP_280 (c)* blocksElapsed_1
Function name: _accrueDebt
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_280 Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_281 Function: _accrueDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_281

Name: TMP_281 Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_281(uint256) = TMP_280 (c)* blocksElapsed_1
XXXXX
pendingInterestRate_1(uint256) := TMP_281(uint256)
Function name: _accrueDebt
asgn

Name: TMP_281 Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pendingInterestRate Function: _accrueDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pendingInterestRate

Name: pendingInterestRate Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_88(uint256) -> totalDebtAmount_8[_token_1]
has variable
clearing ir...?
TMP_282(uint256) = REF_88 (c)* pendingInterestRate_1
has variable
[i] TMP_282 cleared
clearing ir...?
TMP_283(uint256) = TMP_282 (c)/ 100000000000000000000
has variable
[i] TMP_283 cleared
clearing ir...?
newDebt_1(uint256) := TMP_283(uint256)
has variable
[i] newDebt cleared
typecheckig node...
REF_88(uint256) -> totalDebtAmount_8[_token_1]
Function name: _accrueDebt
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_88

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_282(uint256) = REF_88 (c)* pendingInterestRate_1
Function name: _accrueDebt
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: pendingInterestRate Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_282 Function: _accrueDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_282

Name: TMP_282 Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_283(uint256) = TMP_282 (c)/ 100000000000000000000
Function name: _accrueDebt
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_283 Function: _accrueDebt
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef
val: 100000000000000000000
20
[i]Type for TMP_283

Name: TMP_283 Function: _accrueDebt
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
newDebt_1(uint256) := TMP_283(uint256)
Function name: _accrueDebt
asgn

Name: TMP_283 Function: _accrueDebt
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: newDebt Function: _accrueDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newDebt

Name: newDebt Function: _accrueDebt
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_89(uint256) -> totalDebtAmount_8[_token_1]
has variable
clearing ir...?
totalDebtAmount_9(mapping(address => uint256)) := ϕ(['totalDebtAmount_8'])
has variable
clearing ir...?
REF_89(-> totalDebtAmount_9) = REF_89 (c)+ newDebt_1
has variable
typecheckig node...
REF_89(uint256) -> totalDebtAmount_8[_token_1]
Function name: _accrueDebt
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_89

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_9(mapping(address => uint256)) := ϕ(['totalDebtAmount_8'])
Function name: _accrueDebt
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_89(-> totalDebtAmount_9) = REF_89 (c)+ newDebt_1
Function name: _accrueDebt

Name: REF_89 Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: newDebt Function: _accrueDebt
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: REF_89 Function: _accrueDebt
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_89

Name: REF_89 Function: _accrueDebt
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_accrueDebt":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_token_1(address) := ϕ(['_token_1'])
Function name: _accrueDebt
Phi
[i]Type for _token

Name: _token Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
lastBlockAccrued_5(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3', 'lastBlockAccrued_4', 'lastBlockAccrued_0', 'lastBlockAccrued_5', 'lastBlockAccrued_2'])
Function name: _accrueDebt
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_7(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
Function name: _accrueDebt
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_86(uint256) -> totalDebtAmount_7[_token_1]
Function name: _accrueDebt
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_86

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_278(bool) = REF_86 > 0
Function name: _accrueDebt
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_278

Name: TMP_278 Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_278
Condition...
Conidtion: 
TMP_278
TMP_278
typecheckig node...
REF_87(uint256) -> lastBlockAccrued_5[_token_1]
Function name: _accrueDebt
INDEX

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_87

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_279(uint256) = block.number (c)- REF_87
Function name: _accrueDebt
block.number
[i]Type for TMP_279

Name: TMP_279 Function: _accrueDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
blocksElapsed_1(uint256) := TMP_279(uint256)
Function name: _accrueDebt
asgn

Name: TMP_279 Function: _accrueDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: blocksElapsed Function: _accrueDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for blocksElapsed

Name: blocksElapsed Function: _accrueDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
blocksElapsed_1(uint256) := TMP_279(uint256)
XXXXX
typecheckig node...
typecheckig node...
TMP_280(uint256) = INTERNAL_CALL, LendingPair._interestRatePerBlock(address)(_token_1)
Function name: _accrueDebt
Internal call...
_interestRatePerBlock
_token
Function: _interestRatePerBlock
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
0

Name: PIC_10 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_280 Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_280

Name: TMP_280 Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_8(mapping(address => uint256)) := ϕ(['totalDebtAmount_16'])
Function name: _accrueDebt
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_281(uint256) = TMP_280 (c)* blocksElapsed_1
Function name: _accrueDebt
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_280 Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_281 Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_281

Name: TMP_281 Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_281(uint256) = TMP_280 (c)* blocksElapsed_1
XXXXX
pendingInterestRate_1(uint256) := TMP_281(uint256)
Function name: _accrueDebt
asgn

Name: TMP_281 Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pendingInterestRate Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pendingInterestRate

Name: pendingInterestRate Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_88(uint256) -> totalDebtAmount_8[_token_1]
Function name: _accrueDebt
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_88

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_282(uint256) = REF_88 (c)* pendingInterestRate_1
Function name: _accrueDebt
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: pendingInterestRate Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_282 Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_282

Name: TMP_282 Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_283(uint256) = TMP_282 (c)/ 100000000000000000000
Function name: _accrueDebt
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_283 Function: _accrueDebt
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
val: 100000000000000000000
20
[i]Type for TMP_283

Name: TMP_283 Function: _accrueDebt
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
newDebt_1(uint256) := TMP_283(uint256)
Function name: _accrueDebt
asgn

Name: TMP_283 Function: _accrueDebt
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: newDebt Function: _accrueDebt
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newDebt

Name: newDebt Function: _accrueDebt
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_89(uint256) -> totalDebtAmount_8[_token_1]
Function name: _accrueDebt
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_89

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_9(mapping(address => uint256)) := ϕ(['totalDebtAmount_8'])
Function name: _accrueDebt
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_89(-> totalDebtAmount_9) = REF_89 (c)+ newDebt_1
Function name: _accrueDebt

Name: REF_89 Function: _accrueDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: newDebt Function: _accrueDebt
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: REF_89 Function: _accrueDebt
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_89

Name: REF_89 Function: _accrueDebt
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "_accrueDebt":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: _accrueDebt

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_147

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_147(uint256) = INTERNAL_CALL, LendingPair._accrueDebt(address)(_token_1)
XXXXX
newDebt_1(uint256) := TMP_147(uint256)
Function name: accrue
asgn

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newDebt

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
newDebt_1(uint256) := TMP_147(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_148(uint256) = INTERNAL_CALL, LendingPair._lpRate(address)(_token_1)
has variable
[i] TMP_148 cleared
clearing ir...?
TMP_149(uint256) = newDebt_1 (c)* TMP_148
has variable
[i] TMP_149 cleared
clearing ir...?
TMP_150(uint256) = TMP_149 (c)/ 100000000000000000000
has variable
[i] TMP_150 cleared
clearing ir...?
newSupply_1(uint256) := TMP_150(uint256)
has variable
[i] newSupply cleared
typecheckig node...
TMP_148(uint256) = INTERNAL_CALL, LendingPair._lpRate(address)(_token_1)
Function name: accrue
Internal call...
_lpRate
_token
Function: _lpRate
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
added
xyz
Function name: _lpRate
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1'])
has variable
[i] _token cleared
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1'])
Function name: _lpRate
Phi
[i]Type for _token

Name: _token Function: _lpRate
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_368(IInterestRateModel) = INTERNAL_CALL, LendingPair._interestRateModel()()
has variable
[i] TMP_368 cleared
clearing ir...?
TMP_369 = CONVERT this to address
has variable
[i] TMP_369 cleared
clearing ir...?
TMP_370(uint256) = HIGH_LEVEL_CALL, dest:TMP_368(IInterestRateModel), function:lpRate, arguments:['TMP_369', '_token_1']  
has variable
[i] TMP_370 cleared
clearing ir...?
RETURN TMP_370
typecheckig node...
TMP_368(IInterestRateModel) = INTERNAL_CALL, LendingPair._interestRateModel()()
Function name: _lpRate
Internal call...
_interestRateModel
Function: _interestRateModel
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_9 Function: None
Num: -1
Den: -1
Norm: 0
LF: INTERESTMODEL
Fields: 
Finance Type: undef

Name: TMP_368 Function: _lpRate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_368

Name: TMP_368 Function: _lpRate
Num: -1
Den: -1
Norm: u
LF: INTERESTMODEL
Fields: 
Finance Type: undef
done.
TMP_369 = CONVERT this to address
Function name: _lpRate
[i]Type for TMP_369

Name: TMP_369 Function: _lpRate
Num: -1
Den: -1
Norm: u
LF: LendingPair
Fields: 
Finance Type: undef
done.
TMP_370(uint256) = HIGH_LEVEL_CALL, dest:TMP_368(IInterestRateModel), function:lpRate, arguments:['TMP_369', '_token_1']  
Function name: _lpRate
High Call: lpRate
func name:lpRate
other func name:lpRate
TMP_370
hlc contract name: INTERESTMODEL func_name: lpRate
wfc len: 0
COPIED
[i]Type for TMP_370

Name: TMP_370 Function: _lpRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_370
RETURN

Name: TMP_370 Function: _lpRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_lpRate":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _lpRate

Name: TMP_370 Function: _lpRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_148

Name: TMP_148 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_149(uint256) = newDebt_1 (c)* TMP_148
Function name: accrue
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_148 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_149 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_149

Name: TMP_149 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_149(uint256) = newDebt_1 (c)* TMP_148
XXXXX
TMP_150(uint256) = TMP_149 (c)/ 100000000000000000000
Function name: accrue
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_150 Function: accrue
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef
val: 100000000000000000000
20
[i]Type for TMP_150

Name: TMP_150 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
newSupply_1(uint256) := TMP_150(uint256)
Function name: accrue
asgn

Name: TMP_150 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newSupply

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_30(uint256) -> totalSupplyAmount_3[_token_1]
has variable
clearing ir...?
totalSupplyAmount_4(mapping(address => uint256)) := ϕ(['totalSupplyAmount_3'])
has variable
clearing ir...?
REF_30(-> totalSupplyAmount_4) = REF_30 (c)+ newSupply_1
has variable
typecheckig node...
REF_30(uint256) -> totalSupplyAmount_3[_token_1]
Function name: accrue
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalSupplyAmount
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_30

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_4(mapping(address => uint256)) := ϕ(['totalSupplyAmount_3'])
Function name: accrue
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_30(-> totalSupplyAmount_4) = REF_30 (c)+ newSupply_1
Function name: accrue

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_30

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_31(uint256) -> pendingSystemFees_3[_token_1]
has variable
clearing ir...?
TMP_151(uint256) = newDebt_1 (c)- newSupply_1
has variable
[i] TMP_151 cleared
clearing ir...?
pendingSystemFees_4(mapping(address => uint256)) := ϕ(['pendingSystemFees_3'])
has variable
clearing ir...?
REF_31(-> pendingSystemFees_4) = REF_31 (c)+ TMP_151
has variable
typecheckig node...
REF_31(uint256) -> pendingSystemFees_3[_token_1]
Function name: accrue
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
pendingSystemFees
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_31

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_151(uint256) = newDebt_1 (c)- newSupply_1
Function name: accrue
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: TMP_151 Function: accrue
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_151

Name: TMP_151 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_151(uint256) = newDebt_1 (c)- newSupply_1
XXXXX
pendingSystemFees_4(mapping(address => uint256)) := ϕ(['pendingSystemFees_3'])
Function name: accrue
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_31(-> pendingSystemFees_4) = REF_31 (c)+ TMP_151
Function name: accrue

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_151 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_31

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_32(uint256) -> lastBlockAccrued_3[_token_1]
has variable
clearing ir...?
lastBlockAccrued_4(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3'])
has variable
clearing ir...?
REF_32 (->lastBlockAccrued_4) := block.number(uint256)
has variable
typecheckig node...
REF_32(uint256) -> lastBlockAccrued_3[_token_1]
Function name: accrue
INDEX

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_32

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastBlockAccrued_4(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3'])
Function name: accrue
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_32 (->lastBlockAccrued_4) := block.number(uint256)
Function name: accrue
asgn
block.number

Name: REF_32 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_32

Name: REF_32 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_32 (->lastBlockAccrued_4) := block.number(uint256)
XXXXX
WORKLIST iteration 0 for function call "accrue":
 New undefined nodes- 4
 Old undefined nodes- 0
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_64', 'supplyToken_3', '_token_1', '_token_1', 'TMP_125', 'TMP_102', '_token_1', 'TMP_82', '_repayToken_1', '_token_1', '_token_1', '_token_1'])
Function name: accrue
Phi
[i]Type for _token

Name: _token Function: accrue
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
pendingSystemFees_1(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_0'])
Function name: accrue
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastBlockAccrued_3(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3', 'lastBlockAccrued_4', 'lastBlockAccrued_0', 'lastBlockAccrued_5', 'lastBlockAccrued_2'])
Function name: accrue
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_1(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: accrue
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_29(uint256) -> lastBlockAccrued_3[_token_1]
Function name: accrue
INDEX

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_29

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_146(bool) = REF_29 < block.number
Function name: accrue
testing lt...
block.number
[i]Type for TMP_146

Name: TMP_146 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_146
Condition...
Conidtion: 
TMP_146
TMP_146
typecheckig node...
typecheckig node...
TMP_147(uint256) = INTERNAL_CALL, LendingPair._accrueDebt(address)(_token_1)
Function name: accrue
Internal call...
_accrueDebt
_token
Function: _accrueDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
0

Name: PIC_11 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_147

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
newDebt_1(uint256) := TMP_147(uint256)
Function name: accrue
asgn

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newDebt

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
newDebt_1(uint256) := TMP_147(uint256)
XXXXX
typecheckig node...
TMP_148(uint256) = INTERNAL_CALL, LendingPair._lpRate(address)(_token_1)
Function name: accrue
Internal call...
_lpRate
_token
Function: _lpRate
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
0

Name: PIC_12 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_148 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_148

Name: TMP_148 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_149(uint256) = newDebt_1 (c)* TMP_148
Function name: accrue
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_148 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_149 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_149

Name: TMP_149 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_149(uint256) = newDebt_1 (c)* TMP_148
XXXXX
TMP_150(uint256) = TMP_149 (c)/ 100000000000000000000
Function name: accrue
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_150 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
val: 100000000000000000000
20
[i]Type for TMP_150

Name: TMP_150 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
newSupply_1(uint256) := TMP_150(uint256)
Function name: accrue
asgn

Name: TMP_150 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newSupply

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_30(uint256) -> totalSupplyAmount_3[_token_1]
Function name: accrue
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalSupplyAmount
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_30

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_4(mapping(address => uint256)) := ϕ(['totalSupplyAmount_3'])
Function name: accrue
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_30(-> totalSupplyAmount_4) = REF_30 (c)+ newSupply_1
Function name: accrue

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_30

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_31(uint256) -> pendingSystemFees_3[_token_1]
Function name: accrue
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
pendingSystemFees
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_31

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_151(uint256) = newDebt_1 (c)- newSupply_1
Function name: accrue
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: TMP_151 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_151

Name: TMP_151 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_151(uint256) = newDebt_1 (c)- newSupply_1
XXXXX
pendingSystemFees_4(mapping(address => uint256)) := ϕ(['pendingSystemFees_3'])
Function name: accrue
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_31(-> pendingSystemFees_4) = REF_31 (c)+ TMP_151
Function name: accrue

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_151 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_31

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_32(uint256) -> lastBlockAccrued_3[_token_1]
Function name: accrue
INDEX

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_32

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastBlockAccrued_4(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3'])
Function name: accrue
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_32 (->lastBlockAccrued_4) := block.number(uint256)
Function name: accrue
asgn
block.number

Name: REF_32 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_32

Name: REF_32 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_32 (->lastBlockAccrued_4) := block.number(uint256)
XXXXX
WORKLIST iteration 1 for function call "accrue":
 New undefined nodes- 4
 Old undefined nodes- 4
Saving return values for: accrue
done.
This IR caused addback:
INTERNAL_CALL, LendingPair.accrue(address)(_token_1)
XXXXX
clearning node...
clearing ir...?
REF_25(mapping(address => uint256)) -> debtSharesOf_4[_token_1]
has variable
clearing ir...?
REF_26(uint256) -> REF_25[_account_1]
has variable
clearing ir...?
TMP_118(uint256) = INTERNAL_CALL, LendingPair._repayShares(address,address,uint256)(_account_1,_token_1,REF_26)
has variable
[i] TMP_118 cleared
clearing ir...?
amount_1(uint256) := TMP_118(uint256)
has variable
[i] amount cleared
typecheckig node...
REF_25(mapping(address => uint256)) -> debtSharesOf_4[_token_1]
Function name: repayAll
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
debtSharesOf
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256
[i]Type for REF_25

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_26(uint256) -> REF_25[_account_1]
Function name: repayAll
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_26

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_118(uint256) = INTERNAL_CALL, LendingPair._repayShares(address,address,uint256)(_account_1,_token_1,REF_26)
Function name: repayAll
Internal call...
_repayShares
_account
_token
REF_26
Function: _repayShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _repayShares
Function Visibility: internal
clearning node...
clearing ir...?
_account_1(address) := ϕ(['_account_1', '_account_1', '_account_1', '_account_1'])
has variable
[i] _account cleared
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_127', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_shares_1(uint256) := ϕ(['TMP_142', 'REF_26', 'REF_28', 'TMP_237'])
has variable
[i] _shares cleared
typecheckig node...
_account_1(address) := ϕ(['_account_1', '_account_1', '_account_1', '_account_1'])
Function name: _repayShares
Phi
[i]Type for _account

Name: _account Function: _repayShares
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_127', '_token_1'])
Function name: _repayShares
Phi
[i]Type for _token

Name: _token Function: _repayShares
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['TMP_142', 'REF_26', 'REF_28', 'TMP_237'])
Function name: _repayShares
Phi
[i]Type for _shares

Name: _shares Function: _repayShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_294(uint256) = INTERNAL_CALL, LendingPair._burnDebtShares(address,address,uint256)(_token_1,_account_1,_shares_1)
has variable
[i] TMP_294 cleared
clearing ir...?
amount_1(uint256) := TMP_294(uint256)
has variable
[i] amount cleared
typecheckig node...
TMP_294(uint256) = INTERNAL_CALL, LendingPair._burnDebtShares(address,address,uint256)(_token_1,_account_1,_shares_1)
Function name: _repayShares
Internal call...
_burnDebtShares
_token
_account
_shares
Function: _burnDebtShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _burnDebtShares
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_repayToken_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_account_1(address) := ϕ(['_account_1', '_account_1', '_account_1'])
has variable
[i] _account cleared
clearing ir...?
_shares_1(uint256) := ϕ(['TMP_183', 'TMP_264', '_shares_1'])
has variable
[i] _shares cleared
clearing ir...?
debtSharesOf_17(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
has variable
clearing ir...?
totalDebtShares_4(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
has variable
clearing ir...?
totalDebtAmount_4(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_repayToken_1', '_token_1', '_token_1'])
Function name: _burnDebtShares
Phi
[i]Type for _token

Name: _token Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
_account_1(address) := ϕ(['_account_1', '_account_1', '_account_1'])
Function name: _burnDebtShares
Phi
[i]Type for _account

Name: _account Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['TMP_183', 'TMP_264', '_shares_1'])
Function name: _burnDebtShares
Phi
[i]Type for _shares

Name: _shares Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
debtSharesOf_17(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
Function name: _burnDebtShares
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_4(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_4(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_276(bool) = _shares_1 > 0
has variable
[i] TMP_276 cleared
clearing ir...?
CONDITION TMP_276
typecheckig node...
TMP_276(bool) = _shares_1 > 0
Function name: _burnDebtShares
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_276

Name: TMP_276 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_276
Condition...
Conidtion: 
TMP_276
TMP_276
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_277(uint256) = INTERNAL_CALL, LendingPair._sharesToDebt(address,uint256)(_token_1,_shares_1)
has variable
[i] TMP_277 cleared
clearing ir...?
totalDebtShares_5(mapping(address => uint256)) := ϕ(['totalDebtShares_10'])
has variable
clearing ir...?
totalDebtAmount_5(mapping(address => uint256)) := ϕ(['totalDebtAmount_13'])
has variable
clearing ir...?
amount_1(uint256) := TMP_277(uint256)
has variable
[i] amount cleared
typecheckig node...
TMP_277(uint256) = INTERNAL_CALL, LendingPair._sharesToDebt(address,uint256)(_token_1,_shares_1)
Function name: _burnDebtShares
Internal call...
_sharesToDebt
_token
_shares
Function: _sharesToDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToDebt
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_shares_1(uint256) := ϕ(['REF_105', '_shares_1'])
has variable
[i] _shares cleared
clearing ir...?
totalDebtShares_9(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
has variable
clearing ir...?
totalDebtAmount_12(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1'])
Function name: _sharesToDebt
Phi
[i]Type for _token

Name: _token Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['REF_105', '_shares_1'])
Function name: _sharesToDebt
Phi
[i]Type for _shares

Name: _shares Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_9(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
Function name: _sharesToDebt
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_12(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
Function name: _sharesToDebt
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_98(uint256) -> totalDebtShares_9[_token_1]
has variable
clearing ir...?
REF_99(uint256) -> totalDebtAmount_12[_token_1]
has variable
clearing ir...?
TMP_318(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_98,REF_99,_shares_1)
has variable
[i] TMP_318 cleared
clearing ir...?
RETURN TMP_318
typecheckig node...
REF_98(uint256) -> totalDebtShares_9[_token_1]
Function name: _sharesToDebt
INDEX

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_98

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_99(uint256) -> totalDebtAmount_12[_token_1]
Function name: _sharesToDebt
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_99

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_318(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_98,REF_99,_shares_1)
Function name: _sharesToDebt
Internal call...
_sharesToAmount
REF_98
REF_99
_shares
Function: _sharesToAmount
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToAmount
Function Visibility: internal
clearning node...
clearing ir...?
_totalShares_1(uint256) := ϕ(['REF_102', 'REF_98'])
has variable
[i] _totalShares cleared
clearing ir...?
_totalAmount_1(uint256) := ϕ(['REF_99', 'REF_103'])
has variable
[i] _totalAmount cleared
clearing ir...?
_inputShares_1(uint256) := ϕ(['_shares_1', '_shares_1'])
has variable
[i] _inputShares cleared
typecheckig node...
_totalShares_1(uint256) := ϕ(['REF_102', 'REF_98'])
Function name: _sharesToAmount
Phi
[i]Type for _totalShares

Name: _totalShares Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalAmount_1(uint256) := ϕ(['REF_99', 'REF_103'])
Function name: _sharesToAmount
Phi
[i]Type for _totalAmount

Name: _totalAmount Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_inputShares_1(uint256) := ϕ(['_shares_1', '_shares_1'])
Function name: _sharesToAmount
Phi
[i]Type for _inputShares

Name: _inputShares Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_312(bool) = _totalShares_1 > 0
has variable
[i] TMP_312 cleared
clearing ir...?
TMP_313(bool) = _totalAmount_1 > 0
has variable
[i] TMP_313 cleared
clearing ir...?
TMP_314(bool) = TMP_312 && TMP_313
has variable
[i] TMP_314 cleared
clearing ir...?
CONDITION TMP_314
typecheckig node...
TMP_312(bool) = _totalShares_1 > 0
Function name: _sharesToAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_312

Name: TMP_312 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_313(bool) = _totalAmount_1 > 0
Function name: _sharesToAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_313

Name: TMP_313 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_314(bool) = TMP_312 && TMP_313
Function name: _sharesToAmount
[i]Type for TMP_314

Name: TMP_314 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_314
Condition...
Conidtion: 
TMP_314
TMP_314
clearning node...
clearing ir...?
RETURN _inputShares_1
typecheckig node...
RETURN _inputShares_1
RETURN

Name: _inputShares Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
has variable
[i] TMP_315 cleared
clearing ir...?
TMP_316(uint256) = TMP_315 (c)/ _totalShares_1
has variable
[i] TMP_316 cleared
clearing ir...?
RETURN TMP_316
typecheckig node...
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
Function name: _sharesToAmount
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _totalAmount Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_315 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_315

Name: TMP_315 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_316(uint256) = TMP_315 (c)/ _totalShares_1
Function name: _sharesToAmount
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_316 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_316

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_316
RETURN

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToAmount":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToAmount

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for TMP_318

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_318
RETURN

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToDebt":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToDebt

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_277

Name: TMP_277 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_5(mapping(address => uint256)) := ϕ(['totalDebtShares_10'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_5(mapping(address => uint256)) := ϕ(['totalDebtAmount_13'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint256) := TMP_277(uint256)
Function name: _burnDebtShares
asgn

Name: TMP_277 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amount

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_82(mapping(address => uint256)) -> debtSharesOf_18[_token_1]
has variable
clearing ir...?
REF_83(uint256) -> REF_82[_account_1]
has variable
clearing ir...?
debtSharesOf_19(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_18'])
has variable
clearing ir...?
REF_83(-> debtSharesOf_19) = REF_83 (c)- _shares_1
has variable
typecheckig node...
REF_82(mapping(address => uint256)) -> debtSharesOf_18[_token_1]
Function name: _burnDebtShares
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
debtSharesOf
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256
[i]Type for REF_82

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_83(uint256) -> REF_82[_account_1]
Function name: _burnDebtShares
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_83

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
debtSharesOf_19(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_18'])
Function name: _burnDebtShares
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_83(-> debtSharesOf_19) = REF_83 (c)- _shares_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_83

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_84(uint256) -> totalDebtShares_5[_token_1]
has variable
clearing ir...?
totalDebtShares_6(mapping(address => uint256)) := ϕ(['totalDebtShares_5'])
has variable
clearing ir...?
REF_84(-> totalDebtShares_6) = REF_84 (c)- _shares_1
has variable
typecheckig node...
REF_84(uint256) -> totalDebtShares_5[_token_1]
Function name: _burnDebtShares
INDEX

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_84

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_6(mapping(address => uint256)) := ϕ(['totalDebtShares_5'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_84(-> totalDebtShares_6) = REF_84 (c)- _shares_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_84

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_85(uint256) -> totalDebtAmount_5[_token_1]
has variable
clearing ir...?
totalDebtAmount_6(mapping(address => uint256)) := ϕ(['totalDebtAmount_5'])
has variable
clearing ir...?
REF_85(-> totalDebtAmount_6) = REF_85 (c)- amount_1
has variable
typecheckig node...
REF_85(uint256) -> totalDebtAmount_5[_token_1]
Function name: _burnDebtShares
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_85

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_6(mapping(address => uint256)) := ϕ(['totalDebtAmount_5'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_85(-> totalDebtAmount_6) = REF_85 (c)- amount_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_85

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_burnDebtShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _burnDebtShares

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_294

Name: TMP_294 Function: _repayShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint256) := TMP_294(uint256)
Function name: _repayShares
asgn

Name: TMP_294 Function: _repayShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _repayShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amount

Name: amount Function: _repayShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
amount_1(uint256) := TMP_294(uint256)
XXXXX
clearning node...
clearing ir...?
Emit Repay(_account_1,_token_1,amount_1)
typecheckig node...
Emit Repay(_account_1,_token_1,amount_1)
WORKLIST iteration 0 for function call "_repayShares":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
_account_1(address) := ϕ(['_account_1', '_account_1', '_account_1', '_account_1'])
Function name: _repayShares
Phi
[i]Type for _account

Name: _account Function: _repayShares
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_127', '_token_1'])
Function name: _repayShares
Phi
[i]Type for _token

Name: _token Function: _repayShares
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['TMP_142', 'REF_26', 'REF_28', 'TMP_237'])
Function name: _repayShares
Phi
[i]Type for _shares

Name: _shares Function: _repayShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_294(uint256) = INTERNAL_CALL, LendingPair._burnDebtShares(address,address,uint256)(_token_1,_account_1,_shares_1)
Function name: _repayShares
Internal call...
_burnDebtShares
_token
_account
_shares
Function: _burnDebtShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
cur_param: [[-1], [-1], 'u', '_account', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_16 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_294 Function: _repayShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_294

Name: TMP_294 Function: _repayShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint256) := TMP_294(uint256)
Function name: _repayShares
asgn

Name: TMP_294 Function: _repayShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _repayShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amount

Name: amount Function: _repayShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
amount_1(uint256) := TMP_294(uint256)
XXXXX
typecheckig node...
Emit Repay(_account_1,_token_1,amount_1)
WORKLIST iteration 1 for function call "_repayShares":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: _repayShares

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_118

Name: TMP_118 Function: repayAll
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_118(uint256) = INTERNAL_CALL, LendingPair._repayShares(address,address,uint256)(_account_1,_token_1,REF_26)
XXXXX
amount_1(uint256) := TMP_118(uint256)
Function name: repayAll
asgn

Name: TMP_118 Function: repayAll
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: repayAll
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amount

Name: amount Function: repayAll
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
amount_1(uint256) := TMP_118(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_119(bool) = amount_1 <= _maxAmount_1
has variable
[i] TMP_119 cleared
clearing ir...?
TMP_120(None) = SOLIDITY_CALL require(bool,string)(TMP_119,LendingPair: amount <= _maxAmount)
typecheckig node...
TMP_119(bool) = amount_1 <= _maxAmount_1
Function name: repayAll
testing lt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _maxAmount Function: repayAll
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_119 Function: repayAll
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_119

Name: TMP_119 Function: repayAll
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_119(bool) = amount_1 <= _maxAmount_1
XXXXX
TMP_120(None) = SOLIDITY_CALL require(bool,string)(TMP_119,LendingPair: amount <= _maxAmount)
[i]Type for TMP_120

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, TransferHelper._safeTransferFrom(address,address,uint256)(_token_1,msg.sender,amount_1)
typecheckig node...
INTERNAL_CALL, TransferHelper._safeTransferFrom(address,address,uint256)(_token_1,msg.sender,amount_1)
Internal call...
_safeTransferFrom
_token
msg.sender
amount
Function: _safeTransferFrom
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[], [], 'u', None, [], -1]
added
xyz
Function name: _safeTransferFrom
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1', '_token_1', '_repayToken_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_sender_1(address) := ϕ(['msg.sender'])
has variable
[i] _sender cleared
clearing ir...?
_amount_1(uint256) := ϕ(['_repayAmount_2', '_amount_1', 'amount_1', '_amount_1', '_amount_1'])
has variable
[i] _amount cleared
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', '_token_1', '_repayToken_1', '_token_1'])
Function name: _safeTransferFrom
Phi
[i]Type for _token

Name: _token Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
_sender_1(address) := ϕ(['msg.sender'])
Function name: _safeTransferFrom
Phi
[i]Type for _sender

Name: _sender Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: _sender
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['_repayAmount_2', '_amount_1', 'amount_1', '_amount_1', '_amount_1'])
Function name: _safeTransferFrom
Phi
[i]Type for _amount

Name: _amount Function: _safeTransferFrom
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_0(bool) = _amount_1 > 0
has variable
[i] TMP_0 cleared
clearing ir...?
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,TransferHelper: amount must be > 0)
typecheckig node...
TMP_0(bool) = _amount_1 > 0
Function name: _safeTransferFrom
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_0 Function: _safeTransferFrom
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_0

Name: TMP_0 Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_0(bool) = _amount_1 > 0
XXXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,TransferHelper: amount must be > 0)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_2 = CONVERT _token_1 to IERC20
has variable
[i] TMP_2 cleared
clearing ir...?
TMP_3 = CONVERT this to address
has variable
[i] TMP_3 cleared
clearing ir...?
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_2', '_sender_1', 'TMP_3', '_amount_1'] 
typecheckig node...
TMP_2 = CONVERT _token_1 to IERC20
Function name: _safeTransferFrom

Name: _token Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef

Name: TMP_2 Function: _safeTransferFrom
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_2

Name: TMP_2 Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
TMP_3 = CONVERT this to address
Function name: _safeTransferFrom
[i]Type for TMP_3

Name: TMP_3 Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: LendingPair
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_2', '_sender_1', 'TMP_3', '_amount_1'] 
Library Call: safeTransferFrom
done.
WORKLIST iteration 0 for function call "_safeTransferFrom":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', '_token_1', '_repayToken_1', '_token_1'])
Function name: _safeTransferFrom
Phi
[i]Type for _token

Name: _token Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
_sender_1(address) := ϕ(['msg.sender'])
Function name: _safeTransferFrom
Phi
[i]Type for _sender

Name: _sender Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: _sender
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['_repayAmount_2', '_amount_1', 'amount_1', '_amount_1', '_amount_1'])
Function name: _safeTransferFrom
Phi
[i]Type for _amount

Name: _amount Function: _safeTransferFrom
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_0(bool) = _amount_1 > 0
Function name: _safeTransferFrom
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_0 Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_0

Name: TMP_0 Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_0(bool) = _amount_1 > 0
XXXXX
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,TransferHelper: amount must be > 0)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_2 = CONVERT _token_1 to IERC20
Function name: _safeTransferFrom

Name: _token Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef

Name: TMP_2 Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
[i]Type for TMP_2

Name: TMP_2 Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
TMP_3 = CONVERT this to address
Function name: _safeTransferFrom
[i]Type for TMP_3

Name: TMP_3 Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: LendingPair
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_2', '_sender_1', 'TMP_3', '_amount_1'] 
Library Call: safeTransferFrom
done.
WORKLIST iteration 1 for function call "_safeTransferFrom":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: _safeTransferFrom
done.
This IR caused addback:
INTERNAL_CALL, TransferHelper._safeTransferFrom(address,address,uint256)(_token_1,msg.sender,amount_1)
XXXXX
WORKLIST iteration 0 for function call "repayAll":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
debtSharesOf_1(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
Function name: repayAll
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
Internal call...
_validateToken
_token
Function: _validateToken
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, None, [], -1]
added
xyz
Function name: _validateToken
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_62', '_token_1', 'TMP_80', '_toToken_1', 'TMP_100', '_borrowedToken_1', '_token_1', '_repayToken_1', '_token_1', '_token_1', 'uniTokenA_1', '_token_1', '_token_1', 'TMP_123', '_fromToken_1', '_returnToken_1', '_suppliedToken_1', 'uniTokenB_1', '_token_1', '_token_1', '_returnToken_1', '_token_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
tokenA_48(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
has variable
clearing ir...?
tokenB_53(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_62', '_token_1', 'TMP_80', '_toToken_1', 'TMP_100', '_borrowedToken_1', '_token_1', '_repayToken_1', '_token_1', '_token_1', 'uniTokenA_1', '_token_1', '_token_1', 'TMP_123', '_fromToken_1', '_returnToken_1', '_suppliedToken_1', 'uniTokenB_1', '_token_1', '_token_1', '_returnToken_1', '_token_1', '_token_1', '_token_1'])
Function name: _validateToken
Phi
[i]Type for _token

Name: _token Function: _validateToken
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
tokenA_48(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: _validateToken
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_53(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: _validateToken
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_348(bool) = _token_1 == tokenA_48
has variable
[i] TMP_348 cleared
clearing ir...?
TMP_349(bool) = _token_1 == tokenB_53
has variable
[i] TMP_349 cleared
clearing ir...?
TMP_350(bool) = TMP_348 || TMP_349
has variable
[i] TMP_350 cleared
clearing ir...?
TMP_351(None) = SOLIDITY_CALL require(bool,string)(TMP_350,LendingPair: invalid token)
typecheckig node...
TMP_348(bool) = _token_1 == tokenA_48
Function name: _validateToken
[i]Type for TMP_348

Name: TMP_348 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_349(bool) = _token_1 == tokenB_53
Function name: _validateToken
[i]Type for TMP_349

Name: TMP_349 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_350(bool) = TMP_348 || TMP_349
Function name: _validateToken
[i]Type for TMP_350

Name: TMP_350 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_351(None) = SOLIDITY_CALL require(bool,string)(TMP_350,LendingPair: invalid token)
[i]Type for TMP_351

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_validateToken":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _validateToken
done.
typecheckig node...
INTERNAL_CALL, LendingPair.accrue(address)(_token_1)
Internal call...
accrue
_token
Function: accrue
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
done.
typecheckig node...
REF_25(mapping(address => uint256)) -> debtSharesOf_4[_token_1]
Function name: repayAll
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
debtSharesOf
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256
[i]Type for REF_25

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_26(uint256) -> REF_25[_account_1]
Function name: repayAll
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_26

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_118(uint256) = INTERNAL_CALL, LendingPair._repayShares(address,address,uint256)(_account_1,_token_1,REF_26)
Function name: repayAll
Internal call...
_repayShares
_account
_token
REF_26
Function: _repayShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_17 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_118 Function: repayAll
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_118

Name: TMP_118 Function: repayAll
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint256) := TMP_118(uint256)
Function name: repayAll
asgn

Name: TMP_118 Function: repayAll
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: repayAll
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amount

Name: amount Function: repayAll
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
amount_1(uint256) := TMP_118(uint256)
XXXXX
typecheckig node...
TMP_119(bool) = amount_1 <= _maxAmount_1
Function name: repayAll
testing lt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _maxAmount Function: repayAll
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_119 Function: repayAll
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_119

Name: TMP_119 Function: repayAll
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_119(bool) = amount_1 <= _maxAmount_1
XXXXX
TMP_120(None) = SOLIDITY_CALL require(bool,string)(TMP_119,LendingPair: amount <= _maxAmount)
[i]Type for TMP_120

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, TransferHelper._safeTransferFrom(address,address,uint256)(_token_1,msg.sender,amount_1)
Internal call...
_safeTransferFrom
_token
msg.sender
amount
Function: _safeTransferFrom
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[], [], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[], [], 'u', None, [], -1]
0
done.
WORKLIST iteration 1 for function call "repayAll":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: repayAll
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: repayAllETH
Function name: repayAllETH
Function Visibility (test): external
_account
Finding type for _account...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _account Function: repayAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_maxAmount
Finding type for _maxAmount...
uint256
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: _maxAmount Function: repayAllETH
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
WETH_22(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_14', 'WETH_0', 'WETH_4', 'WETH_21'])
has variable
clearing ir...?
debtSharesOf_6(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
has variable
typecheckig node...
WETH_22(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_14', 'WETH_0', 'WETH_4', 'WETH_21'])
Function name: repayAllETH
Phi
[i]Type for WETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
debtSharesOf_6(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
Function name: repayAllETH
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
TMP_123 = CONVERT WETH_23 to address
has variable
[i] TMP_123 cleared
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(TMP_123)
typecheckig node...
TMP_123 = CONVERT WETH_23 to address
Function name: repayAllETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_123 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_123

Name: TMP_123 Function: repayAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, LendingPair._validateToken(address)(TMP_123)
Internal call...
_validateToken
TMP_123
Function: _validateToken
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, None, [], -1]
added
xyz
Function name: _validateToken
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_62', '_token_1', 'TMP_80', '_toToken_1', 'TMP_100', '_borrowedToken_1', '_token_1', '_repayToken_1', '_token_1', '_token_1', 'uniTokenA_1', '_token_1', '_token_1', 'TMP_123', '_fromToken_1', '_returnToken_1', '_suppliedToken_1', 'uniTokenB_1', '_token_1', '_token_1', '_returnToken_1', '_token_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
tokenA_48(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
has variable
clearing ir...?
tokenB_53(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_62', '_token_1', 'TMP_80', '_toToken_1', 'TMP_100', '_borrowedToken_1', '_token_1', '_repayToken_1', '_token_1', '_token_1', 'uniTokenA_1', '_token_1', '_token_1', 'TMP_123', '_fromToken_1', '_returnToken_1', '_suppliedToken_1', 'uniTokenB_1', '_token_1', '_token_1', '_returnToken_1', '_token_1', '_token_1', '_token_1'])
Function name: _validateToken
Phi
[i]Type for _token

Name: _token Function: _validateToken
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
tokenA_48(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: _validateToken
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_53(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: _validateToken
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_348(bool) = _token_1 == tokenA_48
has variable
[i] TMP_348 cleared
clearing ir...?
TMP_349(bool) = _token_1 == tokenB_53
has variable
[i] TMP_349 cleared
clearing ir...?
TMP_350(bool) = TMP_348 || TMP_349
has variable
[i] TMP_350 cleared
clearing ir...?
TMP_351(None) = SOLIDITY_CALL require(bool,string)(TMP_350,LendingPair: invalid token)
typecheckig node...
TMP_348(bool) = _token_1 == tokenA_48
Function name: _validateToken
[i]Type for TMP_348

Name: TMP_348 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_349(bool) = _token_1 == tokenB_53
Function name: _validateToken
[i]Type for TMP_349

Name: TMP_349 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_350(bool) = TMP_348 || TMP_349
Function name: _validateToken
[i]Type for TMP_350

Name: TMP_350 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_351(None) = SOLIDITY_CALL require(bool,string)(TMP_350,LendingPair: invalid token)
[i]Type for TMP_351

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_validateToken":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _validateToken
done.
clearning node...
clearing ir...?
TMP_125 = CONVERT WETH_24 to address
has variable
[i] TMP_125 cleared
clearing ir...?
INTERNAL_CALL, LendingPair.accrue(address)(TMP_125)
typecheckig node...
TMP_125 = CONVERT WETH_24 to address
Function name: repayAllETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_125 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_125

Name: TMP_125 Function: repayAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, LendingPair.accrue(address)(TMP_125)
Internal call...
accrue
TMP_125
Function: accrue
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
done.
clearning node...
clearing ir...?
TMP_127 = CONVERT WETH_25 to address
has variable
[i] TMP_127 cleared
clearing ir...?
TMP_128 = CONVERT WETH_25 to address
has variable
[i] TMP_128 cleared
clearing ir...?
REF_27(mapping(address => uint256)) -> debtSharesOf_9[TMP_128]
has variable
clearing ir...?
REF_28(uint256) -> REF_27[_account_1]
has variable
clearing ir...?
TMP_129(uint256) = INTERNAL_CALL, LendingPair._repayShares(address,address,uint256)(_account_1,TMP_127,REF_28)
has variable
[i] TMP_129 cleared
clearing ir...?
amount_1(uint256) := TMP_129(uint256)
has variable
[i] amount cleared
typecheckig node...
TMP_127 = CONVERT WETH_25 to address
Function name: repayAllETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_127 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_127

Name: TMP_127 Function: repayAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_128 = CONVERT WETH_25 to address
Function name: repayAllETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_128 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_128

Name: TMP_128 Function: repayAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_27(mapping(address => uint256)) -> debtSharesOf_9[TMP_128]
Function name: repayAllETH
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
debtSharesOf
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256
[i]Type for REF_27

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_28(uint256) -> REF_27[_account_1]
Function name: repayAllETH
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_28

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_129(uint256) = INTERNAL_CALL, LendingPair._repayShares(address,address,uint256)(_account_1,TMP_127,REF_28)
Function name: repayAllETH
Internal call...
_repayShares
_account
TMP_127
REF_28
Function: _repayShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_17 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_129 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_129

Name: TMP_129 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint256) := TMP_129(uint256)
Function name: repayAllETH
asgn

Name: TMP_129 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amount

Name: amount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
amount_1(uint256) := TMP_129(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_130(bool) = msg.value >= amount_1
has variable
[i] TMP_130 cleared
clearing ir...?
TMP_131(None) = SOLIDITY_CALL require(bool,string)(TMP_130,LendingPair: insufficient ETH deposit)
typecheckig node...
TMP_130(bool) = msg.value >= amount_1
Function name: repayAllETH
testing gt...
lnorm: u rnorm: u
not variable
not variable

Name: amount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_130 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_130

Name: TMP_130 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_130(bool) = msg.value >= amount_1
XXXXX
TMP_131(None) = SOLIDITY_CALL require(bool,string)(TMP_130,LendingPair: insufficient ETH deposit)
[i]Type for TMP_131

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_132(bool) = amount_1 <= _maxAmount_1
has variable
[i] TMP_132 cleared
clearing ir...?
TMP_133(None) = SOLIDITY_CALL require(bool,string)(TMP_132,LendingPair: amount <= _maxAmount)
typecheckig node...
TMP_132(bool) = amount_1 <= _maxAmount_1
Function name: repayAllETH
testing lt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _maxAmount Function: repayAllETH
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_132 Function: repayAllETH
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_132

Name: TMP_132 Function: repayAllETH
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_132(bool) = amount_1 <= _maxAmount_1
XXXXX
TMP_133(None) = SOLIDITY_CALL require(bool,string)(TMP_132,LendingPair: amount <= _maxAmount)
[i]Type for TMP_133

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, TransferHelper._depositWeth()()
typecheckig node...
INTERNAL_CALL, TransferHelper._depositWeth()()
Internal call...
_depositWeth
Function: _depositWeth
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: _depositWeth
Function Visibility: internal
clearning node...
clearing ir...?
WETH_3(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_14', 'WETH_0', 'WETH_4', 'WETH_21'])
has variable
typecheckig node...
WETH_3(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_14', 'WETH_0', 'WETH_4', 'WETH_21'])
Function name: _depositWeth
Phi
[i]Type for WETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_18(bool) = msg.value > 0
has variable
[i] TMP_18 cleared
clearing ir...?
TMP_19(None) = SOLIDITY_CALL require(bool,string)(TMP_18,TransferHelper: amount must be > 0)
typecheckig node...
TMP_18(bool) = msg.value > 0
Function name: _depositWeth
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
not variable
not variable
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_18 Function: _depositWeth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_18

Name: TMP_18 Function: _depositWeth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_18(bool) = msg.value > 0
XXXXX
TMP_19(None) = SOLIDITY_CALL require(bool,string)(TMP_18,TransferHelper: amount must be > 0)
[i]Type for TMP_19

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
HIGH_LEVEL_CALL, dest:WETH_3(IWETH), function:deposit, arguments:[] value:msg.value 
clearing ir...?
WETH_4(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_3', 'WETH_14', 'WETH_4', 'WETH_21'])
has variable
typecheckig node...
HIGH_LEVEL_CALL, dest:WETH_3(IWETH), function:deposit, arguments:[] value:msg.value 
High Call: deposit
func name:deposit
other func name:deposit
done.
WETH_4(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_3', 'WETH_14', 'WETH_4', 'WETH_21'])
Function name: _depositWeth
Phi
[i]Type for WETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_depositWeth":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
WETH_3(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_14', 'WETH_0', 'WETH_4', 'WETH_21'])
Function name: _depositWeth
Phi
[i]Type for WETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_18(bool) = msg.value > 0
Function name: _depositWeth
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
not variable
not variable
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_18 Function: _depositWeth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_18

Name: TMP_18 Function: _depositWeth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_18(bool) = msg.value > 0
XXXXX
TMP_19(None) = SOLIDITY_CALL require(bool,string)(TMP_18,TransferHelper: amount must be > 0)
[i]Type for TMP_19

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
HIGH_LEVEL_CALL, dest:WETH_3(IWETH), function:deposit, arguments:[] value:msg.value 
High Call: deposit
func name:deposit
other func name:deposit
done.
WETH_4(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_3', 'WETH_14', 'WETH_4', 'WETH_21'])
Function name: _depositWeth
Phi
[i]Type for WETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "_depositWeth":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: _depositWeth
done.
This IR caused addback:
INTERNAL_CALL, TransferHelper._depositWeth()()
XXXXX
clearning node...
clearing ir...?
TMP_138(bool) = msg.value > amount_1
has variable
[i] TMP_138 cleared
clearing ir...?
CONDITION TMP_138
typecheckig node...
TMP_138(bool) = msg.value > amount_1
Function name: repayAllETH
testing gt...
lnorm: u rnorm: u

Name: amount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
False
not variable
not variable

Name: amount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_138 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_138

Name: TMP_138 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_138(bool) = msg.value > amount_1
XXXXX
CONDITION TMP_138
Condition...
Conidtion: 
TMP_138
TMP_138
clearning node...
clearing ir...?
refundAmount_2(uint256) := 0(uint256)
has variable
[i] refundAmount cleared
typecheckig node...
refundAmount_2(uint256) := 0(uint256)
Function name: repayAllETH
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: refundAmount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for refundAmount

Name: refundAmount Function: repayAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_139(uint256) = msg.value (c)- amount_1
has variable
[i] TMP_139 cleared
clearing ir...?
refundAmount_1(uint256) := TMP_139(uint256)
has variable
[i] refundAmount cleared
typecheckig node...
TMP_139(uint256) = msg.value (c)- amount_1
Function name: repayAllETH
lnorm: u rnorm: u

Name: amount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
not variable

Name: amount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_139 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_139

Name: TMP_139 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_139(uint256) = msg.value (c)- amount_1
XXXXX
refundAmount_1(uint256) := TMP_139(uint256)
Function name: repayAllETH
asgn

Name: TMP_139 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: refundAmount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for refundAmount

Name: refundAmount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
refundAmount_1(uint256) := TMP_139(uint256)
XXXXX
clearning node...
clearing ir...?
refundAmount_3(uint256) := ϕ(['refundAmount_1', 'refundAmount_2'])
has variable
[i] refundAmount cleared
typecheckig node...
refundAmount_3(uint256) := ϕ(['refundAmount_1', 'refundAmount_2'])
Function name: repayAllETH
Phi
[i]Type for refundAmount

Name: refundAmount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_135(bool) = refundAmount_3 > 0
has variable
[i] TMP_135 cleared
clearing ir...?
CONDITION TMP_135
typecheckig node...
TMP_135(bool) = refundAmount_3 > 0
Function name: repayAllETH
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_135 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_135

Name: TMP_135 Function: repayAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_135(bool) = refundAmount_3 > 0
XXXXX
CONDITION TMP_135
Condition...
Conidtion: 
TMP_135
TMP_135
clearning node...
typecheckig node...
clearning node...
clearing ir...?
INTERNAL_CALL, TransferHelper._wethWithdrawTo(address,uint256)(msg.sender,refundAmount_3)
typecheckig node...
INTERNAL_CALL, TransferHelper._wethWithdrawTo(address,uint256)(msg.sender,refundAmount_3)
Internal call...
_wethWithdrawTo
msg.sender
refundAmount
Function: _wethWithdrawTo
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[], [], 'u', None, [], -1]
added
xyz
Function name: _wethWithdrawTo
Function Visibility: internal
clearning node...
clearing ir...?
_to_1(address) := ϕ(['msg.sender'])
has variable
[i] _to cleared
clearing ir...?
_amount_1(uint256) := ϕ(['refundAmount_3', '_amount_1', 'TMP_108'])
has variable
[i] _amount cleared
clearing ir...?
WETH_1(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_14', 'WETH_0', 'WETH_4', 'WETH_21'])
has variable
typecheckig node...
_to_1(address) := ϕ(['msg.sender'])
Function name: _wethWithdrawTo
Phi
[i]Type for _to

Name: _to Function: _wethWithdrawTo
Num: -1
Den: -1
Norm: u
LF: _to
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['refundAmount_3', '_amount_1', 'TMP_108'])
Function name: _wethWithdrawTo
Phi
[i]Type for _amount

Name: _amount Function: _wethWithdrawTo
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WETH_1(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_14', 'WETH_0', 'WETH_4', 'WETH_21'])
Function name: _wethWithdrawTo
Phi
[i]Type for WETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_9(bool) = _amount_1 > 0
has variable
[i] TMP_9 cleared
clearing ir...?
TMP_10(None) = SOLIDITY_CALL require(bool,string)(TMP_9,TransferHelper: amount must be > 0)
typecheckig node...
TMP_9(bool) = _amount_1 > 0
Function name: _wethWithdrawTo
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_9 Function: _wethWithdrawTo
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_9

Name: TMP_9 Function: _wethWithdrawTo
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_9(bool) = _amount_1 > 0
XXXXX
TMP_10(None) = SOLIDITY_CALL require(bool,string)(TMP_9,TransferHelper: amount must be > 0)
[i]Type for TMP_10

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_11 = CONVERT 0 to address
has variable
[i] TMP_11 cleared
clearing ir...?
TMP_12(bool) = _to_1 != TMP_11
has variable
[i] TMP_12 cleared
clearing ir...?
TMP_13(None) = SOLIDITY_CALL require(bool,string)(TMP_12,TransferHelper: invalid recipient)
typecheckig node...
TMP_11 = CONVERT 0 to address
Function name: _wethWithdrawTo
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_11 Function: _wethWithdrawTo
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_11

Name: TMP_11 Function: _wethWithdrawTo
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_12(bool) = _to_1 != TMP_11
Function name: _wethWithdrawTo
[i]Type for TMP_12

Name: TMP_12 Function: _wethWithdrawTo
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_13(None) = SOLIDITY_CALL require(bool,string)(TMP_12,TransferHelper: invalid recipient)
[i]Type for TMP_13

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
HIGH_LEVEL_CALL, dest:WETH_1(IWETH), function:withdraw, arguments:['_amount_1']  
clearing ir...?
WETH_2(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_1', 'WETH_14', 'WETH_4', 'WETH_21'])
has variable
typecheckig node...
HIGH_LEVEL_CALL, dest:WETH_1(IWETH), function:withdraw, arguments:['_amount_1']  
High Call: withdraw
func name:withdraw
other func name:withdraw
done.
WETH_2(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_1', 'WETH_14', 'WETH_4', 'WETH_21'])
Function name: _wethWithdrawTo
Phi
[i]Type for WETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_16 = new bytes(0)
clearing ir...?
TUPLE_0(bool,bytes) = LOW_LEVEL_CALL, dest:_to_1, function:call, arguments:['TMP_16'] value:_amount_1 
clearing ir...?
success_1(bool)= UNPACK TUPLE_0 index: 0 
has variable
[i] success cleared
typecheckig node...
TMP_16 = new bytes(0)
[i]Type for TMP_16

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TUPLE_0(bool,bytes) = LOW_LEVEL_CALL, dest:_to_1, function:call, arguments:['TMP_16'] value:_amount_1 
[i]Type for TUPLE_0

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
success_1(bool)= UNPACK TUPLE_0 index: 0 
Function name: _wethWithdrawTo
Reading tuple TUPLE_0 index 0
Finding type for success...
bool
SKIP bool
[i]Type for success

Name: success Function: _wethWithdrawTo
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_17(None) = SOLIDITY_CALL require(bool,string)(success_1,TransferHelper: ETH transfer failed)
typecheckig node...
TMP_17(None) = SOLIDITY_CALL require(bool,string)(success_1,TransferHelper: ETH transfer failed)
[i]Type for TMP_17

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_wethWithdrawTo":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
_to_1(address) := ϕ(['msg.sender'])
Function name: _wethWithdrawTo
Phi
[i]Type for _to

Name: _to Function: _wethWithdrawTo
Num: -1
Den: -1
Norm: u
LF: _to
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['refundAmount_3', '_amount_1', 'TMP_108'])
Function name: _wethWithdrawTo
Phi
[i]Type for _amount

Name: _amount Function: _wethWithdrawTo
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WETH_1(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_14', 'WETH_0', 'WETH_4', 'WETH_21'])
Function name: _wethWithdrawTo
Phi
[i]Type for WETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_9(bool) = _amount_1 > 0
Function name: _wethWithdrawTo
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_9 Function: _wethWithdrawTo
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_9

Name: TMP_9 Function: _wethWithdrawTo
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_9(bool) = _amount_1 > 0
XXXXX
TMP_10(None) = SOLIDITY_CALL require(bool,string)(TMP_9,TransferHelper: amount must be > 0)
[i]Type for TMP_10

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_11 = CONVERT 0 to address
Function name: _wethWithdrawTo
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_11 Function: _wethWithdrawTo
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_11

Name: TMP_11 Function: _wethWithdrawTo
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_12(bool) = _to_1 != TMP_11
Function name: _wethWithdrawTo
[i]Type for TMP_12

Name: TMP_12 Function: _wethWithdrawTo
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_13(None) = SOLIDITY_CALL require(bool,string)(TMP_12,TransferHelper: invalid recipient)
[i]Type for TMP_13

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
HIGH_LEVEL_CALL, dest:WETH_1(IWETH), function:withdraw, arguments:['_amount_1']  
High Call: withdraw
func name:withdraw
other func name:withdraw
done.
WETH_2(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_1', 'WETH_14', 'WETH_4', 'WETH_21'])
Function name: _wethWithdrawTo
Phi
[i]Type for WETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_16 = new bytes(0)
[i]Type for TMP_16

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TUPLE_0(bool,bytes) = LOW_LEVEL_CALL, dest:_to_1, function:call, arguments:['TMP_16'] value:_amount_1 
[i]Type for TUPLE_0

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
success_1(bool)= UNPACK TUPLE_0 index: 0 
Function name: _wethWithdrawTo
Reading tuple TUPLE_0 index 0
Finding type for success...
bool
SKIP bool
[i]Type for success

Name: success Function: _wethWithdrawTo
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_17(None) = SOLIDITY_CALL require(bool,string)(success_1,TransferHelper: ETH transfer failed)
[i]Type for TMP_17

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "_wethWithdrawTo":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: _wethWithdrawTo
done.
This IR caused addback:
INTERNAL_CALL, TransferHelper._wethWithdrawTo(address,uint256)(msg.sender,refundAmount_3)
XXXXX
WORKLIST iteration 0 for function call "repayAllETH":
 New undefined nodes- 6
 Old undefined nodes- 0
typecheckig node...
WETH_22(IWETH) := ϕ(['WETH_26', 'WETH_2', 'WETH_9', 'WETH_14', 'WETH_0', 'WETH_4', 'WETH_21'])
Function name: repayAllETH
Phi
[i]Type for WETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
debtSharesOf_6(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
Function name: repayAllETH
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
typecheckig node...
TMP_123 = CONVERT WETH_23 to address
Function name: repayAllETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_123 Function: repayAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_123

Name: TMP_123 Function: repayAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, LendingPair._validateToken(address)(TMP_123)
Internal call...
_validateToken
TMP_123
Function: _validateToken
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, None, [], -1]
added
xyz
Function name: _validateToken
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_62', '_token_1', 'TMP_80', '_toToken_1', 'TMP_100', '_borrowedToken_1', '_token_1', '_repayToken_1', '_token_1', '_token_1', 'uniTokenA_1', '_token_1', '_token_1', 'TMP_123', '_fromToken_1', '_returnToken_1', '_suppliedToken_1', 'uniTokenB_1', '_token_1', '_token_1', '_returnToken_1', '_token_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
tokenA_48(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
has variable
clearing ir...?
tokenB_53(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_62', '_token_1', 'TMP_80', '_toToken_1', 'TMP_100', '_borrowedToken_1', '_token_1', '_repayToken_1', '_token_1', '_token_1', 'uniTokenA_1', '_token_1', '_token_1', 'TMP_123', '_fromToken_1', '_returnToken_1', '_suppliedToken_1', 'uniTokenB_1', '_token_1', '_token_1', '_returnToken_1', '_token_1', '_token_1', '_token_1'])
Function name: _validateToken
Phi
[i]Type for _token

Name: _token Function: _validateToken
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
tokenA_48(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: _validateToken
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_53(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: _validateToken
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_348(bool) = _token_1 == tokenA_48
has variable
[i] TMP_348 cleared
clearing ir...?
TMP_349(bool) = _token_1 == tokenB_53
has variable
[i] TMP_349 cleared
clearing ir...?
TMP_350(bool) = TMP_348 || TMP_349
has variable
[i] TMP_350 cleared
clearing ir...?
TMP_351(None) = SOLIDITY_CALL require(bool,string)(TMP_350,LendingPair: invalid token)
typecheckig node...
TMP_348(bool) = _token_1 == tokenA_48
Function name: _validateToken
[i]Type for TMP_348

Name: TMP_348 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_349(bool) = _token_1 == tokenB_53
Function name: _validateToken
[i]Type for TMP_349

Name: TMP_349 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_350(bool) = TMP_348 || TMP_349
Function name: _validateToken
[i]Type for TMP_350

Name: TMP_350 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_351(None) = SOLIDITY_CALL require(bool,string)(TMP_350,LendingPair: invalid token)
[i]Type for TMP_351

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_validateToken":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _validateToken
done.
typecheckig node...
TMP_125 = CONVERT WETH_24 to address
Function name: repayAllETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_125 Function: repayAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_125

Name: TMP_125 Function: repayAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, LendingPair.accrue(address)(TMP_125)
Internal call...
accrue
TMP_125
Function: accrue
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
done.
typecheckig node...
TMP_127 = CONVERT WETH_25 to address
Function name: repayAllETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_127 Function: repayAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_127

Name: TMP_127 Function: repayAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_128 = CONVERT WETH_25 to address
Function name: repayAllETH

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_128 Function: repayAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_128

Name: TMP_128 Function: repayAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_27(mapping(address => uint256)) -> debtSharesOf_9[TMP_128]
Function name: repayAllETH
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
debtSharesOf
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256
[i]Type for REF_27

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_28(uint256) -> REF_27[_account_1]
Function name: repayAllETH
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_28

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_129(uint256) = INTERNAL_CALL, LendingPair._repayShares(address,address,uint256)(_account_1,TMP_127,REF_28)
Function name: repayAllETH
Internal call...
_repayShares
_account
TMP_127
REF_28
Function: _repayShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_17 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_129 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_129

Name: TMP_129 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint256) := TMP_129(uint256)
Function name: repayAllETH
asgn

Name: TMP_129 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amount

Name: amount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
amount_1(uint256) := TMP_129(uint256)
XXXXX
typecheckig node...
TMP_130(bool) = msg.value >= amount_1
Function name: repayAllETH
testing gt...
lnorm: u rnorm: u
not variable
not variable

Name: amount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_130 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_130

Name: TMP_130 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_130(bool) = msg.value >= amount_1
XXXXX
TMP_131(None) = SOLIDITY_CALL require(bool,string)(TMP_130,LendingPair: insufficient ETH deposit)
[i]Type for TMP_131

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_132(bool) = amount_1 <= _maxAmount_1
Function name: repayAllETH
testing lt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _maxAmount Function: repayAllETH
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_132 Function: repayAllETH
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_132

Name: TMP_132 Function: repayAllETH
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_132(bool) = amount_1 <= _maxAmount_1
XXXXX
TMP_133(None) = SOLIDITY_CALL require(bool,string)(TMP_132,LendingPair: amount <= _maxAmount)
[i]Type for TMP_133

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, TransferHelper._depositWeth()()
Internal call...
_depositWeth
Function: _depositWeth
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
typecheckig node...
TMP_138(bool) = msg.value > amount_1
Function name: repayAllETH
testing gt...
lnorm: u rnorm: u

Name: amount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
False
not variable
not variable

Name: amount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_138 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_138

Name: TMP_138 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_138(bool) = msg.value > amount_1
XXXXX
CONDITION TMP_138
Condition...
Conidtion: 
TMP_138
TMP_138
typecheckig node...
refundAmount_2(uint256) := 0(uint256)
Function name: repayAllETH
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: refundAmount Function: repayAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for refundAmount

Name: refundAmount Function: repayAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_139(uint256) = msg.value (c)- amount_1
Function name: repayAllETH
lnorm: u rnorm: u

Name: amount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
not variable

Name: amount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_139 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_139

Name: TMP_139 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_139(uint256) = msg.value (c)- amount_1
XXXXX
refundAmount_1(uint256) := TMP_139(uint256)
Function name: repayAllETH
asgn

Name: TMP_139 Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: refundAmount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for refundAmount

Name: refundAmount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
refundAmount_1(uint256) := TMP_139(uint256)
XXXXX
typecheckig node...
refundAmount_3(uint256) := ϕ(['refundAmount_1', 'refundAmount_2'])
Function name: repayAllETH
Phi
[i]Type for refundAmount

Name: refundAmount Function: repayAllETH
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_135(bool) = refundAmount_3 > 0
Function name: repayAllETH
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_135 Function: repayAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_135

Name: TMP_135 Function: repayAllETH
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_135(bool) = refundAmount_3 > 0
XXXXX
CONDITION TMP_135
Condition...
Conidtion: 
TMP_135
TMP_135
typecheckig node...
typecheckig node...
INTERNAL_CALL, TransferHelper._wethWithdrawTo(address,uint256)(msg.sender,refundAmount_3)
Internal call...
_wethWithdrawTo
msg.sender
refundAmount
Function: _wethWithdrawTo
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[], [], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[], [], 'u', None, [], -1]
0
done.
WORKLIST iteration 1 for function call "repayAllETH":
 New undefined nodes- 6
 Old undefined nodes- 6
Saving return values for: repayAllETH
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: repay
Function repay not marked
Mark Iterations TRUE, proceeding anyway
Function name: repay
Function Visibility (test): external
_account
Finding type for _account...
address
_token
Finding type for _token...
address
_amount
Finding type for _amount...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
Internal call...
_validateToken
_token
Function: _validateToken
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair.accrue(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair.accrue(address)(_token_1)
Internal call...
accrue
_token
Function: accrue
ic
done.
clearning node...
clearing ir...?
TMP_142(uint256) = INTERNAL_CALL, LendingPair._debtToShares(address,uint256)(_token_1,_amount_1)
has variable
[i] TMP_142 cleared
clearing ir...?
TMP_143(uint256) = INTERNAL_CALL, LendingPair._repayShares(address,address,uint256)(_account_1,_token_1,TMP_142)
has variable
[i] TMP_143 cleared
typecheckig node...
TMP_142(uint256) = INTERNAL_CALL, LendingPair._debtToShares(address,uint256)(_token_1,_amount_1)
Function name: repay
Internal call...
_debtToShares
_token
_amount
Function: _debtToShares
ic
[i]Type for TMP_142

Name: TMP_142 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_143(uint256) = INTERNAL_CALL, LendingPair._repayShares(address,address,uint256)(_account_1,_token_1,TMP_142)
Function name: repay
Internal call...
_repayShares
_account
_token
TMP_142
Function: _repayShares
ic
[i]Type for TMP_143

Name: TMP_143 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, TransferHelper._safeTransferFrom(address,address,uint256)(_token_1,msg.sender,_amount_1)
typecheckig node...
INTERNAL_CALL, TransferHelper._safeTransferFrom(address,address,uint256)(_token_1,msg.sender,_amount_1)
Internal call...
_safeTransferFrom
_token
msg.sender
_amount
Function: _safeTransferFrom
ic
done.
WORKLIST iteration 0 for function call "repay":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: accrue
Function name: accrue
Function Visibility (test): public
_token
Finding type for _token...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _token Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_64', 'supplyToken_3', '_token_1', '_token_1', 'TMP_125', 'TMP_102', '_token_1', 'TMP_82', '_repayToken_1', '_token_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
pendingSystemFees_1(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_0'])
has variable
clearing ir...?
lastBlockAccrued_3(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3', 'lastBlockAccrued_4', 'lastBlockAccrued_0', 'lastBlockAccrued_5', 'lastBlockAccrued_2'])
has variable
clearing ir...?
totalSupplyAmount_1(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_64', 'supplyToken_3', '_token_1', '_token_1', 'TMP_125', 'TMP_102', '_token_1', 'TMP_82', '_repayToken_1', '_token_1', '_token_1', '_token_1'])
Function name: accrue
Phi
[i]Type for _token

Name: _token Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pendingSystemFees_1(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_0'])
Function name: accrue
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastBlockAccrued_3(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3', 'lastBlockAccrued_4', 'lastBlockAccrued_0', 'lastBlockAccrued_5', 'lastBlockAccrued_2'])
Function name: accrue
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_1(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: accrue
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_29(uint256) -> lastBlockAccrued_3[_token_1]
has variable
clearing ir...?
TMP_146(bool) = REF_29 < block.number
has variable
[i] TMP_146 cleared
clearing ir...?
CONDITION TMP_146
typecheckig node...
REF_29(uint256) -> lastBlockAccrued_3[_token_1]
Function name: accrue
INDEX

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_29

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_146(bool) = REF_29 < block.number
Function name: accrue
testing lt...
block.number
[i]Type for TMP_146

Name: TMP_146 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_146
Condition...
Conidtion: 
TMP_146
TMP_146
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_147(uint256) = INTERNAL_CALL, LendingPair._accrueDebt(address)(_token_1)
has variable
[i] TMP_147 cleared
clearing ir...?
newDebt_1(uint256) := TMP_147(uint256)
has variable
[i] newDebt cleared
typecheckig node...
TMP_147(uint256) = INTERNAL_CALL, LendingPair._accrueDebt(address)(_token_1)
Function name: accrue
Internal call...
_accrueDebt
_token
Function: _accrueDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
0

Name: PIC_11 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_147

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
newDebt_1(uint256) := TMP_147(uint256)
Function name: accrue
asgn

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newDebt

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
newDebt_1(uint256) := TMP_147(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_148(uint256) = INTERNAL_CALL, LendingPair._lpRate(address)(_token_1)
has variable
[i] TMP_148 cleared
clearing ir...?
TMP_149(uint256) = newDebt_1 (c)* TMP_148
has variable
[i] TMP_149 cleared
clearing ir...?
TMP_150(uint256) = TMP_149 (c)/ 100000000000000000000
has variable
[i] TMP_150 cleared
clearing ir...?
newSupply_1(uint256) := TMP_150(uint256)
has variable
[i] newSupply cleared
typecheckig node...
TMP_148(uint256) = INTERNAL_CALL, LendingPair._lpRate(address)(_token_1)
Function name: accrue
Internal call...
_lpRate
_token
Function: _lpRate
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
0

Name: PIC_12 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_148 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_148

Name: TMP_148 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_149(uint256) = newDebt_1 (c)* TMP_148
Function name: accrue
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_148 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_149 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_149

Name: TMP_149 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_149(uint256) = newDebt_1 (c)* TMP_148
XXXXX
TMP_150(uint256) = TMP_149 (c)/ 100000000000000000000
Function name: accrue
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_150 Function: accrue
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef
val: 100000000000000000000
20
[i]Type for TMP_150

Name: TMP_150 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
newSupply_1(uint256) := TMP_150(uint256)
Function name: accrue
asgn

Name: TMP_150 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newSupply

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_30(uint256) -> totalSupplyAmount_3[_token_1]
has variable
clearing ir...?
totalSupplyAmount_4(mapping(address => uint256)) := ϕ(['totalSupplyAmount_3'])
has variable
clearing ir...?
REF_30(-> totalSupplyAmount_4) = REF_30 (c)+ newSupply_1
has variable
typecheckig node...
REF_30(uint256) -> totalSupplyAmount_3[_token_1]
Function name: accrue
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalSupplyAmount
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_30

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_4(mapping(address => uint256)) := ϕ(['totalSupplyAmount_3'])
Function name: accrue
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_30(-> totalSupplyAmount_4) = REF_30 (c)+ newSupply_1
Function name: accrue

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_30

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_31(uint256) -> pendingSystemFees_3[_token_1]
has variable
clearing ir...?
TMP_151(uint256) = newDebt_1 (c)- newSupply_1
has variable
[i] TMP_151 cleared
clearing ir...?
pendingSystemFees_4(mapping(address => uint256)) := ϕ(['pendingSystemFees_3'])
has variable
clearing ir...?
REF_31(-> pendingSystemFees_4) = REF_31 (c)+ TMP_151
has variable
typecheckig node...
REF_31(uint256) -> pendingSystemFees_3[_token_1]
Function name: accrue
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
pendingSystemFees
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_31

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_151(uint256) = newDebt_1 (c)- newSupply_1
Function name: accrue
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: TMP_151 Function: accrue
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_151

Name: TMP_151 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_151(uint256) = newDebt_1 (c)- newSupply_1
XXXXX
pendingSystemFees_4(mapping(address => uint256)) := ϕ(['pendingSystemFees_3'])
Function name: accrue
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_31(-> pendingSystemFees_4) = REF_31 (c)+ TMP_151
Function name: accrue

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_151 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_31

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_32(uint256) -> lastBlockAccrued_3[_token_1]
has variable
clearing ir...?
lastBlockAccrued_4(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3'])
has variable
clearing ir...?
REF_32 (->lastBlockAccrued_4) := block.number(uint256)
has variable
typecheckig node...
REF_32(uint256) -> lastBlockAccrued_3[_token_1]
Function name: accrue
INDEX

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_32

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastBlockAccrued_4(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3'])
Function name: accrue
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_32 (->lastBlockAccrued_4) := block.number(uint256)
Function name: accrue
asgn
block.number

Name: REF_32 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_32

Name: REF_32 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_32 (->lastBlockAccrued_4) := block.number(uint256)
XXXXX
WORKLIST iteration 0 for function call "accrue":
 New undefined nodes- 4
 Old undefined nodes- 0
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_64', 'supplyToken_3', '_token_1', '_token_1', 'TMP_125', 'TMP_102', '_token_1', 'TMP_82', '_repayToken_1', '_token_1', '_token_1', '_token_1'])
Function name: accrue
Phi
[i]Type for _token

Name: _token Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pendingSystemFees_1(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_0'])
Function name: accrue
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastBlockAccrued_3(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3', 'lastBlockAccrued_4', 'lastBlockAccrued_0', 'lastBlockAccrued_5', 'lastBlockAccrued_2'])
Function name: accrue
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_1(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: accrue
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_29(uint256) -> lastBlockAccrued_3[_token_1]
Function name: accrue
INDEX

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_29

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_146(bool) = REF_29 < block.number
Function name: accrue
testing lt...
block.number
[i]Type for TMP_146

Name: TMP_146 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_146
Condition...
Conidtion: 
TMP_146
TMP_146
typecheckig node...
typecheckig node...
TMP_147(uint256) = INTERNAL_CALL, LendingPair._accrueDebt(address)(_token_1)
Function name: accrue
Internal call...
_accrueDebt
_token
Function: _accrueDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
0

Name: PIC_11 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_147

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
newDebt_1(uint256) := TMP_147(uint256)
Function name: accrue
asgn

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newDebt

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
newDebt_1(uint256) := TMP_147(uint256)
XXXXX
typecheckig node...
TMP_148(uint256) = INTERNAL_CALL, LendingPair._lpRate(address)(_token_1)
Function name: accrue
Internal call...
_lpRate
_token
Function: _lpRate
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
0

Name: PIC_12 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_148 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_148

Name: TMP_148 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_149(uint256) = newDebt_1 (c)* TMP_148
Function name: accrue
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_148 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_149 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_149

Name: TMP_149 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_149(uint256) = newDebt_1 (c)* TMP_148
XXXXX
TMP_150(uint256) = TMP_149 (c)/ 100000000000000000000
Function name: accrue
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_150 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
val: 100000000000000000000
20
[i]Type for TMP_150

Name: TMP_150 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
newSupply_1(uint256) := TMP_150(uint256)
Function name: accrue
asgn

Name: TMP_150 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newSupply

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_30(uint256) -> totalSupplyAmount_3[_token_1]
Function name: accrue
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalSupplyAmount
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_30

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_4(mapping(address => uint256)) := ϕ(['totalSupplyAmount_3'])
Function name: accrue
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_30(-> totalSupplyAmount_4) = REF_30 (c)+ newSupply_1
Function name: accrue

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_30

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_31(uint256) -> pendingSystemFees_3[_token_1]
Function name: accrue
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
pendingSystemFees
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_31

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_151(uint256) = newDebt_1 (c)- newSupply_1
Function name: accrue
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: TMP_151 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_151

Name: TMP_151 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_151(uint256) = newDebt_1 (c)- newSupply_1
XXXXX
pendingSystemFees_4(mapping(address => uint256)) := ϕ(['pendingSystemFees_3'])
Function name: accrue
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_31(-> pendingSystemFees_4) = REF_31 (c)+ TMP_151
Function name: accrue

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_151 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_31

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_32(uint256) -> lastBlockAccrued_3[_token_1]
Function name: accrue
INDEX

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_32

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastBlockAccrued_4(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3'])
Function name: accrue
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_32 (->lastBlockAccrued_4) := block.number(uint256)
Function name: accrue
asgn
block.number

Name: REF_32 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_32

Name: REF_32 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_32 (->lastBlockAccrued_4) := block.number(uint256)
XXXXX
WORKLIST iteration 1 for function call "accrue":
 New undefined nodes- 4
 Old undefined nodes- 4
Saving return values for: accrue
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: collectSystemFee
Function name: collectSystemFee
Function Visibility (test): external
_token
Finding type for _token...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _token Function: collectSystemFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_amount
Finding type for _amount...
uint256
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: _amount Function: collectSystemFee
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
pendingSystemFees_5(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_0'])
has variable
clearing ir...?
feeRecipient_2(address) := ϕ(['feeRecipient_1', 'feeRecipient_5', 'feeRecipient_0'])
has variable
typecheckig node...
pendingSystemFees_5(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_0'])
Function name: collectSystemFee
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
feeRecipient_2(address) := ϕ(['feeRecipient_1', 'feeRecipient_5', 'feeRecipient_0'])
Function name: collectSystemFee
Phi
[i]Type for feeRecipient

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
Internal call...
_validateToken
_token
Function: _validateToken
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, None, [], -1]
added
xyz
Function name: _validateToken
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_62', '_token_1', 'TMP_80', '_toToken_1', 'TMP_100', '_borrowedToken_1', '_token_1', '_repayToken_1', '_token_1', '_token_1', 'uniTokenA_1', '_token_1', '_token_1', 'TMP_123', '_fromToken_1', '_returnToken_1', '_suppliedToken_1', 'uniTokenB_1', '_token_1', '_token_1', '_returnToken_1', '_token_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
tokenA_48(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
has variable
clearing ir...?
tokenB_53(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_62', '_token_1', 'TMP_80', '_toToken_1', 'TMP_100', '_borrowedToken_1', '_token_1', '_repayToken_1', '_token_1', '_token_1', 'uniTokenA_1', '_token_1', '_token_1', 'TMP_123', '_fromToken_1', '_returnToken_1', '_suppliedToken_1', 'uniTokenB_1', '_token_1', '_token_1', '_returnToken_1', '_token_1', '_token_1', '_token_1'])
Function name: _validateToken
Phi
[i]Type for _token

Name: _token Function: _validateToken
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
tokenA_48(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: _validateToken
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_53(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: _validateToken
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_348(bool) = _token_1 == tokenA_48
has variable
[i] TMP_348 cleared
clearing ir...?
TMP_349(bool) = _token_1 == tokenB_53
has variable
[i] TMP_349 cleared
clearing ir...?
TMP_350(bool) = TMP_348 || TMP_349
has variable
[i] TMP_350 cleared
clearing ir...?
TMP_351(None) = SOLIDITY_CALL require(bool,string)(TMP_350,LendingPair: invalid token)
typecheckig node...
TMP_348(bool) = _token_1 == tokenA_48
Function name: _validateToken
[i]Type for TMP_348

Name: TMP_348 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_349(bool) = _token_1 == tokenB_53
Function name: _validateToken
[i]Type for TMP_349

Name: TMP_349 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_350(bool) = TMP_348 || TMP_349
Function name: _validateToken
[i]Type for TMP_350

Name: TMP_350 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_351(None) = SOLIDITY_CALL require(bool,string)(TMP_350,LendingPair: invalid token)
[i]Type for TMP_351

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_validateToken":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _validateToken
done.
clearning node...
clearing ir...?
REF_33(uint256) -> pendingSystemFees_7[_token_1]
has variable
clearing ir...?
pendingSystemFees_8(mapping(address => uint256)) := ϕ(['pendingSystemFees_7'])
has variable
clearing ir...?
REF_33(-> pendingSystemFees_8) = REF_33 (c)- _amount_1
has variable
typecheckig node...
REF_33(uint256) -> pendingSystemFees_7[_token_1]
Function name: collectSystemFee
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
pendingSystemFees
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_33

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pendingSystemFees_8(mapping(address => uint256)) := ϕ(['pendingSystemFees_7'])
Function name: collectSystemFee
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_33(-> pendingSystemFees_8) = REF_33 (c)- _amount_1
Function name: collectSystemFee
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_33 Function: collectSystemFee
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _amount Function: collectSystemFee
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _amount Function: collectSystemFee
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_33 Function: collectSystemFee
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_33

Name: REF_33 Function: collectSystemFee
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, TransferHelper._safeTransfer(address,address,uint256)(_token_1,feeRecipient_4,_amount_1)
typecheckig node...
INTERNAL_CALL, TransferHelper._safeTransfer(address,address,uint256)(_token_1,feeRecipient_4,_amount_1)
Internal call...
_safeTransfer
_token
feeRecipient
_amount
Function: _safeTransfer
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[1], [-1], 0, None, [], -1]
added
xyz
Function name: _safeTransfer
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1', '_token_1', 'tokenA_10', 'tokenB_12', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_recipient_1(address) := ϕ(['feeRecipient_4', 'msg.sender'])
has variable
[i] _recipient cleared
clearing ir...?
_amount_1(uint256) := ϕ(['amountA_1', 'TMP_97', '_amount_1', 'amountB_1', '_amount_1', '_amount_1', '_amount_1'])
has variable
[i] _amount cleared
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', '_token_1', 'tokenA_10', 'tokenB_12', '_token_1', '_token_1'])
Function name: _safeTransfer
Phi
[i]Type for _token

Name: _token Function: _safeTransfer
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
_recipient_1(address) := ϕ(['feeRecipient_4', 'msg.sender'])
Function name: _safeTransfer
Phi
[i]Type for _recipient

Name: _recipient Function: _safeTransfer
Num: -1
Den: -1
Norm: u
LF: _recipient
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['amountA_1', 'TMP_97', '_amount_1', 'amountB_1', '_amount_1', '_amount_1', '_amount_1'])
Function name: _safeTransfer
Phi
[i]Type for _amount

Name: _amount Function: _safeTransfer
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_5(bool) = _amount_1 > 0
has variable
[i] TMP_5 cleared
clearing ir...?
TMP_6(None) = SOLIDITY_CALL require(bool,string)(TMP_5,TransferHelper: amount must be > 0)
typecheckig node...
TMP_5(bool) = _amount_1 > 0
Function name: _safeTransfer
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_5

Name: TMP_5 Function: _safeTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_6(None) = SOLIDITY_CALL require(bool,string)(TMP_5,TransferHelper: amount must be > 0)
[i]Type for TMP_6

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_7 = CONVERT _token_1 to IERC20
has variable
[i] TMP_7 cleared
clearing ir...?
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_7', '_recipient_1', '_amount_1'] 
typecheckig node...
TMP_7 = CONVERT _token_1 to IERC20
Function name: _safeTransfer

Name: _token Function: _safeTransfer
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef

Name: TMP_7 Function: _safeTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_7

Name: TMP_7 Function: _safeTransfer
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_7', '_recipient_1', '_amount_1'] 
Library Call: safeTransfer
done.
WORKLIST iteration 0 for function call "_safeTransfer":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _safeTransfer
done.
clearning node...
clearing ir...?
Emit CollectSystemFee(_token_1,_amount_1)
typecheckig node...
Emit CollectSystemFee(_token_1,_amount_1)
WORKLIST iteration 0 for function call "collectSystemFee":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: collectSystemFee
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: transferLp
Function name: transferLp
Function Visibility (test): external
_token
Finding type for _token...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _token Function: transferLp
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_from
Finding type for _from...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _from Function: transferLp
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_to
Finding type for _to...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _to Function: transferLp
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_amount
Finding type for _amount...
uint256
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: _amount Function: transferLp
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
supplySharesOf_9(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_15', 'supplySharesOf_12', 'supplySharesOf_0', 'supplySharesOf_8', 'supplySharesOf_4', 'supplySharesOf_18', 'supplySharesOf_21', 'supplySharesOf_19'])
has variable
clearing ir...?
debtSharesOf_11(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
has variable
typecheckig node...
supplySharesOf_9(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_15', 'supplySharesOf_12', 'supplySharesOf_0', 'supplySharesOf_8', 'supplySharesOf_4', 'supplySharesOf_18', 'supplySharesOf_21', 'supplySharesOf_19'])
Function name: transferLp
Phi
[i]Type for supplySharesOf

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
debtSharesOf_11(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
Function name: transferLp
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, LendingPair.onlyLpToken()()
typecheckig node...
MODIFIER_CALL, LendingPair.onlyLpToken()()
Internal call...
onlyLpToken
Function: onlyLpToken
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: onlyLpToken
Function Visibility: internal
clearning node...
clearing ir...?
lpToken_3(mapping(address => address)) := ϕ(['lpToken_3', 'lpToken_0', 'lpToken_2'])
has variable
clearing ir...?
tokenA_49(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
has variable
clearing ir...?
tokenB_54(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
typecheckig node...
lpToken_3(mapping(address => address)) := ϕ(['lpToken_3', 'lpToken_0', 'lpToken_2'])
Function name: onlyLpToken
Phi
[i]Type for lpToken

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenA_49(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: onlyLpToken
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_54(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: onlyLpToken
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_125(address) -> lpToken_3[tokenA_49]
has variable
clearing ir...?
TMP_375(bool) = REF_125 == msg.sender
has variable
[i] TMP_375 cleared
clearing ir...?
REF_126(address) -> lpToken_3[tokenB_54]
has variable
clearing ir...?
TMP_376(bool) = REF_126 == msg.sender
has variable
[i] TMP_376 cleared
clearing ir...?
TMP_377(bool) = TMP_375 || TMP_376
has variable
[i] TMP_377 cleared
clearing ir...?
TMP_378(None) = SOLIDITY_CALL require(bool,string)(TMP_377,LendingController: caller must be LP token)
typecheckig node...
REF_125(address) -> lpToken_3[tokenA_49]
Function name: onlyLpToken
INDEX

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_125

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_375(bool) = REF_125 == msg.sender
Function name: onlyLpToken
[i]Type for TMP_375

Name: TMP_375 Function: onlyLpToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_126(address) -> lpToken_3[tokenB_54]
Function name: onlyLpToken
INDEX

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_126

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_376(bool) = REF_126 == msg.sender
Function name: onlyLpToken
[i]Type for TMP_376

Name: TMP_376 Function: onlyLpToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_377(bool) = TMP_375 || TMP_376
Function name: onlyLpToken
[i]Type for TMP_377

Name: TMP_377 Function: onlyLpToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_378(None) = SOLIDITY_CALL require(bool,string)(TMP_377,LendingController: caller must be LP token)
[i]Type for TMP_378

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "onlyLpToken":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: onlyLpToken
done.
clearning node...
clearing ir...?
REF_34(mapping(address => uint256)) -> debtSharesOf_12[_token_1]
has variable
clearing ir...?
REF_35(uint256) -> REF_34[_to_1]
has variable
clearing ir...?
TMP_156(bool) = REF_35 == 0
has variable
[i] TMP_156 cleared
clearing ir...?
TMP_157(None) = SOLIDITY_CALL require(bool,string)(TMP_156,LendingPair: cannot deposit borrowed token)
typecheckig node...
REF_34(mapping(address => uint256)) -> debtSharesOf_12[_token_1]
Function name: transferLp
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
debtSharesOf
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256
[i]Type for REF_34

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_35(uint256) -> REF_34[_to_1]
Function name: transferLp
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_35

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_156(bool) = REF_35 == 0
Function name: transferLp
[i]Type for TMP_156

Name: TMP_156 Function: transferLp
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_157(None) = SOLIDITY_CALL require(bool,string)(TMP_156,LendingPair: cannot deposit borrowed token)
[i]Type for TMP_157

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_36(mapping(address => uint256)) -> supplySharesOf_10[_token_1]
has variable
clearing ir...?
REF_37(uint256) -> REF_36[_from_1]
has variable
clearing ir...?
supplySharesOf_11(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_10'])
has variable
clearing ir...?
REF_37(-> supplySharesOf_11) = REF_37 (c)- _amount_1
has variable
typecheckig node...
REF_36(mapping(address => uint256)) -> supplySharesOf_10[_token_1]
Function name: transferLp
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
supplySharesOf
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256
[i]Type for REF_36

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_37(uint256) -> REF_36[_from_1]
Function name: transferLp
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_37

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
supplySharesOf_11(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_10'])
Function name: transferLp
Phi
[i]Type for supplySharesOf

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_37(-> supplySharesOf_11) = REF_37 (c)- _amount_1
Function name: transferLp
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_37 Function: transferLp
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _amount Function: transferLp
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _amount Function: transferLp
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_37 Function: transferLp
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_37

Name: REF_37 Function: transferLp
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_38(mapping(address => uint256)) -> supplySharesOf_11[_token_1]
has variable
clearing ir...?
REF_39(uint256) -> REF_38[_to_1]
has variable
clearing ir...?
supplySharesOf_12(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_11'])
has variable
clearing ir...?
REF_39(-> supplySharesOf_12) = REF_39 (c)+ _amount_1
has variable
typecheckig node...
REF_38(mapping(address => uint256)) -> supplySharesOf_11[_token_1]
Function name: transferLp
INDEX

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_38

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_39(uint256) -> REF_38[_to_1]
Function name: transferLp
INDEX

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_39

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
supplySharesOf_12(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_11'])
Function name: transferLp
Phi
[i]Type for supplySharesOf

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_39(-> supplySharesOf_12) = REF_39 (c)+ _amount_1
Function name: transferLp

Name: REF_39 Function: transferLp
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: transferLp
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_39 Function: transferLp
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_39

Name: REF_39 Function: transferLp
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair.checkAccountHealth(address)(_from_1)
typecheckig node...
INTERNAL_CALL, LendingPair.checkAccountHealth(address)(_from_1)
Internal call...
checkAccountHealth
_from
Function: checkAccountHealth
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: checkAccountHealth
Function Visibility: public
clearning node...
clearing ir...?
_account_1(address) := ϕ(['_from_1', 'msg.sender'])
has variable
[i] _account cleared
clearing ir...?
LIQ_MIN_HEALTH_8(uint256) := ϕ(['LIQ_MIN_HEALTH_0', 'LIQ_MIN_HEALTH_9', 'LIQ_MIN_HEALTH_6'])
has variable
typecheckig node...
_account_1(address) := ϕ(['_from_1', 'msg.sender'])
Function name: checkAccountHealth
Phi
[i]Type for _account

Name: _account Function: checkAccountHealth
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
LIQ_MIN_HEALTH_8(uint256) := ϕ(['LIQ_MIN_HEALTH_0', 'LIQ_MIN_HEALTH_9', 'LIQ_MIN_HEALTH_6'])
Function name: checkAccountHealth
Phi
[i]Type for LIQ_MIN_HEALTH

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_228(uint256) = INTERNAL_CALL, LendingPair.accountHealth(address)(_account_1)
has variable
[i] TMP_228 cleared
clearing ir...?
health_1(uint256) := TMP_228(uint256)
has variable
[i] health cleared
typecheckig node...
TMP_228(uint256) = INTERNAL_CALL, LendingPair.accountHealth(address)(_account_1)
Function name: checkAccountHealth
Internal call...
accountHealth
_account
Function: accountHealth
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', '_account', [], -1]
added
xyz
Function name: accountHealth
Function Visibility: public
clearning node...
clearing ir...?
_account_1(address) := ϕ(['_account_1', '_account_1'])
has variable
[i] _account cleared
clearing ir...?
LIQ_MIN_HEALTH_7(uint256) := ϕ(['LIQ_MIN_HEALTH_0', 'LIQ_MIN_HEALTH_9', 'LIQ_MIN_HEALTH_6'])
has variable
clearing ir...?
debtSharesOf_13(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
has variable
clearing ir...?
lendingController_14(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
clearing ir...?
tokenA_29(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
has variable
clearing ir...?
tokenB_32(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
typecheckig node...
_account_1(address) := ϕ(['_account_1', '_account_1'])
Function name: accountHealth
Phi
[i]Type for _account

Name: _account Function: accountHealth
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
LIQ_MIN_HEALTH_7(uint256) := ϕ(['LIQ_MIN_HEALTH_0', 'LIQ_MIN_HEALTH_9', 'LIQ_MIN_HEALTH_6'])
Function name: accountHealth
Phi
[i]Type for LIQ_MIN_HEALTH

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
debtSharesOf_13(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
Function name: accountHealth
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_14(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: accountHealth
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_29(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: accountHealth
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_32(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: accountHealth
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_45(mapping(address => uint256)) -> debtSharesOf_13[tokenA_29]
has variable
clearing ir...?
REF_46(uint256) -> REF_45[_account_1]
has variable
clearing ir...?
TMP_192(bool) = REF_46 == 0
has variable
[i] TMP_192 cleared
clearing ir...?
REF_47(mapping(address => uint256)) -> debtSharesOf_13[tokenB_32]
has variable
clearing ir...?
REF_48(uint256) -> REF_47[_account_1]
has variable
clearing ir...?
TMP_193(bool) = REF_48 == 0
has variable
[i] TMP_193 cleared
clearing ir...?
TMP_194(bool) = TMP_192 && TMP_193
has variable
[i] TMP_194 cleared
clearing ir...?
CONDITION TMP_194
typecheckig node...
REF_45(mapping(address => uint256)) -> debtSharesOf_13[tokenA_29]
Function name: accountHealth
INDEX

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_45

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_46(uint256) -> REF_45[_account_1]
Function name: accountHealth
INDEX

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_46

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_192(bool) = REF_46 == 0
Function name: accountHealth
[i]Type for TMP_192

Name: TMP_192 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_47(mapping(address => uint256)) -> debtSharesOf_13[tokenB_32]
Function name: accountHealth
INDEX

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_47

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_48(uint256) -> REF_47[_account_1]
Function name: accountHealth
INDEX

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_48

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_193(bool) = REF_48 == 0
Function name: accountHealth
[i]Type for TMP_193

Name: TMP_193 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_194(bool) = TMP_192 && TMP_193
Function name: accountHealth
[i]Type for TMP_194

Name: TMP_194 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_194
Condition...
Conidtion: 
TMP_194
TMP_194
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_4(uint256,uint256) = HIGH_LEVEL_CALL, dest:lendingController_14(ILendingController), function:tokenPrices, arguments:['tokenA_29', 'tokenB_32']  
has variable
clearing ir...?
lendingController_15(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_14', 'lendingController_35'])
has variable
clearing ir...?
tokenA_30(address) := ϕ(['tokenA_29', 'tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
has variable
clearing ir...?
tokenB_33(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_32', 'tokenB_9'])
has variable
clearing ir...?
priceA_1(uint256)= UNPACK TUPLE_4 index: 0 
has variable
[i] priceA cleared
clearing ir...?
priceB_1(uint256)= UNPACK TUPLE_4 index: 1 
has variable
[i] priceB cleared
typecheckig node...
TUPLE_4(uint256,uint256) = HIGH_LEVEL_CALL, dest:lendingController_14(ILendingController), function:tokenPrices, arguments:['tokenA_29', 'tokenB_32']  
Function name: accountHealth
High Call: tokenPrices
func name:tokenPrices
other func name:tokenPrices
TUPLE_4
hlc contract name: LENDINGCONTR func_name: tokenPrices
('c', [1], [-1], 0, None)
tokenA
tokenB
('c', [2], [-1], 0, None)
tokenA
tokenB
wfc len: 2
COPIED
[i]Type for TUPLE_4

Name: TUPLE_4 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_15(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_14', 'lendingController_35'])
Function name: accountHealth
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_30(address) := ϕ(['tokenA_29', 'tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: accountHealth
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_33(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_32', 'tokenB_9'])
Function name: accountHealth
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
priceA_1(uint256)= UNPACK TUPLE_4 index: 0 
Function name: accountHealth
Reading tuple TUPLE_4 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for priceA

Name: priceA Function: accountHealth
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
priceB_1(uint256)= UNPACK TUPLE_4 index: 1 
Function name: accountHealth
Reading tuple TUPLE_4 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for priceB

Name: priceB Function: accountHealth
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_195(uint256) = HIGH_LEVEL_CALL, dest:lendingController_15(ILendingController), function:colFactor, arguments:['tokenA_30']  
has variable
[i] TMP_195 cleared
clearing ir...?
lendingController_16(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_15', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
clearing ir...?
tokenA_31(address) := ϕ(['tokenA_30', 'tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
has variable
clearing ir...?
tokenB_34(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_33', 'tokenB_9'])
has variable
clearing ir...?
colFactorA_1(uint256) := TMP_195(uint256)
has variable
[i] colFactorA cleared
typecheckig node...
TMP_195(uint256) = HIGH_LEVEL_CALL, dest:lendingController_15(ILendingController), function:colFactor, arguments:['tokenA_30']  
Function name: accountHealth
High Call: colFactor
func name:colFactor
other func name:colFactor
TMP_195
hlc contract name: LENDINGCONTR func_name: colFactor
('c', [-1], [-1], 20, None)
tokenA
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 20, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_195

Name: TMP_195 Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef
done.
lendingController_16(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_15', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: accountHealth
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_31(address) := ϕ(['tokenA_30', 'tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: accountHealth
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_34(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_33', 'tokenB_9'])
Function name: accountHealth
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
colFactorA_1(uint256) := TMP_195(uint256)
Function name: accountHealth
asgn

Name: TMP_195 Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef

Name: colFactorA Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for colFactorA

Name: colFactorA Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_196(uint256) = HIGH_LEVEL_CALL, dest:lendingController_16(ILendingController), function:colFactor, arguments:['tokenB_34']  
has variable
[i] TMP_196 cleared
clearing ir...?
lendingController_17(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_16', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
clearing ir...?
tokenA_32(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_31', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
has variable
clearing ir...?
tokenB_35(address) := ϕ(['tokenB_5', 'tokenB_34', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
clearing ir...?
colFactorB_1(uint256) := TMP_196(uint256)
has variable
[i] colFactorB cleared
typecheckig node...
TMP_196(uint256) = HIGH_LEVEL_CALL, dest:lendingController_16(ILendingController), function:colFactor, arguments:['tokenB_34']  
Function name: accountHealth
High Call: colFactor
func name:colFactor
other func name:colFactor
TMP_196
hlc contract name: LENDINGCONTR func_name: colFactor
('c', [-1], [-1], 20, None)
tokenB
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 20, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_196

Name: TMP_196 Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef
done.
lendingController_17(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_16', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: accountHealth
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_32(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_31', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: accountHealth
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_35(address) := ϕ(['tokenB_5', 'tokenB_34', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: accountHealth
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
colFactorB_1(uint256) := TMP_196(uint256)
Function name: accountHealth
asgn

Name: TMP_196 Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef

Name: colFactorB Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for colFactorB

Name: colFactorB Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_197(uint256) = INTERNAL_CALL, LendingPair._supplyBalanceConverted(address,address,address,uint256,uint256)(_account_1,tokenA_32,tokenA_32,priceA_1,priceA_1)
has variable
[i] TMP_197 cleared
clearing ir...?
TMP_198(uint256) = TMP_197 (c)* colFactorA_1
has variable
[i] TMP_198 cleared
clearing ir...?
TMP_199(uint256) = TMP_198 (c)/ 100000000000000000000
has variable
[i] TMP_199 cleared
clearing ir...?
creditA_1(uint256) := TMP_199(uint256)
has variable
[i] creditA cleared
typecheckig node...
TMP_197(uint256) = INTERNAL_CALL, LendingPair._supplyBalanceConverted(address,address,address,uint256,uint256)(_account_1,tokenA_32,tokenA_32,priceA_1,priceA_1)
Function name: accountHealth
Internal call...
_supplyBalanceConverted
_account
tokenA
tokenA
priceA
priceA
Function: _supplyBalanceConverted
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[1], [-1], 0, None, [], -1]
[[1], [-1], 0, None, [], -1]
added
xyz
Function name: _supplyBalanceConverted
Function Visibility: internal
clearning node...
clearing ir...?
_account_1(address) := ϕ(['_account_1', '_account_1'])
has variable
[i] _account cleared
clearing ir...?
_suppliedToken_1(address) := ϕ(['tokenB_36', '_suppliedToken_1', 'tokenA_32'])
has variable
[i] _suppliedToken cleared
clearing ir...?
_returnToken_1(address) := ϕ(['_returnToken_1', 'tokenA_32', 'tokenA_33'])
has variable
[i] _returnToken cleared
clearing ir...?
_supplyPrice_1(uint256) := ϕ(['priceA_1', 'priceB_1', 'supplyPrice_1'])
has variable
[i] _supplyPrice cleared
clearing ir...?
_returnPrice_1(uint256) := ϕ(['priceA_1', 'returnPrice_1'])
has variable
[i] _returnPrice cleared
typecheckig node...
_account_1(address) := ϕ(['_account_1', '_account_1'])
Function name: _supplyBalanceConverted
Phi
[i]Type for _account

Name: _account Function: _supplyBalanceConverted
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_suppliedToken_1(address) := ϕ(['tokenB_36', '_suppliedToken_1', 'tokenA_32'])
Function name: _supplyBalanceConverted
Phi
[i]Type for _suppliedToken

Name: _suppliedToken Function: _supplyBalanceConverted
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_returnToken_1(address) := ϕ(['_returnToken_1', 'tokenA_32', 'tokenA_33'])
Function name: _supplyBalanceConverted
Phi
[i]Type for _returnToken

Name: _returnToken Function: _supplyBalanceConverted
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_supplyPrice_1(uint256) := ϕ(['priceA_1', 'priceB_1', 'supplyPrice_1'])
Function name: _supplyBalanceConverted
Phi
[i]Type for _supplyPrice

Name: _supplyPrice Function: _supplyBalanceConverted
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_returnPrice_1(uint256) := ϕ(['priceA_1', 'returnPrice_1'])
Function name: _supplyBalanceConverted
Phi
[i]Type for _returnPrice

Name: _returnPrice Function: _supplyBalanceConverted
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_330(uint256) = INTERNAL_CALL, LendingPair._supplyOf(address,address)(_suppliedToken_1,_account_1)
has variable
[i] TMP_330 cleared
clearing ir...?
TMP_331(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_suppliedToken_1,_returnToken_1,TMP_330,_supplyPrice_1,_returnPrice_1)
has variable
[i] TMP_331 cleared
clearing ir...?
RETURN TMP_331
typecheckig node...
TMP_330(uint256) = INTERNAL_CALL, LendingPair._supplyOf(address,address)(_suppliedToken_1,_account_1)
Function name: _supplyBalanceConverted
Internal call...
_supplyOf
_suppliedToken
_account
Function: _supplyOf
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
added
xyz
Function name: _supplyOf
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_suppliedToken_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_account_1(address) := ϕ(['msg.sender', '_account_1', '_account_1', '_account_1'])
has variable
[i] _account cleared
clearing ir...?
supplySharesOf_20(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_15', 'supplySharesOf_12', 'supplySharesOf_0', 'supplySharesOf_8', 'supplySharesOf_4', 'supplySharesOf_18', 'supplySharesOf_21', 'supplySharesOf_19'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_suppliedToken_1', '_token_1', '_token_1'])
Function name: _supplyOf
Phi
[i]Type for _token

Name: _token Function: _supplyOf
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_account_1(address) := ϕ(['msg.sender', '_account_1', '_account_1', '_account_1'])
Function name: _supplyOf
Phi
[i]Type for _account

Name: _account Function: _supplyOf
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
supplySharesOf_20(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_15', 'supplySharesOf_12', 'supplySharesOf_0', 'supplySharesOf_8', 'supplySharesOf_4', 'supplySharesOf_18', 'supplySharesOf_21', 'supplySharesOf_19'])
Function name: _supplyOf
Phi
[i]Type for supplySharesOf

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_106(mapping(address => uint256)) -> supplySharesOf_20[_token_1]
has variable
clearing ir...?
REF_107(uint256) -> REF_106[_account_1]
has variable
clearing ir...?
TMP_322(uint256) = INTERNAL_CALL, LendingPair._sharesToSupply(address,uint256)(_token_1,REF_107)
has variable
[i] TMP_322 cleared
clearing ir...?
RETURN TMP_322
typecheckig node...
REF_106(mapping(address => uint256)) -> supplySharesOf_20[_token_1]
Function name: _supplyOf
INDEX

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_106

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_107(uint256) -> REF_106[_account_1]
Function name: _supplyOf
INDEX

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_107

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_322(uint256) = INTERNAL_CALL, LendingPair._sharesToSupply(address,uint256)(_token_1,REF_107)
Function name: _supplyOf
Internal call...
_sharesToSupply
_token
REF_107
Function: _sharesToSupply
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToSupply
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', 'TMP_107', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_shares_1(uint256) := ϕ(['_shares_1', 'REF_107', 'shares_1', 'shares_1'])
has variable
[i] _shares cleared
clearing ir...?
totalSupplyShares_9(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
has variable
clearing ir...?
totalSupplyAmount_13(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', 'TMP_107', '_token_1', '_token_1'])
Function name: _sharesToSupply
Phi
[i]Type for _token

Name: _token Function: _sharesToSupply
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['_shares_1', 'REF_107', 'shares_1', 'shares_1'])
Function name: _sharesToSupply
Phi
[i]Type for _shares

Name: _shares Function: _sharesToSupply
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_9(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
Function name: _sharesToSupply
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_13(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: _sharesToSupply
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_102(uint256) -> totalSupplyShares_9[_token_1]
has variable
clearing ir...?
REF_103(uint256) -> totalSupplyAmount_13[_token_1]
has variable
clearing ir...?
TMP_320(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_102,REF_103,_shares_1)
has variable
[i] TMP_320 cleared
clearing ir...?
RETURN TMP_320
typecheckig node...
REF_102(uint256) -> totalSupplyShares_9[_token_1]
Function name: _sharesToSupply
INDEX

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_102

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_103(uint256) -> totalSupplyAmount_13[_token_1]
Function name: _sharesToSupply
INDEX

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_103

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_320(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_102,REF_103,_shares_1)
Function name: _sharesToSupply
Internal call...
_sharesToAmount
REF_102
REF_103
_shares
Function: _sharesToAmount
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
0
[i]Type for TMP_320

Name: TMP_320 Function: _sharesToSupply
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_320
RETURN

Name: TMP_320 Function: _sharesToSupply
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToSupply":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToSupply

Name: TMP_320 Function: _sharesToSupply
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_322

Name: TMP_322 Function: _supplyOf
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_322
RETURN

Name: TMP_322 Function: _supplyOf
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_supplyOf":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _supplyOf

Name: TMP_322 Function: _supplyOf
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_330

Name: TMP_330 Function: _supplyBalanceConverted
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_331(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_suppliedToken_1,_returnToken_1,TMP_330,_supplyPrice_1,_returnPrice_1)
Function name: _supplyBalanceConverted
Internal call...
_convertTokenValues
_suppliedToken
_returnToken
TMP_330
_supplyPrice
_returnPrice
Function: _convertTokenValues
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', 'TOKA', [], -1]
[[], [], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
added
xyz
Function name: _convertTokenValues
Function Visibility: internal
clearning node...
clearing ir...?
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
has variable
[i] _fromToken cleared
clearing ir...?
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
has variable
[i] _toToken cleared
clearing ir...?
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
has variable
[i] _inputAmount cleared
clearing ir...?
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
has variable
[i] _fromPrice cleared
clearing ir...?
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
has variable
[i] _toPrice cleared
clearing ir...?
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
has variable
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_340 cleared
clearing ir...?
REF_115(uint256) -> decimals_3[_fromToken_1]
has variable
clearing ir...?
TMP_341(uint256) = 10 (c)** REF_115
has variable
[i] TMP_341 cleared
clearing ir...?
TMP_342(uint256) = TMP_340 (c)/ TMP_341
has variable
[i] TMP_342 cleared
clearing ir...?
priceFrom_1(uint256) := TMP_342(uint256)
has variable
[i] priceFrom cleared
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
Error with TMP_342 in function _convertTokenValues
Error with: TMP_342 in function _convertTokenValues
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f28363da5b0>]
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_343 cleared
clearing ir...?
REF_116(uint256) -> decimals_3[_toToken_1]
has variable
clearing ir...?
TMP_344(uint256) = 10 (c)** REF_116
has variable
[i] TMP_344 cleared
clearing ir...?
TMP_345(uint256) = TMP_343 (c)/ TMP_344
has variable
[i] TMP_345 cleared
clearing ir...?
priceTo_1(uint256) := TMP_345(uint256)
has variable
[i] priceTo cleared
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
Error with TMP_345 in function _convertTokenValues
Error with: TMP_345 in function _convertTokenValues
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f28363da5b0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f28363dab80>]
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
XXXXX
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_37 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_convertTokenValues":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _convertTokenValues

Name: TMP_347 Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_331

Name: TMP_331 Function: _supplyBalanceConverted
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_331
RETURN

Name: TMP_331 Function: _supplyBalanceConverted
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_supplyBalanceConverted":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _supplyBalanceConverted

Name: TMP_331 Function: _supplyBalanceConverted
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_197

Name: TMP_197 Function: accountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_198(uint256) = TMP_197 (c)* colFactorA_1
Function name: accountHealth
testing mul...
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: colFactorA Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef

Name: TMP_198 Function: accountHealth
Num: 
Den: 
Norm: 20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_198

Name: TMP_198 Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef
done.
TMP_199(uint256) = TMP_198 (c)/ 100000000000000000000
Function name: accountHealth
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: 20 rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_199 Function: accountHealth
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 100000000000000000000
20
[i]Type for TMP_199

Name: TMP_199 Function: accountHealth
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
creditA_1(uint256) := TMP_199(uint256)
Function name: accountHealth
asgn

Name: TMP_199 Function: accountHealth
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: creditA Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for creditA

Name: creditA Function: accountHealth
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_200(uint256) = INTERNAL_CALL, LendingPair._supplyBalanceConverted(address,address,address,uint256,uint256)(_account_1,tokenB_36,tokenA_33,priceB_1,priceA_1)
has variable
[i] TMP_200 cleared
clearing ir...?
TMP_201(uint256) = TMP_200 (c)* colFactorB_1
has variable
[i] TMP_201 cleared
clearing ir...?
TMP_202(uint256) = TMP_201 (c)/ 100000000000000000000
has variable
[i] TMP_202 cleared
clearing ir...?
creditB_1(uint256) := TMP_202(uint256)
has variable
[i] creditB cleared
typecheckig node...
TMP_200(uint256) = INTERNAL_CALL, LendingPair._supplyBalanceConverted(address,address,address,uint256,uint256)(_account_1,tokenB_36,tokenA_33,priceB_1,priceA_1)
Function name: accountHealth
Internal call...
_supplyBalanceConverted
_account
tokenB
tokenA
priceB
priceA
Function: _supplyBalanceConverted
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_account', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[1], [-1], 0, None, [], -1]
[[1], [-1], 0, None, [], -1]
added
xyz
Function name: _supplyBalanceConverted
Function Visibility: internal
clearning node...
clearing ir...?
_account_1(address) := ϕ(['_account_1', '_account_1'])
has variable
[i] _account cleared
clearing ir...?
_suppliedToken_1(address) := ϕ(['tokenB_36', '_suppliedToken_1', 'tokenA_32'])
has variable
[i] _suppliedToken cleared
clearing ir...?
_returnToken_1(address) := ϕ(['_returnToken_1', 'tokenA_32', 'tokenA_33'])
has variable
[i] _returnToken cleared
clearing ir...?
_supplyPrice_1(uint256) := ϕ(['priceA_1', 'priceB_1', 'supplyPrice_1'])
has variable
[i] _supplyPrice cleared
clearing ir...?
_returnPrice_1(uint256) := ϕ(['priceA_1', 'returnPrice_1'])
has variable
[i] _returnPrice cleared
typecheckig node...
_account_1(address) := ϕ(['_account_1', '_account_1'])
Function name: _supplyBalanceConverted
Phi
[i]Type for _account

Name: _account Function: _supplyBalanceConverted
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_suppliedToken_1(address) := ϕ(['tokenB_36', '_suppliedToken_1', 'tokenA_32'])
Function name: _supplyBalanceConverted
Phi
[i]Type for _suppliedToken

Name: _suppliedToken Function: _supplyBalanceConverted
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_returnToken_1(address) := ϕ(['_returnToken_1', 'tokenA_32', 'tokenA_33'])
Function name: _supplyBalanceConverted
Phi
[i]Type for _returnToken

Name: _returnToken Function: _supplyBalanceConverted
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_supplyPrice_1(uint256) := ϕ(['priceA_1', 'priceB_1', 'supplyPrice_1'])
Function name: _supplyBalanceConverted
Phi
[i]Type for _supplyPrice

Name: _supplyPrice Function: _supplyBalanceConverted
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_returnPrice_1(uint256) := ϕ(['priceA_1', 'returnPrice_1'])
Function name: _supplyBalanceConverted
Phi
[i]Type for _returnPrice

Name: _returnPrice Function: _supplyBalanceConverted
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_330(uint256) = INTERNAL_CALL, LendingPair._supplyOf(address,address)(_suppliedToken_1,_account_1)
has variable
[i] TMP_330 cleared
clearing ir...?
TMP_331(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_suppliedToken_1,_returnToken_1,TMP_330,_supplyPrice_1,_returnPrice_1)
has variable
[i] TMP_331 cleared
clearing ir...?
RETURN TMP_331
typecheckig node...
TMP_330(uint256) = INTERNAL_CALL, LendingPair._supplyOf(address,address)(_suppliedToken_1,_account_1)
Function name: _supplyBalanceConverted
Internal call...
_supplyOf
_suppliedToken
_account
Function: _supplyOf
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', '_account', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
0

Name: PIC_36 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_330 Function: _supplyBalanceConverted
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_330

Name: TMP_330 Function: _supplyBalanceConverted
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_331(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_suppliedToken_1,_returnToken_1,TMP_330,_supplyPrice_1,_returnPrice_1)
Function name: _supplyBalanceConverted
Internal call...
_convertTokenValues
_suppliedToken
_returnToken
TMP_330
_supplyPrice
_returnPrice
Function: _convertTokenValues
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[], [], 'u', None, [], -1]
cur_param: [[1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', 'TOKA', [], -1]
[[], [], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
added
xyz
Function name: _convertTokenValues
Function Visibility: internal
clearning node...
clearing ir...?
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
has variable
[i] _fromToken cleared
clearing ir...?
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
has variable
[i] _toToken cleared
clearing ir...?
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
has variable
[i] _inputAmount cleared
clearing ir...?
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
has variable
[i] _fromPrice cleared
clearing ir...?
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
has variable
[i] _toPrice cleared
clearing ir...?
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
has variable
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_340 cleared
clearing ir...?
REF_115(uint256) -> decimals_3[_fromToken_1]
has variable
clearing ir...?
TMP_341(uint256) = 10 (c)** REF_115
has variable
[i] TMP_341 cleared
clearing ir...?
TMP_342(uint256) = TMP_340 (c)/ TMP_341
has variable
[i] TMP_342 cleared
clearing ir...?
priceFrom_1(uint256) := TMP_342(uint256)
has variable
[i] priceFrom cleared
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_343 cleared
clearing ir...?
REF_116(uint256) -> decimals_3[_toToken_1]
has variable
clearing ir...?
TMP_344(uint256) = 10 (c)** REF_116
has variable
[i] TMP_344 cleared
clearing ir...?
TMP_345(uint256) = TMP_343 (c)/ TMP_344
has variable
[i] TMP_345 cleared
clearing ir...?
priceTo_1(uint256) := TMP_345(uint256)
has variable
[i] priceTo cleared
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
XXXXX
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_40 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
XXXXX
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_41 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: _convertTokenValues

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_331

Name: TMP_331 Function: _supplyBalanceConverted
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_331(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_suppliedToken_1,_returnToken_1,TMP_330,_supplyPrice_1,_returnPrice_1)
XXXXX
RETURN TMP_331
RETURN

Name: TMP_331 Function: _supplyBalanceConverted
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_supplyBalanceConverted":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _supplyBalanceConverted

Name: TMP_331 Function: _supplyBalanceConverted
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_200

Name: TMP_200 Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_201(uint256) = TMP_200 (c)* colFactorB_1
Function name: accountHealth
testing mul...
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_200 Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_201 Function: accountHealth
Num: 
Den: 
Norm: 20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_201

Name: TMP_201 Function: accountHealth
Num: 2
Den: 1
Norm: 20
LF: None
Fields: 
Finance Type: undef
done.
TMP_202(uint256) = TMP_201 (c)/ 100000000000000000000
Function name: accountHealth
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: 20 rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_202 Function: accountHealth
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_201 Function: accountHealth
Num: 2
Den: 1
Norm: 20
LF: None
Fields: 
Finance Type: undef

Name: TMP_202 Function: accountHealth
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
creditB_1(uint256) := TMP_202(uint256)
Function name: accountHealth
asgn

Name: TMP_202 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: creditB Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for creditB

Name: creditB Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_203(uint256) = INTERNAL_CALL, LendingPair._supplyCreditUni(address,address,uint256,uint256,uint256,uint256)(_account_1,tokenA_34,priceA_1,priceB_1,colFactorA_1,colFactorB_1)
has variable
[i] TMP_203 cleared
clearing ir...?
tokenA_35(address) := ϕ(['tokenA_47'])
has variable
clearing ir...?
tokenB_38(address) := ϕ(['tokenB_52'])
has variable
clearing ir...?
creditUni_1(uint256) := TMP_203(uint256)
has variable
[i] creditUni cleared
typecheckig node...
TMP_203(uint256) = INTERNAL_CALL, LendingPair._supplyCreditUni(address,address,uint256,uint256,uint256,uint256)(_account_1,tokenA_34,priceA_1,priceB_1,colFactorA_1,colFactorB_1)
Function name: accountHealth
Internal call...
_supplyCreditUni
_account
tokenA
priceA
priceB
colFactorA
colFactorB
Function: _supplyCreditUni
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: 20
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: 20
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: 20
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: 20
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[1], [-1], 0, None, [], -1]
[[2], [-1], 0, None, [], -1]
[[-1], [-1], 20, None, [], -1]
[[-1], [-1], 20, None, [], -1]
added
xyz
Function name: _supplyCreditUni
Function Visibility: internal
clearning node...
clearing ir...?
_account_1(address) := ϕ(['_account_1'])
has variable
[i] _account cleared
clearing ir...?
_returnToken_1(address) := ϕ(['tokenA_34'])
has variable
[i] _returnToken cleared
clearing ir...?
_priceA_1(uint256) := ϕ(['priceA_1'])
has variable
[i] _priceA cleared
clearing ir...?
_priceB_1(uint256) := ϕ(['priceB_1'])
has variable
[i] _priceB cleared
clearing ir...?
_colFactorA_1(uint256) := ϕ(['colFactorA_1'])
has variable
[i] _colFactorA cleared
clearing ir...?
_colFactorB_1(uint256) := ϕ(['colFactorB_1'])
has variable
[i] _colFactorB cleared
clearing ir...?
uniPosition_17(mapping(address => uint256)) := ϕ(['uniPosition_0', 'uniPosition_4', 'uniPosition_13', 'uniPosition_6', 'uniPosition_17', 'uniPosition_18', 'uniPosition_7', 'uniPosition_16'])
has variable
clearing ir...?
uniV3Helper_11(IUniswapV3Helper) := ϕ(['uniV3Helper_12', 'uniV3Helper_1', 'uniV3Helper_14', 'uniV3Helper_0', 'uniV3Helper_10', 'uniV3Helper_7'])
has variable
clearing ir...?
tokenA_45(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
has variable
clearing ir...?
tokenB_49(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
typecheckig node...
_account_1(address) := ϕ(['_account_1'])
Function name: _supplyCreditUni
Phi
[i]Type for _account

Name: _account Function: _supplyCreditUni
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_returnToken_1(address) := ϕ(['tokenA_34'])
Function name: _supplyCreditUni
Phi
[i]Type for _returnToken

Name: _returnToken Function: _supplyCreditUni
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_priceA_1(uint256) := ϕ(['priceA_1'])
Function name: _supplyCreditUni
Phi
[i]Type for _priceA

Name: _priceA Function: _supplyCreditUni
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_priceB_1(uint256) := ϕ(['priceB_1'])
Function name: _supplyCreditUni
Phi
[i]Type for _priceB

Name: _priceB Function: _supplyCreditUni
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_colFactorA_1(uint256) := ϕ(['colFactorA_1'])
Function name: _supplyCreditUni
Phi
[i]Type for _colFactorA

Name: _colFactorA Function: _supplyCreditUni
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_colFactorB_1(uint256) := ϕ(['colFactorB_1'])
Function name: _supplyCreditUni
Phi
[i]Type for _colFactorB

Name: _colFactorB Function: _supplyCreditUni
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniPosition_17(mapping(address => uint256)) := ϕ(['uniPosition_0', 'uniPosition_4', 'uniPosition_13', 'uniPosition_6', 'uniPosition_17', 'uniPosition_18', 'uniPosition_7', 'uniPosition_16'])
Function name: _supplyCreditUni
Phi
[i]Type for uniPosition

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniV3Helper_11(IUniswapV3Helper) := ϕ(['uniV3Helper_12', 'uniV3Helper_1', 'uniV3Helper_14', 'uniV3Helper_0', 'uniV3Helper_10', 'uniV3Helper_7'])
Function name: _supplyCreditUni
Phi
[i]Type for uniV3Helper

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
done.
tokenA_45(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: _supplyCreditUni
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_49(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: _supplyCreditUni
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_112(uint256) -> uniPosition_17[_account_1]
has variable
clearing ir...?
TMP_332(bool) = REF_112 > 0
has variable
[i] TMP_332 cleared
clearing ir...?
CONDITION TMP_332
typecheckig node...
REF_112(uint256) -> uniPosition_17[_account_1]
Function name: _supplyCreditUni
INDEX

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_112

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_332(bool) = REF_112 > 0
Function name: _supplyCreditUni
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_332

Name: TMP_332 Function: _supplyCreditUni
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_332
Condition...
Conidtion: 
TMP_332
TMP_332
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_114(uint256) -> uniPosition_17[_account_1]
has variable
clearing ir...?
TUPLE_12(uint256,uint256) = HIGH_LEVEL_CALL, dest:uniV3Helper_11(IUniswapV3Helper), function:positionAmounts, arguments:['REF_114', '_priceA_1', '_priceB_1']  
has variable
clearing ir...?
uniPosition_18(mapping(address => uint256)) := ϕ(['uniPosition_4', 'uniPosition_13', 'uniPosition_6', 'uniPosition_17', 'uniPosition_18', 'uniPosition_7', 'uniPosition_16'])
has variable
clearing ir...?
uniV3Helper_12(IUniswapV3Helper) := ϕ(['uniV3Helper_12', 'uniV3Helper_1', 'uniV3Helper_14', 'uniV3Helper_10', 'uniV3Helper_7', 'uniV3Helper_11'])
has variable
clearing ir...?
tokenA_46(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_45', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
has variable
clearing ir...?
tokenB_50(address) := ϕ(['tokenB_5', 'tokenB_49', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
clearing ir...?
amountA_1(uint256)= UNPACK TUPLE_12 index: 0 
has variable
[i] amountA cleared
clearing ir...?
amountB_1(uint256)= UNPACK TUPLE_12 index: 1 
has variable
[i] amountB cleared
typecheckig node...
REF_114(uint256) -> uniPosition_17[_account_1]
Function name: _supplyCreditUni
INDEX

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_114

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TUPLE_12(uint256,uint256) = HIGH_LEVEL_CALL, dest:uniV3Helper_11(IUniswapV3Helper), function:positionAmounts, arguments:['REF_114', '_priceA_1', '_priceB_1']  
Function name: _supplyCreditUni
High Call: positionAmounts
func name:positionAmounts
other func name:positionAmounts
TUPLE_12
hlc contract name: V3HELPER func_name: positionAmounts
('c', [-1], [-1], 0, None)
REF_114
_priceA
_priceB
('c', [-1], [-1], 0, None)
REF_114
_priceA
_priceB
wfc len: 2
COPIED
[i]Type for TUPLE_12

Name: TUPLE_12 Function: _supplyCreditUni
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniPosition_18(mapping(address => uint256)) := ϕ(['uniPosition_4', 'uniPosition_13', 'uniPosition_6', 'uniPosition_17', 'uniPosition_18', 'uniPosition_7', 'uniPosition_16'])
Function name: _supplyCreditUni
Phi
[i]Type for uniPosition

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniV3Helper_12(IUniswapV3Helper) := ϕ(['uniV3Helper_12', 'uniV3Helper_1', 'uniV3Helper_14', 'uniV3Helper_10', 'uniV3Helper_7', 'uniV3Helper_11'])
Function name: _supplyCreditUni
Phi
[i]Type for uniV3Helper

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
done.
tokenA_46(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_45', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: _supplyCreditUni
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_50(address) := ϕ(['tokenB_5', 'tokenB_49', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: _supplyCreditUni
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
amountA_1(uint256)= UNPACK TUPLE_12 index: 0 
Function name: _supplyCreditUni
Reading tuple TUPLE_12 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for amountA

Name: amountA Function: _supplyCreditUni
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
amountB_1(uint256)= UNPACK TUPLE_12 index: 1 
Function name: _supplyCreditUni
Reading tuple TUPLE_12 index 1
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for amountB

Name: amountB Function: _supplyCreditUni
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_333(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(tokenA_46,_returnToken_1,amountA_1,_priceA_1,_priceB_1)
has variable
[i] TMP_333 cleared
clearing ir...?
supplyA_1(uint256) := TMP_333(uint256)
has variable
[i] supplyA cleared
typecheckig node...
TMP_333(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(tokenA_46,_returnToken_1,amountA_1,_priceA_1,_priceB_1)
Function name: _supplyCreditUni
Internal call...
_convertTokenValues
tokenA
_returnToken
amountA
_priceA
_priceB
Function: _convertTokenValues
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [2]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', 'TOKA', [], -1]
[[], [], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
added
xyz
Function name: _convertTokenValues
Function Visibility: internal
clearning node...
clearing ir...?
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
has variable
[i] _fromToken cleared
clearing ir...?
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
has variable
[i] _toToken cleared
clearing ir...?
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
has variable
[i] _inputAmount cleared
clearing ir...?
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
has variable
[i] _fromPrice cleared
clearing ir...?
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
has variable
[i] _toPrice cleared
clearing ir...?
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
has variable
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_340 cleared
clearing ir...?
REF_115(uint256) -> decimals_3[_fromToken_1]
has variable
clearing ir...?
TMP_341(uint256) = 10 (c)** REF_115
has variable
[i] TMP_341 cleared
clearing ir...?
TMP_342(uint256) = TMP_340 (c)/ TMP_341
has variable
[i] TMP_342 cleared
clearing ir...?
priceFrom_1(uint256) := TMP_342(uint256)
has variable
[i] priceFrom cleared
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_343 cleared
clearing ir...?
REF_116(uint256) -> decimals_3[_toToken_1]
has variable
clearing ir...?
TMP_344(uint256) = 10 (c)** REF_116
has variable
[i] TMP_344 cleared
clearing ir...?
TMP_345(uint256) = TMP_343 (c)/ TMP_344
has variable
[i] TMP_345 cleared
clearing ir...?
priceTo_1(uint256) := TMP_345(uint256)
has variable
[i] priceTo cleared
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_44 Function: None
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_45 Function: None
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: _convertTokenValues

Name: TMP_347 Function: _convertTokenValues
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_333

Name: TMP_333 Function: _supplyCreditUni
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_333(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(tokenA_46,_returnToken_1,amountA_1,_priceA_1,_priceB_1)
XXXXX
supplyA_1(uint256) := TMP_333(uint256)
Function name: _supplyCreditUni
asgn

Name: TMP_333 Function: _supplyCreditUni
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: supplyA Function: _supplyCreditUni
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for supplyA

Name: supplyA Function: _supplyCreditUni
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_334(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(tokenB_51,_returnToken_1,amountB_1,_priceB_1,_priceB_1)
has variable
[i] TMP_334 cleared
clearing ir...?
supplyB_1(uint256) := TMP_334(uint256)
has variable
[i] supplyB cleared
typecheckig node...
TMP_334(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(tokenB_51,_returnToken_1,amountB_1,_priceB_1,_priceB_1)
Function name: _supplyCreditUni
Internal call...
_convertTokenValues
tokenB
_returnToken
amountB
_priceB
_priceB
Function: _convertTokenValues
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [2]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', 'TOKA', [], -1]
[[], [], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
added
xyz
Function name: _convertTokenValues
Function Visibility: internal
clearning node...
clearing ir...?
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
has variable
[i] _fromToken cleared
clearing ir...?
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
has variable
[i] _toToken cleared
clearing ir...?
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
has variable
[i] _inputAmount cleared
clearing ir...?
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
has variable
[i] _fromPrice cleared
clearing ir...?
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
has variable
[i] _toPrice cleared
clearing ir...?
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
has variable
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_340 cleared
clearing ir...?
REF_115(uint256) -> decimals_3[_fromToken_1]
has variable
clearing ir...?
TMP_341(uint256) = 10 (c)** REF_115
has variable
[i] TMP_341 cleared
clearing ir...?
TMP_342(uint256) = TMP_340 (c)/ TMP_341
has variable
[i] TMP_342 cleared
clearing ir...?
priceFrom_1(uint256) := TMP_342(uint256)
has variable
[i] priceFrom cleared
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_343 cleared
clearing ir...?
REF_116(uint256) -> decimals_3[_toToken_1]
has variable
clearing ir...?
TMP_344(uint256) = 10 (c)** REF_116
has variable
[i] TMP_344 cleared
clearing ir...?
TMP_345(uint256) = TMP_343 (c)/ TMP_344
has variable
[i] TMP_345 cleared
clearing ir...?
priceTo_1(uint256) := TMP_345(uint256)
has variable
[i] priceTo cleared
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_47 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_48 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: _convertTokenValues

Name: TMP_347 Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_334

Name: TMP_334 Function: _supplyCreditUni
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_334(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(tokenB_51,_returnToken_1,amountB_1,_priceB_1,_priceB_1)
XXXXX
supplyB_1(uint256) := TMP_334(uint256)
Function name: _supplyCreditUni
asgn

Name: TMP_334 Function: _supplyCreditUni
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: supplyB Function: _supplyCreditUni
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for supplyB

Name: supplyB Function: _supplyCreditUni
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_335(uint256) = supplyA_1 (c)* _colFactorA_1
has variable
[i] TMP_335 cleared
clearing ir...?
TMP_336(uint256) = TMP_335 (c)/ 100000000000000000000
has variable
[i] TMP_336 cleared
clearing ir...?
creditA_1(uint256) := TMP_336(uint256)
has variable
[i] creditA cleared
typecheckig node...
TMP_335(uint256) = supplyA_1 (c)* _colFactorA_1
Function name: _supplyCreditUni
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: supplyA Function: _supplyCreditUni
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_335 Function: _supplyCreditUni
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_335

Name: TMP_335 Function: _supplyCreditUni
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_336(uint256) = TMP_335 (c)/ 100000000000000000000
Function name: _supplyCreditUni
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_336 Function: _supplyCreditUni
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: TMP_335 Function: _supplyCreditUni
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_336 Function: _supplyCreditUni
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_336

Name: TMP_336 Function: _supplyCreditUni
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
creditA_1(uint256) := TMP_336(uint256)
Function name: _supplyCreditUni
asgn

Name: TMP_336 Function: _supplyCreditUni
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: creditA Function: _supplyCreditUni
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for creditA

Name: creditA Function: _supplyCreditUni
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_337(uint256) = supplyB_1 (c)* _colFactorB_1
has variable
[i] TMP_337 cleared
clearing ir...?
TMP_338(uint256) = TMP_337 (c)/ 100000000000000000000
has variable
[i] TMP_338 cleared
clearing ir...?
creditB_1(uint256) := TMP_338(uint256)
has variable
[i] creditB cleared
typecheckig node...
TMP_337(uint256) = supplyB_1 (c)* _colFactorB_1
Function name: _supplyCreditUni
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _colFactorB Function: _supplyCreditUni
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_337 Function: _supplyCreditUni
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_337

Name: TMP_337 Function: _supplyCreditUni
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_338(uint256) = TMP_337 (c)/ 100000000000000000000
Function name: _supplyCreditUni
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_338 Function: _supplyCreditUni
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef
val: 100000000000000000000
20
[i]Type for TMP_338

Name: TMP_338 Function: _supplyCreditUni
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
creditB_1(uint256) := TMP_338(uint256)
Function name: _supplyCreditUni
asgn

Name: TMP_338 Function: _supplyCreditUni
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: creditB Function: _supplyCreditUni
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for creditB

Name: creditB Function: _supplyCreditUni
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_339(uint256) = creditA_1 (c)+ creditB_1
has variable
[i] TMP_339 cleared
clearing ir...?
RETURN TMP_339
typecheckig node...
TMP_339(uint256) = creditA_1 (c)+ creditB_1
Function name: _supplyCreditUni

Name: TMP_339 Function: _supplyCreditUni
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: -20 rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: creditA Function: _supplyCreditUni
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: TMP_339 Function: _supplyCreditUni
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_339

Name: TMP_339 Function: _supplyCreditUni
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_339
RETURN

Name: TMP_339 Function: _supplyCreditUni
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
RETURN 0
typecheckig node...
RETURN 0
RETURN
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_supplyCreditUni":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _supplyCreditUni

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for TMP_203

Name: TMP_203 Function: accountHealth
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
tokenA_35(address) := ϕ(['tokenA_47'])
Function name: accountHealth
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_38(address) := ϕ(['tokenB_52'])
Function name: accountHealth
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
creditUni_1(uint256) := TMP_203(uint256)
Function name: accountHealth
asgn

Name: TMP_203 Function: accountHealth
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: creditUni Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for creditUni

Name: creditUni Function: accountHealth
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_204(uint256) = creditA_1 (c)+ creditB_1
has variable
[i] TMP_204 cleared
clearing ir...?
TMP_205(uint256) = TMP_204 (c)+ creditUni_1
has variable
[i] TMP_205 cleared
clearing ir...?
totalAccountSupply_1(uint256) := TMP_205(uint256)
has variable
[i] totalAccountSupply cleared
typecheckig node...
TMP_204(uint256) = creditA_1 (c)+ creditB_1
Function name: accountHealth

Name: TMP_204 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: creditB Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_204 Function: accountHealth
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_204

Name: TMP_204 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_205(uint256) = TMP_204 (c)+ creditUni_1
Function name: accountHealth

Name: TMP_205 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_204 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_205 Function: accountHealth
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_205

Name: TMP_205 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalAccountSupply_1(uint256) := TMP_205(uint256)
Function name: accountHealth
asgn

Name: TMP_205 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: totalAccountSupply Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalAccountSupply

Name: totalAccountSupply Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_206(uint256) = INTERNAL_CALL, LendingPair._borrowBalanceConverted(address,address,address,uint256,uint256)(_account_1,tokenA_35,tokenA_35,priceA_1,priceA_1)
has variable
[i] TMP_206 cleared
clearing ir...?
TMP_207(uint256) = INTERNAL_CALL, LendingPair._borrowBalanceConverted(address,address,address,uint256,uint256)(_account_1,tokenB_39,tokenA_36,priceB_1,priceA_1)
has variable
[i] TMP_207 cleared
clearing ir...?
TMP_208(uint256) = TMP_206 (c)+ TMP_207
has variable
[i] TMP_208 cleared
clearing ir...?
totalAccountBorrow_1(uint256) := TMP_208(uint256)
has variable
[i] totalAccountBorrow cleared
typecheckig node...
TMP_206(uint256) = INTERNAL_CALL, LendingPair._borrowBalanceConverted(address,address,address,uint256,uint256)(_account_1,tokenA_35,tokenA_35,priceA_1,priceA_1)
Function name: accountHealth
Internal call...
_borrowBalanceConverted
_account
tokenA
tokenA
priceA
priceA
Function: _borrowBalanceConverted
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[1], [-1], 0, None, [], -1]
[[1], [-1], 0, None, [], -1]
added
xyz
Function name: _borrowBalanceConverted
Function Visibility: internal
clearning node...
clearing ir...?
_account_1(address) := ϕ(['_account_1', '_account_1'])
has variable
[i] _account cleared
clearing ir...?
_borrowedToken_1(address) := ϕ(['tokenA_35', 'tokenB_39', '_borrowedToken_1'])
has variable
[i] _borrowedToken cleared
clearing ir...?
_returnToken_1(address) := ϕ(['tokenA_36', '_returnToken_1', 'tokenA_35'])
has variable
[i] _returnToken cleared
clearing ir...?
_borrowPrice_1(uint256) := ϕ(['borrowPrice_1', 'priceA_1', 'priceB_1'])
has variable
[i] _borrowPrice cleared
clearing ir...?
_returnPrice_1(uint256) := ϕ(['priceA_1', 'returnPrice_1'])
has variable
[i] _returnPrice cleared
typecheckig node...
_account_1(address) := ϕ(['_account_1', '_account_1'])
Function name: _borrowBalanceConverted
Phi
[i]Type for _account

Name: _account Function: _borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_borrowedToken_1(address) := ϕ(['tokenA_35', 'tokenB_39', '_borrowedToken_1'])
Function name: _borrowBalanceConverted
Phi
[i]Type for _borrowedToken

Name: _borrowedToken Function: _borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_returnToken_1(address) := ϕ(['tokenA_36', '_returnToken_1', 'tokenA_35'])
Function name: _borrowBalanceConverted
Phi
[i]Type for _returnToken

Name: _returnToken Function: _borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_borrowPrice_1(uint256) := ϕ(['borrowPrice_1', 'priceA_1', 'priceB_1'])
Function name: _borrowBalanceConverted
Phi
[i]Type for _borrowPrice

Name: _borrowPrice Function: _borrowBalanceConverted
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_returnPrice_1(uint256) := ϕ(['priceA_1', 'returnPrice_1'])
Function name: _borrowBalanceConverted
Phi
[i]Type for _returnPrice

Name: _returnPrice Function: _borrowBalanceConverted
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_328(uint256) = INTERNAL_CALL, LendingPair._debtOf(address,address)(_borrowedToken_1,_account_1)
has variable
[i] TMP_328 cleared
clearing ir...?
TMP_329(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_borrowedToken_1,_returnToken_1,TMP_328,_borrowPrice_1,_returnPrice_1)
has variable
[i] TMP_329 cleared
clearing ir...?
RETURN TMP_329
typecheckig node...
TMP_328(uint256) = INTERNAL_CALL, LendingPair._debtOf(address,address)(_borrowedToken_1,_account_1)
Function name: _borrowBalanceConverted
Internal call...
_debtOf
_borrowedToken
_account
Function: _debtOf
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
added
xyz
Function name: _debtOf
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_borrowedToken_1', '_token_1', '_repayToken_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_account_1(address) := ϕ(['_account_1', '_account_1', '_account_1', '_account_1', '_account_1'])
has variable
[i] _account cleared
clearing ir...?
debtSharesOf_21(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_borrowedToken_1', '_token_1', '_repayToken_1', '_token_1'])
Function name: _debtOf
Phi
[i]Type for _token

Name: _token Function: _debtOf
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_account_1(address) := ϕ(['_account_1', '_account_1', '_account_1', '_account_1', '_account_1'])
Function name: _debtOf
Phi
[i]Type for _account

Name: _account Function: _debtOf
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
debtSharesOf_21(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
Function name: _debtOf
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_104(mapping(address => uint256)) -> debtSharesOf_21[_token_1]
has variable
clearing ir...?
REF_105(uint256) -> REF_104[_account_1]
has variable
clearing ir...?
TMP_321(uint256) = INTERNAL_CALL, LendingPair._sharesToDebt(address,uint256)(_token_1,REF_105)
has variable
[i] TMP_321 cleared
clearing ir...?
RETURN TMP_321
typecheckig node...
REF_104(mapping(address => uint256)) -> debtSharesOf_21[_token_1]
Function name: _debtOf
INDEX

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_104

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_105(uint256) -> REF_104[_account_1]
Function name: _debtOf
INDEX

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_105

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_321(uint256) = INTERNAL_CALL, LendingPair._sharesToDebt(address,uint256)(_token_1,REF_105)
Function name: _debtOf
Internal call...
_sharesToDebt
_token
REF_105
Function: _sharesToDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_15 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_321 Function: _debtOf
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_321

Name: TMP_321 Function: _debtOf
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_321
RETURN

Name: TMP_321 Function: _debtOf
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_debtOf":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _debtOf

Name: TMP_321 Function: _debtOf
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_328

Name: TMP_328 Function: _borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_329(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_borrowedToken_1,_returnToken_1,TMP_328,_borrowPrice_1,_returnPrice_1)
Function name: _borrowBalanceConverted
Internal call...
_convertTokenValues
_borrowedToken
_returnToken
TMP_328
_borrowPrice
_returnPrice
Function: _convertTokenValues
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[], [], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', 'TOKA', [], -1]
[[], [], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
added
xyz
Function name: _convertTokenValues
Function Visibility: internal
clearning node...
clearing ir...?
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
has variable
[i] _fromToken cleared
clearing ir...?
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
has variable
[i] _toToken cleared
clearing ir...?
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
has variable
[i] _inputAmount cleared
clearing ir...?
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
has variable
[i] _fromPrice cleared
clearing ir...?
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
has variable
[i] _toPrice cleared
clearing ir...?
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
has variable
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_340 cleared
clearing ir...?
REF_115(uint256) -> decimals_3[_fromToken_1]
has variable
clearing ir...?
TMP_341(uint256) = 10 (c)** REF_115
has variable
[i] TMP_341 cleared
clearing ir...?
TMP_342(uint256) = TMP_340 (c)/ TMP_341
has variable
[i] TMP_342 cleared
clearing ir...?
priceFrom_1(uint256) := TMP_342(uint256)
has variable
[i] priceFrom cleared
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_343 cleared
clearing ir...?
REF_116(uint256) -> decimals_3[_toToken_1]
has variable
clearing ir...?
TMP_344(uint256) = 10 (c)** REF_116
has variable
[i] TMP_344 cleared
clearing ir...?
TMP_345(uint256) = TMP_343 (c)/ TMP_344
has variable
[i] TMP_345 cleared
clearing ir...?
priceTo_1(uint256) := TMP_345(uint256)
has variable
[i] priceTo cleared
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_52 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_53 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: _convertTokenValues

Name: TMP_347 Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_329

Name: TMP_329 Function: _borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_329(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_borrowedToken_1,_returnToken_1,TMP_328,_borrowPrice_1,_returnPrice_1)
XXXXX
RETURN TMP_329
RETURN

Name: TMP_329 Function: _borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_borrowBalanceConverted":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _borrowBalanceConverted

Name: TMP_329 Function: _borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_206

Name: TMP_206 Function: accountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_207(uint256) = INTERNAL_CALL, LendingPair._borrowBalanceConverted(address,address,address,uint256,uint256)(_account_1,tokenB_39,tokenA_36,priceB_1,priceA_1)
Function name: accountHealth
Internal call...
_borrowBalanceConverted
_account
tokenB
tokenA
priceB
priceA
Function: _borrowBalanceConverted
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_account', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[1], [-1], 0, None, [], -1]
[[1], [-1], 0, None, [], -1]
added
xyz
Function name: _borrowBalanceConverted
Function Visibility: internal
clearning node...
clearing ir...?
_account_1(address) := ϕ(['_account_1', '_account_1'])
has variable
[i] _account cleared
clearing ir...?
_borrowedToken_1(address) := ϕ(['tokenA_35', 'tokenB_39', '_borrowedToken_1'])
has variable
[i] _borrowedToken cleared
clearing ir...?
_returnToken_1(address) := ϕ(['tokenA_36', '_returnToken_1', 'tokenA_35'])
has variable
[i] _returnToken cleared
clearing ir...?
_borrowPrice_1(uint256) := ϕ(['borrowPrice_1', 'priceA_1', 'priceB_1'])
has variable
[i] _borrowPrice cleared
clearing ir...?
_returnPrice_1(uint256) := ϕ(['priceA_1', 'returnPrice_1'])
has variable
[i] _returnPrice cleared
typecheckig node...
_account_1(address) := ϕ(['_account_1', '_account_1'])
Function name: _borrowBalanceConverted
Phi
[i]Type for _account

Name: _account Function: _borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_borrowedToken_1(address) := ϕ(['tokenA_35', 'tokenB_39', '_borrowedToken_1'])
Function name: _borrowBalanceConverted
Phi
[i]Type for _borrowedToken

Name: _borrowedToken Function: _borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_returnToken_1(address) := ϕ(['tokenA_36', '_returnToken_1', 'tokenA_35'])
Function name: _borrowBalanceConverted
Phi
[i]Type for _returnToken

Name: _returnToken Function: _borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_borrowPrice_1(uint256) := ϕ(['borrowPrice_1', 'priceA_1', 'priceB_1'])
Function name: _borrowBalanceConverted
Phi
[i]Type for _borrowPrice

Name: _borrowPrice Function: _borrowBalanceConverted
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_returnPrice_1(uint256) := ϕ(['priceA_1', 'returnPrice_1'])
Function name: _borrowBalanceConverted
Phi
[i]Type for _returnPrice

Name: _returnPrice Function: _borrowBalanceConverted
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_328(uint256) = INTERNAL_CALL, LendingPair._debtOf(address,address)(_borrowedToken_1,_account_1)
has variable
[i] TMP_328 cleared
clearing ir...?
TMP_329(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_borrowedToken_1,_returnToken_1,TMP_328,_borrowPrice_1,_returnPrice_1)
has variable
[i] TMP_329 cleared
clearing ir...?
RETURN TMP_329
typecheckig node...
TMP_328(uint256) = INTERNAL_CALL, LendingPair._debtOf(address,address)(_borrowedToken_1,_account_1)
Function name: _borrowBalanceConverted
Internal call...
_debtOf
_borrowedToken
_account
Function: _debtOf
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', '_account', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
0

Name: PIC_51 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_328 Function: _borrowBalanceConverted
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_328

Name: TMP_328 Function: _borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_329(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_borrowedToken_1,_returnToken_1,TMP_328,_borrowPrice_1,_returnPrice_1)
Function name: _borrowBalanceConverted
Internal call...
_convertTokenValues
_borrowedToken
_returnToken
TMP_328
_borrowPrice
_returnPrice
Function: _convertTokenValues
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[], [], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', 'TOKA', [], -1]
[[], [], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
added
xyz
Function name: _convertTokenValues
Function Visibility: internal
clearning node...
clearing ir...?
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
has variable
[i] _fromToken cleared
clearing ir...?
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
has variable
[i] _toToken cleared
clearing ir...?
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
has variable
[i] _inputAmount cleared
clearing ir...?
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
has variable
[i] _fromPrice cleared
clearing ir...?
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
has variable
[i] _toPrice cleared
clearing ir...?
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
has variable
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_340 cleared
clearing ir...?
REF_115(uint256) -> decimals_3[_fromToken_1]
has variable
clearing ir...?
TMP_341(uint256) = 10 (c)** REF_115
has variable
[i] TMP_341 cleared
clearing ir...?
TMP_342(uint256) = TMP_340 (c)/ TMP_341
has variable
[i] TMP_342 cleared
clearing ir...?
priceFrom_1(uint256) := TMP_342(uint256)
has variable
[i] priceFrom cleared
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_343 cleared
clearing ir...?
REF_116(uint256) -> decimals_3[_toToken_1]
has variable
clearing ir...?
TMP_344(uint256) = 10 (c)** REF_116
has variable
[i] TMP_344 cleared
clearing ir...?
TMP_345(uint256) = TMP_343 (c)/ TMP_344
has variable
[i] TMP_345 cleared
clearing ir...?
priceTo_1(uint256) := TMP_345(uint256)
has variable
[i] priceTo cleared
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_56 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_57 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: _convertTokenValues

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_329

Name: TMP_329 Function: _borrowBalanceConverted
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_329(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_borrowedToken_1,_returnToken_1,TMP_328,_borrowPrice_1,_returnPrice_1)
XXXXX
RETURN TMP_329
RETURN

Name: TMP_329 Function: _borrowBalanceConverted
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_borrowBalanceConverted":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _borrowBalanceConverted

Name: TMP_329 Function: _borrowBalanceConverted
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_207

Name: TMP_207 Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_208(uint256) = TMP_206 (c)+ TMP_207
Function name: accountHealth

Name: TMP_208 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_207 Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_208 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_208

Name: TMP_208 Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalAccountBorrow_1(uint256) := TMP_208(uint256)
Function name: accountHealth
asgn

Name: TMP_208 Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalAccountBorrow Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalAccountBorrow

Name: totalAccountBorrow Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_209(uint256) = totalAccountSupply_1 (c)* 1000000000000000000
has variable
[i] TMP_209 cleared
clearing ir...?
TMP_210(uint256) = TMP_209 (c)/ totalAccountBorrow_1
has variable
[i] TMP_210 cleared
clearing ir...?
RETURN TMP_210
typecheckig node...
TMP_209(uint256) = totalAccountSupply_1 (c)* 1000000000000000000
Function name: accountHealth
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: 0 rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalAccountSupply Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_209 Function: accountHealth
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: accountHealth
Num: 2
Den: 1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
TMP_210(uint256) = TMP_209 (c)/ totalAccountBorrow_1
Function name: accountHealth
lnorm: 18 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_210 Function: accountHealth
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: PIC_60 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_210 Function: accountHealth
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_210

Name: TMP_210 Function: accountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_210
RETURN

Name: TMP_210 Function: accountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
RETURN LIQ_MIN_HEALTH_7
typecheckig node...
RETURN LIQ_MIN_HEALTH_7
RETURN

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "accountHealth":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: accountHealth

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for TMP_228

Name: TMP_228 Function: checkAccountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
health_1(uint256) := TMP_228(uint256)
Function name: checkAccountHealth
asgn

Name: TMP_228 Function: checkAccountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: health Function: checkAccountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for health

Name: health Function: checkAccountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_229(bool) = health_1 >= LIQ_MIN_HEALTH_9
has variable
[i] TMP_229 cleared
clearing ir...?
TMP_230(None) = SOLIDITY_CALL require(bool,string)(TMP_229,LendingPair: insufficient accountHealth)
typecheckig node...
TMP_229(bool) = health_1 >= LIQ_MIN_HEALTH_9
Function name: checkAccountHealth
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_229

Name: TMP_229 Function: checkAccountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_230(None) = SOLIDITY_CALL require(bool,string)(TMP_229,LendingPair: insufficient accountHealth)
[i]Type for TMP_230

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "checkAccountHealth":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: checkAccountHealth
done.
WORKLIST iteration 0 for function call "transferLp":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: transferLp
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: liquidateAccount
Function name: liquidateAccount
Function Visibility (test): external
_account
Finding type for _account...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _account Function: liquidateAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_repayToken
Finding type for _repayToken...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _repayToken Function: liquidateAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_repayAmount
Finding type for _repayAmount...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _repayAmount Function: liquidateAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_minSupplyOutput
Finding type for _minSupplyOutput...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _minSupplyOutput Function: liquidateAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
LIQ_MIN_HEALTH_1(uint256) := ϕ(['LIQ_MIN_HEALTH_0', 'LIQ_MIN_HEALTH_9', 'LIQ_MIN_HEALTH_6'])
has variable
clearing ir...?
pendingSystemFees_9(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_0'])
has variable
clearing ir...?
lendingController_2(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
clearing ir...?
tokenA_12(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
has variable
clearing ir...?
tokenB_14(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
typecheckig node...
LIQ_MIN_HEALTH_1(uint256) := ϕ(['LIQ_MIN_HEALTH_0', 'LIQ_MIN_HEALTH_9', 'LIQ_MIN_HEALTH_6'])
Function name: liquidateAccount
Phi
[i]Type for LIQ_MIN_HEALTH

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pendingSystemFees_9(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_0'])
Function name: liquidateAccount
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_2(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: liquidateAccount
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_12(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: liquidateAccount
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_14(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: liquidateAccount
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(_repayToken_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_repayToken_1)
Internal call...
_validateToken
_repayToken
Function: _validateToken
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, None, [], -1]
added
xyz
Function name: _validateToken
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_62', '_token_1', 'TMP_80', '_toToken_1', 'TMP_100', '_borrowedToken_1', '_token_1', '_repayToken_1', '_token_1', '_token_1', 'uniTokenA_1', '_token_1', '_token_1', 'TMP_123', '_fromToken_1', '_returnToken_1', '_suppliedToken_1', 'uniTokenB_1', '_token_1', '_token_1', '_returnToken_1', '_token_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
tokenA_48(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
has variable
clearing ir...?
tokenB_53(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_62', '_token_1', 'TMP_80', '_toToken_1', 'TMP_100', '_borrowedToken_1', '_token_1', '_repayToken_1', '_token_1', '_token_1', 'uniTokenA_1', '_token_1', '_token_1', 'TMP_123', '_fromToken_1', '_returnToken_1', '_suppliedToken_1', 'uniTokenB_1', '_token_1', '_token_1', '_returnToken_1', '_token_1', '_token_1', '_token_1'])
Function name: _validateToken
Phi
[i]Type for _token

Name: _token Function: _validateToken
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
tokenA_48(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: _validateToken
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_53(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: _validateToken
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_348(bool) = _token_1 == tokenA_48
has variable
[i] TMP_348 cleared
clearing ir...?
TMP_349(bool) = _token_1 == tokenB_53
has variable
[i] TMP_349 cleared
clearing ir...?
TMP_350(bool) = TMP_348 || TMP_349
has variable
[i] TMP_350 cleared
clearing ir...?
TMP_351(None) = SOLIDITY_CALL require(bool,string)(TMP_350,LendingPair: invalid token)
typecheckig node...
TMP_348(bool) = _token_1 == tokenA_48
Function name: _validateToken
[i]Type for TMP_348

Name: TMP_348 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_349(bool) = _token_1 == tokenB_53
Function name: _validateToken
[i]Type for TMP_349

Name: TMP_349 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_350(bool) = TMP_348 || TMP_349
Function name: _validateToken
[i]Type for TMP_350

Name: TMP_350 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_351(None) = SOLIDITY_CALL require(bool,string)(TMP_350,LendingPair: invalid token)
[i]Type for TMP_351

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_validateToken":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _validateToken
done.
clearning node...
clearing ir...?
TMP_191(bool) = _repayToken_1 == tokenA_14
has variable
[i] TMP_191 cleared
clearing ir...?
CONDITION TMP_191
typecheckig node...
TMP_191(bool) = _repayToken_1 == tokenA_14
Function name: liquidateAccount
[i]Type for TMP_191

Name: TMP_191 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_191
Condition...
Conidtion: 
TMP_191
TMP_191
clearning node...
clearing ir...?
supplyToken_1(address) := tokenA_14(address)
has variable
[i] supplyToken cleared
typecheckig node...
supplyToken_1(address) := tokenA_14(address)
Function name: liquidateAccount
asgn

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef

Name: supplyToken Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for supplyToken

Name: supplyToken Function: liquidateAccount
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
supplyToken_2(address) := tokenB_16(address)
has variable
[i] supplyToken cleared
typecheckig node...
supplyToken_2(address) := tokenB_16(address)
Function name: liquidateAccount
asgn

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef

Name: supplyToken Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for supplyToken

Name: supplyToken Function: liquidateAccount
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
supplyToken_3(address) := ϕ(['supplyToken_1', 'supplyToken_2'])
has variable
[i] supplyToken cleared
typecheckig node...
supplyToken_3(address) := ϕ(['supplyToken_1', 'supplyToken_2'])
Function name: liquidateAccount
Phi
[i]Type for supplyToken

Name: supplyToken Function: liquidateAccount
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair.accrue(address)(supplyToken_3)
clearing ir...?
pendingSystemFees_12(mapping(address => uint256)) := ϕ(['pendingSystemFees_4'])
has variable
typecheckig node...
INTERNAL_CALL, LendingPair.accrue(address)(supplyToken_3)
Internal call...
accrue
supplyToken
Function: accrue
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: accrue
Function Visibility: public
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_64', 'supplyToken_3', '_token_1', '_token_1', 'TMP_125', 'TMP_102', '_token_1', 'TMP_82', '_repayToken_1', '_token_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
pendingSystemFees_1(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_0'])
has variable
clearing ir...?
lastBlockAccrued_3(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3', 'lastBlockAccrued_4', 'lastBlockAccrued_0', 'lastBlockAccrued_5', 'lastBlockAccrued_2'])
has variable
clearing ir...?
totalSupplyAmount_1(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_64', 'supplyToken_3', '_token_1', '_token_1', 'TMP_125', 'TMP_102', '_token_1', 'TMP_82', '_repayToken_1', '_token_1', '_token_1', '_token_1'])
Function name: accrue
Phi
[i]Type for _token

Name: _token Function: accrue
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
pendingSystemFees_1(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_0'])
Function name: accrue
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastBlockAccrued_3(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3', 'lastBlockAccrued_4', 'lastBlockAccrued_0', 'lastBlockAccrued_5', 'lastBlockAccrued_2'])
Function name: accrue
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_1(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: accrue
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_29(uint256) -> lastBlockAccrued_3[_token_1]
has variable
clearing ir...?
TMP_146(bool) = REF_29 < block.number
has variable
[i] TMP_146 cleared
clearing ir...?
CONDITION TMP_146
typecheckig node...
REF_29(uint256) -> lastBlockAccrued_3[_token_1]
Function name: accrue
INDEX

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_29

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_146(bool) = REF_29 < block.number
Function name: accrue
testing lt...
block.number
[i]Type for TMP_146

Name: TMP_146 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_146
Condition...
Conidtion: 
TMP_146
TMP_146
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_147(uint256) = INTERNAL_CALL, LendingPair._accrueDebt(address)(_token_1)
has variable
[i] TMP_147 cleared
clearing ir...?
newDebt_1(uint256) := TMP_147(uint256)
has variable
[i] newDebt cleared
typecheckig node...
TMP_147(uint256) = INTERNAL_CALL, LendingPair._accrueDebt(address)(_token_1)
Function name: accrue
Internal call...
_accrueDebt
_token
Function: _accrueDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
0

Name: PIC_11 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_147

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
newDebt_1(uint256) := TMP_147(uint256)
Function name: accrue
asgn

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newDebt

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
newDebt_1(uint256) := TMP_147(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_148(uint256) = INTERNAL_CALL, LendingPair._lpRate(address)(_token_1)
has variable
[i] TMP_148 cleared
clearing ir...?
TMP_149(uint256) = newDebt_1 (c)* TMP_148
has variable
[i] TMP_149 cleared
clearing ir...?
TMP_150(uint256) = TMP_149 (c)/ 100000000000000000000
has variable
[i] TMP_150 cleared
clearing ir...?
newSupply_1(uint256) := TMP_150(uint256)
has variable
[i] newSupply cleared
typecheckig node...
TMP_148(uint256) = INTERNAL_CALL, LendingPair._lpRate(address)(_token_1)
Function name: accrue
Internal call...
_lpRate
_token
Function: _lpRate
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
0

Name: PIC_12 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_148 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_148

Name: TMP_148 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_149(uint256) = newDebt_1 (c)* TMP_148
Function name: accrue
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_148 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_149 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_149

Name: TMP_149 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_149(uint256) = newDebt_1 (c)* TMP_148
XXXXX
TMP_150(uint256) = TMP_149 (c)/ 100000000000000000000
Function name: accrue
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_150 Function: accrue
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef
val: 100000000000000000000
20
[i]Type for TMP_150

Name: TMP_150 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
newSupply_1(uint256) := TMP_150(uint256)
Function name: accrue
asgn

Name: TMP_150 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newSupply

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_30(uint256) -> totalSupplyAmount_3[_token_1]
has variable
clearing ir...?
totalSupplyAmount_4(mapping(address => uint256)) := ϕ(['totalSupplyAmount_3'])
has variable
clearing ir...?
REF_30(-> totalSupplyAmount_4) = REF_30 (c)+ newSupply_1
has variable
typecheckig node...
REF_30(uint256) -> totalSupplyAmount_3[_token_1]
Function name: accrue
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalSupplyAmount
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_30

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_4(mapping(address => uint256)) := ϕ(['totalSupplyAmount_3'])
Function name: accrue
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_30(-> totalSupplyAmount_4) = REF_30 (c)+ newSupply_1
Function name: accrue

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_30

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_31(uint256) -> pendingSystemFees_3[_token_1]
has variable
clearing ir...?
TMP_151(uint256) = newDebt_1 (c)- newSupply_1
has variable
[i] TMP_151 cleared
clearing ir...?
pendingSystemFees_4(mapping(address => uint256)) := ϕ(['pendingSystemFees_3'])
has variable
clearing ir...?
REF_31(-> pendingSystemFees_4) = REF_31 (c)+ TMP_151
has variable
typecheckig node...
REF_31(uint256) -> pendingSystemFees_3[_token_1]
Function name: accrue
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
pendingSystemFees
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_31

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_151(uint256) = newDebt_1 (c)- newSupply_1
Function name: accrue
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: TMP_151 Function: accrue
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_151

Name: TMP_151 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_151(uint256) = newDebt_1 (c)- newSupply_1
XXXXX
pendingSystemFees_4(mapping(address => uint256)) := ϕ(['pendingSystemFees_3'])
Function name: accrue
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_31(-> pendingSystemFees_4) = REF_31 (c)+ TMP_151
Function name: accrue

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_151 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_31

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_32(uint256) -> lastBlockAccrued_3[_token_1]
has variable
clearing ir...?
lastBlockAccrued_4(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3'])
has variable
clearing ir...?
REF_32 (->lastBlockAccrued_4) := block.number(uint256)
has variable
typecheckig node...
REF_32(uint256) -> lastBlockAccrued_3[_token_1]
Function name: accrue
INDEX

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_32

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastBlockAccrued_4(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3'])
Function name: accrue
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_32 (->lastBlockAccrued_4) := block.number(uint256)
Function name: accrue
asgn
block.number

Name: REF_32 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_32

Name: REF_32 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_32 (->lastBlockAccrued_4) := block.number(uint256)
XXXXX
WORKLIST iteration 0 for function call "accrue":
 New undefined nodes- 4
 Old undefined nodes- 0
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_64', 'supplyToken_3', '_token_1', '_token_1', 'TMP_125', 'TMP_102', '_token_1', 'TMP_82', '_repayToken_1', '_token_1', '_token_1', '_token_1'])
Function name: accrue
Phi
[i]Type for _token

Name: _token Function: accrue
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
pendingSystemFees_1(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_0'])
Function name: accrue
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastBlockAccrued_3(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3', 'lastBlockAccrued_4', 'lastBlockAccrued_0', 'lastBlockAccrued_5', 'lastBlockAccrued_2'])
Function name: accrue
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_1(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: accrue
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_29(uint256) -> lastBlockAccrued_3[_token_1]
Function name: accrue
INDEX

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_29

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_146(bool) = REF_29 < block.number
Function name: accrue
testing lt...
block.number
[i]Type for TMP_146

Name: TMP_146 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_146
Condition...
Conidtion: 
TMP_146
TMP_146
typecheckig node...
typecheckig node...
TMP_147(uint256) = INTERNAL_CALL, LendingPair._accrueDebt(address)(_token_1)
Function name: accrue
Internal call...
_accrueDebt
_token
Function: _accrueDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
0

Name: PIC_11 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_147

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
newDebt_1(uint256) := TMP_147(uint256)
Function name: accrue
asgn

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newDebt

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
newDebt_1(uint256) := TMP_147(uint256)
XXXXX
typecheckig node...
TMP_148(uint256) = INTERNAL_CALL, LendingPair._lpRate(address)(_token_1)
Function name: accrue
Internal call...
_lpRate
_token
Function: _lpRate
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
0

Name: PIC_12 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_148 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_148

Name: TMP_148 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_149(uint256) = newDebt_1 (c)* TMP_148
Function name: accrue
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_148 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_149 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_149

Name: TMP_149 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_149(uint256) = newDebt_1 (c)* TMP_148
XXXXX
TMP_150(uint256) = TMP_149 (c)/ 100000000000000000000
Function name: accrue
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_150 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
val: 100000000000000000000
20
[i]Type for TMP_150

Name: TMP_150 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
newSupply_1(uint256) := TMP_150(uint256)
Function name: accrue
asgn

Name: TMP_150 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newSupply

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_30(uint256) -> totalSupplyAmount_3[_token_1]
Function name: accrue
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalSupplyAmount
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_30

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_4(mapping(address => uint256)) := ϕ(['totalSupplyAmount_3'])
Function name: accrue
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_30(-> totalSupplyAmount_4) = REF_30 (c)+ newSupply_1
Function name: accrue

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_30

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_31(uint256) -> pendingSystemFees_3[_token_1]
Function name: accrue
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
pendingSystemFees
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_31

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_151(uint256) = newDebt_1 (c)- newSupply_1
Function name: accrue
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: TMP_151 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_151

Name: TMP_151 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_151(uint256) = newDebt_1 (c)- newSupply_1
XXXXX
pendingSystemFees_4(mapping(address => uint256)) := ϕ(['pendingSystemFees_3'])
Function name: accrue
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_31(-> pendingSystemFees_4) = REF_31 (c)+ TMP_151
Function name: accrue

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_151 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_31

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_32(uint256) -> lastBlockAccrued_3[_token_1]
Function name: accrue
INDEX

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_32

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastBlockAccrued_4(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3'])
Function name: accrue
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_32 (->lastBlockAccrued_4) := block.number(uint256)
Function name: accrue
asgn
block.number

Name: REF_32 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_32

Name: REF_32 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_32 (->lastBlockAccrued_4) := block.number(uint256)
XXXXX
WORKLIST iteration 1 for function call "accrue":
 New undefined nodes- 4
 Old undefined nodes- 4
Saving return values for: accrue
done.
This IR caused addback:
INTERNAL_CALL, LendingPair.accrue(address)(supplyToken_3)
XXXXX
pendingSystemFees_12(mapping(address => uint256)) := ϕ(['pendingSystemFees_4'])
Function name: liquidateAccount
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair.accrue(address)(_repayToken_1)
clearing ir...?
pendingSystemFees_13(mapping(address => uint256)) := ϕ(['pendingSystemFees_4'])
has variable
typecheckig node...
INTERNAL_CALL, LendingPair.accrue(address)(_repayToken_1)
Internal call...
accrue
_repayToken
Function: accrue
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
done.
pendingSystemFees_13(mapping(address => uint256)) := ϕ(['pendingSystemFees_4'])
Function name: liquidateAccount
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_163(uint256) = INTERNAL_CALL, LendingPair.accountHealth(address)(_account_1)
has variable
[i] TMP_163 cleared
clearing ir...?
lendingController_7(ILendingController) := ϕ(['lendingController_17'])
has variable
clearing ir...?
tokenA_17(address) := ϕ(['tokenA_37'])
has variable
clearing ir...?
tokenB_19(address) := ϕ(['tokenB_40'])
has variable
clearing ir...?
health_1(uint256) := TMP_163(uint256)
has variable
[i] health cleared
typecheckig node...
TMP_163(uint256) = INTERNAL_CALL, LendingPair.accountHealth(address)(_account_1)
Function name: liquidateAccount
Internal call...
accountHealth
_account
Function: accountHealth
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_account', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_account', [], -1]
0
[i]Type for TMP_163

Name: TMP_163 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_7(ILendingController) := ϕ(['lendingController_17'])
Function name: liquidateAccount
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_17(address) := ϕ(['tokenA_37'])
Function name: liquidateAccount
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_19(address) := ϕ(['tokenB_40'])
Function name: liquidateAccount
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
health_1(uint256) := TMP_163(uint256)
Function name: liquidateAccount
asgn

Name: TMP_163 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: health Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for health

Name: health Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
health_1(uint256) := TMP_163(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_164(bool) = health_1 < LIQ_MIN_HEALTH_6
has variable
[i] TMP_164 cleared
clearing ir...?
TMP_165(None) = SOLIDITY_CALL require(bool,string)(TMP_164,LendingPair: account health < LIQ_MIN_HEALTH)
typecheckig node...
TMP_164(bool) = health_1 < LIQ_MIN_HEALTH_6
Function name: liquidateAccount
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_164 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_164

Name: TMP_164 Function: liquidateAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_164(bool) = health_1 < LIQ_MIN_HEALTH_6
XXXXX
TMP_165(None) = SOLIDITY_CALL require(bool,string)(TMP_164,LendingPair: account health < LIQ_MIN_HEALTH)
[i]Type for TMP_165

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._unwrapUniPosition(address)(_account_1)
clearing ir...?
lendingController_8(ILendingController) := ϕ(['lendingController_33'])
has variable
clearing ir...?
tokenA_18(address) := ϕ(['tokenA_44'])
has variable
clearing ir...?
tokenB_20(address) := ϕ(['tokenB_48'])
has variable
typecheckig node...
INTERNAL_CALL, LendingPair._unwrapUniPosition(address)(_account_1)
Internal call...
_unwrapUniPosition
_account
Function: _unwrapUniPosition
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _unwrapUniPosition
Function Visibility: internal
clearning node...
clearing ir...?
_account_1(address) := ϕ(['_account_1'])
has variable
[i] _account cleared
clearing ir...?
uniManager_7(IERC721) := ϕ(['uniManager_13', 'uniManager_6', 'uniManager_0', 'uniManager_11', 'uniManager_4'])
has variable
clearing ir...?
uniPosition_7(mapping(address => uint256)) := ϕ(['uniPosition_0', 'uniPosition_4', 'uniPosition_13', 'uniPosition_6', 'uniPosition_17', 'uniPosition_18', 'uniPosition_7', 'uniPosition_16'])
has variable
clearing ir...?
uniV3Helper_2(IUniswapV3Helper) := ϕ(['uniV3Helper_12', 'uniV3Helper_1', 'uniV3Helper_14', 'uniV3Helper_0', 'uniV3Helper_10', 'uniV3Helper_7'])
has variable
clearing ir...?
lendingController_30(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
clearing ir...?
tokenA_38(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
has variable
clearing ir...?
tokenB_41(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
typecheckig node...
_account_1(address) := ϕ(['_account_1'])
Function name: _unwrapUniPosition
Phi
[i]Type for _account

Name: _account Function: _unwrapUniPosition
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
uniManager_7(IERC721) := ϕ(['uniManager_13', 'uniManager_6', 'uniManager_0', 'uniManager_11', 'uniManager_4'])
Function name: _unwrapUniPosition
Phi
[i]Type for uniManager

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniPosition_7(mapping(address => uint256)) := ϕ(['uniPosition_0', 'uniPosition_4', 'uniPosition_13', 'uniPosition_6', 'uniPosition_17', 'uniPosition_18', 'uniPosition_7', 'uniPosition_16'])
Function name: _unwrapUniPosition
Phi
[i]Type for uniPosition

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniV3Helper_2(IUniswapV3Helper) := ϕ(['uniV3Helper_12', 'uniV3Helper_1', 'uniV3Helper_14', 'uniV3Helper_0', 'uniV3Helper_10', 'uniV3Helper_7'])
Function name: _unwrapUniPosition
Phi
[i]Type for uniV3Helper

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
done.
lendingController_30(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: _unwrapUniPosition
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_38(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: _unwrapUniPosition
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_41(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: _unwrapUniPosition
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_55(uint256) -> uniPosition_7[_account_1]
has variable
clearing ir...?
TMP_250(bool) = REF_55 > 0
has variable
[i] TMP_250 cleared
clearing ir...?
CONDITION TMP_250
typecheckig node...
REF_55(uint256) -> uniPosition_7[_account_1]
Function name: _unwrapUniPosition
INDEX

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_55

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_250(bool) = REF_55 > 0
Function name: _unwrapUniPosition
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_250

Name: TMP_250 Function: _unwrapUniPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_250
Condition...
Conidtion: 
TMP_250
TMP_250
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_8(uint256,uint256) = HIGH_LEVEL_CALL, dest:lendingController_30(ILendingController), function:tokenPrices, arguments:['tokenA_38', 'tokenB_41']  
has variable
clearing ir...?
uniManager_8(IERC721) := ϕ(['uniManager_13', 'uniManager_6', 'uniManager_11', 'uniManager_7', 'uniManager_4'])
has variable
clearing ir...?
uniPosition_8(mapping(address => uint256)) := ϕ(['uniPosition_4', 'uniPosition_13', 'uniPosition_6', 'uniPosition_17', 'uniPosition_18', 'uniPosition_7', 'uniPosition_16'])
has variable
clearing ir...?
uniV3Helper_3(IUniswapV3Helper) := ϕ(['uniV3Helper_12', 'uniV3Helper_2', 'uniV3Helper_1', 'uniV3Helper_14', 'uniV3Helper_10', 'uniV3Helper_7'])
has variable
clearing ir...?
lendingController_31(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_30', 'lendingController_35'])
has variable
clearing ir...?
tokenA_39(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_38', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
has variable
clearing ir...?
tokenB_42(address) := ϕ(['tokenB_5', 'tokenB_41', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
clearing ir...?
priceA_1(uint256)= UNPACK TUPLE_8 index: 0 
has variable
[i] priceA cleared
clearing ir...?
priceB_1(uint256)= UNPACK TUPLE_8 index: 1 
has variable
[i] priceB cleared
typecheckig node...
TUPLE_8(uint256,uint256) = HIGH_LEVEL_CALL, dest:lendingController_30(ILendingController), function:tokenPrices, arguments:['tokenA_38', 'tokenB_41']  
Function name: _unwrapUniPosition
High Call: tokenPrices
func name:tokenPrices
other func name:tokenPrices
TUPLE_8
hlc contract name: LENDINGCONTR func_name: tokenPrices
('c', [1], [-1], 0, None)
tokenA
tokenB
('c', [2], [-1], 0, None)
tokenA
tokenB
wfc len: 2
COPIED
[i]Type for TUPLE_8

Name: TUPLE_8 Function: _unwrapUniPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniManager_8(IERC721) := ϕ(['uniManager_13', 'uniManager_6', 'uniManager_11', 'uniManager_7', 'uniManager_4'])
Function name: _unwrapUniPosition
Phi
[i]Type for uniManager

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniPosition_8(mapping(address => uint256)) := ϕ(['uniPosition_4', 'uniPosition_13', 'uniPosition_6', 'uniPosition_17', 'uniPosition_18', 'uniPosition_7', 'uniPosition_16'])
Function name: _unwrapUniPosition
Phi
[i]Type for uniPosition

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniV3Helper_3(IUniswapV3Helper) := ϕ(['uniV3Helper_12', 'uniV3Helper_2', 'uniV3Helper_1', 'uniV3Helper_14', 'uniV3Helper_10', 'uniV3Helper_7'])
Function name: _unwrapUniPosition
Phi
[i]Type for uniV3Helper

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
done.
lendingController_31(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_30', 'lendingController_35'])
Function name: _unwrapUniPosition
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_39(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_38', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: _unwrapUniPosition
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_42(address) := ϕ(['tokenB_5', 'tokenB_41', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: _unwrapUniPosition
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
priceA_1(uint256)= UNPACK TUPLE_8 index: 0 
Function name: _unwrapUniPosition
Reading tuple TUPLE_8 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for priceA

Name: priceA Function: _unwrapUniPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
priceB_1(uint256)= UNPACK TUPLE_8 index: 1 
Function name: _unwrapUniPosition
Reading tuple TUPLE_8 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for priceB

Name: priceB Function: _unwrapUniPosition
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_58(uint256) -> uniPosition_8[_account_1]
has variable
clearing ir...?
TUPLE_9(uint256,uint256) = HIGH_LEVEL_CALL, dest:uniV3Helper_3(IUniswapV3Helper), function:positionAmounts, arguments:['REF_58', 'priceA_1', 'priceB_1']  
has variable
clearing ir...?
uniManager_9(IERC721) := ϕ(['uniManager_13', 'uniManager_6', 'uniManager_11', 'uniManager_4', 'uniManager_8'])
has variable
clearing ir...?
uniPosition_9(mapping(address => uint256)) := ϕ(['uniPosition_4', 'uniPosition_13', 'uniPosition_6', 'uniPosition_8', 'uniPosition_17', 'uniPosition_18', 'uniPosition_7', 'uniPosition_16'])
has variable
clearing ir...?
uniV3Helper_4(IUniswapV3Helper) := ϕ(['uniV3Helper_3', 'uniV3Helper_12', 'uniV3Helper_1', 'uniV3Helper_14', 'uniV3Helper_10', 'uniV3Helper_7'])
has variable
clearing ir...?
lendingController_32(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_31', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
clearing ir...?
tokenA_40(address) := ϕ(['tokenA_39', 'tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
has variable
clearing ir...?
tokenB_43(address) := ϕ(['tokenB_5', 'tokenB_42', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
clearing ir...?
amount0_1(uint256)= UNPACK TUPLE_9 index: 0 
has variable
[i] amount0 cleared
clearing ir...?
amount1_1(uint256)= UNPACK TUPLE_9 index: 1 
has variable
[i] amount1 cleared
typecheckig node...
REF_58(uint256) -> uniPosition_8[_account_1]
Function name: _unwrapUniPosition
INDEX

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_58

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TUPLE_9(uint256,uint256) = HIGH_LEVEL_CALL, dest:uniV3Helper_3(IUniswapV3Helper), function:positionAmounts, arguments:['REF_58', 'priceA_1', 'priceB_1']  
Function name: _unwrapUniPosition
High Call: positionAmounts
func name:positionAmounts
other func name:positionAmounts
TUPLE_9
hlc contract name: V3HELPER func_name: positionAmounts
('c', [-1], [-1], 0, None)
REF_58
priceA
priceB
('c', [-1], [-1], 0, None)
REF_58
priceA
priceB
wfc len: 2
COPIED
[i]Type for TUPLE_9

Name: TUPLE_9 Function: _unwrapUniPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniManager_9(IERC721) := ϕ(['uniManager_13', 'uniManager_6', 'uniManager_11', 'uniManager_4', 'uniManager_8'])
Function name: _unwrapUniPosition
Phi
[i]Type for uniManager

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniPosition_9(mapping(address => uint256)) := ϕ(['uniPosition_4', 'uniPosition_13', 'uniPosition_6', 'uniPosition_8', 'uniPosition_17', 'uniPosition_18', 'uniPosition_7', 'uniPosition_16'])
Function name: _unwrapUniPosition
Phi
[i]Type for uniPosition

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniV3Helper_4(IUniswapV3Helper) := ϕ(['uniV3Helper_3', 'uniV3Helper_12', 'uniV3Helper_1', 'uniV3Helper_14', 'uniV3Helper_10', 'uniV3Helper_7'])
Function name: _unwrapUniPosition
Phi
[i]Type for uniV3Helper

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
done.
lendingController_32(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_31', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: _unwrapUniPosition
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_40(address) := ϕ(['tokenA_39', 'tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: _unwrapUniPosition
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_43(address) := ϕ(['tokenB_5', 'tokenB_42', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: _unwrapUniPosition
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
amount0_1(uint256)= UNPACK TUPLE_9 index: 0 
Function name: _unwrapUniPosition
Reading tuple TUPLE_9 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for amount0

Name: amount0 Function: _unwrapUniPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
amount1_1(uint256)= UNPACK TUPLE_9 index: 1 
Function name: _unwrapUniPosition
Reading tuple TUPLE_9 index 1
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for amount1

Name: amount1 Function: _unwrapUniPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_251(uint256) = HIGH_LEVEL_CALL, dest:lendingController_32(ILendingController), function:uniMinOutputPct, arguments:[]  
has variable
[i] TMP_251 cleared
clearing ir...?
uniManager_10(IERC721) := ϕ(['uniManager_13', 'uniManager_6', 'uniManager_11', 'uniManager_9', 'uniManager_4'])
has variable
clearing ir...?
uniPosition_10(mapping(address => uint256)) := ϕ(['uniPosition_4', 'uniPosition_13', 'uniPosition_6', 'uniPosition_9', 'uniPosition_17', 'uniPosition_18', 'uniPosition_7', 'uniPosition_16'])
has variable
clearing ir...?
uniV3Helper_5(IUniswapV3Helper) := ϕ(['uniV3Helper_4', 'uniV3Helper_12', 'uniV3Helper_1', 'uniV3Helper_14', 'uniV3Helper_10', 'uniV3Helper_7'])
has variable
clearing ir...?
lendingController_33(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_32', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
clearing ir...?
tokenA_41(address) := ϕ(['tokenA_40', 'tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
has variable
clearing ir...?
tokenB_44(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9', 'tokenB_43'])
has variable
clearing ir...?
uniMinOutput_1(uint256) := TMP_251(uint256)
has variable
[i] uniMinOutput cleared
typecheckig node...
TMP_251(uint256) = HIGH_LEVEL_CALL, dest:lendingController_32(ILendingController), function:uniMinOutputPct, arguments:[]  
Function name: _unwrapUniPosition
High Call: uniMinOutputPct
func name:uniMinOutputPct
other func name:uniMinOutputPct
TMP_251
hlc contract name: LENDINGCONTR func_name: uniMinOutputPct
('c', [-1], [-1], 0, None)
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_251

Name: TMP_251 Function: _unwrapUniPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
uniManager_10(IERC721) := ϕ(['uniManager_13', 'uniManager_6', 'uniManager_11', 'uniManager_9', 'uniManager_4'])
Function name: _unwrapUniPosition
Phi
[i]Type for uniManager

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniPosition_10(mapping(address => uint256)) := ϕ(['uniPosition_4', 'uniPosition_13', 'uniPosition_6', 'uniPosition_9', 'uniPosition_17', 'uniPosition_18', 'uniPosition_7', 'uniPosition_16'])
Function name: _unwrapUniPosition
Phi
[i]Type for uniPosition

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniV3Helper_5(IUniswapV3Helper) := ϕ(['uniV3Helper_4', 'uniV3Helper_12', 'uniV3Helper_1', 'uniV3Helper_14', 'uniV3Helper_10', 'uniV3Helper_7'])
Function name: _unwrapUniPosition
Phi
[i]Type for uniV3Helper

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
done.
lendingController_33(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_32', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: _unwrapUniPosition
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_41(address) := ϕ(['tokenA_40', 'tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: _unwrapUniPosition
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_44(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9', 'tokenB_43'])
Function name: _unwrapUniPosition
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
uniMinOutput_1(uint256) := TMP_251(uint256)
Function name: _unwrapUniPosition
asgn

Name: TMP_251 Function: _unwrapUniPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: uniMinOutput Function: _unwrapUniPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for uniMinOutput

Name: uniMinOutput Function: _unwrapUniPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_252 = CONVERT uniV3Helper_5 to address
has variable
[i] TMP_252 cleared
clearing ir...?
REF_61(uint256) -> uniPosition_10[_account_1]
has variable
clearing ir...?
HIGH_LEVEL_CALL, dest:uniManager_10(IERC721), function:approve, arguments:['TMP_252', 'REF_61']  
clearing ir...?
uniManager_11(IERC721) := ϕ(['uniManager_13', 'uniManager_10', 'uniManager_6', 'uniManager_11', 'uniManager_4'])
has variable
clearing ir...?
uniPosition_11(mapping(address => uint256)) := ϕ(['uniPosition_4', 'uniPosition_13', 'uniPosition_6', 'uniPosition_17', 'uniPosition_10', 'uniPosition_18', 'uniPosition_7', 'uniPosition_16'])
has variable
clearing ir...?
uniV3Helper_6(IUniswapV3Helper) := ϕ(['uniV3Helper_5', 'uniV3Helper_12', 'uniV3Helper_1', 'uniV3Helper_14', 'uniV3Helper_10', 'uniV3Helper_7'])
has variable
clearing ir...?
tokenA_42(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_41', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
has variable
clearing ir...?
tokenB_45(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9', 'tokenB_44'])
has variable
typecheckig node...
TMP_252 = CONVERT uniV3Helper_5 to address
Function name: _unwrapUniPosition

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef

Name: TMP_252 Function: _unwrapUniPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_252

Name: TMP_252 Function: _unwrapUniPosition
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
done.
REF_61(uint256) -> uniPosition_10[_account_1]
Function name: _unwrapUniPosition
INDEX

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_61

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:uniManager_10(IERC721), function:approve, arguments:['TMP_252', 'REF_61']  
High Call: approve
func name:approve
other func name:approve
done.
uniManager_11(IERC721) := ϕ(['uniManager_13', 'uniManager_10', 'uniManager_6', 'uniManager_11', 'uniManager_4'])
Function name: _unwrapUniPosition
Phi
[i]Type for uniManager

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniPosition_11(mapping(address => uint256)) := ϕ(['uniPosition_4', 'uniPosition_13', 'uniPosition_6', 'uniPosition_17', 'uniPosition_10', 'uniPosition_18', 'uniPosition_7', 'uniPosition_16'])
Function name: _unwrapUniPosition
Phi
[i]Type for uniPosition

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniV3Helper_6(IUniswapV3Helper) := ϕ(['uniV3Helper_5', 'uniV3Helper_12', 'uniV3Helper_1', 'uniV3Helper_14', 'uniV3Helper_10', 'uniV3Helper_7'])
Function name: _unwrapUniPosition
Phi
[i]Type for uniV3Helper

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
done.
tokenA_42(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_41', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: _unwrapUniPosition
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_45(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9', 'tokenB_44'])
Function name: _unwrapUniPosition
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_63(uint256) -> uniPosition_11[_account_1]
has variable
clearing ir...?
TMP_254(uint256) = amount0_1 (c)* uniMinOutput_1
has variable
[i] TMP_254 cleared
clearing ir...?
TMP_255(uint256) = TMP_254 (c)/ 100000000000000000000
has variable
[i] TMP_255 cleared
clearing ir...?
TMP_256(uint256) = amount1_1 (c)* uniMinOutput_1
has variable
[i] TMP_256 cleared
clearing ir...?
TMP_257(uint256) = TMP_256 (c)/ 100000000000000000000
has variable
[i] TMP_257 cleared
clearing ir...?
TUPLE_10(uint256,uint256) = HIGH_LEVEL_CALL, dest:uniV3Helper_6(IUniswapV3Helper), function:removeLiquidity, arguments:['REF_63', 'TMP_255', 'TMP_257']  
has variable
clearing ir...?
uniPosition_12(mapping(address => uint256)) := ϕ(['uniPosition_11', 'uniPosition_4', 'uniPosition_13', 'uniPosition_6', 'uniPosition_17', 'uniPosition_18', 'uniPosition_7', 'uniPosition_16'])
has variable
clearing ir...?
uniV3Helper_7(IUniswapV3Helper) := ϕ(['uniV3Helper_12', 'uniV3Helper_1', 'uniV3Helper_14', 'uniV3Helper_10', 'uniV3Helper_6', 'uniV3Helper_7'])
has variable
clearing ir...?
tokenA_43(address) := ϕ(['tokenA_42', 'tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
has variable
clearing ir...?
tokenB_46(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9', 'tokenB_45'])
has variable
clearing ir...?
amountA_1(uint256)= UNPACK TUPLE_10 index: 0 
has variable
[i] amountA cleared
clearing ir...?
amountB_1(uint256)= UNPACK TUPLE_10 index: 1 
has variable
[i] amountB cleared
typecheckig node...
REF_63(uint256) -> uniPosition_11[_account_1]
Function name: _unwrapUniPosition
INDEX

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_63

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_254(uint256) = amount0_1 (c)* uniMinOutput_1
Function name: _unwrapUniPosition
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: uniMinOutput Function: _unwrapUniPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_254 Function: _unwrapUniPosition
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_254

Name: TMP_254 Function: _unwrapUniPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_255(uint256) = TMP_254 (c)/ 100000000000000000000
Function name: _unwrapUniPosition
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: 0 rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_255 Function: _unwrapUniPosition
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef
val: 100000000000000000000
20
[i]Type for TMP_255

Name: TMP_255 Function: _unwrapUniPosition
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
TMP_256(uint256) = amount1_1 (c)* uniMinOutput_1
Function name: _unwrapUniPosition
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: uniMinOutput Function: _unwrapUniPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_256 Function: _unwrapUniPosition
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_256

Name: TMP_256 Function: _unwrapUniPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_257(uint256) = TMP_256 (c)/ 100000000000000000000
Function name: _unwrapUniPosition
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: 0 rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_257 Function: _unwrapUniPosition
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef
val: 100000000000000000000
20
[i]Type for TMP_257

Name: TMP_257 Function: _unwrapUniPosition
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
TUPLE_10(uint256,uint256) = HIGH_LEVEL_CALL, dest:uniV3Helper_6(IUniswapV3Helper), function:removeLiquidity, arguments:['REF_63', 'TMP_255', 'TMP_257']  
Function name: _unwrapUniPosition
High Call: removeLiquidity
func name:removeLiquidity
other func name:removeLiquidity
TUPLE_10
hlc contract name: V3HELPER func_name: removeLiquidity
('c', [-1], [-1], 0, None)
REF_63
TMP_255
TMP_257
('c', [-1], [-1], 0, None)
REF_63
TMP_255
TMP_257
wfc len: 2
COPIED
[i]Type for TUPLE_10

Name: TUPLE_10 Function: _unwrapUniPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniPosition_12(mapping(address => uint256)) := ϕ(['uniPosition_11', 'uniPosition_4', 'uniPosition_13', 'uniPosition_6', 'uniPosition_17', 'uniPosition_18', 'uniPosition_7', 'uniPosition_16'])
Function name: _unwrapUniPosition
Phi
[i]Type for uniPosition

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniV3Helper_7(IUniswapV3Helper) := ϕ(['uniV3Helper_12', 'uniV3Helper_1', 'uniV3Helper_14', 'uniV3Helper_10', 'uniV3Helper_6', 'uniV3Helper_7'])
Function name: _unwrapUniPosition
Phi
[i]Type for uniV3Helper

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
done.
tokenA_43(address) := ϕ(['tokenA_42', 'tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: _unwrapUniPosition
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_46(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9', 'tokenB_45'])
Function name: _unwrapUniPosition
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
amountA_1(uint256)= UNPACK TUPLE_10 index: 0 
Function name: _unwrapUniPosition
Reading tuple TUPLE_10 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for amountA

Name: amountA Function: _unwrapUniPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
amountB_1(uint256)= UNPACK TUPLE_10 index: 1 
Function name: _unwrapUniPosition
Reading tuple TUPLE_10 index 1
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for amountB

Name: amountB Function: _unwrapUniPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_64(uint256) -> uniPosition_12[_account_1]
has variable
clearing ir...?
uniPosition_13(mapping(address => uint256)) := ϕ(['uniPosition_12'])
has variable
clearing ir...?
REF_64 (->uniPosition_13) := 0(uint256)
has variable
typecheckig node...
REF_64(uint256) -> uniPosition_12[_account_1]
Function name: _unwrapUniPosition
INDEX

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_64

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
uniPosition_13(mapping(address => uint256)) := ϕ(['uniPosition_12'])
Function name: _unwrapUniPosition
Phi
[i]Type for uniPosition

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_64 (->uniPosition_13) := 0(uint256)
Function name: _unwrapUniPosition
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_64 Function: _unwrapUniPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_64

Name: REF_64 Function: _unwrapUniPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_258(uint256) = INTERNAL_CALL, LendingPair._mintSupplyAmount(address,address,uint256)(tokenA_43,_account_1,amountA_1)
has variable
[i] TMP_258 cleared
typecheckig node...
TMP_258(uint256) = INTERNAL_CALL, LendingPair._mintSupplyAmount(address,address,uint256)(tokenA_43,_account_1,amountA_1)
Function name: _unwrapUniPosition
Internal call...
_mintSupplyAmount
tokenA
_account
amountA
Function: _mintSupplyAmount
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 0, 'TOKA', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 0, None, [], -1]
added
xyz
Function name: _mintSupplyAmount
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['supplyToken_3', 'tokenA_43', '_token_1', 'tokenB_8', 'tokenA_7', 'tokenB_47'])
has variable
[i] _token cleared
clearing ir...?
_account_1(address) := ϕ(['_account_1', '_account_1', 'msg.sender'])
has variable
[i] _account cleared
clearing ir...?
_amount_1(uint256) := ϕ(['amountA_1', '_amount_1', 'supplyOutput_1', 'amountA_1', 'amountB_1', 'amountB_1'])
has variable
[i] _amount cleared
clearing ir...?
supplySharesOf_13(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_15', 'supplySharesOf_12', 'supplySharesOf_0', 'supplySharesOf_8', 'supplySharesOf_4', 'supplySharesOf_18', 'supplySharesOf_21', 'supplySharesOf_19'])
has variable
clearing ir...?
totalSupplyShares_1(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
has variable
clearing ir...?
totalSupplyAmount_5(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
typecheckig node...
_token_1(address) := ϕ(['supplyToken_3', 'tokenA_43', '_token_1', 'tokenB_8', 'tokenA_7', 'tokenB_47'])
Function name: _mintSupplyAmount
Phi
[i]Type for _token

Name: _token Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_account_1(address) := ϕ(['_account_1', '_account_1', 'msg.sender'])
Function name: _mintSupplyAmount
Phi
[i]Type for _account

Name: _account Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['amountA_1', '_amount_1', 'supplyOutput_1', 'amountA_1', 'amountB_1', 'amountB_1'])
Function name: _mintSupplyAmount
Phi
[i]Type for _amount

Name: _amount Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
supplySharesOf_13(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_15', 'supplySharesOf_12', 'supplySharesOf_0', 'supplySharesOf_8', 'supplySharesOf_4', 'supplySharesOf_18', 'supplySharesOf_21', 'supplySharesOf_19'])
Function name: _mintSupplyAmount
Phi
[i]Type for supplySharesOf

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_1(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
Function name: _mintSupplyAmount
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_5(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: _mintSupplyAmount
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_270(bool) = _amount_1 > 0
has variable
[i] TMP_270 cleared
clearing ir...?
CONDITION TMP_270
typecheckig node...
TMP_270(bool) = _amount_1 > 0
Function name: _mintSupplyAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_270

Name: TMP_270 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_270
Condition...
Conidtion: 
TMP_270
TMP_270
clearning node...
clearing ir...?
TMP_271(uint256) = INTERNAL_CALL, LendingPair._supplyToShares(address,uint256)(_token_1,_amount_1)
has variable
[i] TMP_271 cleared
clearing ir...?
totalSupplyShares_2(mapping(address => uint256)) := ϕ(['totalSupplyShares_8'])
has variable
clearing ir...?
totalSupplyAmount_6(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12'])
has variable
clearing ir...?
shares_1(uint256) := TMP_271(uint256)
has variable
[i] shares cleared
typecheckig node...
TMP_271(uint256) = INTERNAL_CALL, LendingPair._supplyToShares(address,uint256)(_token_1,_amount_1)
Function name: _mintSupplyAmount
Internal call...
_supplyToShares
_token
_amount
Function: _supplyToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _supplyToShares
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['supplyToken_3', '_token_1', '_token_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_amount_1(uint256) := ϕ(['supplyBurn_1', 'withdrawAmount_3', '_amount_1', '_amount_1', 'burnAmount_1'])
has variable
[i] _amount cleared
clearing ir...?
totalSupplyShares_7(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
has variable
clearing ir...?
totalSupplyAmount_11(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
typecheckig node...
_token_1(address) := ϕ(['supplyToken_3', '_token_1', '_token_1', '_token_1', '_token_1'])
Function name: _supplyToShares
Phi
[i]Type for _token

Name: _token Function: _supplyToShares
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['supplyBurn_1', 'withdrawAmount_3', '_amount_1', '_amount_1', 'burnAmount_1'])
Function name: _supplyToShares
Phi
[i]Type for _amount

Name: _amount Function: _supplyToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_7(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
Function name: _supplyToShares
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_11(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: _supplyToShares
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_100(uint256) -> totalSupplyShares_7[_token_1]
has variable
clearing ir...?
REF_101(uint256) -> totalSupplyAmount_11[_token_1]
has variable
clearing ir...?
TMP_319(uint256) = INTERNAL_CALL, LendingPair._amountToShares(uint256,uint256,uint256)(REF_100,REF_101,_amount_1)
has variable
[i] TMP_319 cleared
clearing ir...?
RETURN TMP_319
typecheckig node...
REF_100(uint256) -> totalSupplyShares_7[_token_1]
Function name: _supplyToShares
INDEX

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_100

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_101(uint256) -> totalSupplyAmount_11[_token_1]
Function name: _supplyToShares
INDEX

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_101

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_319(uint256) = INTERNAL_CALL, LendingPair._amountToShares(uint256,uint256,uint256)(REF_100,REF_101,_amount_1)
Function name: _supplyToShares
Internal call...
_amountToShares
REF_100
REF_101
_amount
Function: _amountToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _amountToShares
Function Visibility: internal
clearning node...
clearing ir...?
_totalShares_1(uint256) := ϕ(['REF_100', 'REF_96'])
has variable
[i] _totalShares cleared
clearing ir...?
_totalAmount_1(uint256) := ϕ(['REF_97', 'REF_101'])
has variable
[i] _totalAmount cleared
clearing ir...?
_inputSupply_1(uint256) := ϕ(['_amount_1', '_amount_1'])
has variable
[i] _inputSupply cleared
typecheckig node...
_totalShares_1(uint256) := ϕ(['REF_100', 'REF_96'])
Function name: _amountToShares
Phi
[i]Type for _totalShares

Name: _totalShares Function: _amountToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalAmount_1(uint256) := ϕ(['REF_97', 'REF_101'])
Function name: _amountToShares
Phi
[i]Type for _totalAmount

Name: _totalAmount Function: _amountToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_inputSupply_1(uint256) := ϕ(['_amount_1', '_amount_1'])
Function name: _amountToShares
Phi
[i]Type for _inputSupply

Name: _inputSupply Function: _amountToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_307(bool) = _totalShares_1 > 0
has variable
[i] TMP_307 cleared
clearing ir...?
TMP_308(bool) = _totalAmount_1 > 0
has variable
[i] TMP_308 cleared
clearing ir...?
TMP_309(bool) = TMP_307 && TMP_308
has variable
[i] TMP_309 cleared
clearing ir...?
CONDITION TMP_309
typecheckig node...
TMP_307(bool) = _totalShares_1 > 0
Function name: _amountToShares
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_307

Name: TMP_307 Function: _amountToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_308(bool) = _totalAmount_1 > 0
Function name: _amountToShares
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_308

Name: TMP_308 Function: _amountToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_309(bool) = TMP_307 && TMP_308
Function name: _amountToShares
[i]Type for TMP_309

Name: TMP_309 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_309
Condition...
Conidtion: 
TMP_309
TMP_309
clearning node...
clearing ir...?
RETURN _inputSupply_1
typecheckig node...
RETURN _inputSupply_1
RETURN

Name: _inputSupply Function: _amountToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
TMP_310(uint256) = _inputSupply_1 (c)* _totalShares_1
has variable
[i] TMP_310 cleared
clearing ir...?
TMP_311(uint256) = TMP_310 (c)/ _totalAmount_1
has variable
[i] TMP_311 cleared
clearing ir...?
RETURN TMP_311
typecheckig node...
TMP_310(uint256) = _inputSupply_1 (c)* _totalShares_1
Function name: _amountToShares
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _totalShares Function: _amountToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_310 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_310

Name: TMP_310 Function: _amountToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_311(uint256) = TMP_310 (c)/ _totalAmount_1
Function name: _amountToShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_311 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_311

Name: TMP_311 Function: _amountToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_311
RETURN

Name: TMP_311 Function: _amountToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_amountToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _amountToShares

Name: TMP_311 Function: _amountToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for TMP_319

Name: TMP_319 Function: _supplyToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_319
RETURN

Name: TMP_319 Function: _supplyToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_supplyToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _supplyToShares

Name: TMP_319 Function: _supplyToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_271

Name: TMP_271 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_2(mapping(address => uint256)) := ϕ(['totalSupplyShares_8'])
Function name: _mintSupplyAmount
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_6(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12'])
Function name: _mintSupplyAmount
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
shares_1(uint256) := TMP_271(uint256)
Function name: _mintSupplyAmount
asgn

Name: TMP_271 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: _mintSupplyAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for shares

Name: shares Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_70(mapping(address => uint256)) -> supplySharesOf_14[_token_1]
has variable
clearing ir...?
REF_71(uint256) -> REF_70[_account_1]
has variable
clearing ir...?
supplySharesOf_15(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_14'])
has variable
clearing ir...?
REF_71(-> supplySharesOf_15) = REF_71 (c)+ shares_1
has variable
typecheckig node...
REF_70(mapping(address => uint256)) -> supplySharesOf_14[_token_1]
Function name: _mintSupplyAmount
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
supplySharesOf
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256
[i]Type for REF_70

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_71(uint256) -> REF_70[_account_1]
Function name: _mintSupplyAmount
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_71

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
supplySharesOf_15(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_14'])
Function name: _mintSupplyAmount
Phi
[i]Type for supplySharesOf

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_71(-> supplySharesOf_15) = REF_71 (c)+ shares_1
Function name: _mintSupplyAmount

Name: REF_71 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: shares Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_71 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_71

Name: REF_71 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_72(uint256) -> totalSupplyShares_2[_token_1]
has variable
clearing ir...?
totalSupplyShares_3(mapping(address => uint256)) := ϕ(['totalSupplyShares_2'])
has variable
clearing ir...?
REF_72(-> totalSupplyShares_3) = REF_72 (c)+ shares_1
has variable
typecheckig node...
REF_72(uint256) -> totalSupplyShares_2[_token_1]
Function name: _mintSupplyAmount
INDEX

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_72

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_3(mapping(address => uint256)) := ϕ(['totalSupplyShares_2'])
Function name: _mintSupplyAmount
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_72(-> totalSupplyShares_3) = REF_72 (c)+ shares_1
Function name: _mintSupplyAmount

Name: REF_72 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: shares Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_72 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_72

Name: REF_72 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_73(uint256) -> totalSupplyAmount_6[_token_1]
has variable
clearing ir...?
totalSupplyAmount_7(mapping(address => uint256)) := ϕ(['totalSupplyAmount_6'])
has variable
clearing ir...?
REF_73(-> totalSupplyAmount_7) = REF_73 (c)+ _amount_1
has variable
typecheckig node...
REF_73(uint256) -> totalSupplyAmount_6[_token_1]
Function name: _mintSupplyAmount
INDEX

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_73

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_7(mapping(address => uint256)) := ϕ(['totalSupplyAmount_6'])
Function name: _mintSupplyAmount
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_73(-> totalSupplyAmount_7) = REF_73 (c)+ _amount_1
Function name: _mintSupplyAmount

Name: REF_73 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_73 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_73

Name: REF_73 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_mintSupplyAmount":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _mintSupplyAmount

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_258

Name: TMP_258 Function: _unwrapUniPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_259(uint256) = INTERNAL_CALL, LendingPair._mintSupplyAmount(address,address,uint256)(tokenB_47,_account_1,amountB_1)
has variable
[i] TMP_259 cleared
typecheckig node...
TMP_259(uint256) = INTERNAL_CALL, LendingPair._mintSupplyAmount(address,address,uint256)(tokenB_47,_account_1,amountB_1)
Function name: _unwrapUniPosition
Internal call...
_mintSupplyAmount
tokenB
_account
amountB
Function: _mintSupplyAmount
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', '_account', [], -1]
cur_param: [[-1], [-1], 0, None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'TOKA', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 0, None, [], -1]
0

Name: PIC_68 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_259 Function: _unwrapUniPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_259

Name: TMP_259 Function: _unwrapUniPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_unwrapUniPosition":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _unwrapUniPosition
done.
lendingController_8(ILendingController) := ϕ(['lendingController_33'])
Function name: liquidateAccount
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_18(address) := ϕ(['tokenA_44'])
Function name: liquidateAccount
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_20(address) := ϕ(['tokenB_48'])
Function name: liquidateAccount
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_167(uint256) = INTERNAL_CALL, LendingPair._debtOf(address,address)(_repayToken_1,_account_1)
has variable
[i] TMP_167 cleared
clearing ir...?
TMP_168(uint256) = LIBRARY_CALL, dest:Math, function:Math.min(uint256,uint256), arguments:['_repayAmount_1', 'TMP_167'] 
has variable
[i] TMP_168 cleared
clearing ir...?
_repayAmount_2(uint256) := TMP_168(uint256)
has variable
[i] _repayAmount cleared
typecheckig node...
TMP_167(uint256) = INTERNAL_CALL, LendingPair._debtOf(address,address)(_repayToken_1,_account_1)
Function name: liquidateAccount
Internal call...
_debtOf
_repayToken
_account
Function: _debtOf
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', '_account', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
0

Name: PIC_51 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_167 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_167

Name: TMP_167 Function: liquidateAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_168(uint256) = LIBRARY_CALL, dest:Math, function:Math.min(uint256,uint256), arguments:['_repayAmount_1', 'TMP_167'] 
Function name: liquidateAccount
Library Call: min
hlc contract name: Math func_name: min
('t', [1], [-1], 0, None)
_repayAmount
TMP_167
wfc len: 1
Check copy_toekn_tuple
([-1], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_168

Name: TMP_168 Function: liquidateAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_repayAmount_2(uint256) := TMP_168(uint256)
Function name: liquidateAccount
asgn

Name: TMP_168 Function: liquidateAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _repayAmount Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _repayAmount

Name: _repayAmount Function: liquidateAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_3(uint256,uint256) = HIGH_LEVEL_CALL, dest:lendingController_9(ILendingController), function:tokenPrices, arguments:['_repayToken_1', 'supplyToken_3']  
has variable
clearing ir...?
pendingSystemFees_17(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_16'])
has variable
clearing ir...?
lendingController_10(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_9', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
clearing ir...?
tokenA_20(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_19', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
has variable
clearing ir...?
tokenB_22(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9', 'tokenB_21'])
has variable
clearing ir...?
repayPrice_1(uint256)= UNPACK TUPLE_3 index: 0 
has variable
[i] repayPrice cleared
clearing ir...?
supplyPrice_1(uint256)= UNPACK TUPLE_3 index: 1 
has variable
[i] supplyPrice cleared
typecheckig node...
TUPLE_3(uint256,uint256) = HIGH_LEVEL_CALL, dest:lendingController_9(ILendingController), function:tokenPrices, arguments:['_repayToken_1', 'supplyToken_3']  
Function name: liquidateAccount
High Call: tokenPrices
func name:tokenPrices
other func name:tokenPrices
TUPLE_3
hlc contract name: LENDINGCONTR func_name: tokenPrices
('c', [1], [-1], 0, None)
_repayToken
supplyToken
('c', [2], [-1], 0, None)
_repayToken
supplyToken
wfc len: 2
COPIED
[i]Type for TUPLE_3

Name: TUPLE_3 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pendingSystemFees_17(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_16'])
Function name: liquidateAccount
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_10(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_9', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: liquidateAccount
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_20(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_19', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: liquidateAccount
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_22(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9', 'tokenB_21'])
Function name: liquidateAccount
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
repayPrice_1(uint256)= UNPACK TUPLE_3 index: 0 
Function name: liquidateAccount
Reading tuple TUPLE_3 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for repayPrice

Name: repayPrice Function: liquidateAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
supplyPrice_1(uint256)= UNPACK TUPLE_3 index: 1 
Function name: liquidateAccount
Reading tuple TUPLE_3 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for supplyPrice

Name: supplyPrice Function: liquidateAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_169(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_repayToken_1,supplyToken_3,_repayAmount_2,repayPrice_1,supplyPrice_1)
has variable
[i] TMP_169 cleared
clearing ir...?
supplyDebt_1(uint256) := TMP_169(uint256)
has variable
[i] supplyDebt cleared
typecheckig node...
TMP_169(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_repayToken_1,supplyToken_3,_repayAmount_2,repayPrice_1,supplyPrice_1)
Function name: liquidateAccount
Internal call...
_convertTokenValues
_repayToken
supplyToken
_repayAmount
repayPrice
supplyPrice
Function: _convertTokenValues
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [2]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', 'TOKA', [], -1]
[[], [], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
added
xyz
Function name: _convertTokenValues
Function Visibility: internal
clearning node...
clearing ir...?
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
has variable
[i] _fromToken cleared
clearing ir...?
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
has variable
[i] _toToken cleared
clearing ir...?
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
has variable
[i] _inputAmount cleared
clearing ir...?
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
has variable
[i] _fromPrice cleared
clearing ir...?
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
has variable
[i] _toPrice cleared
clearing ir...?
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
has variable
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_340 cleared
clearing ir...?
REF_115(uint256) -> decimals_3[_fromToken_1]
has variable
clearing ir...?
TMP_341(uint256) = 10 (c)** REF_115
has variable
[i] TMP_341 cleared
clearing ir...?
TMP_342(uint256) = TMP_340 (c)/ TMP_341
has variable
[i] TMP_342 cleared
clearing ir...?
priceFrom_1(uint256) := TMP_342(uint256)
has variable
[i] priceFrom cleared
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_343 cleared
clearing ir...?
REF_116(uint256) -> decimals_3[_toToken_1]
has variable
clearing ir...?
TMP_344(uint256) = 10 (c)** REF_116
has variable
[i] TMP_344 cleared
clearing ir...?
TMP_345(uint256) = TMP_343 (c)/ TMP_344
has variable
[i] TMP_345 cleared
clearing ir...?
priceTo_1(uint256) := TMP_345(uint256)
has variable
[i] priceTo cleared
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_70 Function: None
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_71 Function: None
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: _convertTokenValues

Name: TMP_347 Function: _convertTokenValues
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_169

Name: TMP_169 Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_169(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_repayToken_1,supplyToken_3,_repayAmount_2,repayPrice_1,supplyPrice_1)
XXXXX
supplyDebt_1(uint256) := TMP_169(uint256)
Function name: liquidateAccount
asgn

Name: TMP_169 Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: supplyDebt Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for supplyDebt

Name: supplyDebt Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_170(uint256) = HIGH_LEVEL_CALL, dest:lendingController_11(ILendingController), function:liqFeeCaller, arguments:['_repayToken_1']  
has variable
[i] TMP_170 cleared
clearing ir...?
pendingSystemFees_19(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_18'])
has variable
clearing ir...?
lendingController_12(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_11', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
clearing ir...?
tokenA_22(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_21', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
has variable
clearing ir...?
tokenB_24(address) := ϕ(['tokenB_5', 'tokenB_23', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
clearing ir...?
TMP_171(uint256) = supplyDebt_1 (c)* TMP_170
has variable
[i] TMP_171 cleared
clearing ir...?
TMP_172(uint256) = TMP_171 (c)/ 100000000000000000000
has variable
[i] TMP_172 cleared
clearing ir...?
callerFee_1(uint256) := TMP_172(uint256)
has variable
[i] callerFee cleared
typecheckig node...
TMP_170(uint256) = HIGH_LEVEL_CALL, dest:lendingController_11(ILendingController), function:liqFeeCaller, arguments:['_repayToken_1']  
Function name: liquidateAccount
High Call: liqFeeCaller
func name:liqFeeCaller
other func name:liqFeeCaller
TMP_170
hlc contract name: LENDINGCONTR func_name: liqFeeCaller
wfc len: 0
COPIED
[i]Type for TMP_170

Name: TMP_170 Function: liquidateAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pendingSystemFees_19(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_18'])
Function name: liquidateAccount
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_12(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_11', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: liquidateAccount
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_22(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_21', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: liquidateAccount
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_24(address) := ϕ(['tokenB_5', 'tokenB_23', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: liquidateAccount
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
TMP_171(uint256) = supplyDebt_1 (c)* TMP_170
Function name: liquidateAccount
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: supplyDebt Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_171 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_171

Name: TMP_171 Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_172(uint256) = TMP_171 (c)/ 100000000000000000000
Function name: liquidateAccount
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_172 Function: liquidateAccount
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: TMP_171 Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_172 Function: liquidateAccount
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_172

Name: TMP_172 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
callerFee_1(uint256) := TMP_172(uint256)
Function name: liquidateAccount
asgn

Name: TMP_172 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: callerFee Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for callerFee

Name: callerFee Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_173(uint256) = HIGH_LEVEL_CALL, dest:lendingController_12(ILendingController), function:liqFeeSystem, arguments:['_repayToken_1']  
has variable
[i] TMP_173 cleared
clearing ir...?
pendingSystemFees_20(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_19', 'pendingSystemFees_4'])
has variable
clearing ir...?
lendingController_13(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_12', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
clearing ir...?
tokenA_23(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_22', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
has variable
clearing ir...?
tokenB_25(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9', 'tokenB_24'])
has variable
clearing ir...?
TMP_174(uint256) = supplyDebt_1 (c)* TMP_173
has variable
[i] TMP_174 cleared
clearing ir...?
TMP_175(uint256) = TMP_174 (c)/ 100000000000000000000
has variable
[i] TMP_175 cleared
clearing ir...?
systemFee_1(uint256) := TMP_175(uint256)
has variable
[i] systemFee cleared
typecheckig node...
TMP_173(uint256) = HIGH_LEVEL_CALL, dest:lendingController_12(ILendingController), function:liqFeeSystem, arguments:['_repayToken_1']  
Function name: liquidateAccount
High Call: liqFeeSystem
func name:liqFeeSystem
other func name:liqFeeSystem
TMP_173
hlc contract name: LENDINGCONTR func_name: liqFeeSystem
wfc len: 0
COPIED
[i]Type for TMP_173

Name: TMP_173 Function: liquidateAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pendingSystemFees_20(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_19', 'pendingSystemFees_4'])
Function name: liquidateAccount
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_13(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_12', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: liquidateAccount
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_23(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_22', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: liquidateAccount
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_25(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9', 'tokenB_24'])
Function name: liquidateAccount
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
TMP_174(uint256) = supplyDebt_1 (c)* TMP_173
Function name: liquidateAccount
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: supplyDebt Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_174 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_174

Name: TMP_174 Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_175(uint256) = TMP_174 (c)/ 100000000000000000000
Function name: liquidateAccount
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_175 Function: liquidateAccount
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: TMP_174 Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_175 Function: liquidateAccount
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_175

Name: TMP_175 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
systemFee_1(uint256) := TMP_175(uint256)
Function name: liquidateAccount
asgn

Name: TMP_175 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: systemFee Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for systemFee

Name: systemFee Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_176(uint256) = supplyDebt_1 (c)+ callerFee_1
has variable
[i] TMP_176 cleared
clearing ir...?
TMP_177(uint256) = TMP_176 (c)+ systemFee_1
has variable
[i] TMP_177 cleared
clearing ir...?
supplyBurn_1(uint256) := TMP_177(uint256)
has variable
[i] supplyBurn cleared
typecheckig node...
TMP_176(uint256) = supplyDebt_1 (c)+ callerFee_1
Function name: liquidateAccount

Name: TMP_176 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: supplyDebt Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_176 Function: liquidateAccount
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_176

Name: TMP_176 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
TMP_177(uint256) = TMP_176 (c)+ systemFee_1
Function name: liquidateAccount

Name: TMP_177 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: -20 rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_176 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: TMP_177 Function: liquidateAccount
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_177

Name: TMP_177 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
supplyBurn_1(uint256) := TMP_177(uint256)
Function name: liquidateAccount
asgn

Name: TMP_177 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: supplyBurn Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for supplyBurn

Name: supplyBurn Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_178(uint256) = supplyDebt_1 (c)+ callerFee_1
has variable
[i] TMP_178 cleared
clearing ir...?
supplyOutput_1(uint256) := TMP_178(uint256)
has variable
[i] supplyOutput cleared
typecheckig node...
TMP_178(uint256) = supplyDebt_1 (c)+ callerFee_1
Function name: liquidateAccount

Name: TMP_178 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: supplyDebt Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_178 Function: liquidateAccount
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_178

Name: TMP_178 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
supplyOutput_1(uint256) := TMP_178(uint256)
Function name: liquidateAccount
asgn

Name: TMP_178 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: supplyOutput Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for supplyOutput

Name: supplyOutput Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_179(bool) = supplyOutput_1 >= _minSupplyOutput_1
has variable
[i] TMP_179 cleared
clearing ir...?
TMP_180(None) = SOLIDITY_CALL require(bool,string)(TMP_179,LendingPair: supplyOutput >= _minSupplyOutput)
typecheckig node...
TMP_179(bool) = supplyOutput_1 >= _minSupplyOutput_1
Function name: liquidateAccount
testing gt...
lnorm: -20 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_179

Name: TMP_179 Function: liquidateAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_180(None) = SOLIDITY_CALL require(bool,string)(TMP_179,LendingPair: supplyOutput >= _minSupplyOutput)
[i]Type for TMP_180

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_181(uint256) = INTERNAL_CALL, LendingPair._supplyToShares(address,uint256)(supplyToken_3,supplyBurn_1)
has variable
[i] TMP_181 cleared
clearing ir...?
TMP_182(uint256) = INTERNAL_CALL, LendingPair._burnSupplyShares(address,address,uint256)(supplyToken_3,_account_1,TMP_181)
has variable
[i] TMP_182 cleared
typecheckig node...
TMP_181(uint256) = INTERNAL_CALL, LendingPair._supplyToShares(address,uint256)(supplyToken_3,supplyBurn_1)
Function name: liquidateAccount
Internal call...
_supplyToShares
supplyToken
supplyBurn
Function: _supplyToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: -20
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _supplyToShares
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['supplyToken_3', '_token_1', '_token_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_amount_1(uint256) := ϕ(['supplyBurn_1', 'withdrawAmount_3', '_amount_1', '_amount_1', 'burnAmount_1'])
has variable
[i] _amount cleared
clearing ir...?
totalSupplyShares_7(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
has variable
clearing ir...?
totalSupplyAmount_11(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
typecheckig node...
_token_1(address) := ϕ(['supplyToken_3', '_token_1', '_token_1', '_token_1', '_token_1'])
Function name: _supplyToShares
Phi
[i]Type for _token

Name: _token Function: _supplyToShares
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['supplyBurn_1', 'withdrawAmount_3', '_amount_1', '_amount_1', 'burnAmount_1'])
Function name: _supplyToShares
Phi
[i]Type for _amount

Name: _amount Function: _supplyToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_7(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
Function name: _supplyToShares
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_11(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: _supplyToShares
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_100(uint256) -> totalSupplyShares_7[_token_1]
has variable
clearing ir...?
REF_101(uint256) -> totalSupplyAmount_11[_token_1]
has variable
clearing ir...?
TMP_319(uint256) = INTERNAL_CALL, LendingPair._amountToShares(uint256,uint256,uint256)(REF_100,REF_101,_amount_1)
has variable
[i] TMP_319 cleared
clearing ir...?
RETURN TMP_319
typecheckig node...
REF_100(uint256) -> totalSupplyShares_7[_token_1]
Function name: _supplyToShares
INDEX

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_100

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_101(uint256) -> totalSupplyAmount_11[_token_1]
Function name: _supplyToShares
INDEX

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_101

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_319(uint256) = INTERNAL_CALL, LendingPair._amountToShares(uint256,uint256,uint256)(REF_100,REF_101,_amount_1)
Function name: _supplyToShares
Internal call...
_amountToShares
REF_100
REF_101
_amount
Function: _amountToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [2]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _amountToShares
Function Visibility: internal
clearning node...
clearing ir...?
_totalShares_1(uint256) := ϕ(['REF_100', 'REF_96'])
has variable
[i] _totalShares cleared
clearing ir...?
_totalAmount_1(uint256) := ϕ(['REF_97', 'REF_101'])
has variable
[i] _totalAmount cleared
clearing ir...?
_inputSupply_1(uint256) := ϕ(['_amount_1', '_amount_1'])
has variable
[i] _inputSupply cleared
typecheckig node...
_totalShares_1(uint256) := ϕ(['REF_100', 'REF_96'])
Function name: _amountToShares
Phi
[i]Type for _totalShares

Name: _totalShares Function: _amountToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalAmount_1(uint256) := ϕ(['REF_97', 'REF_101'])
Function name: _amountToShares
Phi
[i]Type for _totalAmount

Name: _totalAmount Function: _amountToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_inputSupply_1(uint256) := ϕ(['_amount_1', '_amount_1'])
Function name: _amountToShares
Phi
[i]Type for _inputSupply

Name: _inputSupply Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_307(bool) = _totalShares_1 > 0
has variable
[i] TMP_307 cleared
clearing ir...?
TMP_308(bool) = _totalAmount_1 > 0
has variable
[i] TMP_308 cleared
clearing ir...?
TMP_309(bool) = TMP_307 && TMP_308
has variable
[i] TMP_309 cleared
clearing ir...?
CONDITION TMP_309
typecheckig node...
TMP_307(bool) = _totalShares_1 > 0
Function name: _amountToShares
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_307

Name: TMP_307 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_308(bool) = _totalAmount_1 > 0
Function name: _amountToShares
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_308

Name: TMP_308 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_309(bool) = TMP_307 && TMP_308
Function name: _amountToShares
[i]Type for TMP_309

Name: TMP_309 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_309
Condition...
Conidtion: 
TMP_309
TMP_309
clearning node...
clearing ir...?
RETURN _inputSupply_1
typecheckig node...
RETURN _inputSupply_1
RETURN

Name: _inputSupply Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
TMP_310(uint256) = _inputSupply_1 (c)* _totalShares_1
has variable
[i] TMP_310 cleared
clearing ir...?
TMP_311(uint256) = TMP_310 (c)/ _totalAmount_1
has variable
[i] TMP_311 cleared
clearing ir...?
RETURN TMP_311
typecheckig node...
TMP_310(uint256) = _inputSupply_1 (c)* _totalShares_1
Function name: _amountToShares
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _inputSupply Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_310 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_310

Name: TMP_310 Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_311(uint256) = TMP_310 (c)/ _totalAmount_1
Function name: _amountToShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_311 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_310 Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_311 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_311

Name: TMP_311 Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_311
RETURN

Name: TMP_311 Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_amountToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _amountToShares

Name: TMP_311 Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
___
Check copy_toekn_tuple
([1], [2], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for TMP_319

Name: TMP_319 Function: _supplyToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_319
RETURN

Name: TMP_319 Function: _supplyToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_supplyToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _supplyToShares

Name: TMP_319 Function: _supplyToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_181

Name: TMP_181 Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_182(uint256) = INTERNAL_CALL, LendingPair._burnSupplyShares(address,address,uint256)(supplyToken_3,_account_1,TMP_181)
Function name: liquidateAccount
Internal call...
_burnSupplyShares
supplyToken
_account
TMP_181
Function: _burnSupplyShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [2]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [2]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 0, 'TOKB', [], -1]
[[-1], [-1], 'u', None, [], -1]
[[1], [2], 'u', None, [], -1]
added
xyz
Function name: _burnSupplyShares
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', 'supplyToken_3', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_account_1(address) := ϕ(['_account_1', 'msg.sender', '_account_1'])
has variable
[i] _account cleared
clearing ir...?
_shares_1(uint256) := ϕ(['TMP_181', 'TMP_266', '_shares_1'])
has variable
[i] _shares cleared
clearing ir...?
supplySharesOf_16(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_15', 'supplySharesOf_12', 'supplySharesOf_0', 'supplySharesOf_8', 'supplySharesOf_4', 'supplySharesOf_18', 'supplySharesOf_21', 'supplySharesOf_19'])
has variable
clearing ir...?
totalSupplyShares_4(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
has variable
clearing ir...?
totalSupplyAmount_8(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', 'supplyToken_3', '_token_1'])
Function name: _burnSupplyShares
Phi
[i]Type for _token

Name: _token Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_account_1(address) := ϕ(['_account_1', 'msg.sender', '_account_1'])
Function name: _burnSupplyShares
Phi
[i]Type for _account

Name: _account Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['TMP_181', 'TMP_266', '_shares_1'])
Function name: _burnSupplyShares
Phi
[i]Type for _shares

Name: _shares Function: _burnSupplyShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
supplySharesOf_16(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_15', 'supplySharesOf_12', 'supplySharesOf_0', 'supplySharesOf_8', 'supplySharesOf_4', 'supplySharesOf_18', 'supplySharesOf_21', 'supplySharesOf_19'])
Function name: _burnSupplyShares
Phi
[i]Type for supplySharesOf

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_4(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
Function name: _burnSupplyShares
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_8(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: _burnSupplyShares
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_272(bool) = _shares_1 > 0
has variable
[i] TMP_272 cleared
clearing ir...?
CONDITION TMP_272
typecheckig node...
TMP_272(bool) = _shares_1 > 0
Function name: _burnSupplyShares
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_272

Name: TMP_272 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_272
Condition...
Conidtion: 
TMP_272
TMP_272
clearning node...
clearing ir...?
TMP_273(uint256) = INTERNAL_CALL, LendingPair._sharesToSupply(address,uint256)(_token_1,_shares_1)
has variable
[i] TMP_273 cleared
clearing ir...?
totalSupplyShares_5(mapping(address => uint256)) := ϕ(['totalSupplyShares_10'])
has variable
clearing ir...?
totalSupplyAmount_9(mapping(address => uint256)) := ϕ(['totalSupplyAmount_14'])
has variable
clearing ir...?
amount_1(uint256) := TMP_273(uint256)
has variable
[i] amount cleared
typecheckig node...
TMP_273(uint256) = INTERNAL_CALL, LendingPair._sharesToSupply(address,uint256)(_token_1,_shares_1)
Function name: _burnSupplyShares
Internal call...
_sharesToSupply
_token
_shares
Function: _sharesToSupply
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToSupply
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', 'TMP_107', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_shares_1(uint256) := ϕ(['_shares_1', 'REF_107', 'shares_1', 'shares_1'])
has variable
[i] _shares cleared
clearing ir...?
totalSupplyShares_9(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
has variable
clearing ir...?
totalSupplyAmount_13(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', 'TMP_107', '_token_1', '_token_1'])
Function name: _sharesToSupply
Phi
[i]Type for _token

Name: _token Function: _sharesToSupply
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['_shares_1', 'REF_107', 'shares_1', 'shares_1'])
Function name: _sharesToSupply
Phi
[i]Type for _shares

Name: _shares Function: _sharesToSupply
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_9(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
Function name: _sharesToSupply
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_13(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: _sharesToSupply
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_102(uint256) -> totalSupplyShares_9[_token_1]
has variable
clearing ir...?
REF_103(uint256) -> totalSupplyAmount_13[_token_1]
has variable
clearing ir...?
TMP_320(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_102,REF_103,_shares_1)
has variable
[i] TMP_320 cleared
clearing ir...?
RETURN TMP_320
typecheckig node...
REF_102(uint256) -> totalSupplyShares_9[_token_1]
Function name: _sharesToSupply
INDEX

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_102

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_103(uint256) -> totalSupplyAmount_13[_token_1]
Function name: _sharesToSupply
INDEX

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_103

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_320(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_102,REF_103,_shares_1)
Function name: _sharesToSupply
Internal call...
_sharesToAmount
REF_102
REF_103
_shares
Function: _sharesToAmount
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [2]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToAmount
Function Visibility: internal
clearning node...
clearing ir...?
_totalShares_1(uint256) := ϕ(['REF_102', 'REF_98'])
has variable
[i] _totalShares cleared
clearing ir...?
_totalAmount_1(uint256) := ϕ(['REF_99', 'REF_103'])
has variable
[i] _totalAmount cleared
clearing ir...?
_inputShares_1(uint256) := ϕ(['_shares_1', '_shares_1'])
has variable
[i] _inputShares cleared
typecheckig node...
_totalShares_1(uint256) := ϕ(['REF_102', 'REF_98'])
Function name: _sharesToAmount
Phi
[i]Type for _totalShares

Name: _totalShares Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalAmount_1(uint256) := ϕ(['REF_99', 'REF_103'])
Function name: _sharesToAmount
Phi
[i]Type for _totalAmount

Name: _totalAmount Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_inputShares_1(uint256) := ϕ(['_shares_1', '_shares_1'])
Function name: _sharesToAmount
Phi
[i]Type for _inputShares

Name: _inputShares Function: _sharesToAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_312(bool) = _totalShares_1 > 0
has variable
[i] TMP_312 cleared
clearing ir...?
TMP_313(bool) = _totalAmount_1 > 0
has variable
[i] TMP_313 cleared
clearing ir...?
TMP_314(bool) = TMP_312 && TMP_313
has variable
[i] TMP_314 cleared
clearing ir...?
CONDITION TMP_314
typecheckig node...
TMP_312(bool) = _totalShares_1 > 0
Function name: _sharesToAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_312

Name: TMP_312 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_313(bool) = _totalAmount_1 > 0
Function name: _sharesToAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_313

Name: TMP_313 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_314(bool) = TMP_312 && TMP_313
Function name: _sharesToAmount
[i]Type for TMP_314

Name: TMP_314 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_314
Condition...
Conidtion: 
TMP_314
TMP_314
clearning node...
clearing ir...?
RETURN _inputShares_1
typecheckig node...
RETURN _inputShares_1
RETURN

Name: _inputShares Function: _sharesToAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
has variable
[i] TMP_315 cleared
clearing ir...?
TMP_316(uint256) = TMP_315 (c)/ _totalShares_1
has variable
[i] TMP_316 cleared
clearing ir...?
RETURN TMP_316
typecheckig node...
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
Function name: _sharesToAmount
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _inputShares Function: _sharesToAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_315 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_315

Name: TMP_315 Function: _sharesToAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_316(uint256) = TMP_315 (c)/ _totalShares_1
Function name: _sharesToAmount
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_316 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_315 Function: _sharesToAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_316 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_316

Name: TMP_316 Function: _sharesToAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_316
RETURN

Name: TMP_316 Function: _sharesToAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToAmount":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToAmount

Name: TMP_316 Function: _sharesToAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
___
Check copy_toekn_tuple
([1], [2], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for TMP_320

Name: TMP_320 Function: _sharesToSupply
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_320
RETURN

Name: TMP_320 Function: _sharesToSupply
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToSupply":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToSupply

Name: TMP_320 Function: _sharesToSupply
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_273

Name: TMP_273 Function: _burnSupplyShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_5(mapping(address => uint256)) := ϕ(['totalSupplyShares_10'])
Function name: _burnSupplyShares
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_9(mapping(address => uint256)) := ϕ(['totalSupplyAmount_14'])
Function name: _burnSupplyShares
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint256) := TMP_273(uint256)
Function name: _burnSupplyShares
asgn

Name: TMP_273 Function: _burnSupplyShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnSupplyShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amount

Name: amount Function: _burnSupplyShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_74(mapping(address => uint256)) -> supplySharesOf_17[_token_1]
has variable
clearing ir...?
REF_75(uint256) -> REF_74[_account_1]
has variable
clearing ir...?
supplySharesOf_18(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_17'])
has variable
clearing ir...?
REF_75(-> supplySharesOf_18) = REF_75 (c)- _shares_1
has variable
typecheckig node...
REF_74(mapping(address => uint256)) -> supplySharesOf_17[_token_1]
Function name: _burnSupplyShares
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
supplySharesOf
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256
[i]Type for REF_74

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_75(uint256) -> REF_74[_account_1]
Function name: _burnSupplyShares
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_75

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
supplySharesOf_18(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_17'])
Function name: _burnSupplyShares
Phi
[i]Type for supplySharesOf

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_75(-> supplySharesOf_18) = REF_75 (c)- _shares_1
Function name: _burnSupplyShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_75 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnSupplyShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnSupplyShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_75 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_75

Name: REF_75 Function: _burnSupplyShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_76(uint256) -> totalSupplyShares_5[_token_1]
has variable
clearing ir...?
totalSupplyShares_6(mapping(address => uint256)) := ϕ(['totalSupplyShares_5'])
has variable
clearing ir...?
REF_76(-> totalSupplyShares_6) = REF_76 (c)- _shares_1
has variable
typecheckig node...
REF_76(uint256) -> totalSupplyShares_5[_token_1]
Function name: _burnSupplyShares
INDEX

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_76

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_6(mapping(address => uint256)) := ϕ(['totalSupplyShares_5'])
Function name: _burnSupplyShares
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_76(-> totalSupplyShares_6) = REF_76 (c)- _shares_1
Function name: _burnSupplyShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_76 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnSupplyShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnSupplyShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_76 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_76

Name: REF_76 Function: _burnSupplyShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_77(uint256) -> totalSupplyAmount_9[_token_1]
has variable
clearing ir...?
totalSupplyAmount_10(mapping(address => uint256)) := ϕ(['totalSupplyAmount_9'])
has variable
clearing ir...?
REF_77(-> totalSupplyAmount_10) = REF_77 (c)- amount_1
has variable
typecheckig node...
REF_77(uint256) -> totalSupplyAmount_9[_token_1]
Function name: _burnSupplyShares
INDEX

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_77

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_10(mapping(address => uint256)) := ϕ(['totalSupplyAmount_9'])
Function name: _burnSupplyShares
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_77(-> totalSupplyAmount_10) = REF_77 (c)- amount_1
Function name: _burnSupplyShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_77 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnSupplyShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnSupplyShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_77

Name: REF_77 Function: _burnSupplyShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_burnSupplyShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _burnSupplyShares

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_182

Name: TMP_182 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_44(uint256) -> pendingSystemFees_22[supplyToken_3]
has variable
clearing ir...?
pendingSystemFees_23(mapping(address => uint256)) := ϕ(['pendingSystemFees_22'])
has variable
clearing ir...?
REF_44(-> pendingSystemFees_23) = REF_44 (c)+ systemFee_1
has variable
typecheckig node...
REF_44(uint256) -> pendingSystemFees_22[supplyToken_3]
Function name: liquidateAccount
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
pendingSystemFees
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_44

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pendingSystemFees_23(mapping(address => uint256)) := ϕ(['pendingSystemFees_22'])
Function name: liquidateAccount
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_44(-> pendingSystemFees_23) = REF_44 (c)+ systemFee_1
Function name: liquidateAccount

Name: REF_44 Function: liquidateAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: systemFee Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: REF_44 Function: liquidateAccount
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_44

Name: REF_44 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_183(uint256) = INTERNAL_CALL, LendingPair._debtToShares(address,uint256)(_repayToken_1,_repayAmount_2)
has variable
[i] TMP_183 cleared
clearing ir...?
TMP_184(uint256) = INTERNAL_CALL, LendingPair._burnDebtShares(address,address,uint256)(_repayToken_1,_account_1,TMP_183)
has variable
[i] TMP_184 cleared
typecheckig node...
TMP_183(uint256) = INTERNAL_CALL, LendingPair._debtToShares(address,uint256)(_repayToken_1,_repayAmount_2)
Function name: liquidateAccount
Internal call...
_debtToShares
_repayToken
_repayAmount
Function: _debtToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 0, None, [], -1]
added
xyz
Function name: _debtToShares
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1', '_token_1', '_repayToken_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_amount_1(uint256) := ϕ(['_amount_1', '_repayAmount_2', '_amount_1', 'repayAmount_3', 'burnAmount_1'])
has variable
[i] _amount cleared
clearing ir...?
totalDebtShares_7(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
has variable
clearing ir...?
totalDebtAmount_10(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', '_token_1', '_repayToken_1', '_token_1'])
Function name: _debtToShares
Phi
[i]Type for _token

Name: _token Function: _debtToShares
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['_amount_1', '_repayAmount_2', '_amount_1', 'repayAmount_3', 'burnAmount_1'])
Function name: _debtToShares
Phi
[i]Type for _amount

Name: _amount Function: _debtToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_7(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
Function name: _debtToShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_10(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
Function name: _debtToShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_96(uint256) -> totalDebtShares_7[_token_1]
has variable
clearing ir...?
REF_97(uint256) -> totalDebtAmount_10[_token_1]
has variable
clearing ir...?
TMP_317(uint256) = INTERNAL_CALL, LendingPair._amountToShares(uint256,uint256,uint256)(REF_96,REF_97,_amount_1)
has variable
[i] TMP_317 cleared
clearing ir...?
RETURN TMP_317
typecheckig node...
REF_96(uint256) -> totalDebtShares_7[_token_1]
Function name: _debtToShares
INDEX

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_96

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_97(uint256) -> totalDebtAmount_10[_token_1]
Function name: _debtToShares
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_97

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_317(uint256) = INTERNAL_CALL, LendingPair._amountToShares(uint256,uint256,uint256)(REF_96,REF_97,_amount_1)
Function name: _debtToShares
Internal call...
_amountToShares
REF_96
REF_97
_amount
Function: _amountToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
0
[i]Type for TMP_317

Name: TMP_317 Function: _debtToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_317
RETURN

Name: TMP_317 Function: _debtToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_debtToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _debtToShares

Name: TMP_317 Function: _debtToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_183

Name: TMP_183 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_184(uint256) = INTERNAL_CALL, LendingPair._burnDebtShares(address,address,uint256)(_repayToken_1,_account_1,TMP_183)
Function name: liquidateAccount
Internal call...
_burnDebtShares
_repayToken
_account
TMP_183
Function: _burnDebtShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
cur_param: [[-1], [-1], 'u', '_account', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _burnDebtShares
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_repayToken_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_account_1(address) := ϕ(['_account_1', '_account_1', '_account_1'])
has variable
[i] _account cleared
clearing ir...?
_shares_1(uint256) := ϕ(['TMP_183', 'TMP_264', '_shares_1'])
has variable
[i] _shares cleared
clearing ir...?
debtSharesOf_17(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
has variable
clearing ir...?
totalDebtShares_4(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
has variable
clearing ir...?
totalDebtAmount_4(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_repayToken_1', '_token_1', '_token_1'])
Function name: _burnDebtShares
Phi
[i]Type for _token

Name: _token Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
_account_1(address) := ϕ(['_account_1', '_account_1', '_account_1'])
Function name: _burnDebtShares
Phi
[i]Type for _account

Name: _account Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['TMP_183', 'TMP_264', '_shares_1'])
Function name: _burnDebtShares
Phi
[i]Type for _shares

Name: _shares Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
debtSharesOf_17(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
Function name: _burnDebtShares
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_4(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_4(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_276(bool) = _shares_1 > 0
has variable
[i] TMP_276 cleared
clearing ir...?
CONDITION TMP_276
typecheckig node...
TMP_276(bool) = _shares_1 > 0
Function name: _burnDebtShares
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_276 Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_276

Name: TMP_276 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_276(bool) = _shares_1 > 0
XXXXX
CONDITION TMP_276
Condition...
Conidtion: 
TMP_276
TMP_276
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_277(uint256) = INTERNAL_CALL, LendingPair._sharesToDebt(address,uint256)(_token_1,_shares_1)
has variable
[i] TMP_277 cleared
clearing ir...?
totalDebtShares_5(mapping(address => uint256)) := ϕ(['totalDebtShares_10'])
has variable
clearing ir...?
totalDebtAmount_5(mapping(address => uint256)) := ϕ(['totalDebtAmount_13'])
has variable
clearing ir...?
amount_1(uint256) := TMP_277(uint256)
has variable
[i] amount cleared
typecheckig node...
TMP_277(uint256) = INTERNAL_CALL, LendingPair._sharesToDebt(address,uint256)(_token_1,_shares_1)
Function name: _burnDebtShares
Internal call...
_sharesToDebt
_token
_shares
Function: _sharesToDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToDebt
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_shares_1(uint256) := ϕ(['REF_105', '_shares_1'])
has variable
[i] _shares cleared
clearing ir...?
totalDebtShares_9(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
has variable
clearing ir...?
totalDebtAmount_12(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1'])
Function name: _sharesToDebt
Phi
[i]Type for _token

Name: _token Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['REF_105', '_shares_1'])
Function name: _sharesToDebt
Phi
[i]Type for _shares

Name: _shares Function: _sharesToDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_9(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
Function name: _sharesToDebt
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_12(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
Function name: _sharesToDebt
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_98(uint256) -> totalDebtShares_9[_token_1]
has variable
clearing ir...?
REF_99(uint256) -> totalDebtAmount_12[_token_1]
has variable
clearing ir...?
TMP_318(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_98,REF_99,_shares_1)
has variable
[i] TMP_318 cleared
clearing ir...?
RETURN TMP_318
typecheckig node...
REF_98(uint256) -> totalDebtShares_9[_token_1]
Function name: _sharesToDebt
INDEX

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_98

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_99(uint256) -> totalDebtAmount_12[_token_1]
Function name: _sharesToDebt
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_99

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_318(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_98,REF_99,_shares_1)
Function name: _sharesToDebt
Internal call...
_sharesToAmount
REF_98
REF_99
_shares
Function: _sharesToAmount
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToAmount
Function Visibility: internal
clearning node...
clearing ir...?
_totalShares_1(uint256) := ϕ(['REF_102', 'REF_98'])
has variable
[i] _totalShares cleared
clearing ir...?
_totalAmount_1(uint256) := ϕ(['REF_99', 'REF_103'])
has variable
[i] _totalAmount cleared
clearing ir...?
_inputShares_1(uint256) := ϕ(['_shares_1', '_shares_1'])
has variable
[i] _inputShares cleared
typecheckig node...
_totalShares_1(uint256) := ϕ(['REF_102', 'REF_98'])
Function name: _sharesToAmount
Phi
[i]Type for _totalShares

Name: _totalShares Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalAmount_1(uint256) := ϕ(['REF_99', 'REF_103'])
Function name: _sharesToAmount
Phi
[i]Type for _totalAmount

Name: _totalAmount Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_inputShares_1(uint256) := ϕ(['_shares_1', '_shares_1'])
Function name: _sharesToAmount
Phi
[i]Type for _inputShares

Name: _inputShares Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_312(bool) = _totalShares_1 > 0
has variable
[i] TMP_312 cleared
clearing ir...?
TMP_313(bool) = _totalAmount_1 > 0
has variable
[i] TMP_313 cleared
clearing ir...?
TMP_314(bool) = TMP_312 && TMP_313
has variable
[i] TMP_314 cleared
clearing ir...?
CONDITION TMP_314
typecheckig node...
TMP_312(bool) = _totalShares_1 > 0
Function name: _sharesToAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_312

Name: TMP_312 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_313(bool) = _totalAmount_1 > 0
Function name: _sharesToAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_313

Name: TMP_313 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_314(bool) = TMP_312 && TMP_313
Function name: _sharesToAmount
[i]Type for TMP_314

Name: TMP_314 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_314
Condition...
Conidtion: 
TMP_314
TMP_314
clearning node...
clearing ir...?
RETURN _inputShares_1
typecheckig node...
RETURN _inputShares_1
RETURN

Name: _inputShares Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
has variable
[i] TMP_315 cleared
clearing ir...?
TMP_316(uint256) = TMP_315 (c)/ _totalShares_1
has variable
[i] TMP_316 cleared
clearing ir...?
RETURN TMP_316
typecheckig node...
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
Function name: _sharesToAmount
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _totalAmount Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_315 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_315

Name: TMP_315 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
XXXXX
TMP_316(uint256) = TMP_315 (c)/ _totalShares_1
Function name: _sharesToAmount
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_316 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_316

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_316
RETURN

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToAmount":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToAmount

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for TMP_318

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_318
RETURN

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToDebt":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToDebt

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_277

Name: TMP_277 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_5(mapping(address => uint256)) := ϕ(['totalDebtShares_10'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_5(mapping(address => uint256)) := ϕ(['totalDebtAmount_13'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint256) := TMP_277(uint256)
Function name: _burnDebtShares
asgn

Name: TMP_277 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amount

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_82(mapping(address => uint256)) -> debtSharesOf_18[_token_1]
has variable
clearing ir...?
REF_83(uint256) -> REF_82[_account_1]
has variable
clearing ir...?
debtSharesOf_19(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_18'])
has variable
clearing ir...?
REF_83(-> debtSharesOf_19) = REF_83 (c)- _shares_1
has variable
typecheckig node...
REF_82(mapping(address => uint256)) -> debtSharesOf_18[_token_1]
Function name: _burnDebtShares
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
debtSharesOf
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256
[i]Type for REF_82

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_83(uint256) -> REF_82[_account_1]
Function name: _burnDebtShares
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_83

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
debtSharesOf_19(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_18'])
Function name: _burnDebtShares
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_83(-> debtSharesOf_19) = REF_83 (c)- _shares_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_83

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_83(-> debtSharesOf_19) = REF_83 (c)- _shares_1
XXXXX
clearning node...
clearing ir...?
REF_84(uint256) -> totalDebtShares_5[_token_1]
has variable
clearing ir...?
totalDebtShares_6(mapping(address => uint256)) := ϕ(['totalDebtShares_5'])
has variable
clearing ir...?
REF_84(-> totalDebtShares_6) = REF_84 (c)- _shares_1
has variable
typecheckig node...
REF_84(uint256) -> totalDebtShares_5[_token_1]
Function name: _burnDebtShares
INDEX

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_84

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_6(mapping(address => uint256)) := ϕ(['totalDebtShares_5'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_84(-> totalDebtShares_6) = REF_84 (c)- _shares_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_84

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_84(-> totalDebtShares_6) = REF_84 (c)- _shares_1
XXXXX
clearning node...
clearing ir...?
REF_85(uint256) -> totalDebtAmount_5[_token_1]
has variable
clearing ir...?
totalDebtAmount_6(mapping(address => uint256)) := ϕ(['totalDebtAmount_5'])
has variable
clearing ir...?
REF_85(-> totalDebtAmount_6) = REF_85 (c)- amount_1
has variable
typecheckig node...
REF_85(uint256) -> totalDebtAmount_5[_token_1]
Function name: _burnDebtShares
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_85

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_6(mapping(address => uint256)) := ϕ(['totalDebtAmount_5'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_85(-> totalDebtAmount_6) = REF_85 (c)- amount_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_85

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_burnDebtShares":
 New undefined nodes- 3
 Old undefined nodes- 0
typecheckig node...
_token_1(address) := ϕ(['_repayToken_1', '_token_1', '_token_1'])
Function name: _burnDebtShares
Phi
[i]Type for _token

Name: _token Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
_account_1(address) := ϕ(['_account_1', '_account_1', '_account_1'])
Function name: _burnDebtShares
Phi
[i]Type for _account

Name: _account Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['TMP_183', 'TMP_264', '_shares_1'])
Function name: _burnDebtShares
Phi
[i]Type for _shares

Name: _shares Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
debtSharesOf_17(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
Function name: _burnDebtShares
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_4(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_4(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_276(bool) = _shares_1 > 0
Function name: _burnDebtShares
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_276 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_276

Name: TMP_276 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_276(bool) = _shares_1 > 0
XXXXX
CONDITION TMP_276
Condition...
Conidtion: 
TMP_276
TMP_276
typecheckig node...
typecheckig node...
TMP_277(uint256) = INTERNAL_CALL, LendingPair._sharesToDebt(address,uint256)(_token_1,_shares_1)
Function name: _burnDebtShares
Internal call...
_sharesToDebt
_token
_shares
Function: _sharesToDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToDebt
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_shares_1(uint256) := ϕ(['REF_105', '_shares_1'])
has variable
[i] _shares cleared
clearing ir...?
totalDebtShares_9(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
has variable
clearing ir...?
totalDebtAmount_12(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1'])
Function name: _sharesToDebt
Phi
[i]Type for _token

Name: _token Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['REF_105', '_shares_1'])
Function name: _sharesToDebt
Phi
[i]Type for _shares

Name: _shares Function: _sharesToDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_9(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
Function name: _sharesToDebt
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_12(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
Function name: _sharesToDebt
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_98(uint256) -> totalDebtShares_9[_token_1]
has variable
clearing ir...?
REF_99(uint256) -> totalDebtAmount_12[_token_1]
has variable
clearing ir...?
TMP_318(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_98,REF_99,_shares_1)
has variable
[i] TMP_318 cleared
clearing ir...?
RETURN TMP_318
typecheckig node...
REF_98(uint256) -> totalDebtShares_9[_token_1]
Function name: _sharesToDebt
INDEX

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_98

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_99(uint256) -> totalDebtAmount_12[_token_1]
Function name: _sharesToDebt
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_99

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_318(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_98,REF_99,_shares_1)
Function name: _sharesToDebt
Internal call...
_sharesToAmount
REF_98
REF_99
_shares
Function: _sharesToAmount
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToAmount
Function Visibility: internal
clearning node...
clearing ir...?
_totalShares_1(uint256) := ϕ(['REF_102', 'REF_98'])
has variable
[i] _totalShares cleared
clearing ir...?
_totalAmount_1(uint256) := ϕ(['REF_99', 'REF_103'])
has variable
[i] _totalAmount cleared
clearing ir...?
_inputShares_1(uint256) := ϕ(['_shares_1', '_shares_1'])
has variable
[i] _inputShares cleared
typecheckig node...
_totalShares_1(uint256) := ϕ(['REF_102', 'REF_98'])
Function name: _sharesToAmount
Phi
[i]Type for _totalShares

Name: _totalShares Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalAmount_1(uint256) := ϕ(['REF_99', 'REF_103'])
Function name: _sharesToAmount
Phi
[i]Type for _totalAmount

Name: _totalAmount Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_inputShares_1(uint256) := ϕ(['_shares_1', '_shares_1'])
Function name: _sharesToAmount
Phi
[i]Type for _inputShares

Name: _inputShares Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_312(bool) = _totalShares_1 > 0
has variable
[i] TMP_312 cleared
clearing ir...?
TMP_313(bool) = _totalAmount_1 > 0
has variable
[i] TMP_313 cleared
clearing ir...?
TMP_314(bool) = TMP_312 && TMP_313
has variable
[i] TMP_314 cleared
clearing ir...?
CONDITION TMP_314
typecheckig node...
TMP_312(bool) = _totalShares_1 > 0
Function name: _sharesToAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_312

Name: TMP_312 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_313(bool) = _totalAmount_1 > 0
Function name: _sharesToAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_313

Name: TMP_313 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_314(bool) = TMP_312 && TMP_313
Function name: _sharesToAmount
[i]Type for TMP_314

Name: TMP_314 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_314
Condition...
Conidtion: 
TMP_314
TMP_314
clearning node...
clearing ir...?
RETURN _inputShares_1
typecheckig node...
RETURN _inputShares_1
RETURN

Name: _inputShares Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
has variable
[i] TMP_315 cleared
clearing ir...?
TMP_316(uint256) = TMP_315 (c)/ _totalShares_1
has variable
[i] TMP_316 cleared
clearing ir...?
RETURN TMP_316
typecheckig node...
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
Function name: _sharesToAmount
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _totalAmount Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_315 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_315

Name: TMP_315 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
XXXXX
TMP_316(uint256) = TMP_315 (c)/ _totalShares_1
Function name: _sharesToAmount
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_316 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_316

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_316
RETURN

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToAmount":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToAmount

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for TMP_318

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_318
RETURN

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToDebt":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToDebt

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_277

Name: TMP_277 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_5(mapping(address => uint256)) := ϕ(['totalDebtShares_10'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_5(mapping(address => uint256)) := ϕ(['totalDebtAmount_13'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint256) := TMP_277(uint256)
Function name: _burnDebtShares
asgn

Name: TMP_277 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amount

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_82(mapping(address => uint256)) -> debtSharesOf_18[_token_1]
Function name: _burnDebtShares
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
debtSharesOf
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256
[i]Type for REF_82

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_83(uint256) -> REF_82[_account_1]
Function name: _burnDebtShares
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_83

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
debtSharesOf_19(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_18'])
Function name: _burnDebtShares
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_83(-> debtSharesOf_19) = REF_83 (c)- _shares_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_83

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_83(-> debtSharesOf_19) = REF_83 (c)- _shares_1
XXXXX
typecheckig node...
REF_84(uint256) -> totalDebtShares_5[_token_1]
Function name: _burnDebtShares
INDEX

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_84

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_6(mapping(address => uint256)) := ϕ(['totalDebtShares_5'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_84(-> totalDebtShares_6) = REF_84 (c)- _shares_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_84

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_84(-> totalDebtShares_6) = REF_84 (c)- _shares_1
XXXXX
typecheckig node...
REF_85(uint256) -> totalDebtAmount_5[_token_1]
Function name: _burnDebtShares
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_85

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_6(mapping(address => uint256)) := ϕ(['totalDebtAmount_5'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_85(-> totalDebtAmount_6) = REF_85 (c)- amount_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_85

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "_burnDebtShares":
 New undefined nodes- 3
 Old undefined nodes- 3
Saving return values for: _burnDebtShares

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_184

Name: TMP_184 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_184(uint256) = INTERNAL_CALL, LendingPair._burnDebtShares(address,address,uint256)(_repayToken_1,_account_1,TMP_183)
XXXXX
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._repayDebtFromSupply(address,address)(_account_1,tokenA_27)
typecheckig node...
INTERNAL_CALL, LendingPair._repayDebtFromSupply(address,address)(_account_1,tokenA_27)
Internal call...
_repayDebtFromSupply
_account
tokenA
Function: _repayDebtFromSupply
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
added
xyz
Function name: _repayDebtFromSupply
Function Visibility: internal
clearning node...
clearing ir...?
_account_1(address) := ϕ(['_account_1'])
has variable
[i] _account cleared
clearing ir...?
_token_1(address) := ϕ(['tokenB_30', 'tokenA_27'])
has variable
[i] _token cleared
typecheckig node...
_account_1(address) := ϕ(['_account_1'])
Function name: _repayDebtFromSupply
Phi
[i]Type for _account

Name: _account Function: _repayDebtFromSupply
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_token_1(address) := ϕ(['tokenB_30', 'tokenA_27'])
Function name: _repayDebtFromSupply
Phi
[i]Type for _token

Name: _token Function: _repayDebtFromSupply
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_260(uint256) = INTERNAL_CALL, LendingPair._debtOf(address,address)(_token_1,_account_1)
has variable
[i] TMP_260 cleared
clearing ir...?
TMP_261(uint256) = INTERNAL_CALL, LendingPair._supplyOf(address,address)(_token_1,_account_1)
has variable
[i] TMP_261 cleared
clearing ir...?
TMP_262(uint256) = LIBRARY_CALL, dest:Math, function:Math.min(uint256,uint256), arguments:['TMP_260', 'TMP_261'] 
has variable
[i] TMP_262 cleared
clearing ir...?
burnAmount_1(uint256) := TMP_262(uint256)
has variable
[i] burnAmount cleared
typecheckig node...
TMP_260(uint256) = INTERNAL_CALL, LendingPair._debtOf(address,address)(_token_1,_account_1)
Function name: _repayDebtFromSupply
Internal call...
_debtOf
_token
_account
Function: _debtOf
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', '_account', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
0

Name: PIC_51 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_260 Function: _repayDebtFromSupply
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_260

Name: TMP_260 Function: _repayDebtFromSupply
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_261(uint256) = INTERNAL_CALL, LendingPair._supplyOf(address,address)(_token_1,_account_1)
Function name: _repayDebtFromSupply
Internal call...
_supplyOf
_token
_account
Function: _supplyOf
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', '_account', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
0

Name: PIC_36 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_261 Function: _repayDebtFromSupply
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_261

Name: TMP_261 Function: _repayDebtFromSupply
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_262(uint256) = LIBRARY_CALL, dest:Math, function:Math.min(uint256,uint256), arguments:['TMP_260', 'TMP_261'] 
Function name: _repayDebtFromSupply
Library Call: min
hlc contract name: Math func_name: min
('t', [1], [-1], 0, None)
TMP_260
TMP_261
wfc len: 1
Check copy_toekn_tuple
([-1], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_262

Name: TMP_262 Function: _repayDebtFromSupply
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
burnAmount_1(uint256) := TMP_262(uint256)
Function name: _repayDebtFromSupply
asgn

Name: TMP_262 Function: _repayDebtFromSupply
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: burnAmount Function: _repayDebtFromSupply
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for burnAmount

Name: burnAmount Function: _repayDebtFromSupply
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_263(bool) = burnAmount_1 > 0
has variable
[i] TMP_263 cleared
clearing ir...?
CONDITION TMP_263
typecheckig node...
TMP_263(bool) = burnAmount_1 > 0
Function name: _repayDebtFromSupply
testing gt...
val: 0
val: 0
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_263

Name: TMP_263 Function: _repayDebtFromSupply
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_263
Condition...
Conidtion: 
TMP_263
TMP_263
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_264(uint256) = INTERNAL_CALL, LendingPair._debtToShares(address,uint256)(_token_1,burnAmount_1)
has variable
[i] TMP_264 cleared
clearing ir...?
TMP_265(uint256) = INTERNAL_CALL, LendingPair._burnDebtShares(address,address,uint256)(_token_1,_account_1,TMP_264)
has variable
[i] TMP_265 cleared
typecheckig node...
TMP_264(uint256) = INTERNAL_CALL, LendingPair._debtToShares(address,uint256)(_token_1,burnAmount_1)
Function name: _repayDebtFromSupply
Internal call...
_debtToShares
_token
burnAmount
Function: _debtToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 0, None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 0, None, [], -1]
0

Name: PIC_78 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_264 Function: _repayDebtFromSupply
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_264

Name: TMP_264 Function: _repayDebtFromSupply
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_265(uint256) = INTERNAL_CALL, LendingPair._burnDebtShares(address,address,uint256)(_token_1,_account_1,TMP_264)
Function name: _repayDebtFromSupply
Internal call...
_burnDebtShares
_token
_account
TMP_264
Function: _burnDebtShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
cur_param: [[-1], [-1], 'u', '_account', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _burnDebtShares
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_repayToken_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_account_1(address) := ϕ(['_account_1', '_account_1', '_account_1'])
has variable
[i] _account cleared
clearing ir...?
_shares_1(uint256) := ϕ(['TMP_183', 'TMP_264', '_shares_1'])
has variable
[i] _shares cleared
clearing ir...?
debtSharesOf_17(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
has variable
clearing ir...?
totalDebtShares_4(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
has variable
clearing ir...?
totalDebtAmount_4(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_repayToken_1', '_token_1', '_token_1'])
Function name: _burnDebtShares
Phi
[i]Type for _token

Name: _token Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_account_1(address) := ϕ(['_account_1', '_account_1', '_account_1'])
Function name: _burnDebtShares
Phi
[i]Type for _account

Name: _account Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['TMP_183', 'TMP_264', '_shares_1'])
Function name: _burnDebtShares
Phi
[i]Type for _shares

Name: _shares Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
debtSharesOf_17(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
Function name: _burnDebtShares
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_4(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_4(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_276(bool) = _shares_1 > 0
has variable
[i] TMP_276 cleared
clearing ir...?
CONDITION TMP_276
typecheckig node...
TMP_276(bool) = _shares_1 > 0
Function name: _burnDebtShares
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_276 Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_276

Name: TMP_276 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_276(bool) = _shares_1 > 0
XXXXX
CONDITION TMP_276
Condition...
Conidtion: 
TMP_276
TMP_276
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_277(uint256) = INTERNAL_CALL, LendingPair._sharesToDebt(address,uint256)(_token_1,_shares_1)
has variable
[i] TMP_277 cleared
clearing ir...?
totalDebtShares_5(mapping(address => uint256)) := ϕ(['totalDebtShares_10'])
has variable
clearing ir...?
totalDebtAmount_5(mapping(address => uint256)) := ϕ(['totalDebtAmount_13'])
has variable
clearing ir...?
amount_1(uint256) := TMP_277(uint256)
has variable
[i] amount cleared
typecheckig node...
TMP_277(uint256) = INTERNAL_CALL, LendingPair._sharesToDebt(address,uint256)(_token_1,_shares_1)
Function name: _burnDebtShares
Internal call...
_sharesToDebt
_token
_shares
Function: _sharesToDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToDebt
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_shares_1(uint256) := ϕ(['REF_105', '_shares_1'])
has variable
[i] _shares cleared
clearing ir...?
totalDebtShares_9(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
has variable
clearing ir...?
totalDebtAmount_12(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1'])
Function name: _sharesToDebt
Phi
[i]Type for _token

Name: _token Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['REF_105', '_shares_1'])
Function name: _sharesToDebt
Phi
[i]Type for _shares

Name: _shares Function: _sharesToDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_9(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
Function name: _sharesToDebt
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_12(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
Function name: _sharesToDebt
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_98(uint256) -> totalDebtShares_9[_token_1]
has variable
clearing ir...?
REF_99(uint256) -> totalDebtAmount_12[_token_1]
has variable
clearing ir...?
TMP_318(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_98,REF_99,_shares_1)
has variable
[i] TMP_318 cleared
clearing ir...?
RETURN TMP_318
typecheckig node...
REF_98(uint256) -> totalDebtShares_9[_token_1]
Function name: _sharesToDebt
INDEX

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_98

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_99(uint256) -> totalDebtAmount_12[_token_1]
Function name: _sharesToDebt
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_99

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_318(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_98,REF_99,_shares_1)
Function name: _sharesToDebt
Internal call...
_sharesToAmount
REF_98
REF_99
_shares
Function: _sharesToAmount
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToAmount
Function Visibility: internal
clearning node...
clearing ir...?
_totalShares_1(uint256) := ϕ(['REF_102', 'REF_98'])
has variable
[i] _totalShares cleared
clearing ir...?
_totalAmount_1(uint256) := ϕ(['REF_99', 'REF_103'])
has variable
[i] _totalAmount cleared
clearing ir...?
_inputShares_1(uint256) := ϕ(['_shares_1', '_shares_1'])
has variable
[i] _inputShares cleared
typecheckig node...
_totalShares_1(uint256) := ϕ(['REF_102', 'REF_98'])
Function name: _sharesToAmount
Phi
[i]Type for _totalShares

Name: _totalShares Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalAmount_1(uint256) := ϕ(['REF_99', 'REF_103'])
Function name: _sharesToAmount
Phi
[i]Type for _totalAmount

Name: _totalAmount Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_inputShares_1(uint256) := ϕ(['_shares_1', '_shares_1'])
Function name: _sharesToAmount
Phi
[i]Type for _inputShares

Name: _inputShares Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_312(bool) = _totalShares_1 > 0
has variable
[i] TMP_312 cleared
clearing ir...?
TMP_313(bool) = _totalAmount_1 > 0
has variable
[i] TMP_313 cleared
clearing ir...?
TMP_314(bool) = TMP_312 && TMP_313
has variable
[i] TMP_314 cleared
clearing ir...?
CONDITION TMP_314
typecheckig node...
TMP_312(bool) = _totalShares_1 > 0
Function name: _sharesToAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_312

Name: TMP_312 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_313(bool) = _totalAmount_1 > 0
Function name: _sharesToAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_313

Name: TMP_313 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_314(bool) = TMP_312 && TMP_313
Function name: _sharesToAmount
[i]Type for TMP_314

Name: TMP_314 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_314
Condition...
Conidtion: 
TMP_314
TMP_314
clearning node...
clearing ir...?
RETURN _inputShares_1
typecheckig node...
RETURN _inputShares_1
RETURN

Name: _inputShares Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
has variable
[i] TMP_315 cleared
clearing ir...?
TMP_316(uint256) = TMP_315 (c)/ _totalShares_1
has variable
[i] TMP_316 cleared
clearing ir...?
RETURN TMP_316
typecheckig node...
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
Function name: _sharesToAmount
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _totalAmount Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_315 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_315

Name: TMP_315 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
XXXXX
TMP_316(uint256) = TMP_315 (c)/ _totalShares_1
Function name: _sharesToAmount
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_316 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_316

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_316
RETURN

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToAmount":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToAmount

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for TMP_318

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_318
RETURN

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToDebt":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToDebt

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_277

Name: TMP_277 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_5(mapping(address => uint256)) := ϕ(['totalDebtShares_10'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_5(mapping(address => uint256)) := ϕ(['totalDebtAmount_13'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint256) := TMP_277(uint256)
Function name: _burnDebtShares
asgn

Name: TMP_277 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amount

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_82(mapping(address => uint256)) -> debtSharesOf_18[_token_1]
has variable
clearing ir...?
REF_83(uint256) -> REF_82[_account_1]
has variable
clearing ir...?
debtSharesOf_19(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_18'])
has variable
clearing ir...?
REF_83(-> debtSharesOf_19) = REF_83 (c)- _shares_1
has variable
typecheckig node...
REF_82(mapping(address => uint256)) -> debtSharesOf_18[_token_1]
Function name: _burnDebtShares
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
debtSharesOf
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256
[i]Type for REF_82

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_83(uint256) -> REF_82[_account_1]
Function name: _burnDebtShares
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_83

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
debtSharesOf_19(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_18'])
Function name: _burnDebtShares
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_83(-> debtSharesOf_19) = REF_83 (c)- _shares_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_83

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_83(-> debtSharesOf_19) = REF_83 (c)- _shares_1
XXXXX
clearning node...
clearing ir...?
REF_84(uint256) -> totalDebtShares_5[_token_1]
has variable
clearing ir...?
totalDebtShares_6(mapping(address => uint256)) := ϕ(['totalDebtShares_5'])
has variable
clearing ir...?
REF_84(-> totalDebtShares_6) = REF_84 (c)- _shares_1
has variable
typecheckig node...
REF_84(uint256) -> totalDebtShares_5[_token_1]
Function name: _burnDebtShares
INDEX

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_84

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_6(mapping(address => uint256)) := ϕ(['totalDebtShares_5'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_84(-> totalDebtShares_6) = REF_84 (c)- _shares_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_84

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_84(-> totalDebtShares_6) = REF_84 (c)- _shares_1
XXXXX
clearning node...
clearing ir...?
REF_85(uint256) -> totalDebtAmount_5[_token_1]
has variable
clearing ir...?
totalDebtAmount_6(mapping(address => uint256)) := ϕ(['totalDebtAmount_5'])
has variable
clearing ir...?
REF_85(-> totalDebtAmount_6) = REF_85 (c)- amount_1
has variable
typecheckig node...
REF_85(uint256) -> totalDebtAmount_5[_token_1]
Function name: _burnDebtShares
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_85

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_6(mapping(address => uint256)) := ϕ(['totalDebtAmount_5'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_85(-> totalDebtAmount_6) = REF_85 (c)- amount_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_85

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_burnDebtShares":
 New undefined nodes- 3
 Old undefined nodes- 0
typecheckig node...
_token_1(address) := ϕ(['_repayToken_1', '_token_1', '_token_1'])
Function name: _burnDebtShares
Phi
[i]Type for _token

Name: _token Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_account_1(address) := ϕ(['_account_1', '_account_1', '_account_1'])
Function name: _burnDebtShares
Phi
[i]Type for _account

Name: _account Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['TMP_183', 'TMP_264', '_shares_1'])
Function name: _burnDebtShares
Phi
[i]Type for _shares

Name: _shares Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
debtSharesOf_17(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
Function name: _burnDebtShares
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_4(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_4(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_276(bool) = _shares_1 > 0
Function name: _burnDebtShares
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_276 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_276

Name: TMP_276 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_276(bool) = _shares_1 > 0
XXXXX
CONDITION TMP_276
Condition...
Conidtion: 
TMP_276
TMP_276
typecheckig node...
typecheckig node...
TMP_277(uint256) = INTERNAL_CALL, LendingPair._sharesToDebt(address,uint256)(_token_1,_shares_1)
Function name: _burnDebtShares
Internal call...
_sharesToDebt
_token
_shares
Function: _sharesToDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToDebt
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_shares_1(uint256) := ϕ(['REF_105', '_shares_1'])
has variable
[i] _shares cleared
clearing ir...?
totalDebtShares_9(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
has variable
clearing ir...?
totalDebtAmount_12(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1'])
Function name: _sharesToDebt
Phi
[i]Type for _token

Name: _token Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['REF_105', '_shares_1'])
Function name: _sharesToDebt
Phi
[i]Type for _shares

Name: _shares Function: _sharesToDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_9(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
Function name: _sharesToDebt
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_12(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
Function name: _sharesToDebt
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_98(uint256) -> totalDebtShares_9[_token_1]
has variable
clearing ir...?
REF_99(uint256) -> totalDebtAmount_12[_token_1]
has variable
clearing ir...?
TMP_318(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_98,REF_99,_shares_1)
has variable
[i] TMP_318 cleared
clearing ir...?
RETURN TMP_318
typecheckig node...
REF_98(uint256) -> totalDebtShares_9[_token_1]
Function name: _sharesToDebt
INDEX

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_98

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_99(uint256) -> totalDebtAmount_12[_token_1]
Function name: _sharesToDebt
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_99

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_318(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_98,REF_99,_shares_1)
Function name: _sharesToDebt
Internal call...
_sharesToAmount
REF_98
REF_99
_shares
Function: _sharesToAmount
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToAmount
Function Visibility: internal
clearning node...
clearing ir...?
_totalShares_1(uint256) := ϕ(['REF_102', 'REF_98'])
has variable
[i] _totalShares cleared
clearing ir...?
_totalAmount_1(uint256) := ϕ(['REF_99', 'REF_103'])
has variable
[i] _totalAmount cleared
clearing ir...?
_inputShares_1(uint256) := ϕ(['_shares_1', '_shares_1'])
has variable
[i] _inputShares cleared
typecheckig node...
_totalShares_1(uint256) := ϕ(['REF_102', 'REF_98'])
Function name: _sharesToAmount
Phi
[i]Type for _totalShares

Name: _totalShares Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalAmount_1(uint256) := ϕ(['REF_99', 'REF_103'])
Function name: _sharesToAmount
Phi
[i]Type for _totalAmount

Name: _totalAmount Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_inputShares_1(uint256) := ϕ(['_shares_1', '_shares_1'])
Function name: _sharesToAmount
Phi
[i]Type for _inputShares

Name: _inputShares Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_312(bool) = _totalShares_1 > 0
has variable
[i] TMP_312 cleared
clearing ir...?
TMP_313(bool) = _totalAmount_1 > 0
has variable
[i] TMP_313 cleared
clearing ir...?
TMP_314(bool) = TMP_312 && TMP_313
has variable
[i] TMP_314 cleared
clearing ir...?
CONDITION TMP_314
typecheckig node...
TMP_312(bool) = _totalShares_1 > 0
Function name: _sharesToAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_312

Name: TMP_312 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_313(bool) = _totalAmount_1 > 0
Function name: _sharesToAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_313

Name: TMP_313 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_314(bool) = TMP_312 && TMP_313
Function name: _sharesToAmount
[i]Type for TMP_314

Name: TMP_314 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_314
Condition...
Conidtion: 
TMP_314
TMP_314
clearning node...
clearing ir...?
RETURN _inputShares_1
typecheckig node...
RETURN _inputShares_1
RETURN

Name: _inputShares Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
has variable
[i] TMP_315 cleared
clearing ir...?
TMP_316(uint256) = TMP_315 (c)/ _totalShares_1
has variable
[i] TMP_316 cleared
clearing ir...?
RETURN TMP_316
typecheckig node...
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
Function name: _sharesToAmount
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _totalAmount Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_315 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_315

Name: TMP_315 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
XXXXX
TMP_316(uint256) = TMP_315 (c)/ _totalShares_1
Function name: _sharesToAmount
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_316 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_316

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_316
RETURN

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToAmount":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToAmount

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for TMP_318

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_318
RETURN

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToDebt":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToDebt

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_277

Name: TMP_277 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_5(mapping(address => uint256)) := ϕ(['totalDebtShares_10'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_5(mapping(address => uint256)) := ϕ(['totalDebtAmount_13'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint256) := TMP_277(uint256)
Function name: _burnDebtShares
asgn

Name: TMP_277 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amount

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_82(mapping(address => uint256)) -> debtSharesOf_18[_token_1]
Function name: _burnDebtShares
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
debtSharesOf
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256
[i]Type for REF_82

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_83(uint256) -> REF_82[_account_1]
Function name: _burnDebtShares
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_83

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
debtSharesOf_19(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_18'])
Function name: _burnDebtShares
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_83(-> debtSharesOf_19) = REF_83 (c)- _shares_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_83

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_83(-> debtSharesOf_19) = REF_83 (c)- _shares_1
XXXXX
typecheckig node...
REF_84(uint256) -> totalDebtShares_5[_token_1]
Function name: _burnDebtShares
INDEX

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_84

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_6(mapping(address => uint256)) := ϕ(['totalDebtShares_5'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_84(-> totalDebtShares_6) = REF_84 (c)- _shares_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_84

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_84(-> totalDebtShares_6) = REF_84 (c)- _shares_1
XXXXX
typecheckig node...
REF_85(uint256) -> totalDebtAmount_5[_token_1]
Function name: _burnDebtShares
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_85

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_6(mapping(address => uint256)) := ϕ(['totalDebtAmount_5'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_85(-> totalDebtAmount_6) = REF_85 (c)- amount_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_85

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "_burnDebtShares":
 New undefined nodes- 3
 Old undefined nodes- 3
Saving return values for: _burnDebtShares

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_265

Name: TMP_265 Function: _repayDebtFromSupply
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_265(uint256) = INTERNAL_CALL, LendingPair._burnDebtShares(address,address,uint256)(_token_1,_account_1,TMP_264)
XXXXX
clearning node...
clearing ir...?
TMP_266(uint256) = INTERNAL_CALL, LendingPair._supplyToShares(address,uint256)(_token_1,burnAmount_1)
has variable
[i] TMP_266 cleared
clearing ir...?
TMP_267(uint256) = INTERNAL_CALL, LendingPair._burnSupplyShares(address,address,uint256)(_token_1,_account_1,TMP_266)
has variable
[i] TMP_267 cleared
typecheckig node...
TMP_266(uint256) = INTERNAL_CALL, LendingPair._supplyToShares(address,uint256)(_token_1,burnAmount_1)
Function name: _repayDebtFromSupply
Internal call...
_supplyToShares
_token
burnAmount
Function: _supplyToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _supplyToShares
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['supplyToken_3', '_token_1', '_token_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_amount_1(uint256) := ϕ(['supplyBurn_1', 'withdrawAmount_3', '_amount_1', '_amount_1', 'burnAmount_1'])
has variable
[i] _amount cleared
clearing ir...?
totalSupplyShares_7(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
has variable
clearing ir...?
totalSupplyAmount_11(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
typecheckig node...
_token_1(address) := ϕ(['supplyToken_3', '_token_1', '_token_1', '_token_1', '_token_1'])
Function name: _supplyToShares
Phi
[i]Type for _token

Name: _token Function: _supplyToShares
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['supplyBurn_1', 'withdrawAmount_3', '_amount_1', '_amount_1', 'burnAmount_1'])
Function name: _supplyToShares
Phi
[i]Type for _amount

Name: _amount Function: _supplyToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_7(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
Function name: _supplyToShares
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_11(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: _supplyToShares
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_100(uint256) -> totalSupplyShares_7[_token_1]
has variable
clearing ir...?
REF_101(uint256) -> totalSupplyAmount_11[_token_1]
has variable
clearing ir...?
TMP_319(uint256) = INTERNAL_CALL, LendingPair._amountToShares(uint256,uint256,uint256)(REF_100,REF_101,_amount_1)
has variable
[i] TMP_319 cleared
clearing ir...?
RETURN TMP_319
typecheckig node...
REF_100(uint256) -> totalSupplyShares_7[_token_1]
Function name: _supplyToShares
INDEX

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_100

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_101(uint256) -> totalSupplyAmount_11[_token_1]
Function name: _supplyToShares
INDEX

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_101

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_319(uint256) = INTERNAL_CALL, LendingPair._amountToShares(uint256,uint256,uint256)(REF_100,REF_101,_amount_1)
Function name: _supplyToShares
Internal call...
_amountToShares
REF_100
REF_101
_amount
Function: _amountToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
0
[i]Type for TMP_319

Name: TMP_319 Function: _supplyToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_319
RETURN

Name: TMP_319 Function: _supplyToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_supplyToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _supplyToShares

Name: TMP_319 Function: _supplyToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_266

Name: TMP_266 Function: _repayDebtFromSupply
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_267(uint256) = INTERNAL_CALL, LendingPair._burnSupplyShares(address,address,uint256)(_token_1,_account_1,TMP_266)
Function name: _repayDebtFromSupply
Internal call...
_burnSupplyShares
_token
_account
TMP_266
Function: _burnSupplyShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [2]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'TOKB', [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'TOKB', [], -1]
[[-1], [-1], 'u', None, [], -1]
[[1], [2], 'u', None, [], -1]
added
xyz
Function name: _burnSupplyShares
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', 'supplyToken_3', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_account_1(address) := ϕ(['_account_1', 'msg.sender', '_account_1'])
has variable
[i] _account cleared
clearing ir...?
_shares_1(uint256) := ϕ(['TMP_181', 'TMP_266', '_shares_1'])
has variable
[i] _shares cleared
clearing ir...?
supplySharesOf_16(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_15', 'supplySharesOf_12', 'supplySharesOf_0', 'supplySharesOf_8', 'supplySharesOf_4', 'supplySharesOf_18', 'supplySharesOf_21', 'supplySharesOf_19'])
has variable
clearing ir...?
totalSupplyShares_4(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
has variable
clearing ir...?
totalSupplyAmount_8(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', 'supplyToken_3', '_token_1'])
Function name: _burnSupplyShares
Phi
[i]Type for _token

Name: _token Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_account_1(address) := ϕ(['_account_1', 'msg.sender', '_account_1'])
Function name: _burnSupplyShares
Phi
[i]Type for _account

Name: _account Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['TMP_181', 'TMP_266', '_shares_1'])
Function name: _burnSupplyShares
Phi
[i]Type for _shares

Name: _shares Function: _burnSupplyShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
supplySharesOf_16(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_15', 'supplySharesOf_12', 'supplySharesOf_0', 'supplySharesOf_8', 'supplySharesOf_4', 'supplySharesOf_18', 'supplySharesOf_21', 'supplySharesOf_19'])
Function name: _burnSupplyShares
Phi
[i]Type for supplySharesOf

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_4(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
Function name: _burnSupplyShares
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_8(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: _burnSupplyShares
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_272(bool) = _shares_1 > 0
has variable
[i] TMP_272 cleared
clearing ir...?
CONDITION TMP_272
typecheckig node...
TMP_272(bool) = _shares_1 > 0
Function name: _burnSupplyShares
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_272 Function: _burnSupplyShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_272

Name: TMP_272 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_272(bool) = _shares_1 > 0
XXXXX
CONDITION TMP_272
Condition...
Conidtion: 
TMP_272
TMP_272
clearning node...
clearing ir...?
TMP_273(uint256) = INTERNAL_CALL, LendingPair._sharesToSupply(address,uint256)(_token_1,_shares_1)
has variable
[i] TMP_273 cleared
clearing ir...?
totalSupplyShares_5(mapping(address => uint256)) := ϕ(['totalSupplyShares_10'])
has variable
clearing ir...?
totalSupplyAmount_9(mapping(address => uint256)) := ϕ(['totalSupplyAmount_14'])
has variable
clearing ir...?
amount_1(uint256) := TMP_273(uint256)
has variable
[i] amount cleared
typecheckig node...
TMP_273(uint256) = INTERNAL_CALL, LendingPair._sharesToSupply(address,uint256)(_token_1,_shares_1)
Function name: _burnSupplyShares
Internal call...
_sharesToSupply
_token
_shares
Function: _sharesToSupply
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToSupply
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', 'TMP_107', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_shares_1(uint256) := ϕ(['_shares_1', 'REF_107', 'shares_1', 'shares_1'])
has variable
[i] _shares cleared
clearing ir...?
totalSupplyShares_9(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
has variable
clearing ir...?
totalSupplyAmount_13(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', 'TMP_107', '_token_1', '_token_1'])
Function name: _sharesToSupply
Phi
[i]Type for _token

Name: _token Function: _sharesToSupply
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['_shares_1', 'REF_107', 'shares_1', 'shares_1'])
Function name: _sharesToSupply
Phi
[i]Type for _shares

Name: _shares Function: _sharesToSupply
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_9(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
Function name: _sharesToSupply
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_13(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: _sharesToSupply
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_102(uint256) -> totalSupplyShares_9[_token_1]
has variable
clearing ir...?
REF_103(uint256) -> totalSupplyAmount_13[_token_1]
has variable
clearing ir...?
TMP_320(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_102,REF_103,_shares_1)
has variable
[i] TMP_320 cleared
clearing ir...?
RETURN TMP_320
typecheckig node...
REF_102(uint256) -> totalSupplyShares_9[_token_1]
Function name: _sharesToSupply
INDEX

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_102

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_103(uint256) -> totalSupplyAmount_13[_token_1]
Function name: _sharesToSupply
INDEX

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_103

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_320(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_102,REF_103,_shares_1)
Function name: _sharesToSupply
Internal call...
_sharesToAmount
REF_102
REF_103
_shares
Function: _sharesToAmount
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToAmount
Function Visibility: internal
clearning node...
clearing ir...?
_totalShares_1(uint256) := ϕ(['REF_102', 'REF_98'])
has variable
[i] _totalShares cleared
clearing ir...?
_totalAmount_1(uint256) := ϕ(['REF_99', 'REF_103'])
has variable
[i] _totalAmount cleared
clearing ir...?
_inputShares_1(uint256) := ϕ(['_shares_1', '_shares_1'])
has variable
[i] _inputShares cleared
typecheckig node...
_totalShares_1(uint256) := ϕ(['REF_102', 'REF_98'])
Function name: _sharesToAmount
Phi
[i]Type for _totalShares

Name: _totalShares Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalAmount_1(uint256) := ϕ(['REF_99', 'REF_103'])
Function name: _sharesToAmount
Phi
[i]Type for _totalAmount

Name: _totalAmount Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_inputShares_1(uint256) := ϕ(['_shares_1', '_shares_1'])
Function name: _sharesToAmount
Phi
[i]Type for _inputShares

Name: _inputShares Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_312(bool) = _totalShares_1 > 0
has variable
[i] TMP_312 cleared
clearing ir...?
TMP_313(bool) = _totalAmount_1 > 0
has variable
[i] TMP_313 cleared
clearing ir...?
TMP_314(bool) = TMP_312 && TMP_313
has variable
[i] TMP_314 cleared
clearing ir...?
CONDITION TMP_314
typecheckig node...
TMP_312(bool) = _totalShares_1 > 0
Function name: _sharesToAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_312

Name: TMP_312 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_313(bool) = _totalAmount_1 > 0
Function name: _sharesToAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_313

Name: TMP_313 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_314(bool) = TMP_312 && TMP_313
Function name: _sharesToAmount
[i]Type for TMP_314

Name: TMP_314 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_314
Condition...
Conidtion: 
TMP_314
TMP_314
clearning node...
clearing ir...?
RETURN _inputShares_1
typecheckig node...
RETURN _inputShares_1
RETURN

Name: _inputShares Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
has variable
[i] TMP_315 cleared
clearing ir...?
TMP_316(uint256) = TMP_315 (c)/ _totalShares_1
has variable
[i] TMP_316 cleared
clearing ir...?
RETURN TMP_316
typecheckig node...
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
Function name: _sharesToAmount
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _totalAmount Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_315 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_315

Name: TMP_315 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
XXXXX
TMP_316(uint256) = TMP_315 (c)/ _totalShares_1
Function name: _sharesToAmount
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_316 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_316

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_316
RETURN

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToAmount":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToAmount

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for TMP_320

Name: TMP_320 Function: _sharesToSupply
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_320
RETURN

Name: TMP_320 Function: _sharesToSupply
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToSupply":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToSupply

Name: TMP_320 Function: _sharesToSupply
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_273

Name: TMP_273 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_5(mapping(address => uint256)) := ϕ(['totalSupplyShares_10'])
Function name: _burnSupplyShares
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_9(mapping(address => uint256)) := ϕ(['totalSupplyAmount_14'])
Function name: _burnSupplyShares
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint256) := TMP_273(uint256)
Function name: _burnSupplyShares
asgn

Name: TMP_273 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnSupplyShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amount

Name: amount Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_74(mapping(address => uint256)) -> supplySharesOf_17[_token_1]
has variable
clearing ir...?
REF_75(uint256) -> REF_74[_account_1]
has variable
clearing ir...?
supplySharesOf_18(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_17'])
has variable
clearing ir...?
REF_75(-> supplySharesOf_18) = REF_75 (c)- _shares_1
has variable
typecheckig node...
REF_74(mapping(address => uint256)) -> supplySharesOf_17[_token_1]
Function name: _burnSupplyShares
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
supplySharesOf
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256
[i]Type for REF_74

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_75(uint256) -> REF_74[_account_1]
Function name: _burnSupplyShares
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_75

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
supplySharesOf_18(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_17'])
Function name: _burnSupplyShares
Phi
[i]Type for supplySharesOf

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_75(-> supplySharesOf_18) = REF_75 (c)- _shares_1
Function name: _burnSupplyShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_75 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnSupplyShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_75 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_75 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_75

Name: REF_75 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_75(-> supplySharesOf_18) = REF_75 (c)- _shares_1
XXXXX
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_76(uint256) -> totalSupplyShares_5[_token_1]
has variable
clearing ir...?
totalSupplyShares_6(mapping(address => uint256)) := ϕ(['totalSupplyShares_5'])
has variable
clearing ir...?
REF_76(-> totalSupplyShares_6) = REF_76 (c)- _shares_1
has variable
typecheckig node...
REF_76(uint256) -> totalSupplyShares_5[_token_1]
Function name: _burnSupplyShares
INDEX

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_76

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_6(mapping(address => uint256)) := ϕ(['totalSupplyShares_5'])
Function name: _burnSupplyShares
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_76(-> totalSupplyShares_6) = REF_76 (c)- _shares_1
Function name: _burnSupplyShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_76 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnSupplyShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_76 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_76 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_76

Name: REF_76 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_76(-> totalSupplyShares_6) = REF_76 (c)- _shares_1
XXXXX
clearning node...
clearing ir...?
REF_77(uint256) -> totalSupplyAmount_9[_token_1]
has variable
clearing ir...?
totalSupplyAmount_10(mapping(address => uint256)) := ϕ(['totalSupplyAmount_9'])
has variable
clearing ir...?
REF_77(-> totalSupplyAmount_10) = REF_77 (c)- amount_1
has variable
typecheckig node...
REF_77(uint256) -> totalSupplyAmount_9[_token_1]
Function name: _burnSupplyShares
INDEX

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_77

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_10(mapping(address => uint256)) := ϕ(['totalSupplyAmount_9'])
Function name: _burnSupplyShares
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_77(-> totalSupplyAmount_10) = REF_77 (c)- amount_1
Function name: _burnSupplyShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_77 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_77

Name: REF_77 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_burnSupplyShares":
 New undefined nodes- 3
 Old undefined nodes- 0
typecheckig node...
_token_1(address) := ϕ(['_token_1', 'supplyToken_3', '_token_1'])
Function name: _burnSupplyShares
Phi
[i]Type for _token

Name: _token Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_account_1(address) := ϕ(['_account_1', 'msg.sender', '_account_1'])
Function name: _burnSupplyShares
Phi
[i]Type for _account

Name: _account Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['TMP_181', 'TMP_266', '_shares_1'])
Function name: _burnSupplyShares
Phi
[i]Type for _shares

Name: _shares Function: _burnSupplyShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
supplySharesOf_16(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_15', 'supplySharesOf_12', 'supplySharesOf_0', 'supplySharesOf_8', 'supplySharesOf_4', 'supplySharesOf_18', 'supplySharesOf_21', 'supplySharesOf_19'])
Function name: _burnSupplyShares
Phi
[i]Type for supplySharesOf

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_4(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
Function name: _burnSupplyShares
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_8(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: _burnSupplyShares
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_272(bool) = _shares_1 > 0
Function name: _burnSupplyShares
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_272 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_272

Name: TMP_272 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_272(bool) = _shares_1 > 0
XXXXX
CONDITION TMP_272
Condition...
Conidtion: 
TMP_272
TMP_272
typecheckig node...
TMP_273(uint256) = INTERNAL_CALL, LendingPair._sharesToSupply(address,uint256)(_token_1,_shares_1)
Function name: _burnSupplyShares
Internal call...
_sharesToSupply
_token
_shares
Function: _sharesToSupply
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToSupply
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', 'TMP_107', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_shares_1(uint256) := ϕ(['_shares_1', 'REF_107', 'shares_1', 'shares_1'])
has variable
[i] _shares cleared
clearing ir...?
totalSupplyShares_9(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
has variable
clearing ir...?
totalSupplyAmount_13(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', 'TMP_107', '_token_1', '_token_1'])
Function name: _sharesToSupply
Phi
[i]Type for _token

Name: _token Function: _sharesToSupply
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['_shares_1', 'REF_107', 'shares_1', 'shares_1'])
Function name: _sharesToSupply
Phi
[i]Type for _shares

Name: _shares Function: _sharesToSupply
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_9(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
Function name: _sharesToSupply
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_13(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: _sharesToSupply
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_102(uint256) -> totalSupplyShares_9[_token_1]
has variable
clearing ir...?
REF_103(uint256) -> totalSupplyAmount_13[_token_1]
has variable
clearing ir...?
TMP_320(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_102,REF_103,_shares_1)
has variable
[i] TMP_320 cleared
clearing ir...?
RETURN TMP_320
typecheckig node...
REF_102(uint256) -> totalSupplyShares_9[_token_1]
Function name: _sharesToSupply
INDEX

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_102

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_103(uint256) -> totalSupplyAmount_13[_token_1]
Function name: _sharesToSupply
INDEX

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_103

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_320(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_102,REF_103,_shares_1)
Function name: _sharesToSupply
Internal call...
_sharesToAmount
REF_102
REF_103
_shares
Function: _sharesToAmount
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToAmount
Function Visibility: internal
clearning node...
clearing ir...?
_totalShares_1(uint256) := ϕ(['REF_102', 'REF_98'])
has variable
[i] _totalShares cleared
clearing ir...?
_totalAmount_1(uint256) := ϕ(['REF_99', 'REF_103'])
has variable
[i] _totalAmount cleared
clearing ir...?
_inputShares_1(uint256) := ϕ(['_shares_1', '_shares_1'])
has variable
[i] _inputShares cleared
typecheckig node...
_totalShares_1(uint256) := ϕ(['REF_102', 'REF_98'])
Function name: _sharesToAmount
Phi
[i]Type for _totalShares

Name: _totalShares Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalAmount_1(uint256) := ϕ(['REF_99', 'REF_103'])
Function name: _sharesToAmount
Phi
[i]Type for _totalAmount

Name: _totalAmount Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_inputShares_1(uint256) := ϕ(['_shares_1', '_shares_1'])
Function name: _sharesToAmount
Phi
[i]Type for _inputShares

Name: _inputShares Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_312(bool) = _totalShares_1 > 0
has variable
[i] TMP_312 cleared
clearing ir...?
TMP_313(bool) = _totalAmount_1 > 0
has variable
[i] TMP_313 cleared
clearing ir...?
TMP_314(bool) = TMP_312 && TMP_313
has variable
[i] TMP_314 cleared
clearing ir...?
CONDITION TMP_314
typecheckig node...
TMP_312(bool) = _totalShares_1 > 0
Function name: _sharesToAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_312

Name: TMP_312 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_313(bool) = _totalAmount_1 > 0
Function name: _sharesToAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_313

Name: TMP_313 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_314(bool) = TMP_312 && TMP_313
Function name: _sharesToAmount
[i]Type for TMP_314

Name: TMP_314 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_314
Condition...
Conidtion: 
TMP_314
TMP_314
clearning node...
clearing ir...?
RETURN _inputShares_1
typecheckig node...
RETURN _inputShares_1
RETURN

Name: _inputShares Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
has variable
[i] TMP_315 cleared
clearing ir...?
TMP_316(uint256) = TMP_315 (c)/ _totalShares_1
has variable
[i] TMP_316 cleared
clearing ir...?
RETURN TMP_316
typecheckig node...
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
Function name: _sharesToAmount
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _totalAmount Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_315 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_315

Name: TMP_315 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
XXXXX
TMP_316(uint256) = TMP_315 (c)/ _totalShares_1
Function name: _sharesToAmount
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_316 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_316

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_316
RETURN

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToAmount":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToAmount

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for TMP_320

Name: TMP_320 Function: _sharesToSupply
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_320
RETURN

Name: TMP_320 Function: _sharesToSupply
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToSupply":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToSupply

Name: TMP_320 Function: _sharesToSupply
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_273

Name: TMP_273 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_5(mapping(address => uint256)) := ϕ(['totalSupplyShares_10'])
Function name: _burnSupplyShares
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_9(mapping(address => uint256)) := ϕ(['totalSupplyAmount_14'])
Function name: _burnSupplyShares
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint256) := TMP_273(uint256)
Function name: _burnSupplyShares
asgn

Name: TMP_273 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amount

Name: amount Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_74(mapping(address => uint256)) -> supplySharesOf_17[_token_1]
Function name: _burnSupplyShares
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
supplySharesOf
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256
[i]Type for REF_74

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_75(uint256) -> REF_74[_account_1]
Function name: _burnSupplyShares
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_75

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
supplySharesOf_18(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_17'])
Function name: _burnSupplyShares
Phi
[i]Type for supplySharesOf

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_75(-> supplySharesOf_18) = REF_75 (c)- _shares_1
Function name: _burnSupplyShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_75 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnSupplyShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_75 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_75 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_75

Name: REF_75 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_75(-> supplySharesOf_18) = REF_75 (c)- _shares_1
XXXXX
typecheckig node...
typecheckig node...
REF_76(uint256) -> totalSupplyShares_5[_token_1]
Function name: _burnSupplyShares
INDEX

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_76

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_6(mapping(address => uint256)) := ϕ(['totalSupplyShares_5'])
Function name: _burnSupplyShares
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_76(-> totalSupplyShares_6) = REF_76 (c)- _shares_1
Function name: _burnSupplyShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_76 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnSupplyShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_76 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_76 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_76

Name: REF_76 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_76(-> totalSupplyShares_6) = REF_76 (c)- _shares_1
XXXXX
typecheckig node...
REF_77(uint256) -> totalSupplyAmount_9[_token_1]
Function name: _burnSupplyShares
INDEX

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_77

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_10(mapping(address => uint256)) := ϕ(['totalSupplyAmount_9'])
Function name: _burnSupplyShares
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_77(-> totalSupplyAmount_10) = REF_77 (c)- amount_1
Function name: _burnSupplyShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_77 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_77

Name: REF_77 Function: _burnSupplyShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "_burnSupplyShares":
 New undefined nodes- 3
 Old undefined nodes- 3
Saving return values for: _burnSupplyShares

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_267

Name: TMP_267 Function: _repayDebtFromSupply
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_267(uint256) = INTERNAL_CALL, LendingPair._burnSupplyShares(address,address,uint256)(_token_1,_account_1,TMP_266)
XXXXX
WORKLIST iteration 0 for function call "_repayDebtFromSupply":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _repayDebtFromSupply
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._repayDebtFromSupply(address,address)(_account_1,tokenB_30)
typecheckig node...
INTERNAL_CALL, LendingPair._repayDebtFromSupply(address,address)(_account_1,tokenB_30)
Internal call...
_repayDebtFromSupply
_account
tokenB
Function: _repayDebtFromSupply
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
0
done.
clearning node...
clearing ir...?
INTERNAL_CALL, TransferHelper._safeTransferFrom(address,address,uint256)(_repayToken_1,msg.sender,_repayAmount_2)
typecheckig node...
INTERNAL_CALL, TransferHelper._safeTransferFrom(address,address,uint256)(_repayToken_1,msg.sender,_repayAmount_2)
Internal call...
_safeTransferFrom
_repayToken
msg.sender
_repayAmount
Function: _safeTransferFrom
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[], [], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[], [], 'u', None, [], -1]
added
xyz
Function name: _safeTransferFrom
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1', '_token_1', '_repayToken_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_sender_1(address) := ϕ(['msg.sender'])
has variable
[i] _sender cleared
clearing ir...?
_amount_1(uint256) := ϕ(['_repayAmount_2', '_amount_1', 'amount_1', '_amount_1', '_amount_1'])
has variable
[i] _amount cleared
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', '_token_1', '_repayToken_1', '_token_1'])
Function name: _safeTransferFrom
Phi
[i]Type for _token

Name: _token Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
_sender_1(address) := ϕ(['msg.sender'])
Function name: _safeTransferFrom
Phi
[i]Type for _sender

Name: _sender Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: _sender
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['_repayAmount_2', '_amount_1', 'amount_1', '_amount_1', '_amount_1'])
Function name: _safeTransferFrom
Phi
[i]Type for _amount

Name: _amount Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_0(bool) = _amount_1 > 0
has variable
[i] TMP_0 cleared
clearing ir...?
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,TransferHelper: amount must be > 0)
typecheckig node...
TMP_0(bool) = _amount_1 > 0
Function name: _safeTransferFrom
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_0

Name: TMP_0 Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,TransferHelper: amount must be > 0)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_2 = CONVERT _token_1 to IERC20
has variable
[i] TMP_2 cleared
clearing ir...?
TMP_3 = CONVERT this to address
has variable
[i] TMP_3 cleared
clearing ir...?
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_2', '_sender_1', 'TMP_3', '_amount_1'] 
typecheckig node...
TMP_2 = CONVERT _token_1 to IERC20
Function name: _safeTransferFrom

Name: _token Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef

Name: TMP_2 Function: _safeTransferFrom
Num: 
Den: 
Norm: u
LF: _token
Fields: 
Finance Type: undef
[i]Type for TMP_2

Name: TMP_2 Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
TMP_3 = CONVERT this to address
Function name: _safeTransferFrom
[i]Type for TMP_3

Name: TMP_3 Function: _safeTransferFrom
Num: 
Den: 
Norm: u
LF: LendingPair
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_2', '_sender_1', 'TMP_3', '_amount_1'] 
Library Call: safeTransferFrom
done.
WORKLIST iteration 0 for function call "_safeTransferFrom":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _safeTransferFrom
done.
clearning node...
clearing ir...?
TMP_188(uint256) = INTERNAL_CALL, LendingPair._mintSupplyAmount(address,address,uint256)(supplyToken_3,msg.sender,supplyOutput_1)
has variable
[i] TMP_188 cleared
typecheckig node...
TMP_188(uint256) = INTERNAL_CALL, LendingPair._mintSupplyAmount(address,address,uint256)(supplyToken_3,msg.sender,supplyOutput_1)
Function name: liquidateAccount
Internal call...
_mintSupplyAmount
supplyToken
msg.sender
supplyOutput
Function: _mintSupplyAmount
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [2]
    norm: -20
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', '_account', [], -1]
cur_param: [[-1], [-1], 0, None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'TOKA', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 0, None, [], -1]
added
xyz
Function name: _mintSupplyAmount
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['supplyToken_3', 'tokenA_43', '_token_1', 'tokenB_8', 'tokenA_7', 'tokenB_47'])
has variable
[i] _token cleared
clearing ir...?
_account_1(address) := ϕ(['_account_1', '_account_1', 'msg.sender'])
has variable
[i] _account cleared
clearing ir...?
_amount_1(uint256) := ϕ(['amountA_1', '_amount_1', 'supplyOutput_1', 'amountA_1', 'amountB_1', 'amountB_1'])
has variable
[i] _amount cleared
clearing ir...?
supplySharesOf_13(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_15', 'supplySharesOf_12', 'supplySharesOf_0', 'supplySharesOf_8', 'supplySharesOf_4', 'supplySharesOf_18', 'supplySharesOf_21', 'supplySharesOf_19'])
has variable
clearing ir...?
totalSupplyShares_1(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
has variable
clearing ir...?
totalSupplyAmount_5(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
typecheckig node...
_token_1(address) := ϕ(['supplyToken_3', 'tokenA_43', '_token_1', 'tokenB_8', 'tokenA_7', 'tokenB_47'])
Function name: _mintSupplyAmount
Phi
[i]Type for _token

Name: _token Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_account_1(address) := ϕ(['_account_1', '_account_1', 'msg.sender'])
Function name: _mintSupplyAmount
Phi
[i]Type for _account

Name: _account Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['amountA_1', '_amount_1', 'supplyOutput_1', 'amountA_1', 'amountB_1', 'amountB_1'])
Function name: _mintSupplyAmount
Phi
[i]Type for _amount

Name: _amount Function: _mintSupplyAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
supplySharesOf_13(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_15', 'supplySharesOf_12', 'supplySharesOf_0', 'supplySharesOf_8', 'supplySharesOf_4', 'supplySharesOf_18', 'supplySharesOf_21', 'supplySharesOf_19'])
Function name: _mintSupplyAmount
Phi
[i]Type for supplySharesOf

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_1(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
Function name: _mintSupplyAmount
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_5(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: _mintSupplyAmount
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_270(bool) = _amount_1 > 0
has variable
[i] TMP_270 cleared
clearing ir...?
CONDITION TMP_270
typecheckig node...
TMP_270(bool) = _amount_1 > 0
Function name: _mintSupplyAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_270

Name: TMP_270 Function: _mintSupplyAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_270
Condition...
Conidtion: 
TMP_270
TMP_270
clearning node...
clearing ir...?
TMP_271(uint256) = INTERNAL_CALL, LendingPair._supplyToShares(address,uint256)(_token_1,_amount_1)
has variable
[i] TMP_271 cleared
clearing ir...?
totalSupplyShares_2(mapping(address => uint256)) := ϕ(['totalSupplyShares_8'])
has variable
clearing ir...?
totalSupplyAmount_6(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12'])
has variable
clearing ir...?
shares_1(uint256) := TMP_271(uint256)
has variable
[i] shares cleared
typecheckig node...
TMP_271(uint256) = INTERNAL_CALL, LendingPair._supplyToShares(address,uint256)(_token_1,_amount_1)
Function name: _mintSupplyAmount
Internal call...
_supplyToShares
_token
_amount
Function: _supplyToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _supplyToShares
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['supplyToken_3', '_token_1', '_token_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_amount_1(uint256) := ϕ(['supplyBurn_1', 'withdrawAmount_3', '_amount_1', '_amount_1', 'burnAmount_1'])
has variable
[i] _amount cleared
clearing ir...?
totalSupplyShares_7(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
has variable
clearing ir...?
totalSupplyAmount_11(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
typecheckig node...
_token_1(address) := ϕ(['supplyToken_3', '_token_1', '_token_1', '_token_1', '_token_1'])
Function name: _supplyToShares
Phi
[i]Type for _token

Name: _token Function: _supplyToShares
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['supplyBurn_1', 'withdrawAmount_3', '_amount_1', '_amount_1', 'burnAmount_1'])
Function name: _supplyToShares
Phi
[i]Type for _amount

Name: _amount Function: _supplyToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_7(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
Function name: _supplyToShares
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_11(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: _supplyToShares
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_100(uint256) -> totalSupplyShares_7[_token_1]
has variable
clearing ir...?
REF_101(uint256) -> totalSupplyAmount_11[_token_1]
has variable
clearing ir...?
TMP_319(uint256) = INTERNAL_CALL, LendingPair._amountToShares(uint256,uint256,uint256)(REF_100,REF_101,_amount_1)
has variable
[i] TMP_319 cleared
clearing ir...?
RETURN TMP_319
typecheckig node...
REF_100(uint256) -> totalSupplyShares_7[_token_1]
Function name: _supplyToShares
INDEX

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_100

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_101(uint256) -> totalSupplyAmount_11[_token_1]
Function name: _supplyToShares
INDEX

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_101

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_319(uint256) = INTERNAL_CALL, LendingPair._amountToShares(uint256,uint256,uint256)(REF_100,REF_101,_amount_1)
Function name: _supplyToShares
Internal call...
_amountToShares
REF_100
REF_101
_amount
Function: _amountToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [2]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _amountToShares
Function Visibility: internal
clearning node...
clearing ir...?
_totalShares_1(uint256) := ϕ(['REF_100', 'REF_96'])
has variable
[i] _totalShares cleared
clearing ir...?
_totalAmount_1(uint256) := ϕ(['REF_97', 'REF_101'])
has variable
[i] _totalAmount cleared
clearing ir...?
_inputSupply_1(uint256) := ϕ(['_amount_1', '_amount_1'])
has variable
[i] _inputSupply cleared
typecheckig node...
_totalShares_1(uint256) := ϕ(['REF_100', 'REF_96'])
Function name: _amountToShares
Phi
[i]Type for _totalShares

Name: _totalShares Function: _amountToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalAmount_1(uint256) := ϕ(['REF_97', 'REF_101'])
Function name: _amountToShares
Phi
[i]Type for _totalAmount

Name: _totalAmount Function: _amountToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_inputSupply_1(uint256) := ϕ(['_amount_1', '_amount_1'])
Function name: _amountToShares
Phi
[i]Type for _inputSupply

Name: _inputSupply Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_307(bool) = _totalShares_1 > 0
has variable
[i] TMP_307 cleared
clearing ir...?
TMP_308(bool) = _totalAmount_1 > 0
has variable
[i] TMP_308 cleared
clearing ir...?
TMP_309(bool) = TMP_307 && TMP_308
has variable
[i] TMP_309 cleared
clearing ir...?
CONDITION TMP_309
typecheckig node...
TMP_307(bool) = _totalShares_1 > 0
Function name: _amountToShares
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_307

Name: TMP_307 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_308(bool) = _totalAmount_1 > 0
Function name: _amountToShares
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_308

Name: TMP_308 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_309(bool) = TMP_307 && TMP_308
Function name: _amountToShares
[i]Type for TMP_309

Name: TMP_309 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_309
Condition...
Conidtion: 
TMP_309
TMP_309
clearning node...
clearing ir...?
RETURN _inputSupply_1
typecheckig node...
RETURN _inputSupply_1
RETURN

Name: _inputSupply Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
TMP_310(uint256) = _inputSupply_1 (c)* _totalShares_1
has variable
[i] TMP_310 cleared
clearing ir...?
TMP_311(uint256) = TMP_310 (c)/ _totalAmount_1
has variable
[i] TMP_311 cleared
clearing ir...?
RETURN TMP_311
typecheckig node...
TMP_310(uint256) = _inputSupply_1 (c)* _totalShares_1
Function name: _amountToShares
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _inputSupply Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_310 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_310

Name: TMP_310 Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_311(uint256) = TMP_310 (c)/ _totalAmount_1
Function name: _amountToShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_311 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_310 Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_311 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_311

Name: TMP_311 Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_311
RETURN

Name: TMP_311 Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_amountToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _amountToShares

Name: TMP_311 Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
___
Check copy_toekn_tuple
([1], [2], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for TMP_319

Name: TMP_319 Function: _supplyToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_319
RETURN

Name: TMP_319 Function: _supplyToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_supplyToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _supplyToShares

Name: TMP_319 Function: _supplyToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_271

Name: TMP_271 Function: _mintSupplyAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_2(mapping(address => uint256)) := ϕ(['totalSupplyShares_8'])
Function name: _mintSupplyAmount
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_6(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12'])
Function name: _mintSupplyAmount
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
shares_1(uint256) := TMP_271(uint256)
Function name: _mintSupplyAmount
asgn

Name: TMP_271 Function: _mintSupplyAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: _mintSupplyAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for shares

Name: shares Function: _mintSupplyAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_70(mapping(address => uint256)) -> supplySharesOf_14[_token_1]
has variable
clearing ir...?
REF_71(uint256) -> REF_70[_account_1]
has variable
clearing ir...?
supplySharesOf_15(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_14'])
has variable
clearing ir...?
REF_71(-> supplySharesOf_15) = REF_71 (c)+ shares_1
has variable
typecheckig node...
REF_70(mapping(address => uint256)) -> supplySharesOf_14[_token_1]
Function name: _mintSupplyAmount
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
supplySharesOf
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256
[i]Type for REF_70

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_71(uint256) -> REF_70[_account_1]
Function name: _mintSupplyAmount
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_71

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
supplySharesOf_15(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_14'])
Function name: _mintSupplyAmount
Phi
[i]Type for supplySharesOf

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_71(-> supplySharesOf_15) = REF_71 (c)+ shares_1
Function name: _mintSupplyAmount

Name: REF_71 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: shares Function: _mintSupplyAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_71 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_71

Name: REF_71 Function: _mintSupplyAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_72(uint256) -> totalSupplyShares_2[_token_1]
has variable
clearing ir...?
totalSupplyShares_3(mapping(address => uint256)) := ϕ(['totalSupplyShares_2'])
has variable
clearing ir...?
REF_72(-> totalSupplyShares_3) = REF_72 (c)+ shares_1
has variable
typecheckig node...
REF_72(uint256) -> totalSupplyShares_2[_token_1]
Function name: _mintSupplyAmount
INDEX

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_72

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_3(mapping(address => uint256)) := ϕ(['totalSupplyShares_2'])
Function name: _mintSupplyAmount
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_72(-> totalSupplyShares_3) = REF_72 (c)+ shares_1
Function name: _mintSupplyAmount

Name: REF_72 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: shares Function: _mintSupplyAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_72 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_72

Name: REF_72 Function: _mintSupplyAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_73(uint256) -> totalSupplyAmount_6[_token_1]
has variable
clearing ir...?
totalSupplyAmount_7(mapping(address => uint256)) := ϕ(['totalSupplyAmount_6'])
has variable
clearing ir...?
REF_73(-> totalSupplyAmount_7) = REF_73 (c)+ _amount_1
has variable
typecheckig node...
REF_73(uint256) -> totalSupplyAmount_6[_token_1]
Function name: _mintSupplyAmount
INDEX

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_73

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_7(mapping(address => uint256)) := ϕ(['totalSupplyAmount_6'])
Function name: _mintSupplyAmount
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_73(-> totalSupplyAmount_7) = REF_73 (c)+ _amount_1
Function name: _mintSupplyAmount

Name: REF_73 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: _mintSupplyAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_73 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_73

Name: REF_73 Function: _mintSupplyAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_mintSupplyAmount":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _mintSupplyAmount

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_188

Name: TMP_188 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit Liquidation(_account_1,_repayToken_1,supplyToken_3,_repayAmount_2,supplyOutput_1)
typecheckig node...
Emit Liquidation(_account_1,_repayToken_1,supplyToken_3,_repayAmount_2,supplyOutput_1)
WORKLIST iteration 0 for function call "liquidateAccount":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
LIQ_MIN_HEALTH_1(uint256) := ϕ(['LIQ_MIN_HEALTH_0', 'LIQ_MIN_HEALTH_9', 'LIQ_MIN_HEALTH_6'])
Function name: liquidateAccount
Phi
[i]Type for LIQ_MIN_HEALTH

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pendingSystemFees_9(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_0'])
Function name: liquidateAccount
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_2(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: liquidateAccount
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_12(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: liquidateAccount
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_14(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: liquidateAccount
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_repayToken_1)
Internal call...
_validateToken
_repayToken
Function: _validateToken
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, None, [], -1]
added
xyz
Function name: _validateToken
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_62', '_token_1', 'TMP_80', '_toToken_1', 'TMP_100', '_borrowedToken_1', '_token_1', '_repayToken_1', '_token_1', '_token_1', 'uniTokenA_1', '_token_1', '_token_1', 'TMP_123', '_fromToken_1', '_returnToken_1', '_suppliedToken_1', 'uniTokenB_1', '_token_1', '_token_1', '_returnToken_1', '_token_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
tokenA_48(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
has variable
clearing ir...?
tokenB_53(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_62', '_token_1', 'TMP_80', '_toToken_1', 'TMP_100', '_borrowedToken_1', '_token_1', '_repayToken_1', '_token_1', '_token_1', 'uniTokenA_1', '_token_1', '_token_1', 'TMP_123', '_fromToken_1', '_returnToken_1', '_suppliedToken_1', 'uniTokenB_1', '_token_1', '_token_1', '_returnToken_1', '_token_1', '_token_1', '_token_1'])
Function name: _validateToken
Phi
[i]Type for _token

Name: _token Function: _validateToken
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
tokenA_48(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: _validateToken
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_53(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: _validateToken
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_348(bool) = _token_1 == tokenA_48
has variable
[i] TMP_348 cleared
clearing ir...?
TMP_349(bool) = _token_1 == tokenB_53
has variable
[i] TMP_349 cleared
clearing ir...?
TMP_350(bool) = TMP_348 || TMP_349
has variable
[i] TMP_350 cleared
clearing ir...?
TMP_351(None) = SOLIDITY_CALL require(bool,string)(TMP_350,LendingPair: invalid token)
typecheckig node...
TMP_348(bool) = _token_1 == tokenA_48
Function name: _validateToken
[i]Type for TMP_348

Name: TMP_348 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_349(bool) = _token_1 == tokenB_53
Function name: _validateToken
[i]Type for TMP_349

Name: TMP_349 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_350(bool) = TMP_348 || TMP_349
Function name: _validateToken
[i]Type for TMP_350

Name: TMP_350 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_351(None) = SOLIDITY_CALL require(bool,string)(TMP_350,LendingPair: invalid token)
[i]Type for TMP_351

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_validateToken":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _validateToken
done.
typecheckig node...
TMP_191(bool) = _repayToken_1 == tokenA_14
Function name: liquidateAccount
[i]Type for TMP_191

Name: TMP_191 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_191
Condition...
Conidtion: 
TMP_191
TMP_191
typecheckig node...
supplyToken_1(address) := tokenA_14(address)
Function name: liquidateAccount
asgn

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef

Name: supplyToken Function: liquidateAccount
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for supplyToken

Name: supplyToken Function: liquidateAccount
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
typecheckig node...
supplyToken_2(address) := tokenB_16(address)
Function name: liquidateAccount
asgn

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef

Name: supplyToken Function: liquidateAccount
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for supplyToken

Name: supplyToken Function: liquidateAccount
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
typecheckig node...
supplyToken_3(address) := ϕ(['supplyToken_1', 'supplyToken_2'])
Function name: liquidateAccount
Phi
[i]Type for supplyToken

Name: supplyToken Function: liquidateAccount
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, LendingPair.accrue(address)(supplyToken_3)
Internal call...
accrue
supplyToken
Function: accrue
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: accrue
Function Visibility: public
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_64', 'supplyToken_3', '_token_1', '_token_1', 'TMP_125', 'TMP_102', '_token_1', 'TMP_82', '_repayToken_1', '_token_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
pendingSystemFees_1(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_0'])
has variable
clearing ir...?
lastBlockAccrued_3(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3', 'lastBlockAccrued_4', 'lastBlockAccrued_0', 'lastBlockAccrued_5', 'lastBlockAccrued_2'])
has variable
clearing ir...?
totalSupplyAmount_1(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_64', 'supplyToken_3', '_token_1', '_token_1', 'TMP_125', 'TMP_102', '_token_1', 'TMP_82', '_repayToken_1', '_token_1', '_token_1', '_token_1'])
Function name: accrue
Phi
[i]Type for _token

Name: _token Function: accrue
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
pendingSystemFees_1(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_0'])
Function name: accrue
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastBlockAccrued_3(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3', 'lastBlockAccrued_4', 'lastBlockAccrued_0', 'lastBlockAccrued_5', 'lastBlockAccrued_2'])
Function name: accrue
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_1(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: accrue
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_29(uint256) -> lastBlockAccrued_3[_token_1]
has variable
clearing ir...?
TMP_146(bool) = REF_29 < block.number
has variable
[i] TMP_146 cleared
clearing ir...?
CONDITION TMP_146
typecheckig node...
REF_29(uint256) -> lastBlockAccrued_3[_token_1]
Function name: accrue
INDEX

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_29

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_146(bool) = REF_29 < block.number
Function name: accrue
testing lt...
block.number
[i]Type for TMP_146

Name: TMP_146 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_146
Condition...
Conidtion: 
TMP_146
TMP_146
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_147(uint256) = INTERNAL_CALL, LendingPair._accrueDebt(address)(_token_1)
has variable
[i] TMP_147 cleared
clearing ir...?
newDebt_1(uint256) := TMP_147(uint256)
has variable
[i] newDebt cleared
typecheckig node...
TMP_147(uint256) = INTERNAL_CALL, LendingPair._accrueDebt(address)(_token_1)
Function name: accrue
Internal call...
_accrueDebt
_token
Function: _accrueDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
0

Name: PIC_11 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_147

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
newDebt_1(uint256) := TMP_147(uint256)
Function name: accrue
asgn

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newDebt

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
newDebt_1(uint256) := TMP_147(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_148(uint256) = INTERNAL_CALL, LendingPair._lpRate(address)(_token_1)
has variable
[i] TMP_148 cleared
clearing ir...?
TMP_149(uint256) = newDebt_1 (c)* TMP_148
has variable
[i] TMP_149 cleared
clearing ir...?
TMP_150(uint256) = TMP_149 (c)/ 100000000000000000000
has variable
[i] TMP_150 cleared
clearing ir...?
newSupply_1(uint256) := TMP_150(uint256)
has variable
[i] newSupply cleared
typecheckig node...
TMP_148(uint256) = INTERNAL_CALL, LendingPair._lpRate(address)(_token_1)
Function name: accrue
Internal call...
_lpRate
_token
Function: _lpRate
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
0

Name: PIC_12 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_148 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_148

Name: TMP_148 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_149(uint256) = newDebt_1 (c)* TMP_148
Function name: accrue
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_148 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_149 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_149

Name: TMP_149 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_149(uint256) = newDebt_1 (c)* TMP_148
XXXXX
TMP_150(uint256) = TMP_149 (c)/ 100000000000000000000
Function name: accrue
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_150 Function: accrue
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef
val: 100000000000000000000
20
[i]Type for TMP_150

Name: TMP_150 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
newSupply_1(uint256) := TMP_150(uint256)
Function name: accrue
asgn

Name: TMP_150 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newSupply

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_30(uint256) -> totalSupplyAmount_3[_token_1]
has variable
clearing ir...?
totalSupplyAmount_4(mapping(address => uint256)) := ϕ(['totalSupplyAmount_3'])
has variable
clearing ir...?
REF_30(-> totalSupplyAmount_4) = REF_30 (c)+ newSupply_1
has variable
typecheckig node...
REF_30(uint256) -> totalSupplyAmount_3[_token_1]
Function name: accrue
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalSupplyAmount
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_30

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_4(mapping(address => uint256)) := ϕ(['totalSupplyAmount_3'])
Function name: accrue
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_30(-> totalSupplyAmount_4) = REF_30 (c)+ newSupply_1
Function name: accrue

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_30

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_31(uint256) -> pendingSystemFees_3[_token_1]
has variable
clearing ir...?
TMP_151(uint256) = newDebt_1 (c)- newSupply_1
has variable
[i] TMP_151 cleared
clearing ir...?
pendingSystemFees_4(mapping(address => uint256)) := ϕ(['pendingSystemFees_3'])
has variable
clearing ir...?
REF_31(-> pendingSystemFees_4) = REF_31 (c)+ TMP_151
has variable
typecheckig node...
REF_31(uint256) -> pendingSystemFees_3[_token_1]
Function name: accrue
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
pendingSystemFees
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_31

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_151(uint256) = newDebt_1 (c)- newSupply_1
Function name: accrue
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: TMP_151 Function: accrue
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_151

Name: TMP_151 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_151(uint256) = newDebt_1 (c)- newSupply_1
XXXXX
pendingSystemFees_4(mapping(address => uint256)) := ϕ(['pendingSystemFees_3'])
Function name: accrue
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_31(-> pendingSystemFees_4) = REF_31 (c)+ TMP_151
Function name: accrue

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_151 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_31

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_32(uint256) -> lastBlockAccrued_3[_token_1]
has variable
clearing ir...?
lastBlockAccrued_4(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3'])
has variable
clearing ir...?
REF_32 (->lastBlockAccrued_4) := block.number(uint256)
has variable
typecheckig node...
REF_32(uint256) -> lastBlockAccrued_3[_token_1]
Function name: accrue
INDEX

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_32

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastBlockAccrued_4(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3'])
Function name: accrue
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_32 (->lastBlockAccrued_4) := block.number(uint256)
Function name: accrue
asgn
block.number

Name: REF_32 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_32

Name: REF_32 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_32 (->lastBlockAccrued_4) := block.number(uint256)
XXXXX
WORKLIST iteration 0 for function call "accrue":
 New undefined nodes- 4
 Old undefined nodes- 0
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_64', 'supplyToken_3', '_token_1', '_token_1', 'TMP_125', 'TMP_102', '_token_1', 'TMP_82', '_repayToken_1', '_token_1', '_token_1', '_token_1'])
Function name: accrue
Phi
[i]Type for _token

Name: _token Function: accrue
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
pendingSystemFees_1(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_0'])
Function name: accrue
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastBlockAccrued_3(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3', 'lastBlockAccrued_4', 'lastBlockAccrued_0', 'lastBlockAccrued_5', 'lastBlockAccrued_2'])
Function name: accrue
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_1(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: accrue
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_29(uint256) -> lastBlockAccrued_3[_token_1]
Function name: accrue
INDEX

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_29

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_146(bool) = REF_29 < block.number
Function name: accrue
testing lt...
block.number
[i]Type for TMP_146

Name: TMP_146 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_146
Condition...
Conidtion: 
TMP_146
TMP_146
typecheckig node...
typecheckig node...
TMP_147(uint256) = INTERNAL_CALL, LendingPair._accrueDebt(address)(_token_1)
Function name: accrue
Internal call...
_accrueDebt
_token
Function: _accrueDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
0

Name: PIC_11 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_147

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
newDebt_1(uint256) := TMP_147(uint256)
Function name: accrue
asgn

Name: TMP_147 Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newDebt

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
newDebt_1(uint256) := TMP_147(uint256)
XXXXX
typecheckig node...
TMP_148(uint256) = INTERNAL_CALL, LendingPair._lpRate(address)(_token_1)
Function name: accrue
Internal call...
_lpRate
_token
Function: _lpRate
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
0

Name: PIC_12 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_148 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_148

Name: TMP_148 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_149(uint256) = newDebt_1 (c)* TMP_148
Function name: accrue
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_148 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_149 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_149

Name: TMP_149 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_149(uint256) = newDebt_1 (c)* TMP_148
XXXXX
TMP_150(uint256) = TMP_149 (c)/ 100000000000000000000
Function name: accrue
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_150 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
val: 100000000000000000000
20
[i]Type for TMP_150

Name: TMP_150 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
newSupply_1(uint256) := TMP_150(uint256)
Function name: accrue
asgn

Name: TMP_150 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newSupply

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_30(uint256) -> totalSupplyAmount_3[_token_1]
Function name: accrue
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalSupplyAmount
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_30

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_4(mapping(address => uint256)) := ϕ(['totalSupplyAmount_3'])
Function name: accrue
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_30(-> totalSupplyAmount_4) = REF_30 (c)+ newSupply_1
Function name: accrue

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_30

Name: REF_30 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_31(uint256) -> pendingSystemFees_3[_token_1]
Function name: accrue
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
pendingSystemFees
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_31

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_151(uint256) = newDebt_1 (c)- newSupply_1
Function name: accrue
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: newDebt Function: accrue
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: newSupply Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: TMP_151 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_151

Name: TMP_151 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_151(uint256) = newDebt_1 (c)- newSupply_1
XXXXX
pendingSystemFees_4(mapping(address => uint256)) := ϕ(['pendingSystemFees_3'])
Function name: accrue
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_31(-> pendingSystemFees_4) = REF_31 (c)+ TMP_151
Function name: accrue

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_151 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_31

Name: REF_31 Function: accrue
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_32(uint256) -> lastBlockAccrued_3[_token_1]
Function name: accrue
INDEX

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_32

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastBlockAccrued_4(mapping(address => uint256)) := ϕ(['lastBlockAccrued_3'])
Function name: accrue
Phi
[i]Type for lastBlockAccrued

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_32 (->lastBlockAccrued_4) := block.number(uint256)
Function name: accrue
asgn
block.number

Name: REF_32 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_32

Name: REF_32 Function: accrue
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_32 (->lastBlockAccrued_4) := block.number(uint256)
XXXXX
WORKLIST iteration 1 for function call "accrue":
 New undefined nodes- 4
 Old undefined nodes- 4
Saving return values for: accrue
done.
This IR caused addback:
INTERNAL_CALL, LendingPair.accrue(address)(supplyToken_3)
XXXXX
pendingSystemFees_12(mapping(address => uint256)) := ϕ(['pendingSystemFees_4'])
Function name: liquidateAccount
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, LendingPair.accrue(address)(_repayToken_1)
Internal call...
accrue
_repayToken
Function: accrue
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
done.
pendingSystemFees_13(mapping(address => uint256)) := ϕ(['pendingSystemFees_4'])
Function name: liquidateAccount
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_163(uint256) = INTERNAL_CALL, LendingPair.accountHealth(address)(_account_1)
Function name: liquidateAccount
Internal call...
accountHealth
_account
Function: accountHealth
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_account', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_account', [], -1]
0
[i]Type for TMP_163

Name: TMP_163 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_7(ILendingController) := ϕ(['lendingController_17'])
Function name: liquidateAccount
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_17(address) := ϕ(['tokenA_37'])
Function name: liquidateAccount
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_19(address) := ϕ(['tokenB_40'])
Function name: liquidateAccount
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
health_1(uint256) := TMP_163(uint256)
Function name: liquidateAccount
asgn

Name: TMP_163 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: health Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for health

Name: health Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
health_1(uint256) := TMP_163(uint256)
XXXXX
typecheckig node...
TMP_164(bool) = health_1 < LIQ_MIN_HEALTH_6
Function name: liquidateAccount
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_164 Function: liquidateAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_164

Name: TMP_164 Function: liquidateAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_164(bool) = health_1 < LIQ_MIN_HEALTH_6
XXXXX
TMP_165(None) = SOLIDITY_CALL require(bool,string)(TMP_164,LendingPair: account health < LIQ_MIN_HEALTH)
[i]Type for TMP_165

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, LendingPair._unwrapUniPosition(address)(_account_1)
Internal call...
_unwrapUniPosition
_account
Function: _unwrapUniPosition
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
done.
lendingController_8(ILendingController) := ϕ(['lendingController_33'])
Function name: liquidateAccount
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_18(address) := ϕ(['tokenA_44'])
Function name: liquidateAccount
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_20(address) := ϕ(['tokenB_48'])
Function name: liquidateAccount
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_167(uint256) = INTERNAL_CALL, LendingPair._debtOf(address,address)(_repayToken_1,_account_1)
Function name: liquidateAccount
Internal call...
_debtOf
_repayToken
_account
Function: _debtOf
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', '_account', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
0

Name: PIC_51 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_167 Function: liquidateAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_167

Name: TMP_167 Function: liquidateAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_168(uint256) = LIBRARY_CALL, dest:Math, function:Math.min(uint256,uint256), arguments:['_repayAmount_1', 'TMP_167'] 
Function name: liquidateAccount
Library Call: min
hlc contract name: Math func_name: min
('t', [1], [-1], 0, None)
_repayAmount
TMP_167
wfc len: 1
Check copy_toekn_tuple
([-1], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_168

Name: TMP_168 Function: liquidateAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_repayAmount_2(uint256) := TMP_168(uint256)
Function name: liquidateAccount
asgn

Name: TMP_168 Function: liquidateAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _repayAmount Function: liquidateAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _repayAmount

Name: _repayAmount Function: liquidateAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
TUPLE_3(uint256,uint256) = HIGH_LEVEL_CALL, dest:lendingController_9(ILendingController), function:tokenPrices, arguments:['_repayToken_1', 'supplyToken_3']  
Function name: liquidateAccount
High Call: tokenPrices
func name:tokenPrices
other func name:tokenPrices
TUPLE_3
hlc contract name: LENDINGCONTR func_name: tokenPrices
('c', [1], [-1], 0, None)
_repayToken
supplyToken
('c', [2], [-1], 0, None)
_repayToken
supplyToken
wfc len: 2
COPIED
[i]Type for TUPLE_3

Name: TUPLE_3 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pendingSystemFees_17(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_16'])
Function name: liquidateAccount
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_10(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_9', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: liquidateAccount
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_20(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_19', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: liquidateAccount
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_22(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9', 'tokenB_21'])
Function name: liquidateAccount
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
repayPrice_1(uint256)= UNPACK TUPLE_3 index: 0 
Function name: liquidateAccount
Reading tuple TUPLE_3 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for repayPrice

Name: repayPrice Function: liquidateAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
supplyPrice_1(uint256)= UNPACK TUPLE_3 index: 1 
Function name: liquidateAccount
Reading tuple TUPLE_3 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for supplyPrice

Name: supplyPrice Function: liquidateAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_169(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_repayToken_1,supplyToken_3,_repayAmount_2,repayPrice_1,supplyPrice_1)
Function name: liquidateAccount
Internal call...
_convertTokenValues
_repayToken
supplyToken
_repayAmount
repayPrice
supplyPrice
Function: _convertTokenValues
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [2]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', 'TOKA', [], -1]
[[], [], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
added
xyz
Function name: _convertTokenValues
Function Visibility: internal
clearning node...
clearing ir...?
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
has variable
[i] _fromToken cleared
clearing ir...?
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
has variable
[i] _toToken cleared
clearing ir...?
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
has variable
[i] _inputAmount cleared
clearing ir...?
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
has variable
[i] _fromPrice cleared
clearing ir...?
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
has variable
[i] _toPrice cleared
clearing ir...?
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
has variable
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_340 cleared
clearing ir...?
REF_115(uint256) -> decimals_3[_fromToken_1]
has variable
clearing ir...?
TMP_341(uint256) = 10 (c)** REF_115
has variable
[i] TMP_341 cleared
clearing ir...?
TMP_342(uint256) = TMP_340 (c)/ TMP_341
has variable
[i] TMP_342 cleared
clearing ir...?
priceFrom_1(uint256) := TMP_342(uint256)
has variable
[i] priceFrom cleared
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_343 cleared
clearing ir...?
REF_116(uint256) -> decimals_3[_toToken_1]
has variable
clearing ir...?
TMP_344(uint256) = 10 (c)** REF_116
has variable
[i] TMP_344 cleared
clearing ir...?
TMP_345(uint256) = TMP_343 (c)/ TMP_344
has variable
[i] TMP_345 cleared
clearing ir...?
priceTo_1(uint256) := TMP_345(uint256)
has variable
[i] priceTo cleared
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_104 Function: None
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_105 Function: None
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: _convertTokenValues

Name: TMP_347 Function: _convertTokenValues
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_169

Name: TMP_169 Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_169(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_repayToken_1,supplyToken_3,_repayAmount_2,repayPrice_1,supplyPrice_1)
XXXXX
supplyDebt_1(uint256) := TMP_169(uint256)
Function name: liquidateAccount
asgn

Name: TMP_169 Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: supplyDebt Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for supplyDebt

Name: supplyDebt Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_170(uint256) = HIGH_LEVEL_CALL, dest:lendingController_11(ILendingController), function:liqFeeCaller, arguments:['_repayToken_1']  
Function name: liquidateAccount
High Call: liqFeeCaller
func name:liqFeeCaller
other func name:liqFeeCaller
TMP_170
hlc contract name: LENDINGCONTR func_name: liqFeeCaller
wfc len: 0
COPIED
[i]Type for TMP_170

Name: TMP_170 Function: liquidateAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pendingSystemFees_19(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_4', 'pendingSystemFees_18'])
Function name: liquidateAccount
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_12(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_11', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: liquidateAccount
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_22(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_21', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: liquidateAccount
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_24(address) := ϕ(['tokenB_5', 'tokenB_23', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: liquidateAccount
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
TMP_171(uint256) = supplyDebt_1 (c)* TMP_170
Function name: liquidateAccount
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: supplyDebt Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_171 Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_171

Name: TMP_171 Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_172(uint256) = TMP_171 (c)/ 100000000000000000000
Function name: liquidateAccount
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_172 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: TMP_171 Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_172 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_172

Name: TMP_172 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
callerFee_1(uint256) := TMP_172(uint256)
Function name: liquidateAccount
asgn

Name: TMP_172 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: callerFee Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for callerFee

Name: callerFee Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_173(uint256) = HIGH_LEVEL_CALL, dest:lendingController_12(ILendingController), function:liqFeeSystem, arguments:['_repayToken_1']  
Function name: liquidateAccount
High Call: liqFeeSystem
func name:liqFeeSystem
other func name:liqFeeSystem
TMP_173
hlc contract name: LENDINGCONTR func_name: liqFeeSystem
wfc len: 0
COPIED
[i]Type for TMP_173

Name: TMP_173 Function: liquidateAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pendingSystemFees_20(mapping(address => uint256)) := ϕ(['pendingSystemFees_23', 'pendingSystemFees_8', 'pendingSystemFees_19', 'pendingSystemFees_4'])
Function name: liquidateAccount
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_13(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_12', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: liquidateAccount
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_23(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_22', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: liquidateAccount
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_25(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9', 'tokenB_24'])
Function name: liquidateAccount
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
TMP_174(uint256) = supplyDebt_1 (c)* TMP_173
Function name: liquidateAccount
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: supplyDebt Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_174 Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_174

Name: TMP_174 Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_175(uint256) = TMP_174 (c)/ 100000000000000000000
Function name: liquidateAccount
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_175 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: TMP_174 Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_175 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_175

Name: TMP_175 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
systemFee_1(uint256) := TMP_175(uint256)
Function name: liquidateAccount
asgn

Name: TMP_175 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: systemFee Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for systemFee

Name: systemFee Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_176(uint256) = supplyDebt_1 (c)+ callerFee_1
Function name: liquidateAccount

Name: TMP_176 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: supplyDebt Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_176 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_176

Name: TMP_176 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
TMP_177(uint256) = TMP_176 (c)+ systemFee_1
Function name: liquidateAccount

Name: TMP_177 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: -20 rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_176 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: TMP_177 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_177

Name: TMP_177 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
supplyBurn_1(uint256) := TMP_177(uint256)
Function name: liquidateAccount
asgn

Name: TMP_177 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: supplyBurn Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for supplyBurn

Name: supplyBurn Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_178(uint256) = supplyDebt_1 (c)+ callerFee_1
Function name: liquidateAccount

Name: TMP_178 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: supplyDebt Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_178 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_178

Name: TMP_178 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
supplyOutput_1(uint256) := TMP_178(uint256)
Function name: liquidateAccount
asgn

Name: TMP_178 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: supplyOutput Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for supplyOutput

Name: supplyOutput Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_179(bool) = supplyOutput_1 >= _minSupplyOutput_1
Function name: liquidateAccount
testing gt...
lnorm: -20 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_179

Name: TMP_179 Function: liquidateAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_180(None) = SOLIDITY_CALL require(bool,string)(TMP_179,LendingPair: supplyOutput >= _minSupplyOutput)
[i]Type for TMP_180

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_181(uint256) = INTERNAL_CALL, LendingPair._supplyToShares(address,uint256)(supplyToken_3,supplyBurn_1)
Function name: liquidateAccount
Internal call...
_supplyToShares
supplyToken
supplyBurn
Function: _supplyToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: -20
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _supplyToShares
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['supplyToken_3', '_token_1', '_token_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_amount_1(uint256) := ϕ(['supplyBurn_1', 'withdrawAmount_3', '_amount_1', '_amount_1', 'burnAmount_1'])
has variable
[i] _amount cleared
clearing ir...?
totalSupplyShares_7(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
has variable
clearing ir...?
totalSupplyAmount_11(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
typecheckig node...
_token_1(address) := ϕ(['supplyToken_3', '_token_1', '_token_1', '_token_1', '_token_1'])
Function name: _supplyToShares
Phi
[i]Type for _token

Name: _token Function: _supplyToShares
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['supplyBurn_1', 'withdrawAmount_3', '_amount_1', '_amount_1', 'burnAmount_1'])
Function name: _supplyToShares
Phi
[i]Type for _amount

Name: _amount Function: _supplyToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_7(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
Function name: _supplyToShares
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_11(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: _supplyToShares
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_100(uint256) -> totalSupplyShares_7[_token_1]
has variable
clearing ir...?
REF_101(uint256) -> totalSupplyAmount_11[_token_1]
has variable
clearing ir...?
TMP_319(uint256) = INTERNAL_CALL, LendingPair._amountToShares(uint256,uint256,uint256)(REF_100,REF_101,_amount_1)
has variable
[i] TMP_319 cleared
clearing ir...?
RETURN TMP_319
typecheckig node...
REF_100(uint256) -> totalSupplyShares_7[_token_1]
Function name: _supplyToShares
INDEX

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_100

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_101(uint256) -> totalSupplyAmount_11[_token_1]
Function name: _supplyToShares
INDEX

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_101

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_319(uint256) = INTERNAL_CALL, LendingPair._amountToShares(uint256,uint256,uint256)(REF_100,REF_101,_amount_1)
Function name: _supplyToShares
Internal call...
_amountToShares
REF_100
REF_101
_amount
Function: _amountToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [2]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _amountToShares
Function Visibility: internal
clearning node...
clearing ir...?
_totalShares_1(uint256) := ϕ(['REF_100', 'REF_96'])
has variable
[i] _totalShares cleared
clearing ir...?
_totalAmount_1(uint256) := ϕ(['REF_97', 'REF_101'])
has variable
[i] _totalAmount cleared
clearing ir...?
_inputSupply_1(uint256) := ϕ(['_amount_1', '_amount_1'])
has variable
[i] _inputSupply cleared
typecheckig node...
_totalShares_1(uint256) := ϕ(['REF_100', 'REF_96'])
Function name: _amountToShares
Phi
[i]Type for _totalShares

Name: _totalShares Function: _amountToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalAmount_1(uint256) := ϕ(['REF_97', 'REF_101'])
Function name: _amountToShares
Phi
[i]Type for _totalAmount

Name: _totalAmount Function: _amountToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_inputSupply_1(uint256) := ϕ(['_amount_1', '_amount_1'])
Function name: _amountToShares
Phi
[i]Type for _inputSupply

Name: _inputSupply Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_307(bool) = _totalShares_1 > 0
has variable
[i] TMP_307 cleared
clearing ir...?
TMP_308(bool) = _totalAmount_1 > 0
has variable
[i] TMP_308 cleared
clearing ir...?
TMP_309(bool) = TMP_307 && TMP_308
has variable
[i] TMP_309 cleared
clearing ir...?
CONDITION TMP_309
typecheckig node...
TMP_307(bool) = _totalShares_1 > 0
Function name: _amountToShares
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_307

Name: TMP_307 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_308(bool) = _totalAmount_1 > 0
Function name: _amountToShares
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_308

Name: TMP_308 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_309(bool) = TMP_307 && TMP_308
Function name: _amountToShares
[i]Type for TMP_309

Name: TMP_309 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_309
Condition...
Conidtion: 
TMP_309
TMP_309
clearning node...
clearing ir...?
RETURN _inputSupply_1
typecheckig node...
RETURN _inputSupply_1
RETURN

Name: _inputSupply Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
TMP_310(uint256) = _inputSupply_1 (c)* _totalShares_1
has variable
[i] TMP_310 cleared
clearing ir...?
TMP_311(uint256) = TMP_310 (c)/ _totalAmount_1
has variable
[i] TMP_311 cleared
clearing ir...?
RETURN TMP_311
typecheckig node...
TMP_310(uint256) = _inputSupply_1 (c)* _totalShares_1
Function name: _amountToShares
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _inputSupply Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_310 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_310

Name: TMP_310 Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_311(uint256) = TMP_310 (c)/ _totalAmount_1
Function name: _amountToShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_311 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_310 Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_311 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_311

Name: TMP_311 Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_311
RETURN

Name: TMP_311 Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_amountToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _amountToShares

Name: TMP_311 Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
___
Check copy_toekn_tuple
([1], [2], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for TMP_319

Name: TMP_319 Function: _supplyToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_319
RETURN

Name: TMP_319 Function: _supplyToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_supplyToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _supplyToShares

Name: TMP_319 Function: _supplyToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_181

Name: TMP_181 Function: liquidateAccount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_182(uint256) = INTERNAL_CALL, LendingPair._burnSupplyShares(address,address,uint256)(supplyToken_3,_account_1,TMP_181)
Function name: liquidateAccount
Internal call...
_burnSupplyShares
supplyToken
_account
TMP_181
Function: _burnSupplyShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [2]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [2]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'TOKB', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[1], [2], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [2]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'TOKB', [], -1]
[[-1], [-1], 'u', None, [], -1]
[[1], [2], 'u', None, [], -1]
0

Name: PIC_77 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_182 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_182

Name: TMP_182 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_44(uint256) -> pendingSystemFees_22[supplyToken_3]
Function name: liquidateAccount
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
pendingSystemFees
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for REF_44

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pendingSystemFees_23(mapping(address => uint256)) := ϕ(['pendingSystemFees_22'])
Function name: liquidateAccount
Phi
[i]Type for pendingSystemFees

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_44(-> pendingSystemFees_23) = REF_44 (c)+ systemFee_1
Function name: liquidateAccount

Name: REF_44 Function: liquidateAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: systemFee Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef

Name: REF_44 Function: liquidateAccount
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_44

Name: REF_44 Function: liquidateAccount
Num: 1
Den: 2
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_183(uint256) = INTERNAL_CALL, LendingPair._debtToShares(address,uint256)(_repayToken_1,_repayAmount_2)
Function name: liquidateAccount
Internal call...
_debtToShares
_repayToken
_repayAmount
Function: _debtToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 0, None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 0, None, [], -1]
0

Name: PIC_78 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_183 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_183

Name: TMP_183 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_184(uint256) = INTERNAL_CALL, LendingPair._burnDebtShares(address,address,uint256)(_repayToken_1,_account_1,TMP_183)
Function name: liquidateAccount
Internal call...
_burnDebtShares
_repayToken
_account
TMP_183
Function: _burnDebtShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
cur_param: [[-1], [-1], 'u', '_account', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _burnDebtShares
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_repayToken_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_account_1(address) := ϕ(['_account_1', '_account_1', '_account_1'])
has variable
[i] _account cleared
clearing ir...?
_shares_1(uint256) := ϕ(['TMP_183', 'TMP_264', '_shares_1'])
has variable
[i] _shares cleared
clearing ir...?
debtSharesOf_17(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
has variable
clearing ir...?
totalDebtShares_4(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
has variable
clearing ir...?
totalDebtAmount_4(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_repayToken_1', '_token_1', '_token_1'])
Function name: _burnDebtShares
Phi
[i]Type for _token

Name: _token Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_account_1(address) := ϕ(['_account_1', '_account_1', '_account_1'])
Function name: _burnDebtShares
Phi
[i]Type for _account

Name: _account Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['TMP_183', 'TMP_264', '_shares_1'])
Function name: _burnDebtShares
Phi
[i]Type for _shares

Name: _shares Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
debtSharesOf_17(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
Function name: _burnDebtShares
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_4(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_4(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_276(bool) = _shares_1 > 0
has variable
[i] TMP_276 cleared
clearing ir...?
CONDITION TMP_276
typecheckig node...
TMP_276(bool) = _shares_1 > 0
Function name: _burnDebtShares
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_276 Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_276

Name: TMP_276 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_276(bool) = _shares_1 > 0
XXXXX
CONDITION TMP_276
Condition...
Conidtion: 
TMP_276
TMP_276
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_277(uint256) = INTERNAL_CALL, LendingPair._sharesToDebt(address,uint256)(_token_1,_shares_1)
has variable
[i] TMP_277 cleared
clearing ir...?
totalDebtShares_5(mapping(address => uint256)) := ϕ(['totalDebtShares_10'])
has variable
clearing ir...?
totalDebtAmount_5(mapping(address => uint256)) := ϕ(['totalDebtAmount_13'])
has variable
clearing ir...?
amount_1(uint256) := TMP_277(uint256)
has variable
[i] amount cleared
typecheckig node...
TMP_277(uint256) = INTERNAL_CALL, LendingPair._sharesToDebt(address,uint256)(_token_1,_shares_1)
Function name: _burnDebtShares
Internal call...
_sharesToDebt
_token
_shares
Function: _sharesToDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToDebt
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_shares_1(uint256) := ϕ(['REF_105', '_shares_1'])
has variable
[i] _shares cleared
clearing ir...?
totalDebtShares_9(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
has variable
clearing ir...?
totalDebtAmount_12(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1'])
Function name: _sharesToDebt
Phi
[i]Type for _token

Name: _token Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['REF_105', '_shares_1'])
Function name: _sharesToDebt
Phi
[i]Type for _shares

Name: _shares Function: _sharesToDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_9(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
Function name: _sharesToDebt
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_12(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
Function name: _sharesToDebt
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_98(uint256) -> totalDebtShares_9[_token_1]
has variable
clearing ir...?
REF_99(uint256) -> totalDebtAmount_12[_token_1]
has variable
clearing ir...?
TMP_318(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_98,REF_99,_shares_1)
has variable
[i] TMP_318 cleared
clearing ir...?
RETURN TMP_318
typecheckig node...
REF_98(uint256) -> totalDebtShares_9[_token_1]
Function name: _sharesToDebt
INDEX

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_98

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_99(uint256) -> totalDebtAmount_12[_token_1]
Function name: _sharesToDebt
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_99

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_318(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_98,REF_99,_shares_1)
Function name: _sharesToDebt
Internal call...
_sharesToAmount
REF_98
REF_99
_shares
Function: _sharesToAmount
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToAmount
Function Visibility: internal
clearning node...
clearing ir...?
_totalShares_1(uint256) := ϕ(['REF_102', 'REF_98'])
has variable
[i] _totalShares cleared
clearing ir...?
_totalAmount_1(uint256) := ϕ(['REF_99', 'REF_103'])
has variable
[i] _totalAmount cleared
clearing ir...?
_inputShares_1(uint256) := ϕ(['_shares_1', '_shares_1'])
has variable
[i] _inputShares cleared
typecheckig node...
_totalShares_1(uint256) := ϕ(['REF_102', 'REF_98'])
Function name: _sharesToAmount
Phi
[i]Type for _totalShares

Name: _totalShares Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalAmount_1(uint256) := ϕ(['REF_99', 'REF_103'])
Function name: _sharesToAmount
Phi
[i]Type for _totalAmount

Name: _totalAmount Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_inputShares_1(uint256) := ϕ(['_shares_1', '_shares_1'])
Function name: _sharesToAmount
Phi
[i]Type for _inputShares

Name: _inputShares Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_312(bool) = _totalShares_1 > 0
has variable
[i] TMP_312 cleared
clearing ir...?
TMP_313(bool) = _totalAmount_1 > 0
has variable
[i] TMP_313 cleared
clearing ir...?
TMP_314(bool) = TMP_312 && TMP_313
has variable
[i] TMP_314 cleared
clearing ir...?
CONDITION TMP_314
typecheckig node...
TMP_312(bool) = _totalShares_1 > 0
Function name: _sharesToAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_312

Name: TMP_312 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_313(bool) = _totalAmount_1 > 0
Function name: _sharesToAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_313

Name: TMP_313 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_314(bool) = TMP_312 && TMP_313
Function name: _sharesToAmount
[i]Type for TMP_314

Name: TMP_314 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_314
Condition...
Conidtion: 
TMP_314
TMP_314
clearning node...
clearing ir...?
RETURN _inputShares_1
typecheckig node...
RETURN _inputShares_1
RETURN

Name: _inputShares Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
has variable
[i] TMP_315 cleared
clearing ir...?
TMP_316(uint256) = TMP_315 (c)/ _totalShares_1
has variable
[i] TMP_316 cleared
clearing ir...?
RETURN TMP_316
typecheckig node...
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
Function name: _sharesToAmount
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _totalAmount Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_315 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_315

Name: TMP_315 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
XXXXX
TMP_316(uint256) = TMP_315 (c)/ _totalShares_1
Function name: _sharesToAmount
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_316 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_316

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_316
RETURN

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToAmount":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToAmount

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for TMP_318

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_318
RETURN

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToDebt":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToDebt

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_277

Name: TMP_277 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_5(mapping(address => uint256)) := ϕ(['totalDebtShares_10'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_5(mapping(address => uint256)) := ϕ(['totalDebtAmount_13'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint256) := TMP_277(uint256)
Function name: _burnDebtShares
asgn

Name: TMP_277 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amount

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_82(mapping(address => uint256)) -> debtSharesOf_18[_token_1]
has variable
clearing ir...?
REF_83(uint256) -> REF_82[_account_1]
has variable
clearing ir...?
debtSharesOf_19(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_18'])
has variable
clearing ir...?
REF_83(-> debtSharesOf_19) = REF_83 (c)- _shares_1
has variable
typecheckig node...
REF_82(mapping(address => uint256)) -> debtSharesOf_18[_token_1]
Function name: _burnDebtShares
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
debtSharesOf
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256
[i]Type for REF_82

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_83(uint256) -> REF_82[_account_1]
Function name: _burnDebtShares
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_83

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
debtSharesOf_19(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_18'])
Function name: _burnDebtShares
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_83(-> debtSharesOf_19) = REF_83 (c)- _shares_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_83

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_83(-> debtSharesOf_19) = REF_83 (c)- _shares_1
XXXXX
clearning node...
clearing ir...?
REF_84(uint256) -> totalDebtShares_5[_token_1]
has variable
clearing ir...?
totalDebtShares_6(mapping(address => uint256)) := ϕ(['totalDebtShares_5'])
has variable
clearing ir...?
REF_84(-> totalDebtShares_6) = REF_84 (c)- _shares_1
has variable
typecheckig node...
REF_84(uint256) -> totalDebtShares_5[_token_1]
Function name: _burnDebtShares
INDEX

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_84

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_6(mapping(address => uint256)) := ϕ(['totalDebtShares_5'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_84(-> totalDebtShares_6) = REF_84 (c)- _shares_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_84

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_84(-> totalDebtShares_6) = REF_84 (c)- _shares_1
XXXXX
clearning node...
clearing ir...?
REF_85(uint256) -> totalDebtAmount_5[_token_1]
has variable
clearing ir...?
totalDebtAmount_6(mapping(address => uint256)) := ϕ(['totalDebtAmount_5'])
has variable
clearing ir...?
REF_85(-> totalDebtAmount_6) = REF_85 (c)- amount_1
has variable
typecheckig node...
REF_85(uint256) -> totalDebtAmount_5[_token_1]
Function name: _burnDebtShares
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_85

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_6(mapping(address => uint256)) := ϕ(['totalDebtAmount_5'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_85(-> totalDebtAmount_6) = REF_85 (c)- amount_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_85

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_burnDebtShares":
 New undefined nodes- 3
 Old undefined nodes- 0
typecheckig node...
_token_1(address) := ϕ(['_repayToken_1', '_token_1', '_token_1'])
Function name: _burnDebtShares
Phi
[i]Type for _token

Name: _token Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_account_1(address) := ϕ(['_account_1', '_account_1', '_account_1'])
Function name: _burnDebtShares
Phi
[i]Type for _account

Name: _account Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['TMP_183', 'TMP_264', '_shares_1'])
Function name: _burnDebtShares
Phi
[i]Type for _shares

Name: _shares Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
debtSharesOf_17(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
Function name: _burnDebtShares
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_4(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_4(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_276(bool) = _shares_1 > 0
Function name: _burnDebtShares
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_276 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_276

Name: TMP_276 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_276(bool) = _shares_1 > 0
XXXXX
CONDITION TMP_276
Condition...
Conidtion: 
TMP_276
TMP_276
typecheckig node...
typecheckig node...
TMP_277(uint256) = INTERNAL_CALL, LendingPair._sharesToDebt(address,uint256)(_token_1,_shares_1)
Function name: _burnDebtShares
Internal call...
_sharesToDebt
_token
_shares
Function: _sharesToDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToDebt
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_shares_1(uint256) := ϕ(['REF_105', '_shares_1'])
has variable
[i] _shares cleared
clearing ir...?
totalDebtShares_9(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
has variable
clearing ir...?
totalDebtAmount_12(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1'])
Function name: _sharesToDebt
Phi
[i]Type for _token

Name: _token Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_shares_1(uint256) := ϕ(['REF_105', '_shares_1'])
Function name: _sharesToDebt
Phi
[i]Type for _shares

Name: _shares Function: _sharesToDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_9(mapping(address => uint256)) := ϕ(['totalDebtShares_0', 'totalDebtShares_8', 'totalDebtShares_10', 'totalDebtShares_6', 'totalDebtShares_3'])
Function name: _sharesToDebt
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_12(mapping(address => uint256)) := ϕ(['totalDebtAmount_13', 'totalDebtAmount_3', 'totalDebtAmount_9', 'totalDebtAmount_16', 'totalDebtAmount_7', 'totalDebtAmount_0', 'totalDebtAmount_18', 'totalDebtAmount_11', 'totalDebtAmount_6'])
Function name: _sharesToDebt
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_98(uint256) -> totalDebtShares_9[_token_1]
has variable
clearing ir...?
REF_99(uint256) -> totalDebtAmount_12[_token_1]
has variable
clearing ir...?
TMP_318(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_98,REF_99,_shares_1)
has variable
[i] TMP_318 cleared
clearing ir...?
RETURN TMP_318
typecheckig node...
REF_98(uint256) -> totalDebtShares_9[_token_1]
Function name: _sharesToDebt
INDEX

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_98

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_99(uint256) -> totalDebtAmount_12[_token_1]
Function name: _sharesToDebt
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_99

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_318(uint256) = INTERNAL_CALL, LendingPair._sharesToAmount(uint256,uint256,uint256)(REF_98,REF_99,_shares_1)
Function name: _sharesToDebt
Internal call...
_sharesToAmount
REF_98
REF_99
_shares
Function: _sharesToAmount
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _sharesToAmount
Function Visibility: internal
clearning node...
clearing ir...?
_totalShares_1(uint256) := ϕ(['REF_102', 'REF_98'])
has variable
[i] _totalShares cleared
clearing ir...?
_totalAmount_1(uint256) := ϕ(['REF_99', 'REF_103'])
has variable
[i] _totalAmount cleared
clearing ir...?
_inputShares_1(uint256) := ϕ(['_shares_1', '_shares_1'])
has variable
[i] _inputShares cleared
typecheckig node...
_totalShares_1(uint256) := ϕ(['REF_102', 'REF_98'])
Function name: _sharesToAmount
Phi
[i]Type for _totalShares

Name: _totalShares Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalAmount_1(uint256) := ϕ(['REF_99', 'REF_103'])
Function name: _sharesToAmount
Phi
[i]Type for _totalAmount

Name: _totalAmount Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_inputShares_1(uint256) := ϕ(['_shares_1', '_shares_1'])
Function name: _sharesToAmount
Phi
[i]Type for _inputShares

Name: _inputShares Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_312(bool) = _totalShares_1 > 0
has variable
[i] TMP_312 cleared
clearing ir...?
TMP_313(bool) = _totalAmount_1 > 0
has variable
[i] TMP_313 cleared
clearing ir...?
TMP_314(bool) = TMP_312 && TMP_313
has variable
[i] TMP_314 cleared
clearing ir...?
CONDITION TMP_314
typecheckig node...
TMP_312(bool) = _totalShares_1 > 0
Function name: _sharesToAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_312

Name: TMP_312 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_313(bool) = _totalAmount_1 > 0
Function name: _sharesToAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_313

Name: TMP_313 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_314(bool) = TMP_312 && TMP_313
Function name: _sharesToAmount
[i]Type for TMP_314

Name: TMP_314 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_314
Condition...
Conidtion: 
TMP_314
TMP_314
clearning node...
clearing ir...?
RETURN _inputShares_1
typecheckig node...
RETURN _inputShares_1
RETURN

Name: _inputShares Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
has variable
[i] TMP_315 cleared
clearing ir...?
TMP_316(uint256) = TMP_315 (c)/ _totalShares_1
has variable
[i] TMP_316 cleared
clearing ir...?
RETURN TMP_316
typecheckig node...
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
Function name: _sharesToAmount
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _totalAmount Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_315 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_315

Name: TMP_315 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_315(uint256) = _inputShares_1 (c)* _totalAmount_1
XXXXX
TMP_316(uint256) = TMP_315 (c)/ _totalShares_1
Function name: _sharesToAmount
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_316 Function: _sharesToAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_316

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_316
RETURN

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToAmount":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToAmount

Name: TMP_316 Function: _sharesToAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for TMP_318

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_318
RETURN

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToDebt":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToDebt

Name: TMP_318 Function: _sharesToDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_277

Name: TMP_277 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_5(mapping(address => uint256)) := ϕ(['totalDebtShares_10'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_5(mapping(address => uint256)) := ϕ(['totalDebtAmount_13'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint256) := TMP_277(uint256)
Function name: _burnDebtShares
asgn

Name: TMP_277 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amount

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_82(mapping(address => uint256)) -> debtSharesOf_18[_token_1]
Function name: _burnDebtShares
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
debtSharesOf
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256
[i]Type for REF_82

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_83(uint256) -> REF_82[_account_1]
Function name: _burnDebtShares
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_83

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
debtSharesOf_19(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_18'])
Function name: _burnDebtShares
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_83(-> debtSharesOf_19) = REF_83 (c)- _shares_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_83

Name: REF_83 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_83(-> debtSharesOf_19) = REF_83 (c)- _shares_1
XXXXX
typecheckig node...
REF_84(uint256) -> totalDebtShares_5[_token_1]
Function name: _burnDebtShares
INDEX

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_84

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtShares_6(mapping(address => uint256)) := ϕ(['totalDebtShares_5'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtShares

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_84(-> totalDebtShares_6) = REF_84 (c)- _shares_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _shares Function: _burnDebtShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_84

Name: REF_84 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_84(-> totalDebtShares_6) = REF_84 (c)- _shares_1
XXXXX
typecheckig node...
REF_85(uint256) -> totalDebtAmount_5[_token_1]
Function name: _burnDebtShares
INDEX

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_85

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalDebtAmount_6(mapping(address => uint256)) := ϕ(['totalDebtAmount_5'])
Function name: _burnDebtShares
Phi
[i]Type for totalDebtAmount

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_85(-> totalDebtAmount_6) = REF_85 (c)- amount_1
Function name: _burnDebtShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_85

Name: REF_85 Function: _burnDebtShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "_burnDebtShares":
 New undefined nodes- 3
 Old undefined nodes- 3
Saving return values for: _burnDebtShares

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_184

Name: TMP_184 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_184(uint256) = INTERNAL_CALL, LendingPair._burnDebtShares(address,address,uint256)(_repayToken_1,_account_1,TMP_183)
XXXXX
typecheckig node...
INTERNAL_CALL, LendingPair._repayDebtFromSupply(address,address)(_account_1,tokenA_27)
Internal call...
_repayDebtFromSupply
_account
tokenA
Function: _repayDebtFromSupply
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
0
done.
typecheckig node...
INTERNAL_CALL, LendingPair._repayDebtFromSupply(address,address)(_account_1,tokenB_30)
Internal call...
_repayDebtFromSupply
_account
tokenB
Function: _repayDebtFromSupply
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
0
done.
typecheckig node...
INTERNAL_CALL, TransferHelper._safeTransferFrom(address,address,uint256)(_repayToken_1,msg.sender,_repayAmount_2)
Internal call...
_safeTransferFrom
_repayToken
msg.sender
_repayAmount
Function: _safeTransferFrom
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[], [], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[], [], 'u', None, [], -1]
added
xyz
Function name: _safeTransferFrom
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1', '_token_1', '_repayToken_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_sender_1(address) := ϕ(['msg.sender'])
has variable
[i] _sender cleared
clearing ir...?
_amount_1(uint256) := ϕ(['_repayAmount_2', '_amount_1', 'amount_1', '_amount_1', '_amount_1'])
has variable
[i] _amount cleared
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', '_token_1', '_repayToken_1', '_token_1'])
Function name: _safeTransferFrom
Phi
[i]Type for _token

Name: _token Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
_sender_1(address) := ϕ(['msg.sender'])
Function name: _safeTransferFrom
Phi
[i]Type for _sender

Name: _sender Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: _sender
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['_repayAmount_2', '_amount_1', 'amount_1', '_amount_1', '_amount_1'])
Function name: _safeTransferFrom
Phi
[i]Type for _amount

Name: _amount Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_0(bool) = _amount_1 > 0
has variable
[i] TMP_0 cleared
clearing ir...?
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,TransferHelper: amount must be > 0)
typecheckig node...
TMP_0(bool) = _amount_1 > 0
Function name: _safeTransferFrom
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_0

Name: TMP_0 Function: _safeTransferFrom
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_1(None) = SOLIDITY_CALL require(bool,string)(TMP_0,TransferHelper: amount must be > 0)
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_2 = CONVERT _token_1 to IERC20
has variable
[i] TMP_2 cleared
clearing ir...?
TMP_3 = CONVERT this to address
has variable
[i] TMP_3 cleared
clearing ir...?
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_2', '_sender_1', 'TMP_3', '_amount_1'] 
typecheckig node...
TMP_2 = CONVERT _token_1 to IERC20
Function name: _safeTransferFrom

Name: _token Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef

Name: TMP_2 Function: _safeTransferFrom
Num: 
Den: 
Norm: u
LF: _token
Fields: 
Finance Type: undef
[i]Type for TMP_2

Name: TMP_2 Function: _safeTransferFrom
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
TMP_3 = CONVERT this to address
Function name: _safeTransferFrom
[i]Type for TMP_3

Name: TMP_3 Function: _safeTransferFrom
Num: 
Den: 
Norm: u
LF: LendingPair
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_2', '_sender_1', 'TMP_3', '_amount_1'] 
Library Call: safeTransferFrom
done.
WORKLIST iteration 0 for function call "_safeTransferFrom":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _safeTransferFrom
done.
typecheckig node...
TMP_188(uint256) = INTERNAL_CALL, LendingPair._mintSupplyAmount(address,address,uint256)(supplyToken_3,msg.sender,supplyOutput_1)
Function name: liquidateAccount
Internal call...
_mintSupplyAmount
supplyToken
msg.sender
supplyOutput
Function: _mintSupplyAmount
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [2]
    norm: -20
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', '_account', [], -1]
cur_param: [[-1], [-1], 0, None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'TOKA', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 0, None, [], -1]
added
xyz
Function name: _mintSupplyAmount
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['supplyToken_3', 'tokenA_43', '_token_1', 'tokenB_8', 'tokenA_7', 'tokenB_47'])
has variable
[i] _token cleared
clearing ir...?
_account_1(address) := ϕ(['_account_1', '_account_1', 'msg.sender'])
has variable
[i] _account cleared
clearing ir...?
_amount_1(uint256) := ϕ(['amountA_1', '_amount_1', 'supplyOutput_1', 'amountA_1', 'amountB_1', 'amountB_1'])
has variable
[i] _amount cleared
clearing ir...?
supplySharesOf_13(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_15', 'supplySharesOf_12', 'supplySharesOf_0', 'supplySharesOf_8', 'supplySharesOf_4', 'supplySharesOf_18', 'supplySharesOf_21', 'supplySharesOf_19'])
has variable
clearing ir...?
totalSupplyShares_1(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
has variable
clearing ir...?
totalSupplyAmount_5(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
typecheckig node...
_token_1(address) := ϕ(['supplyToken_3', 'tokenA_43', '_token_1', 'tokenB_8', 'tokenA_7', 'tokenB_47'])
Function name: _mintSupplyAmount
Phi
[i]Type for _token

Name: _token Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_account_1(address) := ϕ(['_account_1', '_account_1', 'msg.sender'])
Function name: _mintSupplyAmount
Phi
[i]Type for _account

Name: _account Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['amountA_1', '_amount_1', 'supplyOutput_1', 'amountA_1', 'amountB_1', 'amountB_1'])
Function name: _mintSupplyAmount
Phi
[i]Type for _amount

Name: _amount Function: _mintSupplyAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
supplySharesOf_13(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_15', 'supplySharesOf_12', 'supplySharesOf_0', 'supplySharesOf_8', 'supplySharesOf_4', 'supplySharesOf_18', 'supplySharesOf_21', 'supplySharesOf_19'])
Function name: _mintSupplyAmount
Phi
[i]Type for supplySharesOf

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_1(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
Function name: _mintSupplyAmount
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_5(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: _mintSupplyAmount
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_270(bool) = _amount_1 > 0
has variable
[i] TMP_270 cleared
clearing ir...?
CONDITION TMP_270
typecheckig node...
TMP_270(bool) = _amount_1 > 0
Function name: _mintSupplyAmount
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_270

Name: TMP_270 Function: _mintSupplyAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_270
Condition...
Conidtion: 
TMP_270
TMP_270
clearning node...
clearing ir...?
TMP_271(uint256) = INTERNAL_CALL, LendingPair._supplyToShares(address,uint256)(_token_1,_amount_1)
has variable
[i] TMP_271 cleared
clearing ir...?
totalSupplyShares_2(mapping(address => uint256)) := ϕ(['totalSupplyShares_8'])
has variable
clearing ir...?
totalSupplyAmount_6(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12'])
has variable
clearing ir...?
shares_1(uint256) := TMP_271(uint256)
has variable
[i] shares cleared
typecheckig node...
TMP_271(uint256) = INTERNAL_CALL, LendingPair._supplyToShares(address,uint256)(_token_1,_amount_1)
Function name: _mintSupplyAmount
Internal call...
_supplyToShares
_token
_amount
Function: _supplyToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _supplyToShares
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['supplyToken_3', '_token_1', '_token_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
_amount_1(uint256) := ϕ(['supplyBurn_1', 'withdrawAmount_3', '_amount_1', '_amount_1', 'burnAmount_1'])
has variable
[i] _amount cleared
clearing ir...?
totalSupplyShares_7(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
has variable
clearing ir...?
totalSupplyAmount_11(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
has variable
typecheckig node...
_token_1(address) := ϕ(['supplyToken_3', '_token_1', '_token_1', '_token_1', '_token_1'])
Function name: _supplyToShares
Phi
[i]Type for _token

Name: _token Function: _supplyToShares
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['supplyBurn_1', 'withdrawAmount_3', '_amount_1', '_amount_1', 'burnAmount_1'])
Function name: _supplyToShares
Phi
[i]Type for _amount

Name: _amount Function: _supplyToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_7(mapping(address => uint256)) := ϕ(['totalSupplyShares_6', 'totalSupplyShares_0', 'totalSupplyShares_3', 'totalSupplyShares_8', 'totalSupplyShares_10'])
Function name: _supplyToShares
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_11(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12', 'totalSupplyAmount_4', 'totalSupplyAmount_10', 'totalSupplyAmount_14', 'totalSupplyAmount_0', 'totalSupplyAmount_7', 'totalSupplyAmount_17', 'totalSupplyAmount_19'])
Function name: _supplyToShares
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_100(uint256) -> totalSupplyShares_7[_token_1]
has variable
clearing ir...?
REF_101(uint256) -> totalSupplyAmount_11[_token_1]
has variable
clearing ir...?
TMP_319(uint256) = INTERNAL_CALL, LendingPair._amountToShares(uint256,uint256,uint256)(REF_100,REF_101,_amount_1)
has variable
[i] TMP_319 cleared
clearing ir...?
RETURN TMP_319
typecheckig node...
REF_100(uint256) -> totalSupplyShares_7[_token_1]
Function name: _supplyToShares
INDEX

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_100

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_101(uint256) -> totalSupplyAmount_11[_token_1]
Function name: _supplyToShares
INDEX

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_101

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_319(uint256) = INTERNAL_CALL, LendingPair._amountToShares(uint256,uint256,uint256)(REF_100,REF_101,_amount_1)
Function name: _supplyToShares
Internal call...
_amountToShares
REF_100
REF_101
_amount
Function: _amountToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [2]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _amountToShares
Function Visibility: internal
clearning node...
clearing ir...?
_totalShares_1(uint256) := ϕ(['REF_100', 'REF_96'])
has variable
[i] _totalShares cleared
clearing ir...?
_totalAmount_1(uint256) := ϕ(['REF_97', 'REF_101'])
has variable
[i] _totalAmount cleared
clearing ir...?
_inputSupply_1(uint256) := ϕ(['_amount_1', '_amount_1'])
has variable
[i] _inputSupply cleared
typecheckig node...
_totalShares_1(uint256) := ϕ(['REF_100', 'REF_96'])
Function name: _amountToShares
Phi
[i]Type for _totalShares

Name: _totalShares Function: _amountToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalAmount_1(uint256) := ϕ(['REF_97', 'REF_101'])
Function name: _amountToShares
Phi
[i]Type for _totalAmount

Name: _totalAmount Function: _amountToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_inputSupply_1(uint256) := ϕ(['_amount_1', '_amount_1'])
Function name: _amountToShares
Phi
[i]Type for _inputSupply

Name: _inputSupply Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_307(bool) = _totalShares_1 > 0
has variable
[i] TMP_307 cleared
clearing ir...?
TMP_308(bool) = _totalAmount_1 > 0
has variable
[i] TMP_308 cleared
clearing ir...?
TMP_309(bool) = TMP_307 && TMP_308
has variable
[i] TMP_309 cleared
clearing ir...?
CONDITION TMP_309
typecheckig node...
TMP_307(bool) = _totalShares_1 > 0
Function name: _amountToShares
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_307

Name: TMP_307 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_308(bool) = _totalAmount_1 > 0
Function name: _amountToShares
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_308

Name: TMP_308 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_309(bool) = TMP_307 && TMP_308
Function name: _amountToShares
[i]Type for TMP_309

Name: TMP_309 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_309
Condition...
Conidtion: 
TMP_309
TMP_309
clearning node...
clearing ir...?
RETURN _inputSupply_1
typecheckig node...
RETURN _inputSupply_1
RETURN

Name: _inputSupply Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
TMP_310(uint256) = _inputSupply_1 (c)* _totalShares_1
has variable
[i] TMP_310 cleared
clearing ir...?
TMP_311(uint256) = TMP_310 (c)/ _totalAmount_1
has variable
[i] TMP_311 cleared
clearing ir...?
RETURN TMP_311
typecheckig node...
TMP_310(uint256) = _inputSupply_1 (c)* _totalShares_1
Function name: _amountToShares
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _inputSupply Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_310 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_310

Name: TMP_310 Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_311(uint256) = TMP_310 (c)/ _totalAmount_1
Function name: _amountToShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_311 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_310 Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_311 Function: _amountToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_311

Name: TMP_311 Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_311
RETURN

Name: TMP_311 Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_amountToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _amountToShares

Name: TMP_311 Function: _amountToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
___
Check copy_toekn_tuple
([1], [2], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for TMP_319

Name: TMP_319 Function: _supplyToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_319
RETURN

Name: TMP_319 Function: _supplyToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_supplyToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _supplyToShares

Name: TMP_319 Function: _supplyToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_271

Name: TMP_271 Function: _mintSupplyAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_2(mapping(address => uint256)) := ϕ(['totalSupplyShares_8'])
Function name: _mintSupplyAmount
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_6(mapping(address => uint256)) := ϕ(['totalSupplyAmount_12'])
Function name: _mintSupplyAmount
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
shares_1(uint256) := TMP_271(uint256)
Function name: _mintSupplyAmount
asgn

Name: TMP_271 Function: _mintSupplyAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: _mintSupplyAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for shares

Name: shares Function: _mintSupplyAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_70(mapping(address => uint256)) -> supplySharesOf_14[_token_1]
has variable
clearing ir...?
REF_71(uint256) -> REF_70[_account_1]
has variable
clearing ir...?
supplySharesOf_15(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_14'])
has variable
clearing ir...?
REF_71(-> supplySharesOf_15) = REF_71 (c)+ shares_1
has variable
typecheckig node...
REF_70(mapping(address => uint256)) -> supplySharesOf_14[_token_1]
Function name: _mintSupplyAmount
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
supplySharesOf
REFERENCE TYPE READ
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256
[i]Type for REF_70

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_71(uint256) -> REF_70[_account_1]
Function name: _mintSupplyAmount
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_71

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
supplySharesOf_15(mapping(address => mapping(address => uint256))) := ϕ(['supplySharesOf_14'])
Function name: _mintSupplyAmount
Phi
[i]Type for supplySharesOf

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_71(-> supplySharesOf_15) = REF_71 (c)+ shares_1
Function name: _mintSupplyAmount

Name: REF_71 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: shares Function: _mintSupplyAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_71 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_71

Name: REF_71 Function: _mintSupplyAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_72(uint256) -> totalSupplyShares_2[_token_1]
has variable
clearing ir...?
totalSupplyShares_3(mapping(address => uint256)) := ϕ(['totalSupplyShares_2'])
has variable
clearing ir...?
REF_72(-> totalSupplyShares_3) = REF_72 (c)+ shares_1
has variable
typecheckig node...
REF_72(uint256) -> totalSupplyShares_2[_token_1]
Function name: _mintSupplyAmount
INDEX

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_72

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyShares_3(mapping(address => uint256)) := ϕ(['totalSupplyShares_2'])
Function name: _mintSupplyAmount
Phi
[i]Type for totalSupplyShares

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_72(-> totalSupplyShares_3) = REF_72 (c)+ shares_1
Function name: _mintSupplyAmount

Name: REF_72 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: shares Function: _mintSupplyAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_72 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_72

Name: REF_72 Function: _mintSupplyAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_73(uint256) -> totalSupplyAmount_6[_token_1]
has variable
clearing ir...?
totalSupplyAmount_7(mapping(address => uint256)) := ϕ(['totalSupplyAmount_6'])
has variable
clearing ir...?
REF_73(-> totalSupplyAmount_7) = REF_73 (c)+ _amount_1
has variable
typecheckig node...
REF_73(uint256) -> totalSupplyAmount_6[_token_1]
Function name: _mintSupplyAmount
INDEX

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_73

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalSupplyAmount_7(mapping(address => uint256)) := ϕ(['totalSupplyAmount_6'])
Function name: _mintSupplyAmount
Phi
[i]Type for totalSupplyAmount

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_73(-> totalSupplyAmount_7) = REF_73 (c)+ _amount_1
Function name: _mintSupplyAmount

Name: REF_73 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: _mintSupplyAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_73 Function: _mintSupplyAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_73

Name: REF_73 Function: _mintSupplyAmount
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_mintSupplyAmount":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _mintSupplyAmount

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_188

Name: TMP_188 Function: liquidateAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
Emit Liquidation(_account_1,_repayToken_1,supplyToken_3,_repayAmount_2,supplyOutput_1)
WORKLIST iteration 1 for function call "liquidateAccount":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: liquidateAccount
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: accountHealth
Function name: accountHealth
Function Visibility (test): public
_account
Finding type for _account...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _account Function: accountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_account', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
0
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
_account_1(address) := ϕ(['_account_1', '_account_1'])
has variable
[i] _account cleared
clearing ir...?
LIQ_MIN_HEALTH_7(uint256) := ϕ(['LIQ_MIN_HEALTH_0', 'LIQ_MIN_HEALTH_9', 'LIQ_MIN_HEALTH_6'])
has variable
clearing ir...?
debtSharesOf_13(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
has variable
clearing ir...?
lendingController_14(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
clearing ir...?
tokenA_29(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
has variable
clearing ir...?
tokenB_32(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
typecheckig node...
_account_1(address) := ϕ(['_account_1', '_account_1'])
Function name: accountHealth
Phi
[i]Type for _account

Name: _account Function: accountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
LIQ_MIN_HEALTH_7(uint256) := ϕ(['LIQ_MIN_HEALTH_0', 'LIQ_MIN_HEALTH_9', 'LIQ_MIN_HEALTH_6'])
Function name: accountHealth
Phi
[i]Type for LIQ_MIN_HEALTH

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
debtSharesOf_13(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
Function name: accountHealth
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_14(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: accountHealth
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_29(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: accountHealth
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_32(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: accountHealth
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_45(mapping(address => uint256)) -> debtSharesOf_13[tokenA_29]
has variable
clearing ir...?
REF_46(uint256) -> REF_45[_account_1]
has variable
clearing ir...?
TMP_192(bool) = REF_46 == 0
has variable
[i] TMP_192 cleared
clearing ir...?
REF_47(mapping(address => uint256)) -> debtSharesOf_13[tokenB_32]
has variable
clearing ir...?
REF_48(uint256) -> REF_47[_account_1]
has variable
clearing ir...?
TMP_193(bool) = REF_48 == 0
has variable
[i] TMP_193 cleared
clearing ir...?
TMP_194(bool) = TMP_192 && TMP_193
has variable
[i] TMP_194 cleared
clearing ir...?
CONDITION TMP_194
typecheckig node...
REF_45(mapping(address => uint256)) -> debtSharesOf_13[tokenA_29]
Function name: accountHealth
INDEX

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_45

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_46(uint256) -> REF_45[_account_1]
Function name: accountHealth
INDEX

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_46

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_192(bool) = REF_46 == 0
Function name: accountHealth
[i]Type for TMP_192

Name: TMP_192 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_47(mapping(address => uint256)) -> debtSharesOf_13[tokenB_32]
Function name: accountHealth
INDEX

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_47

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_48(uint256) -> REF_47[_account_1]
Function name: accountHealth
INDEX

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_48

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_193(bool) = REF_48 == 0
Function name: accountHealth
[i]Type for TMP_193

Name: TMP_193 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_194(bool) = TMP_192 && TMP_193
Function name: accountHealth
[i]Type for TMP_194

Name: TMP_194 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_194
Condition...
Conidtion: 
TMP_194
TMP_194
clearning node...
clearing ir...?
RETURN LIQ_MIN_HEALTH_7
typecheckig node...
RETURN LIQ_MIN_HEALTH_7
RETURN

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_4(uint256,uint256) = HIGH_LEVEL_CALL, dest:lendingController_14(ILendingController), function:tokenPrices, arguments:['tokenA_29', 'tokenB_32']  
has variable
clearing ir...?
lendingController_15(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_14', 'lendingController_35'])
has variable
clearing ir...?
tokenA_30(address) := ϕ(['tokenA_29', 'tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
has variable
clearing ir...?
tokenB_33(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_32', 'tokenB_9'])
has variable
clearing ir...?
priceA_1(uint256)= UNPACK TUPLE_4 index: 0 
has variable
[i] priceA cleared
clearing ir...?
priceB_1(uint256)= UNPACK TUPLE_4 index: 1 
has variable
[i] priceB cleared
typecheckig node...
TUPLE_4(uint256,uint256) = HIGH_LEVEL_CALL, dest:lendingController_14(ILendingController), function:tokenPrices, arguments:['tokenA_29', 'tokenB_32']  
Function name: accountHealth
High Call: tokenPrices
func name:tokenPrices
other func name:tokenPrices
TUPLE_4
hlc contract name: LENDINGCONTR func_name: tokenPrices
('c', [1], [-1], 0, None)
tokenA
tokenB
('c', [2], [-1], 0, None)
tokenA
tokenB
wfc len: 2
COPIED
[i]Type for TUPLE_4

Name: TUPLE_4 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_15(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_14', 'lendingController_35'])
Function name: accountHealth
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_30(address) := ϕ(['tokenA_29', 'tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: accountHealth
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_33(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_32', 'tokenB_9'])
Function name: accountHealth
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
priceA_1(uint256)= UNPACK TUPLE_4 index: 0 
Function name: accountHealth
Reading tuple TUPLE_4 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for priceA

Name: priceA Function: accountHealth
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
priceB_1(uint256)= UNPACK TUPLE_4 index: 1 
Function name: accountHealth
Reading tuple TUPLE_4 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for priceB

Name: priceB Function: accountHealth
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_195(uint256) = HIGH_LEVEL_CALL, dest:lendingController_15(ILendingController), function:colFactor, arguments:['tokenA_30']  
has variable
[i] TMP_195 cleared
clearing ir...?
lendingController_16(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_15', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
clearing ir...?
tokenA_31(address) := ϕ(['tokenA_30', 'tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
has variable
clearing ir...?
tokenB_34(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_33', 'tokenB_9'])
has variable
clearing ir...?
colFactorA_1(uint256) := TMP_195(uint256)
has variable
[i] colFactorA cleared
typecheckig node...
TMP_195(uint256) = HIGH_LEVEL_CALL, dest:lendingController_15(ILendingController), function:colFactor, arguments:['tokenA_30']  
Function name: accountHealth
High Call: colFactor
func name:colFactor
other func name:colFactor
TMP_195
hlc contract name: LENDINGCONTR func_name: colFactor
('c', [-1], [-1], 20, None)
tokenA
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 20, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_195

Name: TMP_195 Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef
done.
lendingController_16(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_15', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: accountHealth
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_31(address) := ϕ(['tokenA_30', 'tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: accountHealth
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_34(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_33', 'tokenB_9'])
Function name: accountHealth
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
colFactorA_1(uint256) := TMP_195(uint256)
Function name: accountHealth
asgn

Name: TMP_195 Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef

Name: colFactorA Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for colFactorA

Name: colFactorA Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_196(uint256) = HIGH_LEVEL_CALL, dest:lendingController_16(ILendingController), function:colFactor, arguments:['tokenB_34']  
has variable
[i] TMP_196 cleared
clearing ir...?
lendingController_17(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_16', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
clearing ir...?
tokenA_32(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_31', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
has variable
clearing ir...?
tokenB_35(address) := ϕ(['tokenB_5', 'tokenB_34', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
clearing ir...?
colFactorB_1(uint256) := TMP_196(uint256)
has variable
[i] colFactorB cleared
typecheckig node...
TMP_196(uint256) = HIGH_LEVEL_CALL, dest:lendingController_16(ILendingController), function:colFactor, arguments:['tokenB_34']  
Function name: accountHealth
High Call: colFactor
func name:colFactor
other func name:colFactor
TMP_196
hlc contract name: LENDINGCONTR func_name: colFactor
('c', [-1], [-1], 20, None)
tokenB
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 20, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_196

Name: TMP_196 Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef
done.
lendingController_17(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_16', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: accountHealth
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_32(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_31', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: accountHealth
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_35(address) := ϕ(['tokenB_5', 'tokenB_34', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: accountHealth
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
colFactorB_1(uint256) := TMP_196(uint256)
Function name: accountHealth
asgn

Name: TMP_196 Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef

Name: colFactorB Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for colFactorB

Name: colFactorB Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_197(uint256) = INTERNAL_CALL, LendingPair._supplyBalanceConverted(address,address,address,uint256,uint256)(_account_1,tokenA_32,tokenA_32,priceA_1,priceA_1)
has variable
[i] TMP_197 cleared
clearing ir...?
TMP_198(uint256) = TMP_197 (c)* colFactorA_1
has variable
[i] TMP_198 cleared
clearing ir...?
TMP_199(uint256) = TMP_198 (c)/ 100000000000000000000
has variable
[i] TMP_199 cleared
clearing ir...?
creditA_1(uint256) := TMP_199(uint256)
has variable
[i] creditA cleared
typecheckig node...
TMP_197(uint256) = INTERNAL_CALL, LendingPair._supplyBalanceConverted(address,address,address,uint256,uint256)(_account_1,tokenA_32,tokenA_32,priceA_1,priceA_1)
Function name: accountHealth
Internal call...
_supplyBalanceConverted
_account
tokenA
tokenA
priceA
priceA
Function: _supplyBalanceConverted
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_account', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[1], [-1], 0, None, [], -1]
[[1], [-1], 0, None, [], -1]
0

Name: PIC_39 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_197 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_197

Name: TMP_197 Function: accountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_198(uint256) = TMP_197 (c)* colFactorA_1
Function name: accountHealth
testing mul...
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: colFactorA Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef

Name: TMP_198 Function: accountHealth
Num: 
Den: 
Norm: 20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_198

Name: TMP_198 Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef
done.
TMP_199(uint256) = TMP_198 (c)/ 100000000000000000000
Function name: accountHealth
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: 20 rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_199 Function: accountHealth
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 100000000000000000000
20
[i]Type for TMP_199

Name: TMP_199 Function: accountHealth
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
creditA_1(uint256) := TMP_199(uint256)
Function name: accountHealth
asgn

Name: TMP_199 Function: accountHealth
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: creditA Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for creditA

Name: creditA Function: accountHealth
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_200(uint256) = INTERNAL_CALL, LendingPair._supplyBalanceConverted(address,address,address,uint256,uint256)(_account_1,tokenB_36,tokenA_33,priceB_1,priceA_1)
has variable
[i] TMP_200 cleared
clearing ir...?
TMP_201(uint256) = TMP_200 (c)* colFactorB_1
has variable
[i] TMP_201 cleared
clearing ir...?
TMP_202(uint256) = TMP_201 (c)/ 100000000000000000000
has variable
[i] TMP_202 cleared
clearing ir...?
creditB_1(uint256) := TMP_202(uint256)
has variable
[i] creditB cleared
typecheckig node...
TMP_200(uint256) = INTERNAL_CALL, LendingPair._supplyBalanceConverted(address,address,address,uint256,uint256)(_account_1,tokenB_36,tokenA_33,priceB_1,priceA_1)
Function name: accountHealth
Internal call...
_supplyBalanceConverted
_account
tokenB
tokenA
priceB
priceA
Function: _supplyBalanceConverted
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_account', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[1], [-1], 0, None, [], -1]
[[1], [-1], 0, None, [], -1]
added
xyz
Function name: _supplyBalanceConverted
Function Visibility: internal
clearning node...
clearing ir...?
_account_1(address) := ϕ(['_account_1', '_account_1'])
has variable
[i] _account cleared
clearing ir...?
_suppliedToken_1(address) := ϕ(['tokenB_36', '_suppliedToken_1', 'tokenA_32'])
has variable
[i] _suppliedToken cleared
clearing ir...?
_returnToken_1(address) := ϕ(['_returnToken_1', 'tokenA_32', 'tokenA_33'])
has variable
[i] _returnToken cleared
clearing ir...?
_supplyPrice_1(uint256) := ϕ(['priceA_1', 'priceB_1', 'supplyPrice_1'])
has variable
[i] _supplyPrice cleared
clearing ir...?
_returnPrice_1(uint256) := ϕ(['priceA_1', 'returnPrice_1'])
has variable
[i] _returnPrice cleared
typecheckig node...
_account_1(address) := ϕ(['_account_1', '_account_1'])
Function name: _supplyBalanceConverted
Phi
[i]Type for _account

Name: _account Function: _supplyBalanceConverted
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_suppliedToken_1(address) := ϕ(['tokenB_36', '_suppliedToken_1', 'tokenA_32'])
Function name: _supplyBalanceConverted
Phi
[i]Type for _suppliedToken

Name: _suppliedToken Function: _supplyBalanceConverted
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_returnToken_1(address) := ϕ(['_returnToken_1', 'tokenA_32', 'tokenA_33'])
Function name: _supplyBalanceConverted
Phi
[i]Type for _returnToken

Name: _returnToken Function: _supplyBalanceConverted
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_supplyPrice_1(uint256) := ϕ(['priceA_1', 'priceB_1', 'supplyPrice_1'])
Function name: _supplyBalanceConverted
Phi
[i]Type for _supplyPrice

Name: _supplyPrice Function: _supplyBalanceConverted
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_returnPrice_1(uint256) := ϕ(['priceA_1', 'returnPrice_1'])
Function name: _supplyBalanceConverted
Phi
[i]Type for _returnPrice

Name: _returnPrice Function: _supplyBalanceConverted
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_330(uint256) = INTERNAL_CALL, LendingPair._supplyOf(address,address)(_suppliedToken_1,_account_1)
has variable
[i] TMP_330 cleared
clearing ir...?
TMP_331(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_suppliedToken_1,_returnToken_1,TMP_330,_supplyPrice_1,_returnPrice_1)
has variable
[i] TMP_331 cleared
clearing ir...?
RETURN TMP_331
typecheckig node...
TMP_330(uint256) = INTERNAL_CALL, LendingPair._supplyOf(address,address)(_suppliedToken_1,_account_1)
Function name: _supplyBalanceConverted
Internal call...
_supplyOf
_suppliedToken
_account
Function: _supplyOf
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', '_account', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
0

Name: PIC_36 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_330 Function: _supplyBalanceConverted
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_330

Name: TMP_330 Function: _supplyBalanceConverted
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_331(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_suppliedToken_1,_returnToken_1,TMP_330,_supplyPrice_1,_returnPrice_1)
Function name: _supplyBalanceConverted
Internal call...
_convertTokenValues
_suppliedToken
_returnToken
TMP_330
_supplyPrice
_returnPrice
Function: _convertTokenValues
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[], [], 'u', None, [], -1]
cur_param: [[1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', 'TOKA', [], -1]
[[], [], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
added
xyz
Function name: _convertTokenValues
Function Visibility: internal
clearning node...
clearing ir...?
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
has variable
[i] _fromToken cleared
clearing ir...?
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
has variable
[i] _toToken cleared
clearing ir...?
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
has variable
[i] _inputAmount cleared
clearing ir...?
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
has variable
[i] _fromPrice cleared
clearing ir...?
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
has variable
[i] _toPrice cleared
clearing ir...?
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
has variable
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_340 cleared
clearing ir...?
REF_115(uint256) -> decimals_3[_fromToken_1]
has variable
clearing ir...?
TMP_341(uint256) = 10 (c)** REF_115
has variable
[i] TMP_341 cleared
clearing ir...?
TMP_342(uint256) = TMP_340 (c)/ TMP_341
has variable
[i] TMP_342 cleared
clearing ir...?
priceFrom_1(uint256) := TMP_342(uint256)
has variable
[i] priceFrom cleared
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_343 cleared
clearing ir...?
REF_116(uint256) -> decimals_3[_toToken_1]
has variable
clearing ir...?
TMP_344(uint256) = 10 (c)** REF_116
has variable
[i] TMP_344 cleared
clearing ir...?
TMP_345(uint256) = TMP_343 (c)/ TMP_344
has variable
[i] TMP_345 cleared
clearing ir...?
priceTo_1(uint256) := TMP_345(uint256)
has variable
[i] priceTo cleared
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
XXXXX
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_121 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
XXXXX
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_122 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: _convertTokenValues

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_331

Name: TMP_331 Function: _supplyBalanceConverted
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_331(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_suppliedToken_1,_returnToken_1,TMP_330,_supplyPrice_1,_returnPrice_1)
XXXXX
RETURN TMP_331
RETURN

Name: TMP_331 Function: _supplyBalanceConverted
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_supplyBalanceConverted":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _supplyBalanceConverted

Name: TMP_331 Function: _supplyBalanceConverted
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_200

Name: TMP_200 Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_201(uint256) = TMP_200 (c)* colFactorB_1
Function name: accountHealth
testing mul...
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_200 Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_201 Function: accountHealth
Num: 
Den: 
Norm: 20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_201

Name: TMP_201 Function: accountHealth
Num: 2
Den: 1
Norm: 20
LF: None
Fields: 
Finance Type: undef
done.
TMP_202(uint256) = TMP_201 (c)/ 100000000000000000000
Function name: accountHealth
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: 20 rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_202 Function: accountHealth
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_201 Function: accountHealth
Num: 2
Den: 1
Norm: 20
LF: None
Fields: 
Finance Type: undef

Name: TMP_202 Function: accountHealth
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
creditB_1(uint256) := TMP_202(uint256)
Function name: accountHealth
asgn

Name: TMP_202 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: creditB Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for creditB

Name: creditB Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_203(uint256) = INTERNAL_CALL, LendingPair._supplyCreditUni(address,address,uint256,uint256,uint256,uint256)(_account_1,tokenA_34,priceA_1,priceB_1,colFactorA_1,colFactorB_1)
has variable
[i] TMP_203 cleared
clearing ir...?
tokenA_35(address) := ϕ(['tokenA_47'])
has variable
clearing ir...?
tokenB_38(address) := ϕ(['tokenB_52'])
has variable
clearing ir...?
creditUni_1(uint256) := TMP_203(uint256)
has variable
[i] creditUni cleared
typecheckig node...
TMP_203(uint256) = INTERNAL_CALL, LendingPair._supplyCreditUni(address,address,uint256,uint256,uint256,uint256)(_account_1,tokenA_34,priceA_1,priceB_1,colFactorA_1,colFactorB_1)
Function name: accountHealth
Internal call...
_supplyCreditUni
_account
tokenA
priceA
priceB
colFactorA
colFactorB
Function: _supplyCreditUni
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: 20
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: 20
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: 20
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: 20
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_account', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
cur_param: [[2], [-1], 0, None, [], -1]
cur_param: [[-1], [-1], 20, None, [], -1]
cur_param: [[-1], [-1], 20, None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: 20
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: 20
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[1], [-1], 0, None, [], -1]
[[2], [-1], 0, None, [], -1]
[[-1], [-1], 20, None, [], -1]
[[-1], [-1], 20, None, [], -1]
0
[i]Type for TMP_203

Name: TMP_203 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenA_35(address) := ϕ(['tokenA_47'])
Function name: accountHealth
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_38(address) := ϕ(['tokenB_52'])
Function name: accountHealth
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
creditUni_1(uint256) := TMP_203(uint256)
Function name: accountHealth
asgn

Name: TMP_203 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditUni Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for creditUni

Name: creditUni Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
creditUni_1(uint256) := TMP_203(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_204(uint256) = creditA_1 (c)+ creditB_1
has variable
[i] TMP_204 cleared
clearing ir...?
TMP_205(uint256) = TMP_204 (c)+ creditUni_1
has variable
[i] TMP_205 cleared
clearing ir...?
totalAccountSupply_1(uint256) := TMP_205(uint256)
has variable
[i] totalAccountSupply cleared
typecheckig node...
TMP_204(uint256) = creditA_1 (c)+ creditB_1
Function name: accountHealth

Name: TMP_204 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: creditB Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_204 Function: accountHealth
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_204

Name: TMP_204 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_205(uint256) = TMP_204 (c)+ creditUni_1
Function name: accountHealth

Name: TMP_205 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_204 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_205 Function: accountHealth
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_205

Name: TMP_205 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_205(uint256) = TMP_204 (c)+ creditUni_1
XXXXX
totalAccountSupply_1(uint256) := TMP_205(uint256)
Function name: accountHealth
asgn

Name: TMP_205 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: totalAccountSupply Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalAccountSupply

Name: totalAccountSupply Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_206(uint256) = INTERNAL_CALL, LendingPair._borrowBalanceConverted(address,address,address,uint256,uint256)(_account_1,tokenA_35,tokenA_35,priceA_1,priceA_1)
has variable
[i] TMP_206 cleared
clearing ir...?
TMP_207(uint256) = INTERNAL_CALL, LendingPair._borrowBalanceConverted(address,address,address,uint256,uint256)(_account_1,tokenB_39,tokenA_36,priceB_1,priceA_1)
has variable
[i] TMP_207 cleared
clearing ir...?
TMP_208(uint256) = TMP_206 (c)+ TMP_207
has variable
[i] TMP_208 cleared
clearing ir...?
totalAccountBorrow_1(uint256) := TMP_208(uint256)
has variable
[i] totalAccountBorrow cleared
typecheckig node...
TMP_206(uint256) = INTERNAL_CALL, LendingPair._borrowBalanceConverted(address,address,address,uint256,uint256)(_account_1,tokenA_35,tokenA_35,priceA_1,priceA_1)
Function name: accountHealth
Internal call...
_borrowBalanceConverted
_account
tokenA
tokenA
priceA
priceA
Function: _borrowBalanceConverted
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_account', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[1], [-1], 0, None, [], -1]
[[1], [-1], 0, None, [], -1]
0

Name: PIC_55 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_206 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: accountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_207(uint256) = INTERNAL_CALL, LendingPair._borrowBalanceConverted(address,address,address,uint256,uint256)(_account_1,tokenB_39,tokenA_36,priceB_1,priceA_1)
Function name: accountHealth
Internal call...
_borrowBalanceConverted
_account
tokenB
tokenA
priceB
priceA
Function: _borrowBalanceConverted
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_account', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[1], [-1], 0, None, [], -1]
[[1], [-1], 0, None, [], -1]
added
xyz
Function name: _borrowBalanceConverted
Function Visibility: internal
clearning node...
clearing ir...?
_account_1(address) := ϕ(['_account_1', '_account_1'])
has variable
[i] _account cleared
clearing ir...?
_borrowedToken_1(address) := ϕ(['tokenA_35', 'tokenB_39', '_borrowedToken_1'])
has variable
[i] _borrowedToken cleared
clearing ir...?
_returnToken_1(address) := ϕ(['tokenA_36', '_returnToken_1', 'tokenA_35'])
has variable
[i] _returnToken cleared
clearing ir...?
_borrowPrice_1(uint256) := ϕ(['borrowPrice_1', 'priceA_1', 'priceB_1'])
has variable
[i] _borrowPrice cleared
clearing ir...?
_returnPrice_1(uint256) := ϕ(['priceA_1', 'returnPrice_1'])
has variable
[i] _returnPrice cleared
typecheckig node...
_account_1(address) := ϕ(['_account_1', '_account_1'])
Function name: _borrowBalanceConverted
Phi
[i]Type for _account

Name: _account Function: _borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_borrowedToken_1(address) := ϕ(['tokenA_35', 'tokenB_39', '_borrowedToken_1'])
Function name: _borrowBalanceConverted
Phi
[i]Type for _borrowedToken

Name: _borrowedToken Function: _borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_returnToken_1(address) := ϕ(['tokenA_36', '_returnToken_1', 'tokenA_35'])
Function name: _borrowBalanceConverted
Phi
[i]Type for _returnToken

Name: _returnToken Function: _borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_borrowPrice_1(uint256) := ϕ(['borrowPrice_1', 'priceA_1', 'priceB_1'])
Function name: _borrowBalanceConverted
Phi
[i]Type for _borrowPrice

Name: _borrowPrice Function: _borrowBalanceConverted
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_returnPrice_1(uint256) := ϕ(['priceA_1', 'returnPrice_1'])
Function name: _borrowBalanceConverted
Phi
[i]Type for _returnPrice

Name: _returnPrice Function: _borrowBalanceConverted
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_328(uint256) = INTERNAL_CALL, LendingPair._debtOf(address,address)(_borrowedToken_1,_account_1)
has variable
[i] TMP_328 cleared
clearing ir...?
TMP_329(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_borrowedToken_1,_returnToken_1,TMP_328,_borrowPrice_1,_returnPrice_1)
has variable
[i] TMP_329 cleared
clearing ir...?
RETURN TMP_329
typecheckig node...
TMP_328(uint256) = INTERNAL_CALL, LendingPair._debtOf(address,address)(_borrowedToken_1,_account_1)
Function name: _borrowBalanceConverted
Internal call...
_debtOf
_borrowedToken
_account
Function: _debtOf
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', '_account', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
0

Name: PIC_51 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_328 Function: _borrowBalanceConverted
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_328

Name: TMP_328 Function: _borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_329(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_borrowedToken_1,_returnToken_1,TMP_328,_borrowPrice_1,_returnPrice_1)
Function name: _borrowBalanceConverted
Internal call...
_convertTokenValues
_borrowedToken
_returnToken
TMP_328
_borrowPrice
_returnPrice
Function: _convertTokenValues
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[], [], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', 'TOKA', [], -1]
[[], [], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
added
xyz
Function name: _convertTokenValues
Function Visibility: internal
clearning node...
clearing ir...?
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
has variable
[i] _fromToken cleared
clearing ir...?
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
has variable
[i] _toToken cleared
clearing ir...?
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
has variable
[i] _inputAmount cleared
clearing ir...?
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
has variable
[i] _fromPrice cleared
clearing ir...?
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
has variable
[i] _toPrice cleared
clearing ir...?
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
has variable
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_340 cleared
clearing ir...?
REF_115(uint256) -> decimals_3[_fromToken_1]
has variable
clearing ir...?
TMP_341(uint256) = 10 (c)** REF_115
has variable
[i] TMP_341 cleared
clearing ir...?
TMP_342(uint256) = TMP_340 (c)/ TMP_341
has variable
[i] TMP_342 cleared
clearing ir...?
priceFrom_1(uint256) := TMP_342(uint256)
has variable
[i] priceFrom cleared
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_343 cleared
clearing ir...?
REF_116(uint256) -> decimals_3[_toToken_1]
has variable
clearing ir...?
TMP_344(uint256) = 10 (c)** REF_116
has variable
[i] TMP_344 cleared
clearing ir...?
TMP_345(uint256) = TMP_343 (c)/ TMP_344
has variable
[i] TMP_345 cleared
clearing ir...?
priceTo_1(uint256) := TMP_345(uint256)
has variable
[i] priceTo cleared
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_125 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_126 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: _convertTokenValues

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_329

Name: TMP_329 Function: _borrowBalanceConverted
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_329(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_borrowedToken_1,_returnToken_1,TMP_328,_borrowPrice_1,_returnPrice_1)
XXXXX
RETURN TMP_329
RETURN

Name: TMP_329 Function: _borrowBalanceConverted
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_borrowBalanceConverted":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _borrowBalanceConverted

Name: TMP_329 Function: _borrowBalanceConverted
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_207

Name: TMP_207 Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_208(uint256) = TMP_206 (c)+ TMP_207
Function name: accountHealth

Name: TMP_208 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_207 Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_208 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_208

Name: TMP_208 Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalAccountBorrow_1(uint256) := TMP_208(uint256)
Function name: accountHealth
asgn

Name: TMP_208 Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalAccountBorrow Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalAccountBorrow

Name: totalAccountBorrow Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_209(uint256) = totalAccountSupply_1 (c)* 1000000000000000000
has variable
[i] TMP_209 cleared
clearing ir...?
TMP_210(uint256) = TMP_209 (c)/ totalAccountBorrow_1
has variable
[i] TMP_210 cleared
clearing ir...?
RETURN TMP_210
typecheckig node...
TMP_209(uint256) = totalAccountSupply_1 (c)* 1000000000000000000
Function name: accountHealth
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: 0 rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalAccountSupply Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_209 Function: accountHealth
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: accountHealth
Num: 2
Den: 1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
TMP_210(uint256) = TMP_209 (c)/ totalAccountBorrow_1
Function name: accountHealth
lnorm: 18 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_210 Function: accountHealth
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: PIC_129 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_210 Function: accountHealth
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_210

Name: TMP_210 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_210
RETURN

Name: TMP_210 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "accountHealth":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_account_1(address) := ϕ(['_account_1', '_account_1'])
Function name: accountHealth
Phi
[i]Type for _account

Name: _account Function: accountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
LIQ_MIN_HEALTH_7(uint256) := ϕ(['LIQ_MIN_HEALTH_0', 'LIQ_MIN_HEALTH_9', 'LIQ_MIN_HEALTH_6'])
Function name: accountHealth
Phi
[i]Type for LIQ_MIN_HEALTH

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
debtSharesOf_13(mapping(address => mapping(address => uint256))) := ϕ(['debtSharesOf_19', 'debtSharesOf_22', 'debtSharesOf_13', 'debtSharesOf_16', 'debtSharesOf_10', 'debtSharesOf_12', 'debtSharesOf_5', 'debtSharesOf_0', 'debtSharesOf_20'])
Function name: accountHealth
Phi
[i]Type for debtSharesOf

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_14(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: accountHealth
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_29(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: accountHealth
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_32(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: accountHealth
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_45(mapping(address => uint256)) -> debtSharesOf_13[tokenA_29]
Function name: accountHealth
INDEX

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_45

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_46(uint256) -> REF_45[_account_1]
Function name: accountHealth
INDEX

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_46

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_192(bool) = REF_46 == 0
Function name: accountHealth
[i]Type for TMP_192

Name: TMP_192 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_47(mapping(address => uint256)) -> debtSharesOf_13[tokenB_32]
Function name: accountHealth
INDEX

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_47

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_48(uint256) -> REF_47[_account_1]
Function name: accountHealth
INDEX

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_48

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_193(bool) = REF_48 == 0
Function name: accountHealth
[i]Type for TMP_193

Name: TMP_193 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_194(bool) = TMP_192 && TMP_193
Function name: accountHealth
[i]Type for TMP_194

Name: TMP_194 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_194
Condition...
Conidtion: 
TMP_194
TMP_194
typecheckig node...
RETURN LIQ_MIN_HEALTH_7
RETURN

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
typecheckig node...
typecheckig node...
typecheckig node...
TUPLE_4(uint256,uint256) = HIGH_LEVEL_CALL, dest:lendingController_14(ILendingController), function:tokenPrices, arguments:['tokenA_29', 'tokenB_32']  
Function name: accountHealth
High Call: tokenPrices
func name:tokenPrices
other func name:tokenPrices
TUPLE_4
hlc contract name: LENDINGCONTR func_name: tokenPrices
('c', [1], [-1], 0, None)
tokenA
tokenB
('c', [2], [-1], 0, None)
tokenA
tokenB
wfc len: 2
COPIED
[i]Type for TUPLE_4

Name: TUPLE_4 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_15(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_14', 'lendingController_35'])
Function name: accountHealth
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_30(address) := ϕ(['tokenA_29', 'tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: accountHealth
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_33(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_32', 'tokenB_9'])
Function name: accountHealth
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
priceA_1(uint256)= UNPACK TUPLE_4 index: 0 
Function name: accountHealth
Reading tuple TUPLE_4 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for priceA

Name: priceA Function: accountHealth
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
priceB_1(uint256)= UNPACK TUPLE_4 index: 1 
Function name: accountHealth
Reading tuple TUPLE_4 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for priceB

Name: priceB Function: accountHealth
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_195(uint256) = HIGH_LEVEL_CALL, dest:lendingController_15(ILendingController), function:colFactor, arguments:['tokenA_30']  
Function name: accountHealth
High Call: colFactor
func name:colFactor
other func name:colFactor
TMP_195
hlc contract name: LENDINGCONTR func_name: colFactor
('c', [-1], [-1], 20, None)
tokenA
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 20, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_195

Name: TMP_195 Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef
done.
lendingController_16(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_15', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: accountHealth
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_31(address) := ϕ(['tokenA_30', 'tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: accountHealth
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_34(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_33', 'tokenB_9'])
Function name: accountHealth
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
colFactorA_1(uint256) := TMP_195(uint256)
Function name: accountHealth
asgn

Name: TMP_195 Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef

Name: colFactorA Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for colFactorA

Name: colFactorA Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_196(uint256) = HIGH_LEVEL_CALL, dest:lendingController_16(ILendingController), function:colFactor, arguments:['tokenB_34']  
Function name: accountHealth
High Call: colFactor
func name:colFactor
other func name:colFactor
TMP_196
hlc contract name: LENDINGCONTR func_name: colFactor
('c', [-1], [-1], 20, None)
tokenB
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 20, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_196

Name: TMP_196 Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef
done.
lendingController_17(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_16', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: accountHealth
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
tokenA_32(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_31', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_37'])
Function name: accountHealth
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_35(address) := ϕ(['tokenB_5', 'tokenB_34', 'tokenB_48', 'tokenB_52', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: accountHealth
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
colFactorB_1(uint256) := TMP_196(uint256)
Function name: accountHealth
asgn

Name: TMP_196 Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef

Name: colFactorB Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for colFactorB

Name: colFactorB Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_197(uint256) = INTERNAL_CALL, LendingPair._supplyBalanceConverted(address,address,address,uint256,uint256)(_account_1,tokenA_32,tokenA_32,priceA_1,priceA_1)
Function name: accountHealth
Internal call...
_supplyBalanceConverted
_account
tokenA
tokenA
priceA
priceA
Function: _supplyBalanceConverted
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_account', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[1], [-1], 0, None, [], -1]
[[1], [-1], 0, None, [], -1]
0

Name: PIC_39 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_197 Function: accountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_197

Name: TMP_197 Function: accountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_198(uint256) = TMP_197 (c)* colFactorA_1
Function name: accountHealth
testing mul...
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: colFactorA Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef

Name: TMP_198 Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_198

Name: TMP_198 Function: accountHealth
Num: -1
Den: -1
Norm: 20
LF: None
Fields: 
Finance Type: undef
done.
TMP_199(uint256) = TMP_198 (c)/ 100000000000000000000
Function name: accountHealth
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: 20 rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_199 Function: accountHealth
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 100000000000000000000
20
[i]Type for TMP_199

Name: TMP_199 Function: accountHealth
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
creditA_1(uint256) := TMP_199(uint256)
Function name: accountHealth
asgn

Name: TMP_199 Function: accountHealth
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: creditA Function: accountHealth
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for creditA

Name: creditA Function: accountHealth
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_200(uint256) = INTERNAL_CALL, LendingPair._supplyBalanceConverted(address,address,address,uint256,uint256)(_account_1,tokenB_36,tokenA_33,priceB_1,priceA_1)
Function name: accountHealth
Internal call...
_supplyBalanceConverted
_account
tokenB
tokenA
priceB
priceA
Function: _supplyBalanceConverted
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_account', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[1], [-1], 0, None, [], -1]
[[1], [-1], 0, None, [], -1]
added
xyz
Function name: _supplyBalanceConverted
Function Visibility: internal
clearning node...
clearing ir...?
_account_1(address) := ϕ(['_account_1', '_account_1'])
has variable
[i] _account cleared
clearing ir...?
_suppliedToken_1(address) := ϕ(['tokenB_36', '_suppliedToken_1', 'tokenA_32'])
has variable
[i] _suppliedToken cleared
clearing ir...?
_returnToken_1(address) := ϕ(['_returnToken_1', 'tokenA_32', 'tokenA_33'])
has variable
[i] _returnToken cleared
clearing ir...?
_supplyPrice_1(uint256) := ϕ(['priceA_1', 'priceB_1', 'supplyPrice_1'])
has variable
[i] _supplyPrice cleared
clearing ir...?
_returnPrice_1(uint256) := ϕ(['priceA_1', 'returnPrice_1'])
has variable
[i] _returnPrice cleared
typecheckig node...
_account_1(address) := ϕ(['_account_1', '_account_1'])
Function name: _supplyBalanceConverted
Phi
[i]Type for _account

Name: _account Function: _supplyBalanceConverted
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_suppliedToken_1(address) := ϕ(['tokenB_36', '_suppliedToken_1', 'tokenA_32'])
Function name: _supplyBalanceConverted
Phi
[i]Type for _suppliedToken

Name: _suppliedToken Function: _supplyBalanceConverted
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_returnToken_1(address) := ϕ(['_returnToken_1', 'tokenA_32', 'tokenA_33'])
Function name: _supplyBalanceConverted
Phi
[i]Type for _returnToken

Name: _returnToken Function: _supplyBalanceConverted
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_supplyPrice_1(uint256) := ϕ(['priceA_1', 'priceB_1', 'supplyPrice_1'])
Function name: _supplyBalanceConverted
Phi
[i]Type for _supplyPrice

Name: _supplyPrice Function: _supplyBalanceConverted
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_returnPrice_1(uint256) := ϕ(['priceA_1', 'returnPrice_1'])
Function name: _supplyBalanceConverted
Phi
[i]Type for _returnPrice

Name: _returnPrice Function: _supplyBalanceConverted
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_330(uint256) = INTERNAL_CALL, LendingPair._supplyOf(address,address)(_suppliedToken_1,_account_1)
has variable
[i] TMP_330 cleared
clearing ir...?
TMP_331(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_suppliedToken_1,_returnToken_1,TMP_330,_supplyPrice_1,_returnPrice_1)
has variable
[i] TMP_331 cleared
clearing ir...?
RETURN TMP_331
typecheckig node...
TMP_330(uint256) = INTERNAL_CALL, LendingPair._supplyOf(address,address)(_suppliedToken_1,_account_1)
Function name: _supplyBalanceConverted
Internal call...
_supplyOf
_suppliedToken
_account
Function: _supplyOf
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', '_account', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
0

Name: PIC_36 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_330 Function: _supplyBalanceConverted
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_330

Name: TMP_330 Function: _supplyBalanceConverted
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_331(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_suppliedToken_1,_returnToken_1,TMP_330,_supplyPrice_1,_returnPrice_1)
Function name: _supplyBalanceConverted
Internal call...
_convertTokenValues
_suppliedToken
_returnToken
TMP_330
_supplyPrice
_returnPrice
Function: _convertTokenValues
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[], [], 'u', None, [], -1]
cur_param: [[1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', 'TOKA', [], -1]
[[], [], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
added
xyz
Function name: _convertTokenValues
Function Visibility: internal
clearning node...
clearing ir...?
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
has variable
[i] _fromToken cleared
clearing ir...?
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
has variable
[i] _toToken cleared
clearing ir...?
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
has variable
[i] _inputAmount cleared
clearing ir...?
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
has variable
[i] _fromPrice cleared
clearing ir...?
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
has variable
[i] _toPrice cleared
clearing ir...?
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
has variable
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_340 cleared
clearing ir...?
REF_115(uint256) -> decimals_3[_fromToken_1]
has variable
clearing ir...?
TMP_341(uint256) = 10 (c)** REF_115
has variable
[i] TMP_341 cleared
clearing ir...?
TMP_342(uint256) = TMP_340 (c)/ TMP_341
has variable
[i] TMP_342 cleared
clearing ir...?
priceFrom_1(uint256) := TMP_342(uint256)
has variable
[i] priceFrom cleared
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_343 cleared
clearing ir...?
REF_116(uint256) -> decimals_3[_toToken_1]
has variable
clearing ir...?
TMP_344(uint256) = 10 (c)** REF_116
has variable
[i] TMP_344 cleared
clearing ir...?
TMP_345(uint256) = TMP_343 (c)/ TMP_344
has variable
[i] TMP_345 cleared
clearing ir...?
priceTo_1(uint256) := TMP_345(uint256)
has variable
[i] priceTo cleared
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
XXXXX
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_130 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
XXXXX
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_131 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: _convertTokenValues

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_331

Name: TMP_331 Function: _supplyBalanceConverted
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_331(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_suppliedToken_1,_returnToken_1,TMP_330,_supplyPrice_1,_returnPrice_1)
XXXXX
RETURN TMP_331
RETURN

Name: TMP_331 Function: _supplyBalanceConverted
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_supplyBalanceConverted":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _supplyBalanceConverted

Name: TMP_331 Function: _supplyBalanceConverted
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_200

Name: TMP_200 Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_201(uint256) = TMP_200 (c)* colFactorB_1
Function name: accountHealth
testing mul...
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_200 Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_201 Function: accountHealth
Num: 2
Den: 1
Norm: 20
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_201

Name: TMP_201 Function: accountHealth
Num: 2
Den: 1
Norm: 20
LF: None
Fields: 
Finance Type: undef
done.
TMP_202(uint256) = TMP_201 (c)/ 100000000000000000000
Function name: accountHealth
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: 20 rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_202 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_201 Function: accountHealth
Num: 2
Den: 1
Norm: 20
LF: None
Fields: 
Finance Type: undef

Name: TMP_202 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_202

Name: TMP_202 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
creditB_1(uint256) := TMP_202(uint256)
Function name: accountHealth
asgn

Name: TMP_202 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: creditB Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for creditB

Name: creditB Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_203(uint256) = INTERNAL_CALL, LendingPair._supplyCreditUni(address,address,uint256,uint256,uint256,uint256)(_account_1,tokenA_34,priceA_1,priceB_1,colFactorA_1,colFactorB_1)
Function name: accountHealth
Internal call...
_supplyCreditUni
_account
tokenA
priceA
priceB
colFactorA
colFactorB
Function: _supplyCreditUni
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: 20
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: 20
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: 20
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: 20
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_account', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
cur_param: [[2], [-1], 0, None, [], -1]
cur_param: [[-1], [-1], 20, None, [], -1]
cur_param: [[-1], [-1], 20, None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: 20
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: 20
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[1], [-1], 0, None, [], -1]
[[2], [-1], 0, None, [], -1]
[[-1], [-1], 20, None, [], -1]
[[-1], [-1], 20, None, [], -1]
0
[i]Type for TMP_203

Name: TMP_203 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenA_35(address) := ϕ(['tokenA_47'])
Function name: accountHealth
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_38(address) := ϕ(['tokenB_52'])
Function name: accountHealth
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
creditUni_1(uint256) := TMP_203(uint256)
Function name: accountHealth
asgn

Name: TMP_203 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditUni Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for creditUni

Name: creditUni Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
creditUni_1(uint256) := TMP_203(uint256)
XXXXX
typecheckig node...
TMP_204(uint256) = creditA_1 (c)+ creditB_1
Function name: accountHealth

Name: TMP_204 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: creditB Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_204 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_204

Name: TMP_204 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_205(uint256) = TMP_204 (c)+ creditUni_1
Function name: accountHealth

Name: TMP_205 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_204 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_205 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_205

Name: TMP_205 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_205(uint256) = TMP_204 (c)+ creditUni_1
XXXXX
totalAccountSupply_1(uint256) := TMP_205(uint256)
Function name: accountHealth
asgn

Name: TMP_205 Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: totalAccountSupply Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalAccountSupply

Name: totalAccountSupply Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_206(uint256) = INTERNAL_CALL, LendingPair._borrowBalanceConverted(address,address,address,uint256,uint256)(_account_1,tokenA_35,tokenA_35,priceA_1,priceA_1)
Function name: accountHealth
Internal call...
_borrowBalanceConverted
_account
tokenA
tokenA
priceA
priceA
Function: _borrowBalanceConverted
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_account', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[1], [-1], 0, None, [], -1]
[[1], [-1], 0, None, [], -1]
0

Name: PIC_55 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_206 Function: accountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: accountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_207(uint256) = INTERNAL_CALL, LendingPair._borrowBalanceConverted(address,address,address,uint256,uint256)(_account_1,tokenB_39,tokenA_36,priceB_1,priceA_1)
Function name: accountHealth
Internal call...
_borrowBalanceConverted
_account
tokenB
tokenA
priceB
priceA
Function: _borrowBalanceConverted
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKB
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKA
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_account', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[-1], [-1], 0, 'TOKA', [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', '_account', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[-1], [-1], 0, 'TOKA', [], -1]
[[1], [-1], 0, None, [], -1]
[[1], [-1], 0, None, [], -1]
added
xyz
Function name: _borrowBalanceConverted
Function Visibility: internal
clearning node...
clearing ir...?
_account_1(address) := ϕ(['_account_1', '_account_1'])
has variable
[i] _account cleared
clearing ir...?
_borrowedToken_1(address) := ϕ(['tokenA_35', 'tokenB_39', '_borrowedToken_1'])
has variable
[i] _borrowedToken cleared
clearing ir...?
_returnToken_1(address) := ϕ(['tokenA_36', '_returnToken_1', 'tokenA_35'])
has variable
[i] _returnToken cleared
clearing ir...?
_borrowPrice_1(uint256) := ϕ(['borrowPrice_1', 'priceA_1', 'priceB_1'])
has variable
[i] _borrowPrice cleared
clearing ir...?
_returnPrice_1(uint256) := ϕ(['priceA_1', 'returnPrice_1'])
has variable
[i] _returnPrice cleared
typecheckig node...
_account_1(address) := ϕ(['_account_1', '_account_1'])
Function name: _borrowBalanceConverted
Phi
[i]Type for _account

Name: _account Function: _borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: _account
Fields: 
Finance Type: undef
done.
_borrowedToken_1(address) := ϕ(['tokenA_35', 'tokenB_39', '_borrowedToken_1'])
Function name: _borrowBalanceConverted
Phi
[i]Type for _borrowedToken

Name: _borrowedToken Function: _borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_returnToken_1(address) := ϕ(['tokenA_36', '_returnToken_1', 'tokenA_35'])
Function name: _borrowBalanceConverted
Phi
[i]Type for _returnToken

Name: _returnToken Function: _borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_borrowPrice_1(uint256) := ϕ(['borrowPrice_1', 'priceA_1', 'priceB_1'])
Function name: _borrowBalanceConverted
Phi
[i]Type for _borrowPrice

Name: _borrowPrice Function: _borrowBalanceConverted
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_returnPrice_1(uint256) := ϕ(['priceA_1', 'returnPrice_1'])
Function name: _borrowBalanceConverted
Phi
[i]Type for _returnPrice

Name: _returnPrice Function: _borrowBalanceConverted
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_328(uint256) = INTERNAL_CALL, LendingPair._debtOf(address,address)(_borrowedToken_1,_account_1)
has variable
[i] TMP_328 cleared
clearing ir...?
TMP_329(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_borrowedToken_1,_returnToken_1,TMP_328,_borrowPrice_1,_returnPrice_1)
has variable
[i] TMP_329 cleared
clearing ir...?
RETURN TMP_329
typecheckig node...
TMP_328(uint256) = INTERNAL_CALL, LendingPair._debtOf(address,address)(_borrowedToken_1,_account_1)
Function name: _borrowBalanceConverted
Internal call...
_debtOf
_borrowedToken
_account
Function: _debtOf
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', '_account', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', '_account', [], -1]
0

Name: PIC_51 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_328 Function: _borrowBalanceConverted
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_328

Name: TMP_328 Function: _borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_329(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_borrowedToken_1,_returnToken_1,TMP_328,_borrowPrice_1,_returnPrice_1)
Function name: _borrowBalanceConverted
Internal call...
_convertTokenValues
_borrowedToken
_returnToken
TMP_328
_borrowPrice
_returnPrice
Function: _convertTokenValues
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKB
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [2]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: TOKA
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[-1], [-1], 'u', 'TOKA', [], -1]
cur_param: [[], [], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', 'TOKA', [], -1]
[[-1], [-1], 'u', 'TOKA', [], -1]
[[], [], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
[[1], [-1], 'u', None, [], -1]
added
xyz
Function name: _convertTokenValues
Function Visibility: internal
clearning node...
clearing ir...?
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
has variable
[i] _fromToken cleared
clearing ir...?
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
has variable
[i] _toToken cleared
clearing ir...?
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
has variable
[i] _inputAmount cleared
clearing ir...?
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
has variable
[i] _fromPrice cleared
clearing ir...?
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
has variable
[i] _toPrice cleared
clearing ir...?
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
has variable
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_340 cleared
clearing ir...?
REF_115(uint256) -> decimals_3[_fromToken_1]
has variable
clearing ir...?
TMP_341(uint256) = 10 (c)** REF_115
has variable
[i] TMP_341 cleared
clearing ir...?
TMP_342(uint256) = TMP_340 (c)/ TMP_341
has variable
[i] TMP_342 cleared
clearing ir...?
priceFrom_1(uint256) := TMP_342(uint256)
has variable
[i] priceFrom cleared
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
has variable
[i] TMP_343 cleared
clearing ir...?
REF_116(uint256) -> decimals_3[_toToken_1]
has variable
clearing ir...?
TMP_344(uint256) = 10 (c)** REF_116
has variable
[i] TMP_344 cleared
clearing ir...?
TMP_345(uint256) = TMP_343 (c)/ TMP_344
has variable
[i] TMP_345 cleared
clearing ir...?
priceTo_1(uint256) := TMP_345(uint256)
has variable
[i] priceTo cleared
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_134 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_fromToken_1(address) := ϕ(['tokenB_51', '_fromToken_1', '_borrowedToken_1', '_repayToken_1', '_suppliedToken_1', 'tokenA_46'])
Function name: _convertTokenValues
Phi
[i]Type for _fromToken

Name: _fromToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKB
Fields: 
Finance Type: undef
done.
_toToken_1(address) := ϕ(['_returnToken_1', 'supplyToken_3', '_toToken_1', '_returnToken_1', '_returnToken_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toToken

Name: _toToken Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: TOKA
Fields: 
Finance Type: undef
done.
_inputAmount_1(uint256) := ϕ(['amountA_1', '_repayAmount_2', '_inputAmount_1', 'TMP_328', 'amountB_1', 'TMP_330'])
Function name: _convertTokenValues
Phi
[i]Type for _inputAmount

Name: _inputAmount Function: _convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromPrice_1(uint256) := ϕ(['_supplyPrice_1', '_priceA_1', 'fromPrice_1', '_borrowPrice_1', '_priceB_1', 'repayPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _fromPrice

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toPrice_1(uint256) := ϕ(['_returnPrice_1', 'supplyPrice_1', '_returnPrice_1', '_priceB_1', 'toPrice_1'])
Function name: _convertTokenValues
Phi
[i]Type for _toPrice

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
decimals_3(mapping(address => uint256)) := ϕ(['decimals_3', 'decimals_0', 'decimals_2'])
Function name: _convertTokenValues
Phi
[i]Type for decimals

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_340(uint256) = _fromPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _fromPrice Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_340

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> decimals_3[_fromToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(uint256) = 10 (c)** REF_115
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_341

Name: TMP_341 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_342(uint256) = TMP_340 (c)/ TMP_341
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _convertTokenValues
Num: 2
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_342 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_342(uint256) = TMP_340 (c)/ TMP_341
XXXXX
priceFrom_1(uint256) := TMP_342(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_342 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceFrom

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_343(uint256) = _toPrice_1 (c)* 1000000000000000000
Function name: _convertTokenValues
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _toPrice Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> decimals_3[_toToken_1]
Function name: _convertTokenValues
INDEX

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_116

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = 10 (c)** REF_116
Function name: _convertTokenValues
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_344

Name: TMP_344 Function: _convertTokenValues
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(uint256) = TMP_343 (c)/ TMP_344
Function name: _convertTokenValues
[W] Initializing defined variable to constant
lnorm: 18 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_343 Function: _convertTokenValues
Num: 1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_345 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_345

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_345(uint256) = TMP_343 (c)/ TMP_344
XXXXX
priceTo_1(uint256) := TMP_345(uint256)
Function name: _convertTokenValues
asgn

Name: TMP_345 Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for priceTo

Name: priceTo Function: _convertTokenValues
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
has variable
[i] TMP_347 cleared
clearing ir...?
RETURN TMP_347
typecheckig node...
TMP_346(uint256) = _inputAmount_1 (c)* priceFrom_1
Function name: _convertTokenValues
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: priceFrom Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_346

Name: TMP_346 Function: _convertTokenValues
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_347(uint256) = TMP_346 (c)/ priceTo_1
Function name: _convertTokenValues
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_135 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: _convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_347
RETURN

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "_convertTokenValues":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: _convertTokenValues

Name: TMP_347 Function: _convertTokenValues
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_329

Name: TMP_329 Function: _borrowBalanceConverted
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_329(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_borrowedToken_1,_returnToken_1,TMP_328,_borrowPrice_1,_returnPrice_1)
XXXXX
RETURN TMP_329
RETURN

Name: TMP_329 Function: _borrowBalanceConverted
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_borrowBalanceConverted":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _borrowBalanceConverted

Name: TMP_329 Function: _borrowBalanceConverted
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_207

Name: TMP_207 Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_208(uint256) = TMP_206 (c)+ TMP_207
Function name: accountHealth

Name: TMP_208 Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_207 Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_208 Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_208

Name: TMP_208 Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalAccountBorrow_1(uint256) := TMP_208(uint256)
Function name: accountHealth
asgn

Name: TMP_208 Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalAccountBorrow Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalAccountBorrow

Name: totalAccountBorrow Function: accountHealth
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_209(uint256) = totalAccountSupply_1 (c)* 1000000000000000000
Function name: accountHealth
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: 0 rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalAccountSupply Function: accountHealth
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_209 Function: accountHealth
Num: 2
Den: 1
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: accountHealth
Num: 2
Den: 1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
TMP_210(uint256) = TMP_209 (c)/ totalAccountBorrow_1
Function name: accountHealth
lnorm: 18 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_210 Function: accountHealth
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: PIC_138 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_210 Function: accountHealth
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_210

Name: TMP_210 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_210
RETURN

Name: TMP_210 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "accountHealth":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: accountHealth

Name: TMP_210 Function: accountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: debtOf
Function debtOf not marked
Mark Iterations TRUE, proceeding anyway
Function name: debtOf
Function Visibility (test): external
_token
Finding type for _token...
address
_account
Finding type for _account...
address
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
Internal call...
_validateToken
_token
Function: _validateToken
ic
done.
clearning node...
clearing ir...?
TMP_212(uint256) = INTERNAL_CALL, LendingPair._debtOf(address,address)(_token_1,_account_1)
has variable
[i] TMP_212 cleared
clearing ir...?
RETURN TMP_212
typecheckig node...
TMP_212(uint256) = INTERNAL_CALL, LendingPair._debtOf(address,address)(_token_1,_account_1)
Function name: debtOf
Internal call...
_debtOf
_token
_account
Function: _debtOf
ic
[i]Type for TMP_212

Name: TMP_212 Function: debtOf
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_212
RETURN

Name: TMP_212 Function: debtOf
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "debtOf":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: supplyOf
Function supplyOf not marked
Mark Iterations TRUE, proceeding anyway
Function name: supplyOf
Function Visibility (test): external
_token
Finding type for _token...
address
_account
Finding type for _account...
address
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
Internal call...
_validateToken
_token
Function: _validateToken
ic
done.
clearning node...
clearing ir...?
TMP_214(uint256) = INTERNAL_CALL, LendingPair._supplyOf(address,address)(_token_1,_account_1)
has variable
[i] TMP_214 cleared
clearing ir...?
RETURN TMP_214
typecheckig node...
TMP_214(uint256) = INTERNAL_CALL, LendingPair._supplyOf(address,address)(_token_1,_account_1)
Function name: supplyOf
Internal call...
_supplyOf
_token
_account
Function: _supplyOf
ic
[i]Type for TMP_214

Name: TMP_214 Function: supplyOf
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_214
RETURN

Name: TMP_214 Function: supplyOf
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "supplyOf":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: borrowBalanceConverted
Function borrowBalanceConverted not marked
Mark Iterations TRUE, proceeding anyway
Function name: borrowBalanceConverted
Function Visibility (test): external
_account
Finding type for _account...
address
_borrowedToken
Finding type for _borrowedToken...
address
_returnToken
Finding type for _returnToken...
address
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _borrowedToken
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: _returnToken
    fields: []
    fintype: -1
clearning node...
clearing ir...?
lendingController_18(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
typecheckig node...
lendingController_18(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: borrowBalanceConverted
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(_borrowedToken_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_borrowedToken_1)
Internal call...
_validateToken
_borrowedToken
Function: _validateToken
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(_returnToken_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_returnToken_1)
Internal call...
_validateToken
_returnToken
Function: _validateToken
ic
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_5(uint256,uint256) = HIGH_LEVEL_CALL, dest:lendingController_20(ILendingController), function:tokenPrices, arguments:['_borrowedToken_1', '_returnToken_1']  
has variable
clearing ir...?
lendingController_21(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_20', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
clearing ir...?
borrowPrice_1(uint256)= UNPACK TUPLE_5 index: 0 
has variable
[i] borrowPrice cleared
clearing ir...?
returnPrice_1(uint256)= UNPACK TUPLE_5 index: 1 
has variable
[i] returnPrice cleared
typecheckig node...
TUPLE_5(uint256,uint256) = HIGH_LEVEL_CALL, dest:lendingController_20(ILendingController), function:tokenPrices, arguments:['_borrowedToken_1', '_returnToken_1']  
Function name: borrowBalanceConverted
High Call: tokenPrices
func name:tokenPrices
other func name:tokenPrices
TUPLE_5
[i]Type for TUPLE_5

Name: TUPLE_5 Function: borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_21(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_20', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: borrowBalanceConverted
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
borrowPrice_1(uint256)= UNPACK TUPLE_5 index: 0 
Function name: borrowBalanceConverted
Reading tuple TUPLE_5 index 0
Finding type for borrowPrice...
uint256
[i]Type for borrowPrice

Name: borrowPrice Function: borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
returnPrice_1(uint256)= UNPACK TUPLE_5 index: 1 
Function name: borrowBalanceConverted
Reading tuple TUPLE_5 index 1
Finding type for returnPrice...
uint256
[i]Type for returnPrice

Name: returnPrice Function: borrowBalanceConverted
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_217(uint256) = INTERNAL_CALL, LendingPair._borrowBalanceConverted(address,address,address,uint256,uint256)(_account_1,_borrowedToken_1,_returnToken_1,borrowPrice_1,returnPrice_1)
has variable
[i] TMP_217 cleared
clearing ir...?
RETURN TMP_217
typecheckig node...
TMP_217(uint256) = INTERNAL_CALL, LendingPair._borrowBalanceConverted(address,address,address,uint256,uint256)(_account_1,_borrowedToken_1,_returnToken_1,borrowPrice_1,returnPrice_1)
Function name: borrowBalanceConverted
Internal call...
_borrowBalanceConverted
_account
_borrowedToken
_returnToken
borrowPrice
returnPrice
Function: _borrowBalanceConverted
ic
[i]Type for TMP_217

Name: TMP_217 Function: borrowBalanceConverted
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_217
RETURN

Name: TMP_217 Function: borrowBalanceConverted
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "borrowBalanceConverted":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: supplyBalanceConverted
Function supplyBalanceConverted not marked
Mark Iterations TRUE, proceeding anyway
Function name: supplyBalanceConverted
Function Visibility (test): external
_account
Finding type for _account...
address
_suppliedToken
Finding type for _suppliedToken...
address
_returnToken
Finding type for _returnToken...
address
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _suppliedToken
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: _returnToken
    fields: []
    fintype: -1
clearning node...
clearing ir...?
lendingController_22(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
typecheckig node...
lendingController_22(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: supplyBalanceConverted
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(_suppliedToken_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_suppliedToken_1)
Internal call...
_validateToken
_suppliedToken
Function: _validateToken
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(_returnToken_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_returnToken_1)
Internal call...
_validateToken
_returnToken
Function: _validateToken
ic
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_6(uint256,uint256) = HIGH_LEVEL_CALL, dest:lendingController_24(ILendingController), function:tokenPrices, arguments:['_suppliedToken_1', '_returnToken_1']  
has variable
clearing ir...?
lendingController_25(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_24', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
clearing ir...?
supplyPrice_1(uint256)= UNPACK TUPLE_6 index: 0 
has variable
[i] supplyPrice cleared
clearing ir...?
returnPrice_1(uint256)= UNPACK TUPLE_6 index: 1 
has variable
[i] returnPrice cleared
typecheckig node...
TUPLE_6(uint256,uint256) = HIGH_LEVEL_CALL, dest:lendingController_24(ILendingController), function:tokenPrices, arguments:['_suppliedToken_1', '_returnToken_1']  
Function name: supplyBalanceConverted
High Call: tokenPrices
func name:tokenPrices
other func name:tokenPrices
TUPLE_6
[i]Type for TUPLE_6

Name: TUPLE_6 Function: supplyBalanceConverted
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_25(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_24', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: supplyBalanceConverted
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
supplyPrice_1(uint256)= UNPACK TUPLE_6 index: 0 
Function name: supplyBalanceConverted
Reading tuple TUPLE_6 index 0
Finding type for supplyPrice...
uint256
[i]Type for supplyPrice

Name: supplyPrice Function: supplyBalanceConverted
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
returnPrice_1(uint256)= UNPACK TUPLE_6 index: 1 
Function name: supplyBalanceConverted
Reading tuple TUPLE_6 index 1
Finding type for returnPrice...
uint256
[i]Type for returnPrice

Name: returnPrice Function: supplyBalanceConverted
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_220(uint256) = INTERNAL_CALL, LendingPair._supplyBalanceConverted(address,address,address,uint256,uint256)(_account_1,_suppliedToken_1,_returnToken_1,supplyPrice_1,returnPrice_1)
has variable
[i] TMP_220 cleared
clearing ir...?
RETURN TMP_220
typecheckig node...
TMP_220(uint256) = INTERNAL_CALL, LendingPair._supplyBalanceConverted(address,address,address,uint256,uint256)(_account_1,_suppliedToken_1,_returnToken_1,supplyPrice_1,returnPrice_1)
Function name: supplyBalanceConverted
Internal call...
_supplyBalanceConverted
_account
_suppliedToken
_returnToken
supplyPrice
returnPrice
Function: _supplyBalanceConverted
ic
[i]Type for TMP_220

Name: TMP_220 Function: supplyBalanceConverted
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_220
RETURN

Name: TMP_220 Function: supplyBalanceConverted
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "supplyBalanceConverted":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: supplyRatePerBlock
Function name: supplyRatePerBlock
Function Visibility (test): external
_token
Finding type for _token...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _token Function: supplyRatePerBlock
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
Internal call...
_validateToken
_token
Function: _validateToken
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, None, [], -1]
added
xyz
Function name: _validateToken
Function Visibility: internal
clearning node...
clearing ir...?
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_62', '_token_1', 'TMP_80', '_toToken_1', 'TMP_100', '_borrowedToken_1', '_token_1', '_repayToken_1', '_token_1', '_token_1', 'uniTokenA_1', '_token_1', '_token_1', 'TMP_123', '_fromToken_1', '_returnToken_1', '_suppliedToken_1', 'uniTokenB_1', '_token_1', '_token_1', '_returnToken_1', '_token_1', '_token_1', '_token_1'])
has variable
[i] _token cleared
clearing ir...?
tokenA_48(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
has variable
clearing ir...?
tokenB_53(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
has variable
typecheckig node...
_token_1(address) := ϕ(['_token_1', '_token_1', 'TMP_62', '_token_1', 'TMP_80', '_toToken_1', 'TMP_100', '_borrowedToken_1', '_token_1', '_repayToken_1', '_token_1', '_token_1', 'uniTokenA_1', '_token_1', '_token_1', 'TMP_123', '_fromToken_1', '_returnToken_1', '_suppliedToken_1', 'uniTokenB_1', '_token_1', '_token_1', '_returnToken_1', '_token_1', '_token_1', '_token_1'])
Function name: _validateToken
Phi
[i]Type for _token

Name: _token Function: _validateToken
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
tokenA_48(address) := ϕ(['tokenA_28', 'tokenA_11', 'tokenA_44', 'tokenA_37', 'tokenA_47', 'tokenA_8', 'tokenA_5', 'tokenA_0'])
Function name: _validateToken
Phi
[i]Type for tokenA

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
done.
tokenB_53(address) := ϕ(['tokenB_5', 'tokenB_48', 'tokenB_52', 'tokenB_0', 'tokenB_40', 'tokenB_13', 'tokenB_31', 'tokenB_9'])
Function name: _validateToken
Phi
[i]Type for tokenB

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_348(bool) = _token_1 == tokenA_48
has variable
[i] TMP_348 cleared
clearing ir...?
TMP_349(bool) = _token_1 == tokenB_53
has variable
[i] TMP_349 cleared
clearing ir...?
TMP_350(bool) = TMP_348 || TMP_349
has variable
[i] TMP_350 cleared
clearing ir...?
TMP_351(None) = SOLIDITY_CALL require(bool,string)(TMP_350,LendingPair: invalid token)
typecheckig node...
TMP_348(bool) = _token_1 == tokenA_48
Function name: _validateToken
[i]Type for TMP_348

Name: TMP_348 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_349(bool) = _token_1 == tokenB_53
Function name: _validateToken
[i]Type for TMP_349

Name: TMP_349 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_350(bool) = TMP_348 || TMP_349
Function name: _validateToken
[i]Type for TMP_350

Name: TMP_350 Function: _validateToken
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_351(None) = SOLIDITY_CALL require(bool,string)(TMP_350,LendingPair: invalid token)
[i]Type for TMP_351

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_validateToken":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _validateToken
done.
clearning node...
clearing ir...?
TMP_222(uint256) = INTERNAL_CALL, LendingPair._interestRatePerBlock(address)(_token_1)
has variable
[i] TMP_222 cleared
clearing ir...?
TMP_223(uint256) = INTERNAL_CALL, LendingPair._lpRate(address)(_token_1)
has variable
[i] TMP_223 cleared
clearing ir...?
TMP_224(uint256) = TMP_222 (c)* TMP_223
has variable
[i] TMP_224 cleared
clearing ir...?
TMP_225(uint256) = TMP_224 (c)/ 100000000000000000000
has variable
[i] TMP_225 cleared
clearing ir...?
RETURN TMP_225
typecheckig node...
TMP_222(uint256) = INTERNAL_CALL, LendingPair._interestRatePerBlock(address)(_token_1)
Function name: supplyRatePerBlock
Internal call...
_interestRatePerBlock
_token
Function: _interestRatePerBlock
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
0

Name: PIC_10 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_222 Function: supplyRatePerBlock
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_222

Name: TMP_222 Function: supplyRatePerBlock
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_223(uint256) = INTERNAL_CALL, LendingPair._lpRate(address)(_token_1)
Function name: supplyRatePerBlock
Internal call...
_lpRate
_token
Function: _lpRate
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_token', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_token', [], -1]
0

Name: PIC_12 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_223 Function: supplyRatePerBlock
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_223

Name: TMP_223 Function: supplyRatePerBlock
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_224(uint256) = TMP_222 (c)* TMP_223
Function name: supplyRatePerBlock
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_223 Function: supplyRatePerBlock
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_224 Function: supplyRatePerBlock
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_224

Name: TMP_224 Function: supplyRatePerBlock
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_225(uint256) = TMP_224 (c)/ 100000000000000000000
Function name: supplyRatePerBlock
val: 100000000000000000000
20
val: 100000000000000000000
20
lnorm: u rnorm: 20
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_225 Function: supplyRatePerBlock
Num: 
Den: 
Norm: -20
LF: None
Fields: 
Finance Type: undef
val: 100000000000000000000
20
[i]Type for TMP_225

Name: TMP_225 Function: supplyRatePerBlock
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_225
RETURN

Name: TMP_225 Function: supplyRatePerBlock
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "supplyRatePerBlock":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: supplyRatePerBlock

Name: TMP_225 Function: supplyRatePerBlock
Num: -1
Den: -1
Norm: -20
LF: None
Fields: 
Finance Type: undef
___
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: borrowRatePerBlock
Function borrowRatePerBlock not marked
Mark Iterations TRUE, proceeding anyway
Function name: borrowRatePerBlock
Function Visibility (test): external
_token
Finding type for _token...
address
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _token
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_token_1)
Internal call...
_validateToken
_token
Function: _validateToken
ic
done.
clearning node...
clearing ir...?
TMP_227(uint256) = INTERNAL_CALL, LendingPair._interestRatePerBlock(address)(_token_1)
has variable
[i] TMP_227 cleared
clearing ir...?
RETURN TMP_227
typecheckig node...
TMP_227(uint256) = INTERNAL_CALL, LendingPair._interestRatePerBlock(address)(_token_1)
Function name: borrowRatePerBlock
Internal call...
_interestRatePerBlock
_token
Function: _interestRatePerBlock
ic
[i]Type for TMP_227

Name: TMP_227 Function: borrowRatePerBlock
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_227
RETURN

Name: TMP_227 Function: borrowRatePerBlock
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "borrowRatePerBlock":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: checkAccountHealth
Function name: checkAccountHealth
Function Visibility (test): public
_account
Finding type for _account...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _account Function: checkAccountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
_account_1(address) := ϕ(['_from_1', 'msg.sender'])
has variable
[i] _account cleared
clearing ir...?
LIQ_MIN_HEALTH_8(uint256) := ϕ(['LIQ_MIN_HEALTH_0', 'LIQ_MIN_HEALTH_9', 'LIQ_MIN_HEALTH_6'])
has variable
typecheckig node...
_account_1(address) := ϕ(['_from_1', 'msg.sender'])
Function name: checkAccountHealth
Phi
[i]Type for _account

Name: _account Function: checkAccountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
LIQ_MIN_HEALTH_8(uint256) := ϕ(['LIQ_MIN_HEALTH_0', 'LIQ_MIN_HEALTH_9', 'LIQ_MIN_HEALTH_6'])
Function name: checkAccountHealth
Phi
[i]Type for LIQ_MIN_HEALTH

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_228(uint256) = INTERNAL_CALL, LendingPair.accountHealth(address)(_account_1)
has variable
[i] TMP_228 cleared
clearing ir...?
health_1(uint256) := TMP_228(uint256)
has variable
[i] health cleared
typecheckig node...
TMP_228(uint256) = INTERNAL_CALL, LendingPair.accountHealth(address)(_account_1)
Function name: checkAccountHealth
Internal call...
accountHealth
_account
Function: accountHealth
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_account', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_account', [], -1]
0
[i]Type for TMP_228

Name: TMP_228 Function: checkAccountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
health_1(uint256) := TMP_228(uint256)
Function name: checkAccountHealth
asgn

Name: TMP_228 Function: checkAccountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: health Function: checkAccountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for health

Name: health Function: checkAccountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
health_1(uint256) := TMP_228(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_229(bool) = health_1 >= LIQ_MIN_HEALTH_9
has variable
[i] TMP_229 cleared
clearing ir...?
TMP_230(None) = SOLIDITY_CALL require(bool,string)(TMP_229,LendingPair: insufficient accountHealth)
typecheckig node...
TMP_229(bool) = health_1 >= LIQ_MIN_HEALTH_9
Function name: checkAccountHealth
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_229 Function: checkAccountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_229

Name: TMP_229 Function: checkAccountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_229(bool) = health_1 >= LIQ_MIN_HEALTH_9
XXXXX
TMP_230(None) = SOLIDITY_CALL require(bool,string)(TMP_229,LendingPair: insufficient accountHealth)
[i]Type for TMP_230

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "checkAccountHealth":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_account_1(address) := ϕ(['_from_1', 'msg.sender'])
Function name: checkAccountHealth
Phi
[i]Type for _account

Name: _account Function: checkAccountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
LIQ_MIN_HEALTH_8(uint256) := ϕ(['LIQ_MIN_HEALTH_0', 'LIQ_MIN_HEALTH_9', 'LIQ_MIN_HEALTH_6'])
Function name: checkAccountHealth
Phi
[i]Type for LIQ_MIN_HEALTH

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_228(uint256) = INTERNAL_CALL, LendingPair.accountHealth(address)(_account_1)
Function name: checkAccountHealth
Internal call...
accountHealth
_account
Function: accountHealth
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', '_account', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _account
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', '_account', [], -1]
0
[i]Type for TMP_228

Name: TMP_228 Function: checkAccountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
health_1(uint256) := TMP_228(uint256)
Function name: checkAccountHealth
asgn

Name: TMP_228 Function: checkAccountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: health Function: checkAccountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for health

Name: health Function: checkAccountHealth
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
health_1(uint256) := TMP_228(uint256)
XXXXX
typecheckig node...
TMP_229(bool) = health_1 >= LIQ_MIN_HEALTH_9
Function name: checkAccountHealth
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_229 Function: checkAccountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_229

Name: TMP_229 Function: checkAccountHealth
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_229(bool) = health_1 >= LIQ_MIN_HEALTH_9
XXXXX
TMP_230(None) = SOLIDITY_CALL require(bool,string)(TMP_229,LendingPair: insufficient accountHealth)
[i]Type for TMP_230

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "checkAccountHealth":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: checkAccountHealth
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: convertTokenValues
Function convertTokenValues not marked
Mark Iterations TRUE, proceeding anyway
Function name: convertTokenValues
Function Visibility (test): external
_fromToken
Finding type for _fromToken...
address
_toToken
Finding type for _toToken...
address
_inputAmount
Finding type for _inputAmount...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _fromToken
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _toToken
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
lendingController_26(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
typecheckig node...
lendingController_26(ILendingController) := ϕ(['lendingController_0', 'lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: convertTokenValues
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(_fromToken_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_fromToken_1)
Internal call...
_validateToken
_fromToken
Function: _validateToken
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LendingPair._validateToken(address)(_toToken_1)
typecheckig node...
INTERNAL_CALL, LendingPair._validateToken(address)(_toToken_1)
Internal call...
_validateToken
_toToken
Function: _validateToken
ic
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_7(uint256,uint256) = HIGH_LEVEL_CALL, dest:lendingController_28(ILendingController), function:tokenPrices, arguments:['_fromToken_1', '_toToken_1']  
has variable
clearing ir...?
lendingController_29(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_28', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
has variable
clearing ir...?
fromPrice_1(uint256)= UNPACK TUPLE_7 index: 0 
has variable
[i] fromPrice cleared
clearing ir...?
toPrice_1(uint256)= UNPACK TUPLE_7 index: 1 
has variable
[i] toPrice cleared
typecheckig node...
TUPLE_7(uint256,uint256) = HIGH_LEVEL_CALL, dest:lendingController_28(ILendingController), function:tokenPrices, arguments:['_fromToken_1', '_toToken_1']  
Function name: convertTokenValues
High Call: tokenPrices
func name:tokenPrices
other func name:tokenPrices
TUPLE_7
[i]Type for TUPLE_7

Name: TUPLE_7 Function: convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lendingController_29(ILendingController) := ϕ(['lendingController_17', 'lendingController_45', 'lendingController_1', 'lendingController_41', 'lendingController_37', 'lendingController_13', 'lendingController_28', 'lendingController_39', 'lendingController_43', 'lendingController_21', 'lendingController_25', 'lendingController_29', 'lendingController_33', 'lendingController_35'])
Function name: convertTokenValues
Phi
[i]Type for lendingController

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
done.
fromPrice_1(uint256)= UNPACK TUPLE_7 index: 0 
Function name: convertTokenValues
Reading tuple TUPLE_7 index 0
Finding type for fromPrice...
uint256
[i]Type for fromPrice

Name: fromPrice Function: convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
toPrice_1(uint256)= UNPACK TUPLE_7 index: 1 
Function name: convertTokenValues
Reading tuple TUPLE_7 index 1
Finding type for toPrice...
uint256
[i]Type for toPrice

Name: toPrice Function: convertTokenValues
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_233(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_fromToken_1,_toToken_1,_inputAmount_1,fromPrice_1,toPrice_1)
has variable
[i] TMP_233 cleared
clearing ir...?
RETURN TMP_233
typecheckig node...
TMP_233(uint256) = INTERNAL_CALL, LendingPair._convertTokenValues(address,address,uint256,uint256,uint256)(_fromToken_1,_toToken_1,_inputAmount_1,fromPrice_1,toPrice_1)
Function name: convertTokenValues
Internal call...
_convertTokenValues
_fromToken
_toToken
_inputAmount
fromPrice
toPrice
Function: _convertTokenValues
ic
[i]Type for TMP_233

Name: TMP_233 Function: convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_233
RETURN

Name: TMP_233 Function: convertTokenValues
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "convertTokenValues":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _depositRepay
Function _depositRepay not marked
Mark Iterations TRUE, proceeding anyway
Function name: _depositRepay
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _withdrawBorrow
Function _withdrawBorrow not marked
Mark Iterations TRUE, proceeding anyway
Function name: _withdrawBorrow
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _unwrapUniPosition
Function _unwrapUniPosition not marked
Mark Iterations TRUE, proceeding anyway
Function name: _unwrapUniPosition
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _repayDebtFromSupply
Function _repayDebtFromSupply not marked
Mark Iterations TRUE, proceeding anyway
Function name: _repayDebtFromSupply
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _uniCollectFees
Function _uniCollectFees not marked
Mark Iterations TRUE, proceeding anyway
Function name: _uniCollectFees
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _mintSupplyAmount
Function _mintSupplyAmount not marked
Mark Iterations TRUE, proceeding anyway
Function name: _mintSupplyAmount
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _burnSupplyShares
Function _burnSupplyShares not marked
Mark Iterations TRUE, proceeding anyway
Function name: _burnSupplyShares
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _mintDebtAmount
Function _mintDebtAmount not marked
Mark Iterations TRUE, proceeding anyway
Function name: _mintDebtAmount
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _burnDebtShares
Function _burnDebtShares not marked
Mark Iterations TRUE, proceeding anyway
Function name: _burnDebtShares
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _accrueDebt
Function _accrueDebt not marked
Mark Iterations TRUE, proceeding anyway
Function name: _accrueDebt
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _withdrawShares
Function _withdrawShares not marked
Mark Iterations TRUE, proceeding anyway
Function name: _withdrawShares
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _borrow
Function _borrow not marked
Mark Iterations TRUE, proceeding anyway
Function name: _borrow
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _repayShares
Function _repayShares not marked
Mark Iterations TRUE, proceeding anyway
Function name: _repayShares
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _deposit
Function _deposit not marked
Mark Iterations TRUE, proceeding anyway
Function name: _deposit
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _createLpToken
Function _createLpToken not marked
Mark Iterations TRUE, proceeding anyway
Function name: _createLpToken
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _amountToShares
Function _amountToShares not marked
Mark Iterations TRUE, proceeding anyway
Function name: _amountToShares
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _sharesToAmount
Function _sharesToAmount not marked
Mark Iterations TRUE, proceeding anyway
Function name: _sharesToAmount
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _debtToShares
Function _debtToShares not marked
Mark Iterations TRUE, proceeding anyway
Function name: _debtToShares
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _sharesToDebt
Function _sharesToDebt not marked
Mark Iterations TRUE, proceeding anyway
Function name: _sharesToDebt
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _supplyToShares
Function _supplyToShares not marked
Mark Iterations TRUE, proceeding anyway
Function name: _supplyToShares
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _sharesToSupply
Function _sharesToSupply not marked
Mark Iterations TRUE, proceeding anyway
Function name: _sharesToSupply
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _debtOf
Function _debtOf not marked
Mark Iterations TRUE, proceeding anyway
Function name: _debtOf
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _supplyOf
Function _supplyOf not marked
Mark Iterations TRUE, proceeding anyway
Function name: _supplyOf
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _interestRatePerBlock
Function _interestRatePerBlock not marked
Mark Iterations TRUE, proceeding anyway
Function name: _interestRatePerBlock
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _interestRateModel
Function _interestRateModel not marked
Mark Iterations TRUE, proceeding anyway
Function name: _interestRateModel
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _borrowBalanceConverted
Function _borrowBalanceConverted not marked
Mark Iterations TRUE, proceeding anyway
Function name: _borrowBalanceConverted
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _supplyBalanceConverted
Function _supplyBalanceConverted not marked
Mark Iterations TRUE, proceeding anyway
Function name: _supplyBalanceConverted
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _supplyCreditUni
Function _supplyCreditUni not marked
Mark Iterations TRUE, proceeding anyway
Function name: _supplyCreditUni
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _convertTokenValues
Function _convertTokenValues not marked
Mark Iterations TRUE, proceeding anyway
Function name: _convertTokenValues
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _validateToken
Function _validateToken not marked
Mark Iterations TRUE, proceeding anyway
Function name: _validateToken
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _validateUniPosition
Function _validateUniPosition not marked
Mark Iterations TRUE, proceeding anyway
Function name: _validateUniPosition
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _checkDepositLimit
Function _checkDepositLimit not marked
Mark Iterations TRUE, proceeding anyway
Function name: _checkDepositLimit
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _checkDepositsEnabled
Function _checkDepositsEnabled not marked
Mark Iterations TRUE, proceeding anyway
Function name: _checkDepositsEnabled
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _checkBorrowEnabled
Function _checkBorrowEnabled not marked
Mark Iterations TRUE, proceeding anyway
Function name: _checkBorrowEnabled
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _checkBorrowLimits
Function _checkBorrowLimits not marked
Mark Iterations TRUE, proceeding anyway
Function name: _checkBorrowLimits
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _lpRate
Function _lpRate not marked
Mark Iterations TRUE, proceeding anyway
Function name: _lpRate
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: slitherConstructorConstantVariables
Function slitherConstructorConstantVariables not marked
Mark Iterations TRUE, proceeding anyway
Function name: slitherConstructorConstantVariables
Function Visibility (test): internal
State_var: totalDebtAmount
Finding type for totalDebtAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyAmount
Finding type for totalSupplyAmount...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyAmount Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniManager
Finding type for uniManager...
IERC721
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC721
IERC721
Final Type: IERC721
 NO FIELDS

Name: uniManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniPosition
Finding type for uniPosition...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: uniPosition Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: uniV3Helper
Finding type for uniV3Helper...
IUniswapV3Helper
Check copy_toekn_tuple
(-1, -1, 0, 'V3HELPER')
----
Type: IUniswapV3Helper
IUniswapV3Helper
Final Type: IUniswapV3Helper
 NO FIELDS

Name: uniV3Helper Function: global
Num: -1
Den: -1
Norm: 0
LF: V3HELPER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalDebtShares
Finding type for totalDebtShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalDebtShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: LIQ_MIN_HEALTH
Finding type for LIQ_MIN_HEALTH...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: LIQ_MIN_HEALTH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lendingController
Finding type for lendingController...
ILendingController
Check copy_toekn_tuple
(-1, -1, 0, 'LENDINGCONTR')
----
Type: ILendingController
ILendingController
Final Type: ILendingController
 NO FIELDS

Name: lendingController Function: global
Num: -1
Den: -1
Norm: 0
LF: LENDINGCONTR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: supplySharesOf
Finding type for supplySharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: supplySharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalSupplyShares
Finding type for totalSupplyShares...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: totalSupplyShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: debtSharesOf
Finding type for debtSharesOf...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: debtSharesOf Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenA
Finding type for tokenA...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKA')
----
Type: address
address
Final Type: address

Name: tokenA Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKA
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenB
Finding type for tokenB...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKB')
----
Type: address
address
Final Type: address

Name: tokenB Function: global
Num: -1
Den: -1
Norm: 0
LF: TOKB
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: decimals
Finding type for decimals...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: decimals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastBlockAccrued
Finding type for lastBlockAccrued...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: lastBlockAccrued Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: WETH
Finding type for WETH...
IWETH
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IWETH
IWETH
Final Type: IWETH
 NO FIELDS

Name: WETH Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pendingSystemFees
Finding type for pendingSystemFees...
mapping(address => uint256)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: pendingSystemFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: feeRecipient
Finding type for feeRecipient...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: feeRecipient Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lpToken
Finding type for lpToken...
mapping(address => address)
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: mapping(address => address)
mapping(address => address)
address
Final Type: address

Name: lpToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Errors: [<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f28363da5b0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f28363dab80>]
Seen contract: {'LendingPair': True} Contract name out: TransferHelper
[x] TransferHelper not run
Seen contract: {'LendingPair': True, 'TransferHelper': True} Contract name out: Address
[x] Address not run
Seen contract: {'LendingPair': True, 'TransferHelper': True, 'Address': True} Contract name out: Clones
[x] Clones not run
Seen contract: {'LendingPair': True, 'TransferHelper': True, 'Address': True, 'Clones': True} Contract name out: ERC721Receivable
[x] ERC721Receivable not run
Seen contract: {'LendingPair': True, 'TransferHelper': True, 'Address': True, 'Clones': True, 'ERC721Receivable': True} Contract name out: Math
[x] Math not run
Seen contract: {'LendingPair': True, 'TransferHelper': True, 'Address': True, 'Clones': True, 'ERC721Receivable': True, 'Math': True} Contract name out: ReentrancyGuard
[x] ReentrancyGuard not run
Seen contract: {'LendingPair': True, 'TransferHelper': True, 'Address': True, 'Clones': True, 'ERC721Receivable': True, 'Math': True, 'ReentrancyGuard': True} Contract name out: SafeERC20
[x] SafeERC20 not run
Seen contract: {'LendingPair': True, 'TransferHelper': True, 'Address': True, 'Clones': True, 'ERC721Receivable': True, 'Math': True, 'ReentrancyGuard': True, 'SafeERC20': True} Contract name out: SafeMath
[x] SafeMath not run
Seen contract: {'LendingPair': True, 'TransferHelper': True, 'Address': True, 'Clones': True, 'ERC721Receivable': True, 'Math': True, 'ReentrancyGuard': True, 'SafeERC20': True, 'SafeMath': True} Contract name out: IERC20
[x] IERC20 not run
Seen contract: {'LendingPair': True, 'TransferHelper': True, 'Address': True, 'Clones': True, 'ERC721Receivable': True, 'Math': True, 'ReentrancyGuard': True, 'SafeERC20': True, 'SafeMath': True, 'IERC20': True} Contract name out: IERC721
[x] IERC721 not run
Seen contract: {'LendingPair': True, 'TransferHelper': True, 'Address': True, 'Clones': True, 'ERC721Receivable': True, 'Math': True, 'ReentrancyGuard': True, 'SafeERC20': True, 'SafeMath': True, 'IERC20': True, 'IERC721': True} Contract name out: IInterestRateModel
[x] IInterestRateModel not run
Seen contract: {'LendingPair': True, 'TransferHelper': True, 'Address': True, 'Clones': True, 'ERC721Receivable': True, 'Math': True, 'ReentrancyGuard': True, 'SafeERC20': True, 'SafeMath': True, 'IERC20': True, 'IERC721': True, 'IInterestRateModel': True} Contract name out: ILPTokenMaster
[x] ILPTokenMaster not run
Seen contract: {'LendingPair': True, 'TransferHelper': True, 'Address': True, 'Clones': True, 'ERC721Receivable': True, 'Math': True, 'ReentrancyGuard': True, 'SafeERC20': True, 'SafeMath': True, 'IERC20': True, 'IERC721': True, 'IInterestRateModel': True, 'ILPTokenMaster': True} Contract name out: ILendingController
[x] ILendingController not run
Seen contract: {'LendingPair': True, 'TransferHelper': True, 'Address': True, 'Clones': True, 'ERC721Receivable': True, 'Math': True, 'ReentrancyGuard': True, 'SafeERC20': True, 'SafeMath': True, 'IERC20': True, 'IERC721': True, 'IInterestRateModel': True, 'ILPTokenMaster': True, 'ILendingController': True} Contract name out: ILendingPair
[x] ILendingPair not run
Seen contract: {'LendingPair': True, 'TransferHelper': True, 'Address': True, 'Clones': True, 'ERC721Receivable': True, 'Math': True, 'ReentrancyGuard': True, 'SafeERC20': True, 'SafeMath': True, 'IERC20': True, 'IERC721': True, 'IInterestRateModel': True, 'ILPTokenMaster': True, 'ILendingController': True, 'ILendingPair': True} Contract name out: IOwnable
[x] IOwnable not run
Seen contract: {'LendingPair': True, 'TransferHelper': True, 'Address': True, 'Clones': True, 'ERC721Receivable': True, 'Math': True, 'ReentrancyGuard': True, 'SafeERC20': True, 'SafeMath': True, 'IERC20': True, 'IERC721': True, 'IInterestRateModel': True, 'ILPTokenMaster': True, 'ILendingController': True, 'ILendingPair': True, 'IOwnable': True} Contract name out: IWETH
[x] IWETH not run
Seen contract: {'LendingPair': True, 'TransferHelper': True, 'Address': True, 'Clones': True, 'ERC721Receivable': True, 'Math': True, 'ReentrancyGuard': True, 'SafeERC20': True, 'SafeMath': True, 'IERC20': True, 'IERC721': True, 'IInterestRateModel': True, 'ILPTokenMaster': True, 'ILendingController': True, 'ILendingPair': True, 'IOwnable': True, 'IWETH': True} Contract name out: IUniswapV3Helper
[x] IUniswapV3Helper not run
Function count: 128
