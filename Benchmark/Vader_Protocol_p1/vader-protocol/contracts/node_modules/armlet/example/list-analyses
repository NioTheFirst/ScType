#!/usr/bin/env node
"use strict"
const fs = require('fs')

function usage() {
    console.log(`usage: ${process.argv[1]}

List prior previously-submitted MythX analyses.

This command requires an account to use, so set environment
MYTHX_PASSWORD and MYTHX_ETH_ADDRESS before using.
`)
    process.exit(1)
}

require('./helper')

/**********************************
  Minimal option processing
***********************************/

const argLen = process.argv.length
if (argLen === 3 &&
    process.argv[2].match(/^[-]{0,2}h(?:elp)?$/)) {
    usage()
}

const uuid = process.argv[2]

/**********************************
  Authentication and option setup
***********************************/

let armletOptions = {
    ethAddress: process.env.MYTHX_ETH_ADDRESS,
    password: process.env.MYTHX_PASSWORD,
}

/**********************************
  Example code starts here ...
***********************************/

const armlet = require('../index') // if not installed
// const armlet = require('armlet') // if installed

const client = new armlet.Client(armletOptions)
const util = require('util')

// FIXME: add fromDate toDate options?
client.listAnalyses()
    .then(runs => {
        console.log(`${util.inspect(runs, {depth: null})}`)
    }).catch(err => {
        console.log(`error: ${util.inspect(err)}`)
    })
