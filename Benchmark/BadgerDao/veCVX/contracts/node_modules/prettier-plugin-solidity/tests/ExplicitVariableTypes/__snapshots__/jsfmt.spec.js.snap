// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ExplicitVariableTypes.sol 1`] = `
pragma solidity 0.5.8;


contract VariableTypesMixed {
    uint256 public a;
    int256 public b;
    bytes1 public c;
    uint public e;
    int public f;
    byte public g;

    struct S {
        uint a;
        int b;
        byte c;
        uint256 e;
        int256 f;
        bytes1 g;
    }

    event Event(uint _a, int256 _b, bytes1 _c, uint256 _e, int _f, byte _g);

    function func(uint256 _a, int256 _b, byte _c, uint _e, int _f, bytes1 _g)
        public
        returns (uint, int256, byte, uint256, int, bytes1)
    {
        emit Event(_a, _b, _c, _e, _f, _g);
        return (_a, _b, _c, _e, _f, _g);
    }
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
pragma solidity 0.5.8;

contract VariableTypesMixed {
    uint256 public a;
    int256 public b;
    bytes1 public c;
    uint256 public e;
    int256 public f;
    bytes1 public g;

    struct S {
        uint256 a;
        int256 b;
        bytes1 c;
        uint256 e;
        int256 f;
        bytes1 g;
    }

    event Event(
        uint256 _a,
        int256 _b,
        bytes1 _c,
        uint256 _e,
        int256 _f,
        bytes1 _g
    );

    function func(
        uint256 _a,
        int256 _b,
        bytes1 _c,
        uint256 _e,
        int256 _f,
        bytes1 _g
    )
        public
        returns (
            uint256,
            int256,
            bytes1,
            uint256,
            int256,
            bytes1
        )
    {
        emit Event(_a, _b, _c, _e, _f, _g);
        return (_a, _b, _c, _e, _f, _g);
    }
}

`;

exports[`ExplicitVariableTypes.sol 2`] = `
pragma solidity 0.5.8;


contract VariableTypesMixed {
    uint256 public a;
    int256 public b;
    bytes1 public c;
    uint public e;
    int public f;
    byte public g;

    struct S {
        uint a;
        int b;
        byte c;
        uint256 e;
        int256 f;
        bytes1 g;
    }

    event Event(uint _a, int256 _b, bytes1 _c, uint256 _e, int _f, byte _g);

    function func(uint256 _a, int256 _b, byte _c, uint _e, int _f, bytes1 _g)
        public
        returns (uint, int256, byte, uint256, int, bytes1)
    {
        emit Event(_a, _b, _c, _e, _f, _g);
        return (_a, _b, _c, _e, _f, _g);
    }
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
pragma solidity 0.5.8;

contract VariableTypesMixed {
    uint public a;
    int public b;
    byte public c;
    uint public e;
    int public f;
    byte public g;

    struct S {
        uint a;
        int b;
        byte c;
        uint e;
        int f;
        byte g;
    }

    event Event(uint _a, int _b, byte _c, uint _e, int _f, byte _g);

    function func(
        uint _a,
        int _b,
        byte _c,
        uint _e,
        int _f,
        byte _g
    )
        public
        returns (
            uint,
            int,
            byte,
            uint,
            int,
            byte
        )
    {
        emit Event(_a, _b, _c, _e, _f, _g);
        return (_a, _b, _c, _e, _f, _g);
    }
}

`;

exports[`ExplicitVariableTypes.sol 3`] = `
pragma solidity 0.5.8;


contract VariableTypesMixed {
    uint256 public a;
    int256 public b;
    bytes1 public c;
    uint public e;
    int public f;
    byte public g;

    struct S {
        uint a;
        int b;
        byte c;
        uint256 e;
        int256 f;
        bytes1 g;
    }

    event Event(uint _a, int256 _b, bytes1 _c, uint256 _e, int _f, byte _g);

    function func(uint256 _a, int256 _b, byte _c, uint _e, int _f, bytes1 _g)
        public
        returns (uint, int256, byte, uint256, int, bytes1)
    {
        emit Event(_a, _b, _c, _e, _f, _g);
        return (_a, _b, _c, _e, _f, _g);
    }
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
pragma solidity 0.5.8;

contract VariableTypesMixed {
    uint256 public a;
    int256 public b;
    bytes1 public c;
    uint public e;
    int public f;
    byte public g;

    struct S {
        uint a;
        int b;
        byte c;
        uint256 e;
        int256 f;
        bytes1 g;
    }

    event Event(uint _a, int256 _b, bytes1 _c, uint256 _e, int _f, byte _g);

    function func(
        uint256 _a,
        int256 _b,
        byte _c,
        uint _e,
        int _f,
        bytes1 _g
    )
        public
        returns (
            uint,
            int256,
            byte,
            uint256,
            int,
            bytes1
        )
    {
        emit Event(_a, _b, _c, _e, _f, _g);
        return (_a, _b, _c, _e, _f, _g);
    }
}

`;
