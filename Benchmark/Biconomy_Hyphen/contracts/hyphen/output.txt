LiquidityPool
IERC20Detailed
IERC20Nonces
IERC20Permit
IExecutorManager
ILiquidityProviders
ITokenManager
ERC2771ContextUpgradeable
OwnableUpgradeable
Initializable
PausableUpgradeable
ReentrancyGuardUpgradeable
IERC20Upgradeable
SafeERC20Upgradeable
AddressUpgradeable
ContextUpgradeable
Pausable
contract name: LiquidityPool
WARNING!!!!
LiquidityPool_types.txt
Finance File not Found
"LiquidityPool_types.txt" opened successfully.
[*c], LiquidityPool

[sef], LPP, getCurrentLiquidity

[sef], LPP, totalLPFees

[sef], LPP, getSuppliedLiquidityByToken

[sef], TokenManager, getTokensInfo

[sef], TokenManager, getDepositConfig

initialize

setTrustedForwarder

setLiquidityProviders

setExecutorManager

getCurrentLiquidity

depositErc20

getRewardAmount

[xf], depositNative

[xf], sendFundsToUser

[xf], getTransferFee

[xf], withdrawErc20GasFee

[xf], transfer

[t], global, _pauser

[t], global, executorManager

[t], global, NATIVE

[tref], incentivePool, 1, -1, 0

[t], global, tokenManager, -1, -1, 0, TokenManager

[t], global, _owner

[t], global, _trustedForwarder

[t], global, processedHash

[t], global, gasFeeAccumulatedByToken

[t], global, gasFeeAccumulated

[t], global, liquidityProviders, -1, -1, 0, LPP

[t], global, BASE_DIVISOR, -1, -1, 6

[t], global, _NOT_ENTERED

[t], global, baseGas

[t], global, _ENTERED

[t], global, _status



[t], getAmountToTransfer, initialGas

[t], getAmountToTransfer, tokenAddress

[t], getAmountToTransfer, amount, 1, -1, 0

[t], getAmountToTransfer, tokenGasPrice

[t], initialize, _executorManagerAddress, -1, -1, 0, EXECMANAGER

[t], initialize, _pauser, -1, -1, 0, PAUSER

[t], initialize, _trustedForwarder, -1, -1, 0, FORWARD

[t], initialize, _tokenManager, -1, -1, 0, TokenManager

[t], initialize, _liquidityProviders, -1, -1, 0, LPROVIDERS

[t], setTrustedForwarder, trustedForwarder, -1, -1, 0, FORWARD

[t], setLiquidityProviders, _liquidityProviders, -1, -1, 0, LPROVIDER

[t], setExecutorManager, _executorManagerAddress, -1, -1, 0, EXECMANAGER

[t], getCurrentLiquidity, tokenAddress, -1, -1, 0, TOKADDRESS

[t], depositErc20, toChainId

[t], depositErc20, tokenAddress, -1, -1, 0, TOKADDRESS

[t], depositErc20, receiver, -1, -1, 0, RECIEVER

[t], depositErc20, amount, -1, -1, 0

[t], depositErc20, tag

[t], getRewardAmount, amount, -1, -1, 0

[t], getRewardAmount, tokenAddress, -1, -1, 0, TOKADDRESS

[*] LiquidityPool run
Checking... initialize Visibility: public
[o] Marked
Checking... setTrustedForwarder Visibility: public
[o] Marked
Checking... setLiquidityProviders Visibility: public
[o] Marked
Checking... setBaseGas Visibility: external
[x] No Binary
Checking... getExecutorManager Visibility: public
[x] No Binary
Checking... setExecutorManager Visibility: external
[o] Marked
Checking... getCurrentLiquidity Visibility: public
[o] Marked
Checking... depositErc20 Visibility: public
[o] Marked
Checking... getRewardAmount Visibility: public
[o] Marked
Checking... permitAndDepositErc20 Visibility: external
[x] No Binary
Checking... permitEIP2612AndDepositErc20 Visibility: external
[x] No Binary
Checking... depositNative Visibility: external
[o] Marked
Checking... sendFundsToUser Visibility: external
[o] Marked
Checking... getAmountToTransfer Visibility: public
[o] Marked
Checking... getTransferFee Visibility: public
[o] Marked
Checking... checkHashStatus Visibility: public
[x] No Binary
Checking... withdrawErc20GasFee Visibility: external
[o] Marked
Checking... withdrawNativeGasFee Visibility: external
[o] Marked
Checking... transfer Visibility: external
[o] Marked
Checking... _msgSender Visibility: internal
[x] Not visible 
Checking... _msgData Visibility: internal
[x] Not visible 
Checking... receive Visibility: external
[x] No Binary
Checking... slitherConstructorConstantVariables Visibility: internal
[x] Not visible 
State_var: executorManager
Finding type for executorManager...
IExecutorManager
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
State_var: NATIVE
Finding type for NATIVE...
address
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
State_var: _initialized
Finding type for _initialized...
bool
State_var: _initializing
Finding type for _initializing...
bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
State_var: baseGas
Finding type for baseGas...
uint256
State_var: _paused
Finding type for _paused...
bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
State_var: _ENTERED
Finding type for _ENTERED...
uint256
State_var: _status
Finding type for _status...
uint256
State_var: _owner
Finding type for _owner...
address
State_var: _pauser
Finding type for _pauser...
address
contract name: IERC20Detailed
WARNING!!!!
IERC20Detailed_types.txt
Finance File not Found
Type File not found.
[x] IERC20Detailed not run
contract name: IERC20Nonces
WARNING!!!!
IERC20Nonces_types.txt
Finance File not Found
Type File not found.
[x] IERC20Nonces not run
contract name: IERC20Permit
WARNING!!!!
IERC20Permit_types.txt
Finance File not Found
Type File not found.
[x] IERC20Permit not run
contract name: IExecutorManager
WARNING!!!!
IExecutorManager_types.txt
Finance File not Found
Type File not found.
[x] IExecutorManager not run
contract name: ILiquidityProviders
WARNING!!!!
ILiquidityProviders_types.txt
Finance File not Found
Type File not found.
[x] ILiquidityProviders not run
contract name: ITokenManager
WARNING!!!!
ITokenManager_types.txt
Finance File not Found
Type File not found.
[x] ITokenManager not run
contract name: ERC2771ContextUpgradeable
WARNING!!!!
ERC2771ContextUpgradeable_types.txt
Finance File not Found
Type File not found.
[x] ERC2771ContextUpgradeable not run
contract name: OwnableUpgradeable
WARNING!!!!
OwnableUpgradeable_types.txt
Finance File not Found
Type File not found.
[x] OwnableUpgradeable not run
contract name: Initializable
WARNING!!!!
Initializable_types.txt
Finance File not Found
Type File not found.
[x] Initializable not run
contract name: PausableUpgradeable
WARNING!!!!
PausableUpgradeable_types.txt
Finance File not Found
Type File not found.
[x] PausableUpgradeable not run
contract name: ReentrancyGuardUpgradeable
WARNING!!!!
ReentrancyGuardUpgradeable_types.txt
Finance File not Found
Type File not found.
[x] ReentrancyGuardUpgradeable not run
contract name: IERC20Upgradeable
WARNING!!!!
IERC20Upgradeable_types.txt
Finance File not Found
Type File not found.
[x] IERC20Upgradeable not run
contract name: SafeERC20Upgradeable
WARNING!!!!
SafeERC20Upgradeable_types.txt
Finance File not Found
Type File not found.
[x] SafeERC20Upgradeable not run
contract name: AddressUpgradeable
WARNING!!!!
AddressUpgradeable_types.txt
Finance File not Found
Type File not found.
[x] AddressUpgradeable not run
contract name: ContextUpgradeable
WARNING!!!!
ContextUpgradeable_types.txt
Finance File not Found
Type File not found.
[x] ContextUpgradeable not run
contract name: Pausable
WARNING!!!!
Pausable_types.txt
Finance File not Found
Type File not found.
[x] Pausable not run
Seen contract: {} Contract name out: LiquidityPool
[*] LiquidityPool run
Reading Function: initialize
Function name: initialize
Function Visibility (test): public
_executorManagerAddress
Finding type for _executorManagerAddress...
address
Check copy_toekn_tuple
(-1, -1, 0, 'EXECMANAGER')
----
Type: address
address
Final Type: address

Name: _executorManagerAddress Function: initialize
Num: -1
Den: -1
Norm: 0
LF: EXECMANAGER
Fields: 
Finance Type: undef
[*]Type fetched successfully
_pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 0, 'PAUSER')
----
Type: address
address
Final Type: address

Name: _pauser Function: initialize
Num: -1
Den: -1
Norm: 0
LF: PAUSER
Fields: 
Finance Type: undef
[*]Type fetched successfully
_trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 0, 'FORWARD')
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: initialize
Num: -1
Den: -1
Norm: 0
LF: FORWARD
Fields: 
Finance Type: undef
[*]Type fetched successfully
_tokenManager
Finding type for _tokenManager...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: address
address
Final Type: address

Name: _tokenManager Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
_liquidityProviders
Finding type for _liquidityProviders...
address
Check copy_toekn_tuple
(-1, -1, 0, 'LPROVIDERS')
----
Type: address
address
Final Type: address

Name: _liquidityProviders Function: initialize
Num: -1
Den: -1
Norm: 0
LF: LPROVIDERS
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: EXECMANAGER
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: PAUSER
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: FORWARD
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: 0
    link: TokenManager
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: 0
    link: LPROVIDERS
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: EXECMANAGER
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: PAUSER
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: FORWARD
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: 0
    link: TokenManager
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: 0
    link: LPROVIDERS
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, Initializable.initializer()()
typecheckig node...
MODIFIER_CALL, Initializable.initializer()()
Internal call...
initializer
Function: initializer
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: initializer
Function Visibility: internal
clearning node...
clearing ir...?
_initialized_1(bool) := ϕ(['_initialized_0', '_initialized_2'])
has variable
clearing ir...?
_initializing_1(bool) := ϕ(['_initializing_0', '_initializing_3', '_initializing_2'])
has variable
typecheckig node...
_initialized_1(bool) := ϕ(['_initialized_0', '_initialized_2'])
Function name: initializer
Phi
[i]Type for _initialized

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_initializing_1(bool) := ϕ(['_initializing_0', '_initializing_3', '_initializing_2'])
Function name: initializer
Phi
[i]Type for _initializing

Name: _initializing Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_295 = ! _initialized_1 
clearing ir...?
TMP_296(bool) = _initializing_1 || TMP_295
has variable
[i] TMP_296 cleared
clearing ir...?
TMP_297(None) = SOLIDITY_CALL require(bool,string)(TMP_296,Initializable: contract is already initialized)
typecheckig node...
TMP_295 = ! _initialized_1 
[i]Type for TMP_295

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_296(bool) = _initializing_1 || TMP_295
Function name: initializer
[i]Type for TMP_296

Name: TMP_296 Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_297(None) = SOLIDITY_CALL require(bool,string)(TMP_296,Initializable: contract is already initialized)
[i]Type for TMP_297

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_298 = ! _initializing_1 
clearing ir...?
isTopLevelCall_1(bool) := TMP_298(bool)
has variable
[i] isTopLevelCall cleared
typecheckig node...
TMP_298 = ! _initializing_1 
[i]Type for TMP_298

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
isTopLevelCall_1(bool) := TMP_298(bool)
Function name: initializer
asgn

Name: TMP_298 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
isTopLevelCall_1(bool) := TMP_298(bool)
XXXXX
clearning node...
clearing ir...?
CONDITION isTopLevelCall_1
typecheckig node...
CONDITION isTopLevelCall_1
Condition...
Conidtion: 
isTopLevelCall_1
isTopLevelCall_1
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_initializing_2(bool) := True(bool)
has variable
typecheckig node...
_initializing_2(bool) := True(bool)
Function name: initializer
asgn
val: True

Name: True Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _initializing Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: True
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_initialized_2(bool) := True(bool)
has variable
typecheckig node...
_initialized_2(bool) := True(bool)
Function name: initializer
asgn
val: True

Name: True Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _initialized Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: True
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
CONDITION isTopLevelCall_1
typecheckig node...
CONDITION isTopLevelCall_1
Condition...
Conidtion: 
isTopLevelCall_1
isTopLevelCall_1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_initializing_3(bool) := False(bool)
has variable
typecheckig node...
_initializing_3(bool) := False(bool)
Function name: initializer
asgn
val: False

Name: False Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _initializing Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: False
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "initializer":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
_initialized_1(bool) := ϕ(['_initialized_0', '_initialized_2'])
Function name: initializer
Phi
[i]Type for _initialized

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_initializing_1(bool) := ϕ(['_initializing_0', '_initializing_3', '_initializing_2'])
Function name: initializer
Phi
[i]Type for _initializing

Name: _initializing Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_295 = ! _initialized_1 
[i]Type for TMP_295

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_296(bool) = _initializing_1 || TMP_295
Function name: initializer
[i]Type for TMP_296

Name: TMP_296 Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_297(None) = SOLIDITY_CALL require(bool,string)(TMP_296,Initializable: contract is already initialized)
[i]Type for TMP_297

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_298 = ! _initializing_1 
[i]Type for TMP_298

Name: TMP_298 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
isTopLevelCall_1(bool) := TMP_298(bool)
Function name: initializer
asgn

Name: TMP_298 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
isTopLevelCall_1(bool) := TMP_298(bool)
XXXXX
typecheckig node...
CONDITION isTopLevelCall_1
Condition...
Conidtion: 
isTopLevelCall_1
isTopLevelCall_1
typecheckig node...
typecheckig node...
typecheckig node...
_initializing_2(bool) := True(bool)
Function name: initializer
asgn
val: True

Name: True Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _initializing Function: initializer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: True
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_initialized_2(bool) := True(bool)
Function name: initializer
asgn
val: True

Name: True Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _initialized Function: initializer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: True
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
CONDITION isTopLevelCall_1
Condition...
Conidtion: 
isTopLevelCall_1
isTopLevelCall_1
typecheckig node...
typecheckig node...
_initializing_3(bool) := False(bool)
Function name: initializer
asgn
val: False

Name: False Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _initializing Function: initializer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: False
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "initializer":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: initializer
done.
This IR caused addback:
MODIFIER_CALL, Initializable.initializer()()
XXXXX
clearning node...
clearing ir...?
TMP_64 = CONVERT 0 to address
has variable
[i] TMP_64 cleared
clearing ir...?
TMP_65(bool) = _executorManagerAddress_1 != TMP_64
has variable
[i] TMP_65 cleared
clearing ir...?
TMP_66(None) = SOLIDITY_CALL require(bool,string)(TMP_65,ExecutorManager cannot be 0x0)
typecheckig node...
TMP_64 = CONVERT 0 to address
Function name: initialize
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_64 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_64

Name: TMP_64 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_65(bool) = _executorManagerAddress_1 != TMP_64
Function name: initialize
[i]Type for TMP_65

Name: TMP_65 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_66(None) = SOLIDITY_CALL require(bool,string)(TMP_65,ExecutorManager cannot be 0x0)
[i]Type for TMP_66

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_67 = CONVERT 0 to address
has variable
[i] TMP_67 cleared
clearing ir...?
TMP_68(bool) = _trustedForwarder_1 != TMP_67
has variable
[i] TMP_68 cleared
clearing ir...?
TMP_69(None) = SOLIDITY_CALL require(bool,string)(TMP_68,TrustedForwarder cannot be 0x0)
typecheckig node...
TMP_67 = CONVERT 0 to address
Function name: initialize
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_67 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_67

Name: TMP_67 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_68(bool) = _trustedForwarder_1 != TMP_67
Function name: initialize
[i]Type for TMP_68

Name: TMP_68 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_69(None) = SOLIDITY_CALL require(bool,string)(TMP_68,TrustedForwarder cannot be 0x0)
[i]Type for TMP_69

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_70 = CONVERT 0 to address
has variable
[i] TMP_70 cleared
clearing ir...?
TMP_71(bool) = _liquidityProviders_1 != TMP_70
has variable
[i] TMP_71 cleared
clearing ir...?
TMP_72(None) = SOLIDITY_CALL require(bool,string)(TMP_71,LiquidityProviders cannot be 0x0)
typecheckig node...
TMP_70 = CONVERT 0 to address
Function name: initialize
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_70 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_70

Name: TMP_70 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_71(bool) = _liquidityProviders_1 != TMP_70
Function name: initialize
[i]Type for TMP_71

Name: TMP_71 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_72(None) = SOLIDITY_CALL require(bool,string)(TMP_71,LiquidityProviders cannot be 0x0)
[i]Type for TMP_72

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, ERC2771ContextUpgradeable.__ERC2771Context_init(address)(_trustedForwarder_1)
typecheckig node...
INTERNAL_CALL, ERC2771ContextUpgradeable.__ERC2771Context_init(address)(_trustedForwarder_1)
Internal call...
__ERC2771Context_init
_trustedForwarder
Function: __ERC2771Context_init
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FORWARD
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FORWARD
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 0, 'FORWARD', [], -1]
added
xyz
Function name: __ERC2771Context_init
Function Visibility: internal
clearning node...
clearing ir...?
trustedForwarder_1(address) := ϕ(['_trustedForwarder_1'])
has variable
[i] trustedForwarder cleared
typecheckig node...
trustedForwarder_1(address) := ϕ(['_trustedForwarder_1'])
Function name: __ERC2771Context_init
Phi
[i]Type for trustedForwarder

Name: trustedForwarder Function: __ERC2771Context_init
Num: -1
Den: -1
Norm: u
LF: FORWARD
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, Initializable.initializer()()
typecheckig node...
MODIFIER_CALL, Initializable.initializer()()
Internal call...
initializer
Function: initializer
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
INTERNAL_CALL, ContextUpgradeable.__Context_init_unchained()()
typecheckig node...
INTERNAL_CALL, ContextUpgradeable.__Context_init_unchained()()
Internal call...
__Context_init_unchained
Function: __Context_init_unchained
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: __Context_init_unchained
Function Visibility: internal
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, Initializable.initializer()()
typecheckig node...
MODIFIER_CALL, Initializable.initializer()()
Internal call...
initializer
Function: initializer
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
WORKLIST iteration 0 for function call "__Context_init_unchained":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: __Context_init_unchained
done.
clearning node...
clearing ir...?
INTERNAL_CALL, ERC2771ContextUpgradeable.__ERC2771Context_init_unchained(address)(trustedForwarder_1)
typecheckig node...
INTERNAL_CALL, ERC2771ContextUpgradeable.__ERC2771Context_init_unchained(address)(trustedForwarder_1)
Internal call...
__ERC2771Context_init_unchained
trustedForwarder
Function: __ERC2771Context_init_unchained
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: FORWARD
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: FORWARD
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', 'FORWARD', [], -1]
added
xyz
Function name: __ERC2771Context_init_unchained
Function Visibility: internal
clearning node...
clearing ir...?
trustedForwarder_1(address) := ϕ(['trustedForwarder_1'])
has variable
[i] trustedForwarder cleared
typecheckig node...
trustedForwarder_1(address) := ϕ(['trustedForwarder_1'])
Function name: __ERC2771Context_init_unchained
Phi
[i]Type for trustedForwarder

Name: trustedForwarder Function: __ERC2771Context_init_unchained
Num: -1
Den: -1
Norm: u
LF: FORWARD
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, Initializable.initializer()()
typecheckig node...
MODIFIER_CALL, Initializable.initializer()()
Internal call...
initializer
Function: initializer
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
_trustedForwarder_1(address) := trustedForwarder_1(address)
has variable
typecheckig node...
_trustedForwarder_1(address) := trustedForwarder_1(address)
Function name: __ERC2771Context_init_unchained
asgn

Name: trustedForwarder Function: __ERC2771Context_init_unchained
Num: -1
Den: -1
Norm: u
LF: FORWARD
Fields: 
Finance Type: undef

Name: _trustedForwarder Function: __ERC2771Context_init_unchained
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _trustedForwarder

Name: _trustedForwarder Function: __ERC2771Context_init_unchained
Num: -1
Den: -1
Norm: u
LF: FORWARD
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "__ERC2771Context_init_unchained":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: __ERC2771Context_init_unchained
done.
WORKLIST iteration 0 for function call "__ERC2771Context_init":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: __ERC2771Context_init
done.
clearning node...
clearing ir...?
INTERNAL_CALL, ReentrancyGuardUpgradeable.__ReentrancyGuard_init()()
typecheckig node...
INTERNAL_CALL, ReentrancyGuardUpgradeable.__ReentrancyGuard_init()()
Internal call...
__ReentrancyGuard_init
Function: __ReentrancyGuard_init
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: __ReentrancyGuard_init
Function Visibility: internal
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, Initializable.initializer()()
typecheckig node...
MODIFIER_CALL, Initializable.initializer()()
Internal call...
initializer
Function: initializer
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
INTERNAL_CALL, ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained()()
typecheckig node...
INTERNAL_CALL, ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained()()
Internal call...
__ReentrancyGuard_init_unchained
Function: __ReentrancyGuard_init_unchained
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: __ReentrancyGuard_init_unchained
Function Visibility: internal
clearning node...
clearing ir...?
_NOT_ENTERED_1(uint256) := ϕ(['_NOT_ENTERED_0', '_NOT_ENTERED_2'])
has variable
typecheckig node...
_NOT_ENTERED_1(uint256) := ϕ(['_NOT_ENTERED_0', '_NOT_ENTERED_2'])
Function name: __ReentrancyGuard_init_unchained
Phi
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, Initializable.initializer()()
typecheckig node...
MODIFIER_CALL, Initializable.initializer()()
Internal call...
initializer
Function: initializer
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
_status_1(uint256) := _NOT_ENTERED_2(uint256)
has variable
typecheckig node...
_status_1(uint256) := _NOT_ENTERED_2(uint256)
Function name: __ReentrancyGuard_init_unchained
asgn

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _status Function: __ReentrancyGuard_init_unchained
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _status

Name: _status Function: __ReentrancyGuard_init_unchained
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "__ReentrancyGuard_init_unchained":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: __ReentrancyGuard_init_unchained
done.
WORKLIST iteration 0 for function call "__ReentrancyGuard_init":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: __ReentrancyGuard_init
done.
clearning node...
clearing ir...?
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init()()
typecheckig node...
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init()()
Internal call...
__Ownable_init
Function: __Ownable_init
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: __Ownable_init
Function Visibility: internal
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, Initializable.initializer()()
typecheckig node...
MODIFIER_CALL, Initializable.initializer()()
Internal call...
initializer
Function: initializer
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
INTERNAL_CALL, ContextUpgradeable.__Context_init_unchained()()
typecheckig node...
INTERNAL_CALL, ContextUpgradeable.__Context_init_unchained()()
Internal call...
__Context_init_unchained
Function: __Context_init_unchained
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init_unchained()()
typecheckig node...
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init_unchained()()
Internal call...
__Ownable_init_unchained
Function: __Ownable_init_unchained
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: __Ownable_init_unchained
Function Visibility: internal
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, Initializable.initializer()()
typecheckig node...
MODIFIER_CALL, Initializable.initializer()()
Internal call...
initializer
Function: initializer
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
TMP_19(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
has variable
[i] TMP_19 cleared
clearing ir...?
INTERNAL_CALL, OwnableUpgradeable._setOwner(address)(TMP_19)
typecheckig node...
TMP_19(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: __Ownable_init_unchained
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: _msgSender
Function Visibility: internal
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_291(address) = INTERNAL_CALL, ERC2771ContextUpgradeable._msgSender()()
has variable
[i] TMP_291 cleared
clearing ir...?
RETURN TMP_291
typecheckig node...
TMP_291(address) = INTERNAL_CALL, ERC2771ContextUpgradeable._msgSender()()
Function name: _msgSender
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: _msgSender
Function Visibility: internal
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_5(bool) = INTERNAL_CALL, ERC2771ContextUpgradeable.isTrustedForwarder(address)(msg.sender)
has variable
[i] TMP_5 cleared
clearing ir...?
CONDITION TMP_5
typecheckig node...
TMP_5(bool) = INTERNAL_CALL, ERC2771ContextUpgradeable.isTrustedForwarder(address)(msg.sender)
Function name: _msgSender
Internal call...
isTrustedForwarder
msg.sender
Function: isTrustedForwarder
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: isTrustedForwarder
Function Visibility: public
clearning node...
clearing ir...?
forwarder_1(address) := ϕ(['msg.sender'])
has variable
[i] forwarder cleared
clearing ir...?
_trustedForwarder_2(address) := ϕ(['_trustedForwarder_3', '_trustedForwarder_1', '_trustedForwarder_0'])
has variable
typecheckig node...
forwarder_1(address) := ϕ(['msg.sender'])
Function name: isTrustedForwarder
Phi
[i]Type for forwarder

Name: forwarder Function: isTrustedForwarder
Num: -1
Den: -1
Norm: u
LF: forwarder
Fields: 
Finance Type: undef
done.
_trustedForwarder_2(address) := ϕ(['_trustedForwarder_3', '_trustedForwarder_1', '_trustedForwarder_0'])
Function name: isTrustedForwarder
Phi
[i]Type for _trustedForwarder

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: FORWARD
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_4(bool) = forwarder_1 == _trustedForwarder_2
has variable
[i] TMP_4 cleared
clearing ir...?
RETURN TMP_4
typecheckig node...
TMP_4(bool) = forwarder_1 == _trustedForwarder_2
Function name: isTrustedForwarder
[i]Type for TMP_4

Name: TMP_4 Function: isTrustedForwarder
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_4
RETURN

Name: TMP_4 Function: isTrustedForwarder
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "isTrustedForwarder":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: isTrustedForwarder

Name: TMP_4 Function: isTrustedForwarder
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_5

Name: TMP_5 Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_5
Condition...
Conidtion: 
TMP_5
TMP_5
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_6(uint256) = SOLIDITY_CALL calldatasize()()
clearing ir...?
TMP_7(uint256) = TMP_6 - 20
has variable
[i] TMP_7 cleared
clearing ir...?
TMP_8(uint256) = SOLIDITY_CALL calldataload(uint256)(TMP_7)
clearing ir...?
TMP_9(uint256) = TMP_8 >> 96
has variable
[i] TMP_9 cleared
clearing ir...?
sender_1(address) := TMP_9(uint256)
has variable
[i] sender cleared
typecheckig node...
TMP_6(uint256) = SOLIDITY_CALL calldatasize()()
[i]Type for TMP_6

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_7(uint256) = TMP_6 - 20
Function name: _msgSender
val: 20
val: 20
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_6 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: 20 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 20

Name: 20 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_7 Function: _msgSender
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_7

Name: TMP_7 Function: _msgSender
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_7(uint256) = TMP_6 - 20
XXXXX
TMP_8(uint256) = SOLIDITY_CALL calldataload(uint256)(TMP_7)
[i]Type for TMP_8

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_9(uint256) = TMP_8 >> 96
Function name: _msgSender
[i]Type for TMP_9

Name: TMP_9 Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
sender_1(address) := TMP_9(uint256)
Function name: _msgSender
asgn

Name: TMP_9 Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: sender Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for sender

Name: sender Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
sender_1(address) := TMP_9(uint256)
XXXXX
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_10(address) = INTERNAL_CALL, ContextUpgradeable._msgSender()()
has variable
[i] TMP_10 cleared
clearing ir...?
RETURN TMP_10
typecheckig node...
TMP_10(address) = INTERNAL_CALL, ContextUpgradeable._msgSender()()
Function name: _msgSender
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: _msgSender
Function Visibility: internal
clearning node...
typecheckig node...
clearning node...
clearing ir...?
RETURN msg.sender
typecheckig node...
RETURN msg.sender
RETURN
msg.sender
WORKLIST iteration 0 for function call "_msgSender":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _msgSender

Name: PIC_9 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_10

Name: TMP_10 Function: _msgSender
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_10
RETURN

Name: TMP_10 Function: _msgSender
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_msgSender":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
typecheckig node...
TMP_5(bool) = INTERNAL_CALL, ERC2771ContextUpgradeable.isTrustedForwarder(address)(msg.sender)
Function name: _msgSender
Internal call...
isTrustedForwarder
msg.sender
Function: isTrustedForwarder
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_8 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_5 Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_5

Name: TMP_5 Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_5
Condition...
Conidtion: 
TMP_5
TMP_5
typecheckig node...
typecheckig node...
TMP_6(uint256) = SOLIDITY_CALL calldatasize()()
[i]Type for TMP_6

Name: TMP_6 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_7(uint256) = TMP_6 - 20
Function name: _msgSender
val: 20
val: 20
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_6 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: 20 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 20

Name: 20 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_7 Function: _msgSender
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_7

Name: TMP_7 Function: _msgSender
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_7(uint256) = TMP_6 - 20
XXXXX
TMP_8(uint256) = SOLIDITY_CALL calldataload(uint256)(TMP_7)
[i]Type for TMP_8

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_9(uint256) = TMP_8 >> 96
Function name: _msgSender
[i]Type for TMP_9

Name: TMP_9 Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
sender_1(address) := TMP_9(uint256)
Function name: _msgSender
asgn

Name: TMP_9 Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: sender Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for sender

Name: sender Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
sender_1(address) := TMP_9(uint256)
XXXXX
typecheckig node...
clearning node...
clearing ir...?
TMP_10(address) = INTERNAL_CALL, ContextUpgradeable._msgSender()()
has variable
[i] TMP_10 cleared
clearing ir...?
RETURN TMP_10
typecheckig node...
TMP_10(address) = INTERNAL_CALL, ContextUpgradeable._msgSender()()
Function name: _msgSender
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_10 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_10 Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_10

Name: TMP_10 Function: _msgSender
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_10
RETURN

Name: TMP_10 Function: _msgSender
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "_msgSender":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: _msgSender

Name: TMP_10 Function: _msgSender
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_291

Name: TMP_291 Function: _msgSender
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_291(address) = INTERNAL_CALL, ERC2771ContextUpgradeable._msgSender()()
XXXXX
RETURN TMP_291
RETURN

Name: TMP_291 Function: _msgSender
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_msgSender":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _msgSender

Name: TMP_291 Function: _msgSender
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_19

Name: TMP_19 Function: __Ownable_init_unchained
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, OwnableUpgradeable._setOwner(address)(TMP_19)
Internal call...
_setOwner
TMP_19
Function: _setOwner
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _setOwner
Function Visibility: private
clearning node...
clearing ir...?
newOwner_1(address) := ϕ(['newOwner_1', 'TMP_22', 'TMP_19'])
has variable
[i] newOwner cleared
clearing ir...?
_owner_2(address) := ϕ(['_owner_3', '_owner_0'])
has variable
typecheckig node...
newOwner_1(address) := ϕ(['newOwner_1', 'TMP_22', 'TMP_19'])
Function name: _setOwner
Phi
[i]Type for newOwner

Name: newOwner Function: _setOwner
Num: -1
Den: -1
Norm: u
LF: newOwner
Fields: 
Finance Type: undef
done.
_owner_2(address) := ϕ(['_owner_3', '_owner_0'])
Function name: _setOwner
Phi
[i]Type for _owner

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: _owner
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
oldOwner_1(address) := _owner_2(address)
has variable
[i] oldOwner cleared
typecheckig node...
oldOwner_1(address) := _owner_2(address)
Function name: _setOwner
asgn

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: _owner
Fields: 
Finance Type: undef

Name: oldOwner Function: _setOwner
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for oldOwner

Name: oldOwner Function: _setOwner
Num: -1
Den: -1
Norm: u
LF: _owner
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_owner_3(address) := newOwner_1(address)
has variable
typecheckig node...
_owner_3(address) := newOwner_1(address)
Function name: _setOwner
asgn

Name: newOwner Function: _setOwner
Num: -1
Den: -1
Norm: u
LF: newOwner
Fields: 
Finance Type: undef

Name: _owner Function: _setOwner
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _owner

Name: _owner Function: _setOwner
Num: -1
Den: -1
Norm: u
LF: newOwner
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit OwnershipTransferred(oldOwner_1,newOwner_1)
typecheckig node...
Emit OwnershipTransferred(oldOwner_1,newOwner_1)
WORKLIST iteration 0 for function call "_setOwner":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _setOwner
done.
WORKLIST iteration 0 for function call "__Ownable_init_unchained":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: __Ownable_init_unchained
done.
WORKLIST iteration 0 for function call "__Ownable_init":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: __Ownable_init
done.
clearning node...
clearing ir...?
INTERNAL_CALL, Pausable.__Pausable_init(address)(_pauser_1)
typecheckig node...
INTERNAL_CALL, Pausable.__Pausable_init(address)(_pauser_1)
Internal call...
__Pausable_init
_pauser
Function: __Pausable_init
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: PAUSER
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: PAUSER
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 0, 'PAUSER', [], -1]
added
xyz
Function name: __Pausable_init
Function Visibility: internal
clearning node...
clearing ir...?
pauser_1(address) := ϕ(['_pauser_1'])
has variable
[i] pauser cleared
typecheckig node...
pauser_1(address) := ϕ(['_pauser_1'])
Function name: __Pausable_init
Phi
[i]Type for pauser

Name: pauser Function: __Pausable_init
Num: -1
Den: -1
Norm: u
LF: PAUSER
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, Initializable.initializer()()
typecheckig node...
MODIFIER_CALL, Initializable.initializer()()
Internal call...
initializer
Function: initializer
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
TMP_31 = CONVERT 0 to address
has variable
[i] TMP_31 cleared
clearing ir...?
TMP_32(bool) = pauser_1 != TMP_31
has variable
[i] TMP_32 cleared
clearing ir...?
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,Pauser Address cannot be 0)
typecheckig node...
TMP_31 = CONVERT 0 to address
Function name: __Pausable_init
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_31 Function: __Pausable_init
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_31

Name: TMP_31 Function: __Pausable_init
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_32(bool) = pauser_1 != TMP_31
Function name: __Pausable_init
[i]Type for TMP_32

Name: TMP_32 Function: __Pausable_init
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,Pauser Address cannot be 0)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, PausableUpgradeable.__Pausable_init()()
typecheckig node...
INTERNAL_CALL, PausableUpgradeable.__Pausable_init()()
Internal call...
__Pausable_init
Function: __Pausable_init
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: __Pausable_init
Function Visibility: internal
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, Initializable.initializer()()
typecheckig node...
MODIFIER_CALL, Initializable.initializer()()
Internal call...
initializer
Function: initializer
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
INTERNAL_CALL, ContextUpgradeable.__Context_init_unchained()()
typecheckig node...
INTERNAL_CALL, ContextUpgradeable.__Context_init_unchained()()
Internal call...
__Context_init_unchained
Function: __Context_init_unchained
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
INTERNAL_CALL, PausableUpgradeable.__Pausable_init_unchained()()
typecheckig node...
INTERNAL_CALL, PausableUpgradeable.__Pausable_init_unchained()()
Internal call...
__Pausable_init_unchained
Function: __Pausable_init_unchained
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: __Pausable_init_unchained
Function Visibility: internal
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, Initializable.initializer()()
typecheckig node...
MODIFIER_CALL, Initializable.initializer()()
Internal call...
initializer
Function: initializer
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
_paused_1(bool) := False(bool)
has variable
typecheckig node...
_paused_1(bool) := False(bool)
Function name: __Pausable_init_unchained
asgn
val: False

Name: False Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _paused Function: __Pausable_init_unchained
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: False
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _paused

Name: _paused Function: __Pausable_init_unchained
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "__Pausable_init_unchained":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: __Pausable_init_unchained
done.
WORKLIST iteration 0 for function call "__Pausable_init":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: __Pausable_init
done.
clearning node...
clearing ir...?
_pauser_1(address) := pauser_1(address)
has variable
typecheckig node...
_pauser_1(address) := pauser_1(address)
Function name: __Pausable_init
asgn

Name: pauser Function: __Pausable_init
Num: -1
Den: -1
Norm: u
LF: PAUSER
Fields: 
Finance Type: undef

Name: _pauser Function: __Pausable_init
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _pauser

Name: _pauser Function: __Pausable_init
Num: -1
Den: -1
Norm: u
LF: PAUSER
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "__Pausable_init":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: __Pausable_init
done.
clearning node...
clearing ir...?
TMP_77 = CONVERT _executorManagerAddress_1 to IExecutorManager
has variable
[i] TMP_77 cleared
clearing ir...?
executorManager_1(IExecutorManager) := TMP_77(IExecutorManager)
has variable
typecheckig node...
TMP_77 = CONVERT _executorManagerAddress_1 to IExecutorManager
Function name: initialize

Name: _executorManagerAddress Function: initialize
Num: -1
Den: -1
Norm: 0
LF: EXECMANAGER
Fields: 
Finance Type: undef

Name: TMP_77 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_77

Name: TMP_77 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: EXECMANAGER
Fields: 
Finance Type: undef
done.
executorManager_1(IExecutorManager) := TMP_77(IExecutorManager)
Function name: initialize
asgn

Name: TMP_77 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: EXECMANAGER
Fields: 
Finance Type: undef

Name: executorManager Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for executorManager

Name: executorManager Function: initialize
Num: -1
Den: -1
Norm: 0
LF: EXECMANAGER
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_78 = CONVERT _tokenManager_1 to ITokenManager
has variable
[i] TMP_78 cleared
clearing ir...?
tokenManager_1(ITokenManager) := TMP_78(ITokenManager)
has variable
typecheckig node...
TMP_78 = CONVERT _tokenManager_1 to ITokenManager
Function name: initialize

Name: _tokenManager Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef

Name: TMP_78 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_78

Name: TMP_78 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
tokenManager_1(ITokenManager) := TMP_78(ITokenManager)
Function name: initialize
asgn

Name: TMP_78 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef

Name: tokenManager Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for tokenManager

Name: tokenManager Function: initialize
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_79 = CONVERT _liquidityProviders_1 to ILiquidityProviders
has variable
[i] TMP_79 cleared
clearing ir...?
liquidityProviders_1(ILiquidityProviders) := TMP_79(ILiquidityProviders)
has variable
typecheckig node...
TMP_79 = CONVERT _liquidityProviders_1 to ILiquidityProviders
Function name: initialize

Name: _liquidityProviders Function: initialize
Num: -1
Den: -1
Norm: 0
LF: LPROVIDERS
Fields: 
Finance Type: undef

Name: TMP_79 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_79

Name: TMP_79 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: LPROVIDERS
Fields: 
Finance Type: undef
done.
liquidityProviders_1(ILiquidityProviders) := TMP_79(ILiquidityProviders)
Function name: initialize
asgn

Name: TMP_79 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: LPROVIDERS
Fields: 
Finance Type: undef

Name: liquidityProviders Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityProviders

Name: liquidityProviders Function: initialize
Num: -1
Den: -1
Norm: 0
LF: LPROVIDERS
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
baseGas_1(uint256) := 21000(uint256)
has variable
typecheckig node...
baseGas_1(uint256) := 21000(uint256)
Function name: initialize
asgn
val: 21000

Name: 21000 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: baseGas Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 21000
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for baseGas

Name: baseGas Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "initialize":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: initialize
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: setTrustedForwarder
Function name: setTrustedForwarder
Function Visibility (test): public
trustedForwarder
Finding type for trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 0, 'FORWARD')
----
Type: address
address
Final Type: address

Name: trustedForwarder Function: setTrustedForwarder
Num: -1
Den: -1
Norm: 0
LF: FORWARD
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FORWARD
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FORWARD
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: onlyOwner
Function Visibility: internal
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_299(address) = INTERNAL_CALL, OwnableUpgradeable.owner()()
has variable
[i] TMP_299 cleared
clearing ir...?
TMP_300(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
has variable
[i] TMP_300 cleared
clearing ir...?
TMP_301(bool) = TMP_299 == TMP_300
has variable
[i] TMP_301 cleared
clearing ir...?
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,Ownable: caller is not the owner)
typecheckig node...
TMP_299(address) = INTERNAL_CALL, OwnableUpgradeable.owner()()
Function name: onlyOwner
Internal call...
owner
Function: owner
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: owner
Function Visibility: public
clearning node...
clearing ir...?
_owner_1(address) := ϕ(['_owner_3', '_owner_0'])
has variable
typecheckig node...
_owner_1(address) := ϕ(['_owner_3', '_owner_0'])
Function name: owner
Phi
[i]Type for _owner

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _owner_1
typecheckig node...
RETURN _owner_1
RETURN

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "owner":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: owner

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_299

Name: TMP_299 Function: onlyOwner
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_300(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: onlyOwner
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_13 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_300 Function: onlyOwner
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_300

Name: TMP_300 Function: onlyOwner
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_301(bool) = TMP_299 == TMP_300
Function name: onlyOwner
[i]Type for TMP_301

Name: TMP_301 Function: onlyOwner
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_302(None) = SOLIDITY_CALL require(bool,string)(TMP_301,Ownable: caller is not the owner)
[i]Type for TMP_302

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "onlyOwner":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: onlyOwner
done.
clearning node...
clearing ir...?
TMP_81 = CONVERT 0 to address
has variable
[i] TMP_81 cleared
clearing ir...?
TMP_82(bool) = trustedForwarder_1 != TMP_81
has variable
[i] TMP_82 cleared
clearing ir...?
TMP_83(None) = SOLIDITY_CALL require(bool,string)(TMP_82,TrustedForwarder can't be 0)
typecheckig node...
TMP_81 = CONVERT 0 to address
Function name: setTrustedForwarder
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_81 Function: setTrustedForwarder
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_81

Name: TMP_81 Function: setTrustedForwarder
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_82(bool) = trustedForwarder_1 != TMP_81
Function name: setTrustedForwarder
[i]Type for TMP_82

Name: TMP_82 Function: setTrustedForwarder
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_83(None) = SOLIDITY_CALL require(bool,string)(TMP_82,TrustedForwarder can't be 0)
[i]Type for TMP_83

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_trustedForwarder_3(address) := trustedForwarder_1(address)
has variable
typecheckig node...
_trustedForwarder_3(address) := trustedForwarder_1(address)
Function name: setTrustedForwarder
asgn

Name: trustedForwarder Function: setTrustedForwarder
Num: -1
Den: -1
Norm: 0
LF: FORWARD
Fields: 
Finance Type: undef

Name: _trustedForwarder Function: setTrustedForwarder
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _trustedForwarder

Name: _trustedForwarder Function: setTrustedForwarder
Num: -1
Den: -1
Norm: 0
LF: FORWARD
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit TrustedForwarderChanged(trustedForwarder_1)
typecheckig node...
Emit TrustedForwarderChanged(trustedForwarder_1)
WORKLIST iteration 0 for function call "setTrustedForwarder":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: setTrustedForwarder
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: setLiquidityProviders
Function name: setLiquidityProviders
Function Visibility (test): public
_liquidityProviders
Finding type for _liquidityProviders...
address
Check copy_toekn_tuple
(-1, -1, 0, 'LPROVIDER')
----
Type: address
address
Final Type: address

Name: _liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Norm: 0
LF: LPROVIDER
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: LPROVIDER
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: LPROVIDER
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
TMP_86 = CONVERT 0 to address
has variable
[i] TMP_86 cleared
clearing ir...?
TMP_87(bool) = _liquidityProviders_1 != TMP_86
has variable
[i] TMP_87 cleared
clearing ir...?
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,LiquidityProviders can't be 0)
typecheckig node...
TMP_86 = CONVERT 0 to address
Function name: setLiquidityProviders
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_86 Function: setLiquidityProviders
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_86

Name: TMP_86 Function: setLiquidityProviders
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_87(bool) = _liquidityProviders_1 != TMP_86
Function name: setLiquidityProviders
[i]Type for TMP_87

Name: TMP_87 Function: setLiquidityProviders
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,LiquidityProviders can't be 0)
[i]Type for TMP_88

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_89 = CONVERT _liquidityProviders_1 to ILiquidityProviders
has variable
[i] TMP_89 cleared
clearing ir...?
liquidityProviders_2(ILiquidityProviders) := TMP_89(ILiquidityProviders)
has variable
typecheckig node...
TMP_89 = CONVERT _liquidityProviders_1 to ILiquidityProviders
Function name: setLiquidityProviders

Name: _liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Norm: 0
LF: LPROVIDER
Fields: 
Finance Type: undef

Name: TMP_89 Function: setLiquidityProviders
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_89

Name: TMP_89 Function: setLiquidityProviders
Num: -1
Den: -1
Norm: 0
LF: LPROVIDER
Fields: 
Finance Type: undef
done.
liquidityProviders_2(ILiquidityProviders) := TMP_89(ILiquidityProviders)
Function name: setLiquidityProviders
asgn

Name: TMP_89 Function: setLiquidityProviders
Num: -1
Den: -1
Norm: 0
LF: LPROVIDER
Fields: 
Finance Type: undef

Name: liquidityProviders Function: setLiquidityProviders
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityProviders

Name: liquidityProviders Function: setLiquidityProviders
Num: -1
Den: -1
Norm: 0
LF: LPROVIDER
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit LiquidityProvidersChanged(_liquidityProviders_1)
typecheckig node...
Emit LiquidityProvidersChanged(_liquidityProviders_1)
WORKLIST iteration 0 for function call "setLiquidityProviders":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: setLiquidityProviders
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: setBaseGas
Function setBaseGas not marked
Mark Iterations TRUE, proceeding anyway
Function name: setBaseGas
Function Visibility (test): external
gas
Finding type for gas...
uint128
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
done.
clearning node...
clearing ir...?
baseGas_2(uint256) := gas_1(uint128)
has variable
typecheckig node...
baseGas_2(uint256) := gas_1(uint128)
Function name: setBaseGas
asgn

Name: gas Function: setBaseGas
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: baseGas Function: setBaseGas
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for baseGas

Name: baseGas Function: setBaseGas
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "setBaseGas":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: getExecutorManager
Function getExecutorManager not marked
Mark Iterations TRUE, proceeding anyway
Function name: getExecutorManager
Function Visibility (test): public
clearning node...
clearing ir...?
executorManager_2(IExecutorManager) := ϕ(['executorManager_6', 'executorManager_0', 'executorManager_1', 'executorManager_3'])
has variable
typecheckig node...
executorManager_2(IExecutorManager) := ϕ(['executorManager_6', 'executorManager_0', 'executorManager_1', 'executorManager_3'])
Function name: getExecutorManager
Phi
[i]Type for executorManager

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_93 = CONVERT executorManager_2 to address
has variable
[i] TMP_93 cleared
clearing ir...?
RETURN TMP_93
typecheckig node...
TMP_93 = CONVERT executorManager_2 to address
Function name: getExecutorManager

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_93 Function: getExecutorManager
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_93

Name: TMP_93 Function: getExecutorManager
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_93
RETURN

Name: TMP_93 Function: getExecutorManager
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "getExecutorManager":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: setExecutorManager
Function name: setExecutorManager
Function Visibility (test): external
_executorManagerAddress
Finding type for _executorManagerAddress...
address
Check copy_toekn_tuple
(-1, -1, 0, 'EXECMANAGER')
----
Type: address
address
Final Type: address

Name: _executorManagerAddress Function: setExecutorManager
Num: -1
Den: -1
Norm: 0
LF: EXECMANAGER
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: EXECMANAGER
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: EXECMANAGER
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
TMP_94 = CONVERT 0 to address
has variable
[i] TMP_94 cleared
clearing ir...?
TMP_95(bool) = _executorManagerAddress_1 != TMP_94
has variable
[i] TMP_95 cleared
clearing ir...?
TMP_96(None) = SOLIDITY_CALL require(bool,string)(TMP_95,Executor Manager cannot be 0)
typecheckig node...
TMP_94 = CONVERT 0 to address
Function name: setExecutorManager
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_94 Function: setExecutorManager
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_94

Name: TMP_94 Function: setExecutorManager
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_95(bool) = _executorManagerAddress_1 != TMP_94
Function name: setExecutorManager
[i]Type for TMP_95

Name: TMP_95 Function: setExecutorManager
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_96(None) = SOLIDITY_CALL require(bool,string)(TMP_95,Executor Manager cannot be 0)
[i]Type for TMP_96

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_97 = CONVERT _executorManagerAddress_1 to IExecutorManager
has variable
[i] TMP_97 cleared
clearing ir...?
executorManager_3(IExecutorManager) := TMP_97(IExecutorManager)
has variable
typecheckig node...
TMP_97 = CONVERT _executorManagerAddress_1 to IExecutorManager
Function name: setExecutorManager

Name: _executorManagerAddress Function: setExecutorManager
Num: -1
Den: -1
Norm: 0
LF: EXECMANAGER
Fields: 
Finance Type: undef

Name: TMP_97 Function: setExecutorManager
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_97

Name: TMP_97 Function: setExecutorManager
Num: -1
Den: -1
Norm: 0
LF: EXECMANAGER
Fields: 
Finance Type: undef
done.
executorManager_3(IExecutorManager) := TMP_97(IExecutorManager)
Function name: setExecutorManager
asgn

Name: TMP_97 Function: setExecutorManager
Num: -1
Den: -1
Norm: 0
LF: EXECMANAGER
Fields: 
Finance Type: undef

Name: executorManager Function: setExecutorManager
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for executorManager

Name: executorManager Function: setExecutorManager
Num: -1
Den: -1
Norm: 0
LF: EXECMANAGER
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "setExecutorManager":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: setExecutorManager
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: getCurrentLiquidity
Function name: getCurrentLiquidity
Function Visibility (test): public
tokenAddress
Finding type for tokenAddress...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKADDRESS')
----
Type: address
address
Final Type: address

Name: tokenAddress Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: 0
LF: TOKADDRESS
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
clearning node...
clearing ir...?
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
has variable
[i] tokenAddress cleared
clearing ir...?
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
has variable
clearing ir...?
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
typecheckig node...
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Function name: getCurrentLiquidity
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: 0
LF: TOKADDRESS
Fields: 
Finance Type: undef
done.
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getCurrentLiquidity
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getCurrentLiquidity
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getCurrentLiquidity
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
has variable
[i] TMP_99 cleared
clearing ir...?
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1'])
has variable
clearing ir...?
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
clearing ir...?
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
has variable
[i] liquidityPoolBalance cleared
typecheckig node...
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
Function name: getCurrentLiquidity
High Call: getCurrentLiquidity
func name:getCurrentLiquidity
other func name:getCurrentLiquidity
TMP_99
hlc contract name: LPP func_name: getCurrentLiquidity
wfc len: 0
COPIED
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3'])
Function name: getCurrentLiquidity
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1'])
Function name: getCurrentLiquidity
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getCurrentLiquidity
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
Function name: getCurrentLiquidity
asgn

Name: TMP_99 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
has variable
[i] TMP_100 cleared
clearing ir...?
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
has variable
clearing ir...?
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_2', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
clearing ir...?
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
has variable
[i] TMP_101 cleared
clearing ir...?
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
has variable
clearing ir...?
TMP_102(uint256) = TMP_101 (c)- REF_2
has variable
[i] TMP_102 cleared
clearing ir...?
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
has variable
clearing ir...?
TMP_103(uint256) = TMP_102 (c)- REF_3
has variable
[i] TMP_103 cleared
clearing ir...?
currentLiquidity_1(uint256) := TMP_103(uint256)
has variable
[i] currentLiquidity cleared
typecheckig node...
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
Function name: getCurrentLiquidity
High Call: totalLPFees
func name:totalLPFees
other func name:totalLPFees
TMP_100
hlc contract name: LPP func_name: totalLPFees
wfc len: 0
COPIED
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getCurrentLiquidity
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getCurrentLiquidity
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_2', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getCurrentLiquidity
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
Function name: getCurrentLiquidity
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
Function name: getCurrentLiquidity
INDEX

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(uint256) = TMP_101 (c)- REF_2
Function name: getCurrentLiquidity
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_101 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
Function name: getCurrentLiquidity
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_3

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_103(uint256) = TMP_102 (c)- REF_3
Function name: getCurrentLiquidity
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
currentLiquidity_1(uint256) := TMP_103(uint256)
Function name: getCurrentLiquidity
asgn

Name: TMP_103 Function: getCurrentLiquidity
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "getCurrentLiquidity":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: getCurrentLiquidity

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: depositErc20
Function name: depositErc20
Function Visibility (test): public
toChainId
Finding type for toChainId...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: toChainId Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
tokenAddress
Finding type for tokenAddress...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKADDRESS')
----
Type: address
address
Final Type: address

Name: tokenAddress Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: TOKADDRESS
Fields: 
Finance Type: undef
[*]Type fetched successfully
receiver
Finding type for receiver...
address
Check copy_toekn_tuple
(-1, -1, 0, 'RECIEVER')
----
Type: address
address
Final Type: address

Name: receiver Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: RECIEVER
Fields: 
Finance Type: undef
[*]Type fetched successfully
amount
Finding type for amount...
uint256
Check copy_toekn_tuple
(-1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: amount Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
tag
Finding type for tag...
string
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: string
string
Final Type: string

Name: tag Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: RECIEVER
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: RECIEVER
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
toChainId_1(uint256) := ϕ(['toChainId_1', 'toChainId_1'])
has variable
[i] toChainId cleared
clearing ir...?
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
has variable
[i] tokenAddress cleared
clearing ir...?
receiver_1(address) := ϕ(['receiver_1', 'receiver_1'])
has variable
[i] receiver cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1', 'amount_1'])
has variable
[i] amount cleared
clearing ir...?
tag_1(string) := ϕ(['tag_1', 'tag_1'])
has variable
[i] tag cleared
clearing ir...?
tokenManager_2(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_0', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
has variable
clearing ir...?
liquidityProviders_6(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
incentivePool_4(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
typecheckig node...
toChainId_1(uint256) := ϕ(['toChainId_1', 'toChainId_1'])
Function name: depositErc20
Phi
[i]Type for toChainId

Name: toChainId Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Function name: depositErc20
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: TOKADDRESS
Fields: 
Finance Type: undef
done.
receiver_1(address) := ϕ(['receiver_1', 'receiver_1'])
Function name: depositErc20
Phi
[i]Type for receiver

Name: receiver Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: RECIEVER
Fields: 
Finance Type: undef
done.
amount_1(uint256) := ϕ(['amount_1', 'amount_1'])
Function name: depositErc20
Phi
[i]Type for amount

Name: amount Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
tag_1(string) := ϕ(['tag_1', 'tag_1'])
Function name: depositErc20
Phi
[i]Type for tag

Name: tag Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_2(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_0', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: depositErc20
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_6(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: depositErc20
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_4(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: depositErc20
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, LiquidityPool.tokenChecks(address)(tokenAddress_1)
clearing ir...?
tokenManager_3(ITokenManager) := ϕ(['tokenManager_33'])
has variable
typecheckig node...
MODIFIER_CALL, LiquidityPool.tokenChecks(address)(tokenAddress_1)
Internal call...
tokenChecks
tokenAddress
Function: tokenChecks
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 0, 'TOKADDRESS', [], -1]
added
xyz
Function name: tokenChecks
Function Visibility: internal
clearning node...
clearing ir...?
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
has variable
[i] tokenAddress cleared
clearing ir...?
tokenManager_32(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_0', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
has variable
typecheckig node...
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Function name: tokenChecks
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: tokenChecks
Num: -1
Den: -1
Norm: u
LF: TOKADDRESS
Fields: 
Finance Type: undef
done.
tokenManager_32(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_0', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: tokenChecks
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_319 = CONVERT 0 to address
has variable
[i] TMP_319 cleared
clearing ir...?
TMP_320(bool) = tokenAddress_1 != TMP_319
has variable
[i] TMP_320 cleared
clearing ir...?
TMP_321(None) = SOLIDITY_CALL require(bool,string)(TMP_320,Token address cannot be 0)
typecheckig node...
TMP_319 = CONVERT 0 to address
Function name: tokenChecks
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_319 Function: tokenChecks
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_319

Name: TMP_319 Function: tokenChecks
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_320(bool) = tokenAddress_1 != TMP_319
Function name: tokenChecks
[i]Type for TMP_320

Name: TMP_320 Function: tokenChecks
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_321(None) = SOLIDITY_CALL require(bool,string)(TMP_320,Token address cannot be 0)
[i]Type for TMP_321

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_322(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_32(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
has variable
[i] TMP_322 cleared
clearing ir...?
tokenManager_33(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_32', 'tokenManager_26'])
has variable
clearing ir...?
REF_88(bool) -> TMP_322.supportedToken
has variable
clearing ir...?
TMP_323(None) = SOLIDITY_CALL require(bool,string)(REF_88,Token not supported)
typecheckig node...
TMP_322(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_32(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
Function name: tokenChecks
High Call: getTokensInfo
func name:getTokensInfo
other func name:getTokensInfo
TMP_322
hlc contract name: TokenManager func_name: getTokensInfo
wfc len: 0
COPIED
[i]Type for TMP_322

Name: TMP_322 Function: tokenChecks
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_33(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_32', 'tokenManager_26'])
Function name: tokenChecks
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
REF_88(bool) -> TMP_322.supportedToken
Function name: tokenChecks
MEMBER
TMP_322
supportedToken
tokenChecks
TMP_322 Fields:
^^^
[i]Type for REF_88

Name: TMP_322.supportedToken Function: tokenChecks
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_322.supportedToken Function: tokenChecks
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: supportedToken Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_323(None) = SOLIDITY_CALL require(bool,string)(REF_88,Token not supported)
[i]Type for TMP_323

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "tokenChecks":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: tokenChecks
done.
tokenManager_3(ITokenManager) := ϕ(['tokenManager_33'])
Function name: depositErc20
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
typecheckig node...
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Internal call...
whenNotPaused
Function: whenNotPaused
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: whenNotPaused
Function Visibility: internal
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_305(bool) = INTERNAL_CALL, PausableUpgradeable.paused()()
has variable
[i] TMP_305 cleared
clearing ir...?
TMP_306 = ! TMP_305 
clearing ir...?
TMP_307(None) = SOLIDITY_CALL require(bool,string)(TMP_306,Pausable: paused)
typecheckig node...
TMP_305(bool) = INTERNAL_CALL, PausableUpgradeable.paused()()
Function name: whenNotPaused
Internal call...
paused
Function: paused
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: paused
Function Visibility: public
clearning node...
clearing ir...?
_paused_2(bool) := ϕ(['_paused_4', '_paused_1', '_paused_3', '_paused_0'])
has variable
typecheckig node...
_paused_2(bool) := ϕ(['_paused_4', '_paused_1', '_paused_3', '_paused_0'])
Function name: paused
Phi
[i]Type for _paused

Name: _paused Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _paused_2
typecheckig node...
RETURN _paused_2
RETURN

Name: _paused Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "paused":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: paused

Name: _paused Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_305

Name: TMP_305 Function: whenNotPaused
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_306 = ! TMP_305 
[i]Type for TMP_306

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_307(None) = SOLIDITY_CALL require(bool,string)(TMP_306,Pausable: paused)
[i]Type for TMP_307

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "whenNotPaused":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: whenNotPaused
done.
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: nonReentrant
Function Visibility: internal
clearning node...
clearing ir...?
_NOT_ENTERED_3(uint256) := ϕ(['_NOT_ENTERED_0', '_NOT_ENTERED_2'])
has variable
clearing ir...?
_ENTERED_1(uint256) := ϕ(['_ENTERED_0'])
has variable
clearing ir...?
_status_2(uint256) := ϕ(['_status_0', '_status_4', '_status_1'])
has variable
typecheckig node...
_NOT_ENTERED_3(uint256) := ϕ(['_NOT_ENTERED_0', '_NOT_ENTERED_2'])
Function name: nonReentrant
Phi
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_ENTERED_1(uint256) := ϕ(['_ENTERED_0'])
Function name: nonReentrant
Phi
[i]Type for _ENTERED

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_status_2(uint256) := ϕ(['_status_0', '_status_4', '_status_1'])
Function name: nonReentrant
Phi
[i]Type for _status

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_310(bool) = _status_2 != _ENTERED_1
has variable
[i] TMP_310 cleared
clearing ir...?
TMP_311(None) = SOLIDITY_CALL require(bool,string)(TMP_310,ReentrancyGuard: reentrant call)
typecheckig node...
TMP_310(bool) = _status_2 != _ENTERED_1
Function name: nonReentrant
[i]Type for TMP_310

Name: TMP_310 Function: nonReentrant
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_311(None) = SOLIDITY_CALL require(bool,string)(TMP_310,ReentrancyGuard: reentrant call)
[i]Type for TMP_311

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_status_3(uint256) := _ENTERED_1(uint256)
has variable
typecheckig node...
_status_3(uint256) := _ENTERED_1(uint256)
Function name: nonReentrant
asgn

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _status Function: nonReentrant
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_status_4(uint256) := _NOT_ENTERED_3(uint256)
has variable
typecheckig node...
_status_4(uint256) := _NOT_ENTERED_3(uint256)
Function name: nonReentrant
asgn

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _status Function: nonReentrant
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "nonReentrant":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: nonReentrant
done.
clearning node...
clearing ir...?
TMP_104(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_5(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'tokenAddress_1']  
has variable
[i] TMP_104 cleared
clearing ir...?
tokenManager_6(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_5', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
has variable
clearing ir...?
liquidityProviders_10(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_9', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
incentivePool_8(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28', 'incentivePool_7'])
has variable
clearing ir...?
REF_5(uint256) -> TMP_104.min
has variable
clearing ir...?
TMP_105(bool) = REF_5 <= amount_1
has variable
[i] TMP_105 cleared
clearing ir...?
TMP_106(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_6(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'tokenAddress_1']  
has variable
[i] TMP_106 cleared
clearing ir...?
tokenManager_7(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_6', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
has variable
clearing ir...?
liquidityProviders_11(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_10', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
incentivePool_9(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_8', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
clearing ir...?
REF_7(uint256) -> TMP_106.max
has variable
clearing ir...?
TMP_107(bool) = REF_7 >= amount_1
has variable
[i] TMP_107 cleared
clearing ir...?
TMP_108(bool) = TMP_105 && TMP_107
has variable
[i] TMP_108 cleared
clearing ir...?
TMP_109(None) = SOLIDITY_CALL require(bool,string)(TMP_108,Deposit amount not in Cap limit)
typecheckig node...
TMP_104(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_5(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'tokenAddress_1']  
Function name: depositErc20
High Call: getDepositConfig
func name:getDepositConfig
other func name:getDepositConfig
TMP_104
hlc contract name: TokenManager func_name: getDepositConfig
wfc len: 0
COPIED
[i]Type for TMP_104

Name: TMP_104 Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_6(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_5', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: depositErc20
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_10(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_9', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: depositErc20
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_8(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28', 'incentivePool_7'])
Function name: depositErc20
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_5(uint256) -> TMP_104.min
Function name: depositErc20
MEMBER
TMP_104
min
depositErc20
TMP_104 Fields:
^^^
[i]Type for REF_5

Name: TMP_104.min Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_104.min Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: min Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_105(bool) = REF_5 <= amount_1
Function name: depositErc20
testing lt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_105 Function: depositErc20
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_105

Name: TMP_105 Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_105(bool) = REF_5 <= amount_1
XXXXX
TMP_106(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_6(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'tokenAddress_1']  
Function name: depositErc20
High Call: getDepositConfig
func name:getDepositConfig
other func name:getDepositConfig
TMP_106
hlc contract name: TokenManager func_name: getDepositConfig
wfc len: 0
COPIED
[i]Type for TMP_106

Name: TMP_106 Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_7(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_6', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: depositErc20
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_11(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_10', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: depositErc20
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_9(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_8', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: depositErc20
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_7(uint256) -> TMP_106.max
Function name: depositErc20
MEMBER
TMP_106
max
depositErc20
TMP_106 Fields:
^^^
[i]Type for REF_7

Name: TMP_106.max Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_106.max Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: max Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_107(bool) = REF_7 >= amount_1
Function name: depositErc20
testing gt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_107 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_107

Name: TMP_107 Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_107(bool) = REF_7 >= amount_1
XXXXX
TMP_108(bool) = TMP_105 && TMP_107
Function name: depositErc20
[i]Type for TMP_108

Name: TMP_108 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_109(None) = SOLIDITY_CALL require(bool,string)(TMP_108,Deposit amount not in Cap limit)
[i]Type for TMP_109

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_110 = CONVERT 0 to address
has variable
[i] TMP_110 cleared
clearing ir...?
TMP_111(bool) = receiver_1 != TMP_110
has variable
[i] TMP_111 cleared
clearing ir...?
TMP_112(None) = SOLIDITY_CALL require(bool,string)(TMP_111,Receiver address cannot be 0)
typecheckig node...
TMP_110 = CONVERT 0 to address
Function name: depositErc20
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_110 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_110

Name: TMP_110 Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_111(bool) = receiver_1 != TMP_110
Function name: depositErc20
[i]Type for TMP_111

Name: TMP_111 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_112(None) = SOLIDITY_CALL require(bool,string)(TMP_111,Receiver address cannot be 0)
[i]Type for TMP_112

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_113(bool) = amount_1 != 0
has variable
[i] TMP_113 cleared
clearing ir...?
TMP_114(None) = SOLIDITY_CALL require(bool,string)(TMP_113,Amount cannot be 0)
typecheckig node...
TMP_113(bool) = amount_1 != 0
Function name: depositErc20
[i]Type for TMP_113

Name: TMP_113 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_114(None) = SOLIDITY_CALL require(bool,string)(TMP_113,Amount cannot be 0)
[i]Type for TMP_114

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_115(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
has variable
[i] TMP_115 cleared
clearing ir...?
sender_1(address) := TMP_115(address)
has variable
[i] sender cleared
typecheckig node...
TMP_115(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: depositErc20
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_13 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_115 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_115

Name: TMP_115 Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
sender_1(address) := TMP_115(address)
Function name: depositErc20
asgn

Name: TMP_115 Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: sender Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for sender

Name: sender Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_116(uint256) = INTERNAL_CALL, LiquidityPool.getRewardAmount(uint256,address)(amount_1,tokenAddress_1)
has variable
[i] TMP_116 cleared
clearing ir...?
liquidityProviders_13(ILiquidityProviders) := ϕ(['liquidityProviders_17'])
has variable
clearing ir...?
incentivePool_11(mapping(address => uint256)) := ϕ(['incentivePool_15'])
has variable
clearing ir...?
rewardAmount_1(uint256) := TMP_116(uint256)
has variable
[i] rewardAmount cleared
typecheckig node...
TMP_116(uint256) = INTERNAL_CALL, LiquidityPool.getRewardAmount(uint256,address)(amount_1,tokenAddress_1)
Function name: depositErc20
Internal call...
getRewardAmount
amount
tokenAddress
Function: getRewardAmount
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 0, None, [], -1]
[[-1], [-1], 0, 'TOKADDRESS', [], -1]
added
xyz
Function name: getRewardAmount
Function Visibility: public
clearning node...
clearing ir...?
amount_1(uint256) := ϕ(['msg.value', 'amount_1'])
has variable
[i] amount cleared
clearing ir...?
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'NATIVE_5'])
has variable
[i] tokenAddress cleared
clearing ir...?
liquidityProviders_15(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
incentivePool_13(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
typecheckig node...
amount_1(uint256) := ϕ(['msg.value', 'amount_1'])
Function name: getRewardAmount
Phi
[i]Type for amount

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'NATIVE_5'])
Function name: getRewardAmount
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: TOKADDRESS
Fields: 
Finance Type: undef
done.
liquidityProviders_15(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getRewardAmount
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_13(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getRewardAmount
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_128(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
has variable
[i] TMP_128 cleared
clearing ir...?
liquidityProviders_16(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
has variable
clearing ir...?
incentivePool_14(mapping(address => uint256)) := ϕ(['incentivePool_3'])
has variable
clearing ir...?
currentLiquidity_1(uint256) := TMP_128(uint256)
has variable
[i] currentLiquidity cleared
typecheckig node...
TMP_128(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
Function name: getRewardAmount
Internal call...
getCurrentLiquidity
tokenAddress
Function: getCurrentLiquidity
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKADDRESS
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'TOKADDRESS', [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'TOKADDRESS', [], -1]
added
xyz
Function name: getCurrentLiquidity
Function Visibility: public
clearning node...
clearing ir...?
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
has variable
[i] tokenAddress cleared
clearing ir...?
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
has variable
clearing ir...?
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
typecheckig node...
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Function name: getCurrentLiquidity
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: 0
LF: TOKADDRESS
Fields: 
Finance Type: undef
done.
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getCurrentLiquidity
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getCurrentLiquidity
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getCurrentLiquidity
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
has variable
[i] TMP_99 cleared
clearing ir...?
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1'])
has variable
clearing ir...?
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
clearing ir...?
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
has variable
[i] liquidityPoolBalance cleared
typecheckig node...
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
Function name: getCurrentLiquidity
High Call: getCurrentLiquidity
func name:getCurrentLiquidity
other func name:getCurrentLiquidity
TMP_99
hlc contract name: LPP func_name: getCurrentLiquidity
wfc len: 0
COPIED
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3'])
Function name: getCurrentLiquidity
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1'])
Function name: getCurrentLiquidity
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getCurrentLiquidity
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
Function name: getCurrentLiquidity
asgn

Name: TMP_99 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
has variable
[i] TMP_100 cleared
clearing ir...?
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
has variable
clearing ir...?
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_2', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
clearing ir...?
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
has variable
[i] TMP_101 cleared
clearing ir...?
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
has variable
clearing ir...?
TMP_102(uint256) = TMP_101 (c)- REF_2
has variable
[i] TMP_102 cleared
clearing ir...?
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
has variable
clearing ir...?
TMP_103(uint256) = TMP_102 (c)- REF_3
has variable
[i] TMP_103 cleared
clearing ir...?
currentLiquidity_1(uint256) := TMP_103(uint256)
has variable
[i] currentLiquidity cleared
typecheckig node...
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
Function name: getCurrentLiquidity
High Call: totalLPFees
func name:totalLPFees
other func name:totalLPFees
TMP_100
hlc contract name: LPP func_name: totalLPFees
wfc len: 0
COPIED
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getCurrentLiquidity
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getCurrentLiquidity
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_2', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getCurrentLiquidity
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
Function name: getCurrentLiquidity
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
Function name: getCurrentLiquidity
INDEX

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(uint256) = TMP_101 (c)- REF_2
Function name: getCurrentLiquidity
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_101 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
Function name: getCurrentLiquidity
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_3

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_103(uint256) = TMP_102 (c)- REF_3
Function name: getCurrentLiquidity
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
currentLiquidity_1(uint256) := TMP_103(uint256)
Function name: getCurrentLiquidity
asgn

Name: TMP_103 Function: getCurrentLiquidity
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "getCurrentLiquidity":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: getCurrentLiquidity

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_128

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_16(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Function name: getRewardAmount
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_14(mapping(address => uint256)) := ϕ(['incentivePool_3'])
Function name: getRewardAmount
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
currentLiquidity_1(uint256) := TMP_128(uint256)
Function name: getRewardAmount
asgn

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidity

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
currentLiquidity_1(uint256) := TMP_128(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_129(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_16(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
has variable
[i] TMP_129 cleared
clearing ir...?
liquidityProviders_17(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_16', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
incentivePool_15(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_22', 'incentivePool_14', 'incentivePool_11', 'incentivePool_28'])
has variable
clearing ir...?
providedLiquidity_1(uint256) := TMP_129(uint256)
has variable
[i] providedLiquidity cleared
typecheckig node...
TMP_129(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_16(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
Function name: getRewardAmount
High Call: getSuppliedLiquidityByToken
func name:getSuppliedLiquidityByToken
other func name:getSuppliedLiquidityByToken
TMP_129
hlc contract name: LPP func_name: getSuppliedLiquidityByToken
wfc len: 0
COPIED
[i]Type for TMP_129

Name: TMP_129 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_17(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_16', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getRewardAmount
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_15(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_22', 'incentivePool_14', 'incentivePool_11', 'incentivePool_28'])
Function name: getRewardAmount
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
providedLiquidity_1(uint256) := TMP_129(uint256)
Function name: getRewardAmount
asgn

Name: TMP_129 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for providedLiquidity

Name: providedLiquidity Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
has variable
[i] TMP_130 cleared
clearing ir...?
CONDITION TMP_130
typecheckig node...
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
Function name: getRewardAmount
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: providedLiquidity Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_130 Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_130

Name: TMP_130 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
XXXXX
CONDITION TMP_130
Condition...
Conidtion: 
TMP_130
TMP_130
clearning node...
clearing ir...?
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
has variable
[i] TMP_131 cleared
clearing ir...?
liquidityDifference_1(uint256) := TMP_131(uint256)
has variable
[i] liquidityDifference cleared
typecheckig node...
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
Function name: getRewardAmount
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: providedLiquidity Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_131 Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_131

Name: TMP_131 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
XXXXX
liquidityDifference_1(uint256) := TMP_131(uint256)
Function name: getRewardAmount
asgn

Name: TMP_131 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityDifference Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityDifference

Name: liquidityDifference Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_132(bool) = amount_1 >= liquidityDifference_1
has variable
[i] TMP_132 cleared
clearing ir...?
CONDITION TMP_132
typecheckig node...
TMP_132(bool) = amount_1 >= liquidityDifference_1
Function name: getRewardAmount
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_132

Name: TMP_132 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_132
Condition...
Conidtion: 
TMP_132
TMP_132
clearning node...
clearing ir...?
REF_14(uint256) -> incentivePool_15[tokenAddress_1]
has variable
clearing ir...?
TMP_133(uint256) = amount_1 (c)* REF_14
has variable
[i] TMP_133 cleared
clearing ir...?
TMP_134(uint256) = TMP_133 (c)* 10000000000
has variable
[i] TMP_134 cleared
clearing ir...?
TMP_135(uint256) = TMP_134 (c)/ liquidityDifference_1
has variable
[i] TMP_135 cleared
clearing ir...?
rewardAmount_2(uint256) := TMP_135(uint256)
has variable
[i] rewardAmount cleared
typecheckig node...
REF_14(uint256) -> incentivePool_15[tokenAddress_1]
Function name: getRewardAmount
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_14

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_133(uint256) = amount_1 (c)* REF_14
Function name: getRewardAmount
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_133 Function: getRewardAmount
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_133

Name: TMP_133 Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_134(uint256) = TMP_133 (c)* 10000000000
Function name: getRewardAmount
testing mul...
val: 10000000000
10
val: 10000000000
10
lnorm: 0 rnorm: 10
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_133 Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_134 Function: getRewardAmount
Num: 
Den: 
Norm: 10
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_134

Name: TMP_134 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef
done.
TMP_135(uint256) = TMP_134 (c)/ liquidityDifference_1
Function name: getRewardAmount
lnorm: 10 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_135 Function: getRewardAmount
Num: 
Den: 
Norm: 10
LF: None
Fields: 
Finance Type: undef

Name: TMP_134 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef

Name: TMP_135 Function: getRewardAmount
Num: 
Den: 
Norm: 10
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_135

Name: TMP_135 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef
done.
rewardAmount_2(uint256) := TMP_135(uint256)
Function name: getRewardAmount
asgn

Name: TMP_135 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_13(uint256) -> incentivePool_15[tokenAddress_1]
has variable
clearing ir...?
rewardAmount_1(uint256) := REF_13(uint256)
has variable
[i] rewardAmount cleared
typecheckig node...
REF_13(uint256) -> incentivePool_15[tokenAddress_1]
Function name: getRewardAmount
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_13

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
rewardAmount_1(uint256) := REF_13(uint256)
Function name: getRewardAmount
asgn

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_136(uint256) = rewardAmount_2 (c)/ 10000000000
has variable
[i] TMP_136 cleared
clearing ir...?
rewardAmount_3(uint256) := TMP_136(uint256)
has variable
[i] rewardAmount cleared
typecheckig node...
TMP_136(uint256) = rewardAmount_2 (c)/ 10000000000
Function name: getRewardAmount
val: 10000000000
10
val: 10000000000
10
lnorm: 0 rnorm: 10
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_136 Function: getRewardAmount
Num: 
Den: 
Norm: -10
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_136 Function: getRewardAmount
Num: 
Den: 
Norm: -10
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_136

Name: TMP_136 Function: getRewardAmount
Num: 1
Den: -1
Norm: -10
LF: None
Fields: 
Finance Type: undef
done.
rewardAmount_3(uint256) := TMP_136(uint256)
Function name: getRewardAmount
asgn

Name: TMP_136 Function: getRewardAmount
Num: 1
Den: -1
Norm: -10
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: -10
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "getRewardAmount":
 New undefined nodes- 3
 Old undefined nodes- 0
typecheckig node...
amount_1(uint256) := ϕ(['msg.value', 'amount_1'])
Function name: getRewardAmount
Phi
[i]Type for amount

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'NATIVE_5'])
Function name: getRewardAmount
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: TOKADDRESS
Fields: 
Finance Type: undef
done.
liquidityProviders_15(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getRewardAmount
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_13(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getRewardAmount
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_128(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
Function name: getRewardAmount
Internal call...
getCurrentLiquidity
tokenAddress
Function: getCurrentLiquidity
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: TOKADDRESS
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'TOKADDRESS', [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'TOKADDRESS', [], -1]
added
xyz
Function name: getCurrentLiquidity
Function Visibility: public
clearning node...
clearing ir...?
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
has variable
[i] tokenAddress cleared
clearing ir...?
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
has variable
clearing ir...?
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
typecheckig node...
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Function name: getCurrentLiquidity
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: 0
LF: TOKADDRESS
Fields: 
Finance Type: undef
done.
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getCurrentLiquidity
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getCurrentLiquidity
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getCurrentLiquidity
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
has variable
[i] TMP_99 cleared
clearing ir...?
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1'])
has variable
clearing ir...?
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
clearing ir...?
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
has variable
[i] liquidityPoolBalance cleared
typecheckig node...
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
Function name: getCurrentLiquidity
High Call: getCurrentLiquidity
func name:getCurrentLiquidity
other func name:getCurrentLiquidity
TMP_99
hlc contract name: LPP func_name: getCurrentLiquidity
wfc len: 0
COPIED
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3'])
Function name: getCurrentLiquidity
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1'])
Function name: getCurrentLiquidity
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getCurrentLiquidity
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
Function name: getCurrentLiquidity
asgn

Name: TMP_99 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
has variable
[i] TMP_100 cleared
clearing ir...?
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
has variable
clearing ir...?
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_2', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
clearing ir...?
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
has variable
[i] TMP_101 cleared
clearing ir...?
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
has variable
clearing ir...?
TMP_102(uint256) = TMP_101 (c)- REF_2
has variable
[i] TMP_102 cleared
clearing ir...?
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
has variable
clearing ir...?
TMP_103(uint256) = TMP_102 (c)- REF_3
has variable
[i] TMP_103 cleared
clearing ir...?
currentLiquidity_1(uint256) := TMP_103(uint256)
has variable
[i] currentLiquidity cleared
typecheckig node...
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
Function name: getCurrentLiquidity
High Call: totalLPFees
func name:totalLPFees
other func name:totalLPFees
TMP_100
hlc contract name: LPP func_name: totalLPFees
wfc len: 0
COPIED
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getCurrentLiquidity
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getCurrentLiquidity
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_2', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getCurrentLiquidity
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
Function name: getCurrentLiquidity
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
Function name: getCurrentLiquidity
INDEX

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(uint256) = TMP_101 (c)- REF_2
Function name: getCurrentLiquidity
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_101 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
Function name: getCurrentLiquidity
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_3

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_103(uint256) = TMP_102 (c)- REF_3
Function name: getCurrentLiquidity
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
currentLiquidity_1(uint256) := TMP_103(uint256)
Function name: getCurrentLiquidity
asgn

Name: TMP_103 Function: getCurrentLiquidity
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "getCurrentLiquidity":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: getCurrentLiquidity

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_128

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_16(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Function name: getRewardAmount
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_14(mapping(address => uint256)) := ϕ(['incentivePool_3'])
Function name: getRewardAmount
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
currentLiquidity_1(uint256) := TMP_128(uint256)
Function name: getRewardAmount
asgn

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidity

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
currentLiquidity_1(uint256) := TMP_128(uint256)
XXXXX
typecheckig node...
TMP_129(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_16(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
Function name: getRewardAmount
High Call: getSuppliedLiquidityByToken
func name:getSuppliedLiquidityByToken
other func name:getSuppliedLiquidityByToken
TMP_129
hlc contract name: LPP func_name: getSuppliedLiquidityByToken
wfc len: 0
COPIED
[i]Type for TMP_129

Name: TMP_129 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_17(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_16', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getRewardAmount
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_15(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_22', 'incentivePool_14', 'incentivePool_11', 'incentivePool_28'])
Function name: getRewardAmount
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
providedLiquidity_1(uint256) := TMP_129(uint256)
Function name: getRewardAmount
asgn

Name: TMP_129 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for providedLiquidity

Name: providedLiquidity Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
Function name: getRewardAmount
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: providedLiquidity Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_130 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_130

Name: TMP_130 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
XXXXX
CONDITION TMP_130
Condition...
Conidtion: 
TMP_130
TMP_130
typecheckig node...
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
Function name: getRewardAmount
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: providedLiquidity Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_131 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_131

Name: TMP_131 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
XXXXX
liquidityDifference_1(uint256) := TMP_131(uint256)
Function name: getRewardAmount
asgn

Name: TMP_131 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityDifference Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityDifference

Name: liquidityDifference Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_132(bool) = amount_1 >= liquidityDifference_1
Function name: getRewardAmount
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_132

Name: TMP_132 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_132
Condition...
Conidtion: 
TMP_132
TMP_132
typecheckig node...
REF_14(uint256) -> incentivePool_15[tokenAddress_1]
Function name: getRewardAmount
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_14

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_133(uint256) = amount_1 (c)* REF_14
Function name: getRewardAmount
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_133 Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_133

Name: TMP_133 Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_134(uint256) = TMP_133 (c)* 10000000000
Function name: getRewardAmount
testing mul...
val: 10000000000
10
val: 10000000000
10
lnorm: 0 rnorm: 10
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_133 Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_134 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_134

Name: TMP_134 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef
done.
TMP_135(uint256) = TMP_134 (c)/ liquidityDifference_1
Function name: getRewardAmount
lnorm: 10 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_135 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef

Name: TMP_134 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef

Name: TMP_135 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_135

Name: TMP_135 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef
done.
rewardAmount_2(uint256) := TMP_135(uint256)
Function name: getRewardAmount
asgn

Name: TMP_135 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_13(uint256) -> incentivePool_15[tokenAddress_1]
Function name: getRewardAmount
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_13

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
rewardAmount_1(uint256) := REF_13(uint256)
Function name: getRewardAmount
asgn

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_136(uint256) = rewardAmount_2 (c)/ 10000000000
Function name: getRewardAmount
val: 10000000000
10
val: 10000000000
10
lnorm: 0 rnorm: 10
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_136 Function: getRewardAmount
Num: 1
Den: -1
Norm: -10
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_136 Function: getRewardAmount
Num: 1
Den: -1
Norm: -10
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_136

Name: TMP_136 Function: getRewardAmount
Num: 1
Den: -1
Norm: -10
LF: None
Fields: 
Finance Type: undef
done.
rewardAmount_3(uint256) := TMP_136(uint256)
Function name: getRewardAmount
asgn

Name: TMP_136 Function: getRewardAmount
Num: 1
Den: -1
Norm: -10
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: -10
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: -10
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
WORKLIST iteration 1 for function call "getRewardAmount":
 New undefined nodes- 3
 Old undefined nodes- 3
Saving return values for: getRewardAmount

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_116

Name: TMP_116 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_116(uint256) = INTERNAL_CALL, LiquidityPool.getRewardAmount(uint256,address)(amount_1,tokenAddress_1)
XXXXX
liquidityProviders_13(ILiquidityProviders) := ϕ(['liquidityProviders_17'])
Function name: depositErc20
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_11(mapping(address => uint256)) := ϕ(['incentivePool_15'])
Function name: depositErc20
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
rewardAmount_1(uint256) := TMP_116(uint256)
Function name: depositErc20
asgn

Name: TMP_116 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardAmount

Name: rewardAmount Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
rewardAmount_1(uint256) := TMP_116(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_117(bool) = rewardAmount_1 != 0
has variable
[i] TMP_117 cleared
clearing ir...?
CONDITION TMP_117
typecheckig node...
TMP_117(bool) = rewardAmount_1 != 0
Function name: depositErc20
[i]Type for TMP_117

Name: TMP_117 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_117
Condition...
Conidtion: 
TMP_117
TMP_117
clearning node...
typecheckig node...
clearning node...
clearing ir...?
HIGH_LEVEL_CALL, dest:liquidityProviders_13(ILiquidityProviders), function:increaseCurrentLiquidity, arguments:['tokenAddress_1', 'amount_1']  
clearing ir...?
liquidityProviders_14(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_13', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
typecheckig node...
HIGH_LEVEL_CALL, dest:liquidityProviders_13(ILiquidityProviders), function:increaseCurrentLiquidity, arguments:['tokenAddress_1', 'amount_1']  
High Call: increaseCurrentLiquidity
func name:increaseCurrentLiquidity
other func name:increaseCurrentLiquidity
done.
liquidityProviders_14(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_13', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: depositErc20
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_8(uint256) -> incentivePool_11[tokenAddress_1]
has variable
clearing ir...?
REF_9(uint256) -> incentivePool_11[tokenAddress_1]
has variable
clearing ir...?
TMP_118(uint256) = REF_9 (c)- rewardAmount_1
has variable
[i] TMP_118 cleared
clearing ir...?
incentivePool_12(mapping(address => uint256)) := ϕ(['incentivePool_11'])
has variable
clearing ir...?
REF_8 (->incentivePool_12) := TMP_118(uint256)
has variable
typecheckig node...
REF_8(uint256) -> incentivePool_11[tokenAddress_1]
Function name: depositErc20
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_8

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_9(uint256) -> incentivePool_11[tokenAddress_1]
Function name: depositErc20
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_9

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_118(uint256) = REF_9 (c)- rewardAmount_1
Function name: depositErc20
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_118 Function: depositErc20
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_118

Name: TMP_118 Function: depositErc20
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_118(uint256) = REF_9 (c)- rewardAmount_1
XXXXX
incentivePool_12(mapping(address => uint256)) := ϕ(['incentivePool_11'])
Function name: depositErc20
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_8 (->incentivePool_12) := TMP_118(uint256)
Function name: depositErc20
asgn

Name: TMP_118 Function: depositErc20
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_8 Function: depositErc20
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_8

Name: REF_8 Function: depositErc20
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_120 = CONVERT tokenAddress_1 to IERC20Upgradeable
has variable
[i] TMP_120 cleared
clearing ir...?
TMP_121 = CONVERT this to address
has variable
[i] TMP_121 cleared
clearing ir...?
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256), arguments:['TMP_120', 'sender_1', 'TMP_121', 'amount_1'] 
typecheckig node...
TMP_120 = CONVERT tokenAddress_1 to IERC20Upgradeable
Function name: depositErc20

Name: tokenAddress Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: TOKADDRESS
Fields: 
Finance Type: undef

Name: TMP_120 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_120

Name: TMP_120 Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: TOKADDRESS
Fields: 
Finance Type: undef
done.
TMP_121 = CONVERT this to address
Function name: depositErc20
[i]Type for TMP_121

Name: TMP_121 Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: LiquidityPool
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256), arguments:['TMP_120', 'sender_1', 'TMP_121', 'amount_1'] 
Library Call: safeTransferFrom
done.
clearning node...
clearing ir...?
TMP_123(uint256) = amount_1 (c)+ rewardAmount_1
has variable
[i] TMP_123 cleared
clearing ir...?
Emit Deposit(sender_1,tokenAddress_1,receiver_1,toChainId_1,TMP_123,rewardAmount_1,tag_1)
typecheckig node...
TMP_123(uint256) = amount_1 (c)+ rewardAmount_1
Function name: depositErc20

Name: TMP_123 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_123 Function: depositErc20
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_123

Name: TMP_123 Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_123(uint256) = amount_1 (c)+ rewardAmount_1
XXXXX
Emit Deposit(sender_1,tokenAddress_1,receiver_1,toChainId_1,TMP_123,rewardAmount_1,tag_1)
WORKLIST iteration 0 for function call "depositErc20":
 New undefined nodes- 4
 Old undefined nodes- 0
typecheckig node...
toChainId_1(uint256) := ϕ(['toChainId_1', 'toChainId_1'])
Function name: depositErc20
Phi
[i]Type for toChainId

Name: toChainId Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Function name: depositErc20
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: TOKADDRESS
Fields: 
Finance Type: undef
done.
receiver_1(address) := ϕ(['receiver_1', 'receiver_1'])
Function name: depositErc20
Phi
[i]Type for receiver

Name: receiver Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: RECIEVER
Fields: 
Finance Type: undef
done.
amount_1(uint256) := ϕ(['amount_1', 'amount_1'])
Function name: depositErc20
Phi
[i]Type for amount

Name: amount Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
tag_1(string) := ϕ(['tag_1', 'tag_1'])
Function name: depositErc20
Phi
[i]Type for tag

Name: tag Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_2(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_0', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: depositErc20
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_6(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: depositErc20
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_4(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: depositErc20
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, LiquidityPool.tokenChecks(address)(tokenAddress_1)
Internal call...
tokenChecks
tokenAddress
Function: tokenChecks
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'TOKADDRESS', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'TOKADDRESS', [], -1]
0
done.
tokenManager_3(ITokenManager) := ϕ(['tokenManager_33'])
Function name: depositErc20
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Internal call...
whenNotPaused
Function: whenNotPaused
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
typecheckig node...
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
typecheckig node...
TMP_104(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_5(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'tokenAddress_1']  
Function name: depositErc20
High Call: getDepositConfig
func name:getDepositConfig
other func name:getDepositConfig
TMP_104
hlc contract name: TokenManager func_name: getDepositConfig
wfc len: 0
COPIED
[i]Type for TMP_104

Name: TMP_104 Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: min
Finance Type: undef
done.
tokenManager_6(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_5', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: depositErc20
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_10(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_9', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: depositErc20
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_8(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28', 'incentivePool_7'])
Function name: depositErc20
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_5(uint256) -> TMP_104.min
Function name: depositErc20
MEMBER
TMP_104
min
depositErc20
TMP_104 Fields:
min
^^^

Name: min Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_5

Name: TMP_104.min Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_104.min Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: min Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_105(bool) = REF_5 <= amount_1
Function name: depositErc20
testing lt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_105

Name: TMP_105 Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_106(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_6(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'tokenAddress_1']  
Function name: depositErc20
High Call: getDepositConfig
func name:getDepositConfig
other func name:getDepositConfig
TMP_106
hlc contract name: TokenManager func_name: getDepositConfig
wfc len: 0
COPIED
[i]Type for TMP_106

Name: TMP_106 Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: max
Finance Type: undef
done.
tokenManager_7(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_6', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: depositErc20
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_11(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_10', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: depositErc20
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_9(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_8', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: depositErc20
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_7(uint256) -> TMP_106.max
Function name: depositErc20
MEMBER
TMP_106
max
depositErc20
TMP_106 Fields:
max
^^^

Name: max Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_7

Name: TMP_106.max Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_106.max Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: max Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_107(bool) = REF_7 >= amount_1
Function name: depositErc20
testing gt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_107

Name: TMP_107 Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_108(bool) = TMP_105 && TMP_107
Function name: depositErc20
[i]Type for TMP_108

Name: TMP_108 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_109(None) = SOLIDITY_CALL require(bool,string)(TMP_108,Deposit amount not in Cap limit)
[i]Type for TMP_109

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_110 = CONVERT 0 to address
Function name: depositErc20
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_110 Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_110

Name: TMP_110 Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_111(bool) = receiver_1 != TMP_110
Function name: depositErc20
[i]Type for TMP_111

Name: TMP_111 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_112(None) = SOLIDITY_CALL require(bool,string)(TMP_111,Receiver address cannot be 0)
[i]Type for TMP_112

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_113(bool) = amount_1 != 0
Function name: depositErc20
[i]Type for TMP_113

Name: TMP_113 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_114(None) = SOLIDITY_CALL require(bool,string)(TMP_113,Amount cannot be 0)
[i]Type for TMP_114

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_115(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: depositErc20
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_13 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_115 Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_115

Name: TMP_115 Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
sender_1(address) := TMP_115(address)
Function name: depositErc20
asgn

Name: TMP_115 Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: sender Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for sender

Name: sender Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_116(uint256) = INTERNAL_CALL, LiquidityPool.getRewardAmount(uint256,address)(amount_1,tokenAddress_1)
Function name: depositErc20
Internal call...
getRewardAmount
amount
tokenAddress
Function: getRewardAmount
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, None, [], -1]
cur_param: [[-1], [-1], 0, 'TOKADDRESS', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, None, [], -1]
[[-1], [-1], 0, 'TOKADDRESS', [], -1]
0

Name: PIC_33 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_116 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_116

Name: TMP_116 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_13(ILiquidityProviders) := ϕ(['liquidityProviders_17'])
Function name: depositErc20
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_11(mapping(address => uint256)) := ϕ(['incentivePool_15'])
Function name: depositErc20
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
rewardAmount_1(uint256) := TMP_116(uint256)
Function name: depositErc20
asgn

Name: TMP_116 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardAmount

Name: rewardAmount Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
rewardAmount_1(uint256) := TMP_116(uint256)
XXXXX
typecheckig node...
TMP_117(bool) = rewardAmount_1 != 0
Function name: depositErc20
[i]Type for TMP_117

Name: TMP_117 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_117
Condition...
Conidtion: 
TMP_117
TMP_117
typecheckig node...
typecheckig node...
HIGH_LEVEL_CALL, dest:liquidityProviders_13(ILiquidityProviders), function:increaseCurrentLiquidity, arguments:['tokenAddress_1', 'amount_1']  
High Call: increaseCurrentLiquidity
func name:increaseCurrentLiquidity
other func name:increaseCurrentLiquidity
done.
liquidityProviders_14(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_13', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: depositErc20
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_8(uint256) -> incentivePool_11[tokenAddress_1]
Function name: depositErc20
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_8

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_9(uint256) -> incentivePool_11[tokenAddress_1]
Function name: depositErc20
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_9

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_118(uint256) = REF_9 (c)- rewardAmount_1
Function name: depositErc20
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_118 Function: depositErc20
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_118

Name: TMP_118 Function: depositErc20
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_118(uint256) = REF_9 (c)- rewardAmount_1
XXXXX
incentivePool_12(mapping(address => uint256)) := ϕ(['incentivePool_11'])
Function name: depositErc20
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_8 (->incentivePool_12) := TMP_118(uint256)
Function name: depositErc20
asgn

Name: TMP_118 Function: depositErc20
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_8 Function: depositErc20
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_8

Name: REF_8 Function: depositErc20
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_120 = CONVERT tokenAddress_1 to IERC20Upgradeable
Function name: depositErc20

Name: tokenAddress Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: TOKADDRESS
Fields: 
Finance Type: undef

Name: TMP_120 Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: TOKADDRESS
Fields: 
Finance Type: undef
[i]Type for TMP_120

Name: TMP_120 Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: TOKADDRESS
Fields: 
Finance Type: undef
done.
TMP_121 = CONVERT this to address
Function name: depositErc20
[i]Type for TMP_121

Name: TMP_121 Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: LiquidityPool
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256), arguments:['TMP_120', 'sender_1', 'TMP_121', 'amount_1'] 
Library Call: safeTransferFrom
done.
typecheckig node...
TMP_123(uint256) = amount_1 (c)+ rewardAmount_1
Function name: depositErc20

Name: TMP_123 Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_123 Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_123

Name: TMP_123 Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_123(uint256) = amount_1 (c)+ rewardAmount_1
XXXXX
Emit Deposit(sender_1,tokenAddress_1,receiver_1,toChainId_1,TMP_123,rewardAmount_1,tag_1)
WORKLIST iteration 1 for function call "depositErc20":
 New undefined nodes- 3
 Old undefined nodes- 4
typecheckig node...
toChainId_1(uint256) := ϕ(['toChainId_1', 'toChainId_1'])
Function name: depositErc20
Phi
[i]Type for toChainId

Name: toChainId Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Function name: depositErc20
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: TOKADDRESS
Fields: 
Finance Type: undef
done.
receiver_1(address) := ϕ(['receiver_1', 'receiver_1'])
Function name: depositErc20
Phi
[i]Type for receiver

Name: receiver Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: RECIEVER
Fields: 
Finance Type: undef
done.
amount_1(uint256) := ϕ(['amount_1', 'amount_1'])
Function name: depositErc20
Phi
[i]Type for amount

Name: amount Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
tag_1(string) := ϕ(['tag_1', 'tag_1'])
Function name: depositErc20
Phi
[i]Type for tag

Name: tag Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_2(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_0', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: depositErc20
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_6(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: depositErc20
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_4(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: depositErc20
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, LiquidityPool.tokenChecks(address)(tokenAddress_1)
Internal call...
tokenChecks
tokenAddress
Function: tokenChecks
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'TOKADDRESS', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'TOKADDRESS', [], -1]
0
done.
tokenManager_3(ITokenManager) := ϕ(['tokenManager_33'])
Function name: depositErc20
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Internal call...
whenNotPaused
Function: whenNotPaused
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
typecheckig node...
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
typecheckig node...
TMP_104(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_5(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'tokenAddress_1']  
Function name: depositErc20
High Call: getDepositConfig
func name:getDepositConfig
other func name:getDepositConfig
TMP_104
hlc contract name: TokenManager func_name: getDepositConfig
wfc len: 0
COPIED
[i]Type for TMP_104

Name: TMP_104 Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: min
Finance Type: undef
done.
tokenManager_6(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_5', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: depositErc20
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_10(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_9', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: depositErc20
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_8(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28', 'incentivePool_7'])
Function name: depositErc20
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_5(uint256) -> TMP_104.min
Function name: depositErc20
MEMBER
TMP_104
min
depositErc20
TMP_104 Fields:
min
^^^

Name: min Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_5

Name: TMP_104.min Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_104.min Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: min Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_105(bool) = REF_5 <= amount_1
Function name: depositErc20
testing lt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_105

Name: TMP_105 Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_106(ITokenManager.TokenConfig) = HIGH_LEVEL_CALL, dest:tokenManager_6(ITokenManager), function:getDepositConfig, arguments:['toChainId_1', 'tokenAddress_1']  
Function name: depositErc20
High Call: getDepositConfig
func name:getDepositConfig
other func name:getDepositConfig
TMP_106
hlc contract name: TokenManager func_name: getDepositConfig
wfc len: 0
COPIED
[i]Type for TMP_106

Name: TMP_106 Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: max
Finance Type: undef
done.
tokenManager_7(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_6', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: depositErc20
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_11(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_10', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: depositErc20
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_9(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_8', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: depositErc20
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_7(uint256) -> TMP_106.max
Function name: depositErc20
MEMBER
TMP_106
max
depositErc20
TMP_106 Fields:
max
^^^

Name: max Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_7

Name: TMP_106.max Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_106.max Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: max Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_107(bool) = REF_7 >= amount_1
Function name: depositErc20
testing gt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_107

Name: TMP_107 Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_108(bool) = TMP_105 && TMP_107
Function name: depositErc20
[i]Type for TMP_108

Name: TMP_108 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_109(None) = SOLIDITY_CALL require(bool,string)(TMP_108,Deposit amount not in Cap limit)
[i]Type for TMP_109

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_110 = CONVERT 0 to address
Function name: depositErc20
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_110 Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_110

Name: TMP_110 Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_111(bool) = receiver_1 != TMP_110
Function name: depositErc20
[i]Type for TMP_111

Name: TMP_111 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_112(None) = SOLIDITY_CALL require(bool,string)(TMP_111,Receiver address cannot be 0)
[i]Type for TMP_112

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_113(bool) = amount_1 != 0
Function name: depositErc20
[i]Type for TMP_113

Name: TMP_113 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_114(None) = SOLIDITY_CALL require(bool,string)(TMP_113,Amount cannot be 0)
[i]Type for TMP_114

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_115(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: depositErc20
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_13 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_115 Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_115

Name: TMP_115 Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
sender_1(address) := TMP_115(address)
Function name: depositErc20
asgn

Name: TMP_115 Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: sender Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for sender

Name: sender Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_116(uint256) = INTERNAL_CALL, LiquidityPool.getRewardAmount(uint256,address)(amount_1,tokenAddress_1)
Function name: depositErc20
Internal call...
getRewardAmount
amount
tokenAddress
Function: getRewardAmount
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, None, [], -1]
cur_param: [[-1], [-1], 0, 'TOKADDRESS', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, None, [], -1]
[[-1], [-1], 0, 'TOKADDRESS', [], -1]
0

Name: PIC_33 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_116 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_116

Name: TMP_116 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_13(ILiquidityProviders) := ϕ(['liquidityProviders_17'])
Function name: depositErc20
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_11(mapping(address => uint256)) := ϕ(['incentivePool_15'])
Function name: depositErc20
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
rewardAmount_1(uint256) := TMP_116(uint256)
Function name: depositErc20
asgn

Name: TMP_116 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardAmount

Name: rewardAmount Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
rewardAmount_1(uint256) := TMP_116(uint256)
XXXXX
typecheckig node...
TMP_117(bool) = rewardAmount_1 != 0
Function name: depositErc20
[i]Type for TMP_117

Name: TMP_117 Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_117
Condition...
Conidtion: 
TMP_117
TMP_117
typecheckig node...
typecheckig node...
HIGH_LEVEL_CALL, dest:liquidityProviders_13(ILiquidityProviders), function:increaseCurrentLiquidity, arguments:['tokenAddress_1', 'amount_1']  
High Call: increaseCurrentLiquidity
func name:increaseCurrentLiquidity
other func name:increaseCurrentLiquidity
done.
liquidityProviders_14(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_13', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: depositErc20
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_8(uint256) -> incentivePool_11[tokenAddress_1]
Function name: depositErc20
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_8

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_9(uint256) -> incentivePool_11[tokenAddress_1]
Function name: depositErc20
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_9

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_118(uint256) = REF_9 (c)- rewardAmount_1
Function name: depositErc20
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: depositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_118 Function: depositErc20
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_118

Name: TMP_118 Function: depositErc20
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_118(uint256) = REF_9 (c)- rewardAmount_1
XXXXX
incentivePool_12(mapping(address => uint256)) := ϕ(['incentivePool_11'])
Function name: depositErc20
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_8 (->incentivePool_12) := TMP_118(uint256)
Function name: depositErc20
asgn

Name: TMP_118 Function: depositErc20
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_8 Function: depositErc20
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_8

Name: REF_8 Function: depositErc20
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_120 = CONVERT tokenAddress_1 to IERC20Upgradeable
Function name: depositErc20

Name: tokenAddress Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: TOKADDRESS
Fields: 
Finance Type: undef

Name: TMP_120 Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: TOKADDRESS
Fields: 
Finance Type: undef
[i]Type for TMP_120

Name: TMP_120 Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: TOKADDRESS
Fields: 
Finance Type: undef
done.
TMP_121 = CONVERT this to address
Function name: depositErc20
[i]Type for TMP_121

Name: TMP_121 Function: depositErc20
Num: -1
Den: -1
Norm: u
LF: LiquidityPool
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256), arguments:['TMP_120', 'sender_1', 'TMP_121', 'amount_1'] 
Library Call: safeTransferFrom
done.
typecheckig node...
TMP_123(uint256) = amount_1 (c)+ rewardAmount_1
Function name: depositErc20

Name: TMP_123 Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_123 Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_123

Name: TMP_123 Function: depositErc20
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_123(uint256) = amount_1 (c)+ rewardAmount_1
XXXXX
Emit Deposit(sender_1,tokenAddress_1,receiver_1,toChainId_1,TMP_123,rewardAmount_1,tag_1)
WORKLIST iteration 2 for function call "depositErc20":
 New undefined nodes- 3
 Old undefined nodes- 3
Saving return values for: depositErc20
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: getRewardAmount
Function name: getRewardAmount
Function Visibility (test): public
amount
Finding type for amount...
uint256
Check copy_toekn_tuple
(-1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
tokenAddress
Finding type for tokenAddress...
address
Check copy_toekn_tuple
(-1, -1, 0, 'TOKADDRESS')
----
Type: address
address
Final Type: address

Name: tokenAddress Function: getRewardAmount
Num: -1
Den: -1
Norm: 0
LF: TOKADDRESS
Fields: 
Finance Type: undef
[*]Type fetched successfully
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, None, [], -1]
cur_param: [[-1], [-1], 0, 'TOKADDRESS', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
0
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
clearning node...
clearing ir...?
amount_1(uint256) := ϕ(['msg.value', 'amount_1'])
has variable
[i] amount cleared
clearing ir...?
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'NATIVE_5'])
has variable
[i] tokenAddress cleared
clearing ir...?
liquidityProviders_15(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
incentivePool_13(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
typecheckig node...
amount_1(uint256) := ϕ(['msg.value', 'amount_1'])
Function name: getRewardAmount
Phi
[i]Type for amount

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'NATIVE_5'])
Function name: getRewardAmount
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getRewardAmount
Num: -1
Den: -1
Norm: 0
LF: TOKADDRESS
Fields: 
Finance Type: undef
done.
liquidityProviders_15(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getRewardAmount
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_13(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getRewardAmount
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_128(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
has variable
[i] TMP_128 cleared
clearing ir...?
liquidityProviders_16(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
has variable
clearing ir...?
incentivePool_14(mapping(address => uint256)) := ϕ(['incentivePool_3'])
has variable
clearing ir...?
currentLiquidity_1(uint256) := TMP_128(uint256)
has variable
[i] currentLiquidity cleared
typecheckig node...
TMP_128(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
Function name: getRewardAmount
Internal call...
getCurrentLiquidity
tokenAddress
Function: getCurrentLiquidity
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'TOKADDRESS', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'TOKADDRESS', [], -1]
0

Name: PIC_26 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_128

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_16(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Function name: getRewardAmount
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_14(mapping(address => uint256)) := ϕ(['incentivePool_3'])
Function name: getRewardAmount
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
currentLiquidity_1(uint256) := TMP_128(uint256)
Function name: getRewardAmount
asgn

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidity

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
currentLiquidity_1(uint256) := TMP_128(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_129(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_16(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
has variable
[i] TMP_129 cleared
clearing ir...?
liquidityProviders_17(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_16', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
incentivePool_15(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_22', 'incentivePool_14', 'incentivePool_11', 'incentivePool_28'])
has variable
clearing ir...?
providedLiquidity_1(uint256) := TMP_129(uint256)
has variable
[i] providedLiquidity cleared
typecheckig node...
TMP_129(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_16(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
Function name: getRewardAmount
High Call: getSuppliedLiquidityByToken
func name:getSuppliedLiquidityByToken
other func name:getSuppliedLiquidityByToken
TMP_129
hlc contract name: LPP func_name: getSuppliedLiquidityByToken
wfc len: 0
COPIED
[i]Type for TMP_129

Name: TMP_129 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_17(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_16', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getRewardAmount
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_15(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_22', 'incentivePool_14', 'incentivePool_11', 'incentivePool_28'])
Function name: getRewardAmount
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
providedLiquidity_1(uint256) := TMP_129(uint256)
Function name: getRewardAmount
asgn

Name: TMP_129 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for providedLiquidity

Name: providedLiquidity Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
has variable
[i] TMP_130 cleared
clearing ir...?
CONDITION TMP_130
typecheckig node...
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
Function name: getRewardAmount
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: providedLiquidity Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_130 Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_130

Name: TMP_130 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
XXXXX
CONDITION TMP_130
Condition...
Conidtion: 
TMP_130
TMP_130
clearning node...
clearing ir...?
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
has variable
[i] TMP_131 cleared
clearing ir...?
liquidityDifference_1(uint256) := TMP_131(uint256)
has variable
[i] liquidityDifference cleared
typecheckig node...
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
Function name: getRewardAmount
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: providedLiquidity Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_131 Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_131

Name: TMP_131 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
XXXXX
liquidityDifference_1(uint256) := TMP_131(uint256)
Function name: getRewardAmount
asgn

Name: TMP_131 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityDifference Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityDifference

Name: liquidityDifference Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_132(bool) = amount_1 >= liquidityDifference_1
has variable
[i] TMP_132 cleared
clearing ir...?
CONDITION TMP_132
typecheckig node...
TMP_132(bool) = amount_1 >= liquidityDifference_1
Function name: getRewardAmount
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_132

Name: TMP_132 Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_132
Condition...
Conidtion: 
TMP_132
TMP_132
clearning node...
clearing ir...?
REF_14(uint256) -> incentivePool_15[tokenAddress_1]
has variable
clearing ir...?
TMP_133(uint256) = amount_1 (c)* REF_14
has variable
[i] TMP_133 cleared
clearing ir...?
TMP_134(uint256) = TMP_133 (c)* 10000000000
has variable
[i] TMP_134 cleared
clearing ir...?
TMP_135(uint256) = TMP_134 (c)/ liquidityDifference_1
has variable
[i] TMP_135 cleared
clearing ir...?
rewardAmount_2(uint256) := TMP_135(uint256)
has variable
[i] rewardAmount cleared
typecheckig node...
REF_14(uint256) -> incentivePool_15[tokenAddress_1]
Function name: getRewardAmount
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_14

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_133(uint256) = amount_1 (c)* REF_14
Function name: getRewardAmount
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_133 Function: getRewardAmount
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_133

Name: TMP_133 Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_134(uint256) = TMP_133 (c)* 10000000000
Function name: getRewardAmount
testing mul...
val: 10000000000
10
val: 10000000000
10
lnorm: 0 rnorm: 10
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_133 Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_134 Function: getRewardAmount
Num: 
Den: 
Norm: 10
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_134

Name: TMP_134 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef
done.
TMP_135(uint256) = TMP_134 (c)/ liquidityDifference_1
Function name: getRewardAmount
lnorm: 10 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_135 Function: getRewardAmount
Num: 
Den: 
Norm: 10
LF: None
Fields: 
Finance Type: undef

Name: TMP_134 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef

Name: TMP_135 Function: getRewardAmount
Num: 
Den: 
Norm: 10
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_135

Name: TMP_135 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef
done.
rewardAmount_2(uint256) := TMP_135(uint256)
Function name: getRewardAmount
asgn

Name: TMP_135 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_13(uint256) -> incentivePool_15[tokenAddress_1]
has variable
clearing ir...?
rewardAmount_1(uint256) := REF_13(uint256)
has variable
[i] rewardAmount cleared
typecheckig node...
REF_13(uint256) -> incentivePool_15[tokenAddress_1]
Function name: getRewardAmount
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_13

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
rewardAmount_1(uint256) := REF_13(uint256)
Function name: getRewardAmount
asgn

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_136(uint256) = rewardAmount_2 (c)/ 10000000000
has variable
[i] TMP_136 cleared
clearing ir...?
rewardAmount_3(uint256) := TMP_136(uint256)
has variable
[i] rewardAmount cleared
typecheckig node...
TMP_136(uint256) = rewardAmount_2 (c)/ 10000000000
Function name: getRewardAmount
val: 10000000000
10
val: 10000000000
10
lnorm: 0 rnorm: 10
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_136 Function: getRewardAmount
Num: 
Den: 
Norm: -10
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_136 Function: getRewardAmount
Num: 
Den: 
Norm: -10
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_136

Name: TMP_136 Function: getRewardAmount
Num: 1
Den: -1
Norm: -10
LF: None
Fields: 
Finance Type: undef
done.
rewardAmount_3(uint256) := TMP_136(uint256)
Function name: getRewardAmount
asgn

Name: TMP_136 Function: getRewardAmount
Num: 1
Den: -1
Norm: -10
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: -10
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "getRewardAmount":
 New undefined nodes- 3
 Old undefined nodes- 0
typecheckig node...
amount_1(uint256) := ϕ(['msg.value', 'amount_1'])
Function name: getRewardAmount
Phi
[i]Type for amount

Name: amount Function: getRewardAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'NATIVE_5'])
Function name: getRewardAmount
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getRewardAmount
Num: -1
Den: -1
Norm: 0
LF: TOKADDRESS
Fields: 
Finance Type: undef
done.
liquidityProviders_15(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getRewardAmount
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_13(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getRewardAmount
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_128(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
Function name: getRewardAmount
Internal call...
getCurrentLiquidity
tokenAddress
Function: getCurrentLiquidity
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'TOKADDRESS', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'TOKADDRESS', [], -1]
0

Name: PIC_26 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_128

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_16(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Function name: getRewardAmount
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_14(mapping(address => uint256)) := ϕ(['incentivePool_3'])
Function name: getRewardAmount
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
currentLiquidity_1(uint256) := TMP_128(uint256)
Function name: getRewardAmount
asgn

Name: TMP_128 Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidity

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
currentLiquidity_1(uint256) := TMP_128(uint256)
XXXXX
typecheckig node...
TMP_129(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_16(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
Function name: getRewardAmount
High Call: getSuppliedLiquidityByToken
func name:getSuppliedLiquidityByToken
other func name:getSuppliedLiquidityByToken
TMP_129
hlc contract name: LPP func_name: getSuppliedLiquidityByToken
wfc len: 0
COPIED
[i]Type for TMP_129

Name: TMP_129 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_17(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_16', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getRewardAmount
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
incentivePool_15(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_22', 'incentivePool_14', 'incentivePool_11', 'incentivePool_28'])
Function name: getRewardAmount
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
providedLiquidity_1(uint256) := TMP_129(uint256)
Function name: getRewardAmount
asgn

Name: TMP_129 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for providedLiquidity

Name: providedLiquidity Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
Function name: getRewardAmount
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: providedLiquidity Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_130 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_130

Name: TMP_130 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_130(bool) = currentLiquidity_1 < providedLiquidity_1
XXXXX
CONDITION TMP_130
Condition...
Conidtion: 
TMP_130
TMP_130
typecheckig node...
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
Function name: getRewardAmount
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: providedLiquidity Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_131 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_131

Name: TMP_131 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_131(uint256) = providedLiquidity_1 (c)- currentLiquidity_1
XXXXX
liquidityDifference_1(uint256) := TMP_131(uint256)
Function name: getRewardAmount
asgn

Name: TMP_131 Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityDifference Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityDifference

Name: liquidityDifference Function: getRewardAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_132(bool) = amount_1 >= liquidityDifference_1
Function name: getRewardAmount
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_132

Name: TMP_132 Function: getRewardAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_132
Condition...
Conidtion: 
TMP_132
TMP_132
typecheckig node...
REF_14(uint256) -> incentivePool_15[tokenAddress_1]
Function name: getRewardAmount
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_14

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_133(uint256) = amount_1 (c)* REF_14
Function name: getRewardAmount
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_133 Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_133

Name: TMP_133 Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_134(uint256) = TMP_133 (c)* 10000000000
Function name: getRewardAmount
testing mul...
val: 10000000000
10
val: 10000000000
10
lnorm: 0 rnorm: 10
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_133 Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_134 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_134

Name: TMP_134 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef
done.
TMP_135(uint256) = TMP_134 (c)/ liquidityDifference_1
Function name: getRewardAmount
lnorm: 10 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_135 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef

Name: TMP_134 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef

Name: TMP_135 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_135

Name: TMP_135 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef
done.
rewardAmount_2(uint256) := TMP_135(uint256)
Function name: getRewardAmount
asgn

Name: TMP_135 Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: 10
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_13(uint256) -> incentivePool_15[tokenAddress_1]
Function name: getRewardAmount
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_13

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
rewardAmount_1(uint256) := REF_13(uint256)
Function name: getRewardAmount
asgn

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_136(uint256) = rewardAmount_2 (c)/ 10000000000
Function name: getRewardAmount
val: 10000000000
10
val: 10000000000
10
lnorm: 0 rnorm: 10
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_136 Function: getRewardAmount
Num: 1
Den: -1
Norm: -10
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_136 Function: getRewardAmount
Num: 1
Den: -1
Norm: -10
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_136

Name: TMP_136 Function: getRewardAmount
Num: 1
Den: -1
Norm: -10
LF: None
Fields: 
Finance Type: undef
done.
rewardAmount_3(uint256) := TMP_136(uint256)
Function name: getRewardAmount
asgn

Name: TMP_136 Function: getRewardAmount
Num: 1
Den: -1
Norm: -10
LF: None
Fields: 
Finance Type: undef

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: -10
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardAmount

Name: rewardAmount Function: getRewardAmount
Num: 1
Den: -1
Norm: -10
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
WORKLIST iteration 1 for function call "getRewardAmount":
 New undefined nodes- 3
 Old undefined nodes- 3
Saving return values for: getRewardAmount

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: permitAndDepositErc20
Function permitAndDepositErc20 not marked
Mark Iterations TRUE, proceeding anyway
Function name: permitAndDepositErc20
Function Visibility (test): external
tokenAddress
Finding type for tokenAddress...
address
receiver
Finding type for receiver...
address
amount
Finding type for amount...
uint256
toChainId
Finding type for toChainId...
uint256
permitOptions
Finding type for permitOptions...
LiquidityPool.PermitRequest
tag
Finding type for tag...
string
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: tokenAddress
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: receiver
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_137 = CONVERT tokenAddress_1 to IERC20Permit
has variable
[i] TMP_137 cleared
clearing ir...?
TMP_138(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
has variable
[i] TMP_138 cleared
clearing ir...?
TMP_139 = CONVERT this to address
has variable
[i] TMP_139 cleared
clearing ir...?
REF_16(uint256) -> permitOptions_1 (-> []).nonce
has variable
clearing ir...?
REF_17(uint256) -> permitOptions_1 (-> []).expiry
has variable
clearing ir...?
REF_18(bool) -> permitOptions_1 (-> []).allowed
has variable
clearing ir...?
REF_19(uint8) -> permitOptions_1 (-> []).v
has variable
clearing ir...?
REF_20(bytes32) -> permitOptions_1 (-> []).r
has variable
clearing ir...?
REF_21(bytes32) -> permitOptions_1 (-> []).s
has variable
clearing ir...?
HIGH_LEVEL_CALL, dest:TMP_137(IERC20Permit), function:permit, arguments:['TMP_138', 'TMP_139', 'REF_16', 'REF_17', 'REF_18', 'REF_19', 'REF_20', 'REF_21']  
typecheckig node...
TMP_137 = CONVERT tokenAddress_1 to IERC20Permit
Function name: permitAndDepositErc20

Name: tokenAddress Function: permitAndDepositErc20
Num: -1
Den: -1
Norm: u
LF: tokenAddress
Fields: 
Finance Type: undef

Name: TMP_137 Function: permitAndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_137

Name: TMP_137 Function: permitAndDepositErc20
Num: -1
Den: -1
Norm: u
LF: tokenAddress
Fields: 
Finance Type: undef
done.
TMP_138(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: permitAndDepositErc20
Internal call...
_msgSender
Function: _msgSender
ic
[i]Type for TMP_138

Name: TMP_138 Function: permitAndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_139 = CONVERT this to address
Function name: permitAndDepositErc20
[i]Type for TMP_139

Name: TMP_139 Function: permitAndDepositErc20
Num: -1
Den: -1
Norm: u
LF: LiquidityPool
Fields: 
Finance Type: undef
done.
REF_16(uint256) -> permitOptions_1 (-> []).nonce
Function name: permitAndDepositErc20
MEMBER
permitOptions
nonce
permitAndDepositErc20
permitOptions Fields:
^^^
[i]Type for REF_16

Name: permitOptions.nonce Function: permitAndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: permitOptions.nonce Function: permitAndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: nonce Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_17(uint256) -> permitOptions_1 (-> []).expiry
Function name: permitAndDepositErc20
MEMBER
permitOptions
expiry
permitAndDepositErc20
permitOptions Fields:
nonce
^^^
[i]Type for REF_17

Name: permitOptions.expiry Function: permitAndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: permitOptions.expiry Function: permitAndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: expiry Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_18(bool) -> permitOptions_1 (-> []).allowed
Function name: permitAndDepositErc20
MEMBER
permitOptions
allowed
permitAndDepositErc20
permitOptions Fields:
nonce
expiry
^^^
[i]Type for REF_18

Name: permitOptions.allowed Function: permitAndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: permitOptions.allowed Function: permitAndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: allowed Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_19(uint8) -> permitOptions_1 (-> []).v
Function name: permitAndDepositErc20
MEMBER
permitOptions
v
permitAndDepositErc20
permitOptions Fields:
nonce
expiry
allowed
^^^
[i]Type for REF_19

Name: permitOptions.v Function: permitAndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: permitOptions.v Function: permitAndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_20(bytes32) -> permitOptions_1 (-> []).r
Function name: permitAndDepositErc20
MEMBER
permitOptions
r
permitAndDepositErc20
permitOptions Fields:
nonce
expiry
allowed
v
^^^
[i]Type for REF_20

Name: permitOptions.r Function: permitAndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: permitOptions.r Function: permitAndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: r Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_21(bytes32) -> permitOptions_1 (-> []).s
Function name: permitAndDepositErc20
MEMBER
permitOptions
s
permitAndDepositErc20
permitOptions Fields:
nonce
expiry
allowed
v
r
^^^
[i]Type for REF_21

Name: permitOptions.s Function: permitAndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: permitOptions.s Function: permitAndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:TMP_137(IERC20Permit), function:permit, arguments:['TMP_138', 'TMP_139', 'REF_16', 'REF_17', 'REF_18', 'REF_19', 'REF_20', 'REF_21']  
High Call: permit
func name:permit
other func name:permit
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LiquidityPool.depositErc20(uint256,address,address,uint256,string)(toChainId_1,tokenAddress_1,receiver_1,amount_1,tag_1)
typecheckig node...
INTERNAL_CALL, LiquidityPool.depositErc20(uint256,address,address,uint256,string)(toChainId_1,tokenAddress_1,receiver_1,amount_1,tag_1)
Internal call...
depositErc20
toChainId
tokenAddress
receiver
amount
tag
Function: depositErc20
ic
done.
WORKLIST iteration 0 for function call "permitAndDepositErc20":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: permitEIP2612AndDepositErc20
Function permitEIP2612AndDepositErc20 not marked
Mark Iterations TRUE, proceeding anyway
Function name: permitEIP2612AndDepositErc20
Function Visibility (test): external
tokenAddress
Finding type for tokenAddress...
address
receiver
Finding type for receiver...
address
amount
Finding type for amount...
uint256
toChainId
Finding type for toChainId...
uint256
permitOptions
Finding type for permitOptions...
LiquidityPool.PermitRequest
tag
Finding type for tag...
string
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: tokenAddress
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: receiver
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_142 = CONVERT tokenAddress_1 to IERC20Permit
has variable
[i] TMP_142 cleared
clearing ir...?
TMP_143(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
has variable
[i] TMP_143 cleared
clearing ir...?
TMP_144 = CONVERT this to address
has variable
[i] TMP_144 cleared
clearing ir...?
REF_23(uint256) -> permitOptions_1 (-> []).expiry
has variable
clearing ir...?
REF_24(uint8) -> permitOptions_1 (-> []).v
has variable
clearing ir...?
REF_25(bytes32) -> permitOptions_1 (-> []).r
has variable
clearing ir...?
REF_26(bytes32) -> permitOptions_1 (-> []).s
has variable
clearing ir...?
HIGH_LEVEL_CALL, dest:TMP_142(IERC20Permit), function:permit, arguments:['TMP_143', 'TMP_144', 'amount_1', 'REF_23', 'REF_24', 'REF_25', 'REF_26']  
typecheckig node...
TMP_142 = CONVERT tokenAddress_1 to IERC20Permit
Function name: permitEIP2612AndDepositErc20

Name: tokenAddress Function: permitEIP2612AndDepositErc20
Num: -1
Den: -1
Norm: u
LF: tokenAddress
Fields: 
Finance Type: undef

Name: TMP_142 Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_142

Name: TMP_142 Function: permitEIP2612AndDepositErc20
Num: -1
Den: -1
Norm: u
LF: tokenAddress
Fields: 
Finance Type: undef
done.
TMP_143(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: permitEIP2612AndDepositErc20
Internal call...
_msgSender
Function: _msgSender
ic
[i]Type for TMP_143

Name: TMP_143 Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_144 = CONVERT this to address
Function name: permitEIP2612AndDepositErc20
[i]Type for TMP_144

Name: TMP_144 Function: permitEIP2612AndDepositErc20
Num: -1
Den: -1
Norm: u
LF: LiquidityPool
Fields: 
Finance Type: undef
done.
REF_23(uint256) -> permitOptions_1 (-> []).expiry
Function name: permitEIP2612AndDepositErc20
MEMBER
permitOptions
expiry
permitEIP2612AndDepositErc20
permitOptions Fields:
^^^
[i]Type for REF_23

Name: permitOptions.expiry Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: permitOptions.expiry Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: expiry Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_24(uint8) -> permitOptions_1 (-> []).v
Function name: permitEIP2612AndDepositErc20
MEMBER
permitOptions
v
permitEIP2612AndDepositErc20
permitOptions Fields:
expiry
^^^
[i]Type for REF_24

Name: permitOptions.v Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: permitOptions.v Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_25(bytes32) -> permitOptions_1 (-> []).r
Function name: permitEIP2612AndDepositErc20
MEMBER
permitOptions
r
permitEIP2612AndDepositErc20
permitOptions Fields:
expiry
v
^^^
[i]Type for REF_25

Name: permitOptions.r Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: permitOptions.r Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: r Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_26(bytes32) -> permitOptions_1 (-> []).s
Function name: permitEIP2612AndDepositErc20
MEMBER
permitOptions
s
permitEIP2612AndDepositErc20
permitOptions Fields:
expiry
v
r
^^^
[i]Type for REF_26

Name: permitOptions.s Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: permitOptions.s Function: permitEIP2612AndDepositErc20
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:TMP_142(IERC20Permit), function:permit, arguments:['TMP_143', 'TMP_144', 'amount_1', 'REF_23', 'REF_24', 'REF_25', 'REF_26']  
High Call: permit
func name:permit
other func name:permit
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LiquidityPool.depositErc20(uint256,address,address,uint256,string)(toChainId_1,tokenAddress_1,receiver_1,amount_1,tag_1)
typecheckig node...
INTERNAL_CALL, LiquidityPool.depositErc20(uint256,address,address,uint256,string)(toChainId_1,tokenAddress_1,receiver_1,amount_1,tag_1)
Internal call...
depositErc20
toChainId
tokenAddress
receiver
amount
tag
Function: depositErc20
ic
done.
WORKLIST iteration 0 for function call "permitEIP2612AndDepositErc20":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: depositNative
wooo
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: sendFundsToUser
wooo
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: getAmountToTransfer
Function name: getAmountToTransfer
Function Visibility (test): public
initialGas
Finding type for initialGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: initialGas Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
tokenAddress
Finding type for tokenAddress...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: tokenAddress Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
amount
Finding type for amount...
uint256
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
tokenGasPrice
Finding type for tokenGasPrice...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: tokenGasPrice Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
initialGas_1(uint256) := ϕ(['initialGas_1'])
has variable
[i] initialGas cleared
clearing ir...?
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
has variable
[i] tokenAddress cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
has variable
[i] amount cleared
clearing ir...?
tokenGasPrice_1(uint256) := ϕ(['tokenGasPrice_1'])
has variable
[i] tokenGasPrice cleared
clearing ir...?
BASE_DIVISOR_1(uint256) := ϕ(['BASE_DIVISOR_5', 'BASE_DIVISOR_0', 'BASE_DIVISOR_3'])
has variable
clearing ir...?
baseGas_3(uint256) := ϕ(['baseGas_9', 'baseGas_0', 'baseGas_2', 'baseGas_1'])
has variable
clearing ir...?
tokenManager_20(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_0', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
has variable
clearing ir...?
liquidityProviders_35(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_4(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
has variable
clearing ir...?
gasFeeAccumulated_1(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_22', 'gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
has variable
clearing ir...?
incentivePool_23(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
typecheckig node...
initialGas_1(uint256) := ϕ(['initialGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for initialGas

Name: initialGas Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint256) := ϕ(['amount_1'])
Function name: getAmountToTransfer
Phi
[i]Type for amount

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
tokenGasPrice_1(uint256) := ϕ(['tokenGasPrice_1'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenGasPrice

Name: tokenGasPrice Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
BASE_DIVISOR_1(uint256) := ϕ(['BASE_DIVISOR_5', 'BASE_DIVISOR_0', 'BASE_DIVISOR_3'])
Function name: getAmountToTransfer
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
done.
baseGas_3(uint256) := ϕ(['baseGas_9', 'baseGas_0', 'baseGas_2', 'baseGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for baseGas

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_20(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_0', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_35(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getAmountToTransfer
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_4(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_1(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_22', 'gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_23(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getAmountToTransfer
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_199(uint256) = INTERNAL_CALL, LiquidityPool.getTransferFee(address,uint256)(tokenAddress_1,amount_1)
has variable
[i] TMP_199 cleared
clearing ir...?
tokenManager_21(ITokenManager) := ϕ(['tokenManager_31'])
has variable
clearing ir...?
liquidityProviders_36(ILiquidityProviders) := ϕ(['liquidityProviders_43'])
has variable
clearing ir...?
transferFeePerc_1(uint256) := TMP_199(uint256)
has variable
[i] transferFeePerc cleared
typecheckig node...
TMP_199(uint256) = INTERNAL_CALL, LiquidityPool.getTransferFee(address,uint256)(tokenAddress_1,amount_1)
Function name: getAmountToTransfer
Internal call...
getTransferFee
tokenAddress
amount
Function: getTransferFee
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[1], [-1], 0, None, [], -1]
added
xyz
Function name: getTransferFee
Function Visibility: public
clearning node...
clearing ir...?
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
has variable
[i] tokenAddress cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
has variable
[i] amount cleared
clearing ir...?
tokenManager_27(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_0', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
has variable
clearing ir...?
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
typecheckig node...
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Function name: getTransferFee
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: tokenAddress
Fields: 
Finance Type: undef
done.
amount_1(uint256) := ϕ(['amount_1'])
Function name: getTransferFee
Phi
[i]Type for amount

Name: amount Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_27(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_0', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: getTransferFee
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getTransferFee
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
has variable
[i] TMP_228 cleared
clearing ir...?
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
has variable
clearing ir...?
currentLiquidity_1(uint256) := TMP_228(uint256)
has variable
[i] currentLiquidity cleared
typecheckig node...
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
Function name: getTransferFee
Internal call...
getCurrentLiquidity
tokenAddress
Function: getCurrentLiquidity
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: tokenAddress
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'TOKADDRESS', [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'TOKADDRESS', [], -1]
added
xyz
Function name: getCurrentLiquidity
Function Visibility: public
clearning node...
clearing ir...?
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
has variable
[i] tokenAddress cleared
clearing ir...?
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
has variable
clearing ir...?
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
typecheckig node...
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Function name: getCurrentLiquidity
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: 0
LF: tokenAddress
Fields: 
Finance Type: undef
done.
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getCurrentLiquidity
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getCurrentLiquidity
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getCurrentLiquidity
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
has variable
[i] TMP_99 cleared
clearing ir...?
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1'])
has variable
clearing ir...?
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
clearing ir...?
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
has variable
[i] liquidityPoolBalance cleared
typecheckig node...
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
Function name: getCurrentLiquidity
High Call: getCurrentLiquidity
func name:getCurrentLiquidity
other func name:getCurrentLiquidity
TMP_99
hlc contract name: LPP func_name: getCurrentLiquidity
wfc len: 0
COPIED
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3'])
Function name: getCurrentLiquidity
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1'])
Function name: getCurrentLiquidity
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getCurrentLiquidity
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
Function name: getCurrentLiquidity
asgn

Name: TMP_99 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
has variable
[i] TMP_100 cleared
clearing ir...?
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
has variable
clearing ir...?
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_2', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
clearing ir...?
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
has variable
[i] TMP_101 cleared
clearing ir...?
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
has variable
clearing ir...?
TMP_102(uint256) = TMP_101 (c)- REF_2
has variable
[i] TMP_102 cleared
clearing ir...?
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
has variable
clearing ir...?
TMP_103(uint256) = TMP_102 (c)- REF_3
has variable
[i] TMP_103 cleared
clearing ir...?
currentLiquidity_1(uint256) := TMP_103(uint256)
has variable
[i] currentLiquidity cleared
typecheckig node...
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
Function name: getCurrentLiquidity
High Call: totalLPFees
func name:totalLPFees
other func name:totalLPFees
TMP_100
hlc contract name: LPP func_name: totalLPFees
wfc len: 0
COPIED
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getCurrentLiquidity
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getCurrentLiquidity
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_2', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getCurrentLiquidity
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
Function name: getCurrentLiquidity
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
Function name: getCurrentLiquidity
INDEX

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(uint256) = TMP_101 (c)- REF_2
Function name: getCurrentLiquidity
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_101 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
Function name: getCurrentLiquidity
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_3

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_103(uint256) = TMP_102 (c)- REF_3
Function name: getCurrentLiquidity
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
currentLiquidity_1(uint256) := TMP_103(uint256)
Function name: getCurrentLiquidity
asgn

Name: TMP_103 Function: getCurrentLiquidity
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "getCurrentLiquidity":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: getCurrentLiquidity

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Function name: getTransferFee
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
currentLiquidity_1(uint256) := TMP_228(uint256)
Function name: getTransferFee
asgn

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
currentLiquidity_1(uint256) := TMP_228(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
has variable
[i] TMP_229 cleared
clearing ir...?
tokenManager_29(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_28', 'tokenManager_33', 'tokenManager_26'])
has variable
clearing ir...?
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_42', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
providedLiquidity_1(uint256) := TMP_229(uint256)
has variable
[i] providedLiquidity cleared
typecheckig node...
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
Function name: getTransferFee
High Call: getSuppliedLiquidityByToken
func name:getSuppliedLiquidityByToken
other func name:getSuppliedLiquidityByToken
TMP_229
hlc contract name: LPP func_name: getSuppliedLiquidityByToken
wfc len: 0
COPIED
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_29(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_28', 'tokenManager_33', 'tokenManager_26'])
Function name: getTransferFee
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_42', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getTransferFee
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
providedLiquidity_1(uint256) := TMP_229(uint256)
Function name: getTransferFee
asgn

Name: TMP_229 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
has variable
[i] TMP_230 cleared
clearing ir...?
resultingLiquidity_1(uint256) := TMP_230(uint256)
has variable
[i] resultingLiquidity cleared
typecheckig node...
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
Function name: getTransferFee
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
XXXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
Function name: getTransferFee
asgn

Name: TMP_230 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
has variable
[i] TMP_231 cleared
clearing ir...?
tokenManager_30(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26', 'tokenManager_29'])
has variable
clearing ir...?
REF_62(uint256) -> TMP_231.equilibriumFee
has variable
clearing ir...?
equilibriumFee_1(uint256) := REF_62(uint256)
has variable
[i] equilibriumFee cleared
typecheckig node...
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
Function name: getTransferFee
High Call: getTokensInfo
func name:getTokensInfo
other func name:getTokensInfo
TMP_231
hlc contract name: TokenManager func_name: getTokensInfo
wfc len: 0
COPIED
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_30(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26', 'tokenManager_29'])
Function name: getTransferFee
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
REF_62(uint256) -> TMP_231.equilibriumFee
Function name: getTransferFee
MEMBER
TMP_231
equilibriumFee
getTransferFee
TMP_231 Fields:
^^^
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
equilibriumFee_1(uint256) := REF_62(uint256)
Function name: getTransferFee
asgn

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
equilibriumFee_1(uint256) := REF_62(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
has variable
[i] TMP_232 cleared
clearing ir...?
tokenManager_31(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_30', 'tokenManager_33', 'tokenManager_26'])
has variable
clearing ir...?
REF_64(uint256) -> TMP_232.maxFee
has variable
clearing ir...?
maxFee_1(uint256) := REF_64(uint256)
has variable
[i] maxFee cleared
typecheckig node...
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
Function name: getTransferFee
High Call: getTokensInfo
func name:getTokensInfo
other func name:getTokensInfo
TMP_232
hlc contract name: TokenManager func_name: getTokensInfo
wfc len: 0
COPIED
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_31(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_30', 'tokenManager_33', 'tokenManager_26'])
Function name: getTransferFee
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
REF_64(uint256) -> TMP_232.maxFee
Function name: getTransferFee
MEMBER
TMP_232
maxFee
getTransferFee
TMP_232 Fields:
^^^
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_232.maxFee Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
maxFee_1(uint256) := REF_64(uint256)
Function name: getTransferFee
asgn

Name: TMP_232.maxFee Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
maxFee_1(uint256) := REF_64(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
has variable
[i] TMP_233 cleared
clearing ir...?
TMP_234(uint256) = TMP_233 (c)* maxFee_1
has variable
[i] TMP_234 cleared
clearing ir...?
numerator_1(uint256) := TMP_234(uint256)
has variable
[i] numerator cleared
typecheckig node...
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
Function name: getTransferFee
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: providedLiquidity Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
XXXXX
TMP_234(uint256) = TMP_233 (c)* maxFee_1
Function name: getTransferFee
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_233 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_234(uint256) = TMP_233 (c)* maxFee_1
XXXXX
numerator_1(uint256) := TMP_234(uint256)
Function name: getTransferFee
asgn

Name: TMP_234 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
has variable
[i] TMP_235 cleared
clearing ir...?
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
has variable
[i] TMP_236 cleared
clearing ir...?
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
has variable
[i] TMP_237 cleared
clearing ir...?
TMP_238(uint256) = TMP_235 (c)+ TMP_237
has variable
[i] TMP_238 cleared
clearing ir...?
denominator_1(uint256) := TMP_238(uint256)
has variable
[i] denominator cleared
typecheckig node...
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
Function name: getTransferFee
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: providedLiquidity Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
XXXXX
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
Function name: getTransferFee
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: maxFee Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
XXXXX
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
Function name: getTransferFee
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: resultingLiquidity Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
XXXXX
TMP_238(uint256) = TMP_235 (c)+ TMP_237
Function name: getTransferFee

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_237 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
denominator_1(uint256) := TMP_238(uint256)
Function name: getTransferFee
asgn

Name: TMP_238 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_239(bool) = denominator_1 == 0
has variable
[i] TMP_239 cleared
clearing ir...?
CONDITION TMP_239
typecheckig node...
TMP_239(bool) = denominator_1 == 0
Function name: getTransferFee
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_239
Condition...
Conidtion: 
TMP_239
TMP_239
clearning node...
clearing ir...?
fee_1(uint256) := 0(uint256)
has variable
[i] fee cleared
typecheckig node...
fee_1(uint256) := 0(uint256)
Function name: getTransferFee
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_240(uint256) = numerator_1 (c)/ denominator_1
has variable
[i] TMP_240 cleared
clearing ir...?
fee_2(uint256) := TMP_240(uint256)
has variable
[i] fee cleared
typecheckig node...
TMP_240(uint256) = numerator_1 (c)/ denominator_1
Function name: getTransferFee
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_240 Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_38 Function: None
Num: -1
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
fee_2(uint256) := TMP_240(uint256)
Function name: getTransferFee
asgn

Name: TMP_240 Function: getTransferFee
Num: -1
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "getTransferFee":
 New undefined nodes- 6
 Old undefined nodes- 0
typecheckig node...
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Function name: getTransferFee
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: tokenAddress
Fields: 
Finance Type: undef
done.
amount_1(uint256) := ϕ(['amount_1'])
Function name: getTransferFee
Phi
[i]Type for amount

Name: amount Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_27(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_0', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: getTransferFee
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getTransferFee
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
Function name: getTransferFee
Internal call...
getCurrentLiquidity
tokenAddress
Function: getCurrentLiquidity
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: tokenAddress
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'TOKADDRESS', [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'TOKADDRESS', [], -1]
added
xyz
Function name: getCurrentLiquidity
Function Visibility: public
clearning node...
clearing ir...?
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
has variable
[i] tokenAddress cleared
clearing ir...?
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
has variable
clearing ir...?
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
typecheckig node...
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Function name: getCurrentLiquidity
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: 0
LF: tokenAddress
Fields: 
Finance Type: undef
done.
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getCurrentLiquidity
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getCurrentLiquidity
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getCurrentLiquidity
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
has variable
[i] TMP_99 cleared
clearing ir...?
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1'])
has variable
clearing ir...?
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
clearing ir...?
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
has variable
[i] liquidityPoolBalance cleared
typecheckig node...
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
Function name: getCurrentLiquidity
High Call: getCurrentLiquidity
func name:getCurrentLiquidity
other func name:getCurrentLiquidity
TMP_99
hlc contract name: LPP func_name: getCurrentLiquidity
wfc len: 0
COPIED
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3'])
Function name: getCurrentLiquidity
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1'])
Function name: getCurrentLiquidity
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getCurrentLiquidity
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
Function name: getCurrentLiquidity
asgn

Name: TMP_99 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
has variable
[i] TMP_100 cleared
clearing ir...?
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
has variable
clearing ir...?
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_2', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
clearing ir...?
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
has variable
[i] TMP_101 cleared
clearing ir...?
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
has variable
clearing ir...?
TMP_102(uint256) = TMP_101 (c)- REF_2
has variable
[i] TMP_102 cleared
clearing ir...?
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
has variable
clearing ir...?
TMP_103(uint256) = TMP_102 (c)- REF_3
has variable
[i] TMP_103 cleared
clearing ir...?
currentLiquidity_1(uint256) := TMP_103(uint256)
has variable
[i] currentLiquidity cleared
typecheckig node...
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
Function name: getCurrentLiquidity
High Call: totalLPFees
func name:totalLPFees
other func name:totalLPFees
TMP_100
hlc contract name: LPP func_name: totalLPFees
wfc len: 0
COPIED
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getCurrentLiquidity
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getCurrentLiquidity
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_2', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getCurrentLiquidity
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
Function name: getCurrentLiquidity
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
Function name: getCurrentLiquidity
INDEX

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(uint256) = TMP_101 (c)- REF_2
Function name: getCurrentLiquidity
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_101 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
Function name: getCurrentLiquidity
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_3

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_103(uint256) = TMP_102 (c)- REF_3
Function name: getCurrentLiquidity
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
currentLiquidity_1(uint256) := TMP_103(uint256)
Function name: getCurrentLiquidity
asgn

Name: TMP_103 Function: getCurrentLiquidity
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "getCurrentLiquidity":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: getCurrentLiquidity

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Function name: getTransferFee
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
currentLiquidity_1(uint256) := TMP_228(uint256)
Function name: getTransferFee
asgn

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
currentLiquidity_1(uint256) := TMP_228(uint256)
XXXXX
typecheckig node...
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
Function name: getTransferFee
High Call: getSuppliedLiquidityByToken
func name:getSuppliedLiquidityByToken
other func name:getSuppliedLiquidityByToken
TMP_229
hlc contract name: LPP func_name: getSuppliedLiquidityByToken
wfc len: 0
COPIED
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_29(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_28', 'tokenManager_33', 'tokenManager_26'])
Function name: getTransferFee
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_42', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getTransferFee
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
providedLiquidity_1(uint256) := TMP_229(uint256)
Function name: getTransferFee
asgn

Name: TMP_229 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
Function name: getTransferFee
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
XXXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
Function name: getTransferFee
asgn

Name: TMP_230 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
Function name: getTransferFee
High Call: getTokensInfo
func name:getTokensInfo
other func name:getTokensInfo
TMP_231
hlc contract name: TokenManager func_name: getTokensInfo
wfc len: 0
COPIED
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: equilibriumFee
Finance Type: undef
done.
tokenManager_30(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26', 'tokenManager_29'])
Function name: getTransferFee
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
REF_62(uint256) -> TMP_231.equilibriumFee
Function name: getTransferFee
MEMBER
TMP_231
equilibriumFee
getTransferFee
TMP_231 Fields:
equilibriumFee
^^^

Name: equilibriumFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
equilibriumFee_1(uint256) := REF_62(uint256)
Function name: getTransferFee
asgn

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
Function name: getTransferFee
High Call: getTokensInfo
func name:getTokensInfo
other func name:getTokensInfo
TMP_232
hlc contract name: TokenManager func_name: getTokensInfo
wfc len: 0
COPIED
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: maxFee
Finance Type: undef
done.
tokenManager_31(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_30', 'tokenManager_33', 'tokenManager_26'])
Function name: getTransferFee
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
REF_64(uint256) -> TMP_232.maxFee
Function name: getTransferFee
MEMBER
TMP_232
maxFee
getTransferFee
TMP_232 Fields:
maxFee
^^^

Name: maxFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
maxFee_1(uint256) := REF_64(uint256)
Function name: getTransferFee
asgn

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
Function name: getTransferFee
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_234(uint256) = TMP_233 (c)* maxFee_1
Function name: getTransferFee
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
numerator_1(uint256) := TMP_234(uint256)
Function name: getTransferFee
asgn

Name: TMP_234 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
Function name: getTransferFee
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: providedLiquidity Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
Function name: getTransferFee
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
Function name: getTransferFee
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: resultingLiquidity Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_238(uint256) = TMP_235 (c)+ TMP_237
Function name: getTransferFee

Name: TMP_238 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_237 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
denominator_1(uint256) := TMP_238(uint256)
Function name: getTransferFee
asgn

Name: TMP_238 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_239(bool) = denominator_1 == 0
Function name: getTransferFee
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_239
Condition...
Conidtion: 
TMP_239
TMP_239
typecheckig node...
fee_1(uint256) := 0(uint256)
Function name: getTransferFee
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_240(uint256) = numerator_1 (c)/ denominator_1
Function name: getTransferFee
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_240 Function: getTransferFee
Num: -1
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_41 Function: None
Num: -1
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
fee_2(uint256) := TMP_240(uint256)
Function name: getTransferFee
asgn

Name: TMP_240 Function: getTransferFee
Num: -1
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: -1
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
WORKLIST iteration 1 for function call "getTransferFee":
 New undefined nodes- 2
 Old undefined nodes- 6
typecheckig node...
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Function name: getTransferFee
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: tokenAddress
Fields: 
Finance Type: undef
done.
amount_1(uint256) := ϕ(['amount_1'])
Function name: getTransferFee
Phi
[i]Type for amount

Name: amount Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_27(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_0', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: getTransferFee
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_41(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getTransferFee
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_228(uint256) = INTERNAL_CALL, LiquidityPool.getCurrentLiquidity(address)(tokenAddress_1)
Function name: getTransferFee
Internal call...
getCurrentLiquidity
tokenAddress
Function: getCurrentLiquidity
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: tokenAddress
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOKADDRESS
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'TOKADDRESS', [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'TOKADDRESS', [], -1]
added
xyz
Function name: getCurrentLiquidity
Function Visibility: public
clearning node...
clearing ir...?
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
has variable
[i] tokenAddress cleared
clearing ir...?
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
has variable
clearing ir...?
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
typecheckig node...
tokenAddress_1(address) := ϕ(['tokenAddress_1', 'tokenAddress_1'])
Function name: getCurrentLiquidity
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: 0
LF: tokenAddress
Fields: 
Finance Type: undef
done.
liquidityProviders_3(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getCurrentLiquidity
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_1(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getCurrentLiquidity
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_1(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getCurrentLiquidity
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
has variable
[i] TMP_99 cleared
clearing ir...?
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1'])
has variable
clearing ir...?
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
clearing ir...?
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
has variable
[i] liquidityPoolBalance cleared
typecheckig node...
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_3(ILiquidityProviders), function:getCurrentLiquidity, arguments:['tokenAddress_1']  
Function name: getCurrentLiquidity
High Call: getCurrentLiquidity
func name:getCurrentLiquidity
other func name:getCurrentLiquidity
TMP_99
hlc contract name: LPP func_name: getCurrentLiquidity
wfc len: 0
COPIED
[i]Type for TMP_99

Name: TMP_99 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_4(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5', 'liquidityProviders_3'])
Function name: getCurrentLiquidity
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_2(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_1'])
Function name: getCurrentLiquidity
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_2(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_1', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getCurrentLiquidity
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
liquidityPoolBalance_1(uint256) := TMP_99(uint256)
Function name: getCurrentLiquidity
asgn

Name: TMP_99 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityPoolBalance

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
has variable
[i] TMP_100 cleared
clearing ir...?
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
has variable
clearing ir...?
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_2', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
clearing ir...?
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
has variable
[i] TMP_101 cleared
clearing ir...?
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
has variable
clearing ir...?
TMP_102(uint256) = TMP_101 (c)- REF_2
has variable
[i] TMP_102 cleared
clearing ir...?
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
has variable
clearing ir...?
TMP_103(uint256) = TMP_102 (c)- REF_3
has variable
[i] TMP_103 cleared
clearing ir...?
currentLiquidity_1(uint256) := TMP_103(uint256)
has variable
[i] currentLiquidity cleared
typecheckig node...
TMP_100(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_4(ILiquidityProviders), function:totalLPFees, arguments:['tokenAddress_1']  
Function name: getCurrentLiquidity
High Call: totalLPFees
func name:totalLPFees
other func name:totalLPFees
TMP_100
hlc contract name: LPP func_name: totalLPFees
wfc len: 0
COPIED
[i]Type for TMP_100

Name: TMP_100 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_5(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_4', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getCurrentLiquidity
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_3(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_2', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getCurrentLiquidity
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_3(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_2', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getCurrentLiquidity
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_101(uint256) = liquidityPoolBalance_1 (c)- TMP_100
Function name: getCurrentLiquidity
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: liquidityPoolBalance Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_101 Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_101

Name: TMP_101 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_2(uint256) -> gasFeeAccumulatedByToken_3[tokenAddress_1]
Function name: getCurrentLiquidity
INDEX

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_2

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(uint256) = TMP_101 (c)- REF_2
Function name: getCurrentLiquidity
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_101 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_3(uint256) -> incentivePool_3[tokenAddress_1]
Function name: getCurrentLiquidity
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_3

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_103(uint256) = TMP_102 (c)- REF_3
Function name: getCurrentLiquidity
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_102 Function: getCurrentLiquidity
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_103 Function: getCurrentLiquidity
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: getCurrentLiquidity
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
currentLiquidity_1(uint256) := TMP_103(uint256)
Function name: getCurrentLiquidity
asgn

Name: TMP_103 Function: getCurrentLiquidity
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getCurrentLiquidity
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidity

Name: currentLiquidity Function: getCurrentLiquidity
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "getCurrentLiquidity":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: getCurrentLiquidity

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_228

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityProviders_42(ILiquidityProviders) := ϕ(['liquidityProviders_5'])
Function name: getTransferFee
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
currentLiquidity_1(uint256) := TMP_228(uint256)
Function name: getTransferFee
asgn

Name: TMP_228 Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidity

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
currentLiquidity_1(uint256) := TMP_228(uint256)
XXXXX
typecheckig node...
TMP_229(uint256) = HIGH_LEVEL_CALL, dest:liquidityProviders_42(ILiquidityProviders), function:getSuppliedLiquidityByToken, arguments:['tokenAddress_1']  
Function name: getTransferFee
High Call: getSuppliedLiquidityByToken
func name:getSuppliedLiquidityByToken
other func name:getSuppliedLiquidityByToken
TMP_229
hlc contract name: LPP func_name: getSuppliedLiquidityByToken
wfc len: 0
COPIED
[i]Type for TMP_229

Name: TMP_229 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_29(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_28', 'tokenManager_33', 'tokenManager_26'])
Function name: getTransferFee
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_43(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_42', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getTransferFee
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
providedLiquidity_1(uint256) := TMP_229(uint256)
Function name: getTransferFee
asgn

Name: TMP_229 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: providedLiquidity Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for providedLiquidity

Name: providedLiquidity Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
Function name: getTransferFee
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: currentLiquidity Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_230 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_230

Name: TMP_230 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_230(uint256) = currentLiquidity_1 (c)- amount_1
XXXXX
resultingLiquidity_1(uint256) := TMP_230(uint256)
Function name: getTransferFee
asgn

Name: TMP_230 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: resultingLiquidity Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for resultingLiquidity

Name: resultingLiquidity Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_231(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_29(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
Function name: getTransferFee
High Call: getTokensInfo
func name:getTokensInfo
other func name:getTokensInfo
TMP_231
hlc contract name: TokenManager func_name: getTokensInfo
wfc len: 0
COPIED
[i]Type for TMP_231

Name: TMP_231 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: equilibriumFee
Finance Type: undef
done.
tokenManager_30(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26', 'tokenManager_29'])
Function name: getTransferFee
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
REF_62(uint256) -> TMP_231.equilibriumFee
Function name: getTransferFee
MEMBER
TMP_231
equilibriumFee
getTransferFee
TMP_231 Fields:
equilibriumFee
^^^

Name: equilibriumFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_62

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
equilibriumFee_1(uint256) := REF_62(uint256)
Function name: getTransferFee
asgn

Name: TMP_231.equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for equilibriumFee

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_232(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_30(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
Function name: getTransferFee
High Call: getTokensInfo
func name:getTokensInfo
other func name:getTokensInfo
TMP_232
hlc contract name: TokenManager func_name: getTokensInfo
wfc len: 0
COPIED
[i]Type for TMP_232

Name: TMP_232 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: maxFee
Finance Type: undef
done.
tokenManager_31(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_30', 'tokenManager_33', 'tokenManager_26'])
Function name: getTransferFee
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
REF_64(uint256) -> TMP_232.maxFee
Function name: getTransferFee
MEMBER
TMP_232
maxFee
getTransferFee
TMP_232 Fields:
maxFee
^^^

Name: maxFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_64

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
maxFee_1(uint256) := REF_64(uint256)
Function name: getTransferFee
asgn

Name: TMP_232.maxFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for maxFee

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_233(uint256) = providedLiquidity_1 (c)* equilibriumFee_1
Function name: getTransferFee
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_233 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_233

Name: TMP_233 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_234(uint256) = TMP_233 (c)* maxFee_1
Function name: getTransferFee
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_234 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_234

Name: TMP_234 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
numerator_1(uint256) := TMP_234(uint256)
Function name: getTransferFee
asgn

Name: TMP_234 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: numerator Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for numerator

Name: numerator Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_235(uint256) = equilibriumFee_1 (c)* providedLiquidity_1
Function name: getTransferFee
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: providedLiquidity Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_235 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_235

Name: TMP_235 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_236(uint256) = maxFee_1 (c)- equilibriumFee_1
Function name: getTransferFee
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: maxFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_236

Name: TMP_236 Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_237(uint256) = TMP_236 (c)* resultingLiquidity_1
Function name: getTransferFee
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: resultingLiquidity Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_237 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_237

Name: TMP_237 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_238(uint256) = TMP_235 (c)+ TMP_237
Function name: getTransferFee

Name: TMP_238 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_237 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_238 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_238

Name: TMP_238 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
denominator_1(uint256) := TMP_238(uint256)
Function name: getTransferFee
asgn

Name: TMP_238 Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: denominator Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for denominator

Name: denominator Function: getTransferFee
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_239(bool) = denominator_1 == 0
Function name: getTransferFee
[i]Type for TMP_239

Name: TMP_239 Function: getTransferFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_239
Condition...
Conidtion: 
TMP_239
TMP_239
typecheckig node...
fee_1(uint256) := 0(uint256)
Function name: getTransferFee
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_240(uint256) = numerator_1 (c)/ denominator_1
Function name: getTransferFee
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_240 Function: getTransferFee
Num: -1
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_44 Function: None
Num: -1
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_240

Name: TMP_240 Function: getTransferFee
Num: -1
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
fee_2(uint256) := TMP_240(uint256)
Function name: getTransferFee
asgn

Name: TMP_240 Function: getTransferFee
Num: -1
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: fee Function: getTransferFee
Num: -1
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for fee

Name: fee Function: getTransferFee
Num: -1
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
WORKLIST iteration 2 for function call "getTransferFee":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: getTransferFee

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_199

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_199(uint256) = INTERNAL_CALL, LiquidityPool.getTransferFee(address,uint256)(tokenAddress_1,amount_1)
XXXXX
tokenManager_21(ITokenManager) := ϕ(['tokenManager_31'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_36(ILiquidityProviders) := ϕ(['liquidityProviders_43'])
Function name: getAmountToTransfer
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
transferFeePerc_1(uint256) := TMP_199(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for transferFeePerc

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
transferFeePerc_1(uint256) := TMP_199(uint256)
XXXXX
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_200(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_21(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
has variable
[i] TMP_200 cleared
clearing ir...?
BASE_DIVISOR_3(uint256) := ϕ(['BASE_DIVISOR_5', 'BASE_DIVISOR_2', 'BASE_DIVISOR_3'])
has variable
clearing ir...?
baseGas_5(uint256) := ϕ(['baseGas_4', 'baseGas_9', 'baseGas_2', 'baseGas_1'])
has variable
clearing ir...?
tokenManager_22(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_21', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
has variable
clearing ir...?
liquidityProviders_37(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_36', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_6(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_5', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
has variable
clearing ir...?
gasFeeAccumulated_3(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_2', 'gasFeeAccumulated_22', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
has variable
clearing ir...?
incentivePool_25(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_24', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
clearing ir...?
REF_44(uint256) -> TMP_200.equilibriumFee
has variable
clearing ir...?
TMP_201(bool) = transferFeePerc_1 > REF_44
has variable
[i] TMP_201 cleared
clearing ir...?
CONDITION TMP_201
typecheckig node...
TMP_200(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_21(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
Function name: getAmountToTransfer
High Call: getTokensInfo
func name:getTokensInfo
other func name:getTokensInfo
TMP_200
hlc contract name: TokenManager func_name: getTokensInfo
wfc len: 0
COPIED
[i]Type for TMP_200

Name: TMP_200 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
BASE_DIVISOR_3(uint256) := ϕ(['BASE_DIVISOR_5', 'BASE_DIVISOR_2', 'BASE_DIVISOR_3'])
Function name: getAmountToTransfer
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
done.
baseGas_5(uint256) := ϕ(['baseGas_4', 'baseGas_9', 'baseGas_2', 'baseGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for baseGas

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_22(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_21', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_37(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_36', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getAmountToTransfer
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_6(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_5', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_3(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_2', 'gasFeeAccumulated_22', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_25(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_24', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getAmountToTransfer
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_44(uint256) -> TMP_200.equilibriumFee
Function name: getAmountToTransfer
MEMBER
TMP_200
equilibriumFee
getAmountToTransfer
TMP_200 Fields:
^^^
[i]Type for REF_44

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_201(bool) = transferFeePerc_1 > REF_44
Function name: getAmountToTransfer
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
False

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_201 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_201

Name: TMP_201 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_201(bool) = transferFeePerc_1 > REF_44
XXXXX
CONDITION TMP_201
Condition...
Conidtion: 
TMP_201
TMP_201
clearning node...
clearing ir...?
TMP_202(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_22(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
has variable
[i] TMP_202 cleared
clearing ir...?
BASE_DIVISOR_4(uint256) := ϕ(['BASE_DIVISOR_5', 'BASE_DIVISOR_3'])
has variable
clearing ir...?
baseGas_6(uint256) := ϕ(['baseGas_5', 'baseGas_9', 'baseGas_2', 'baseGas_1'])
has variable
clearing ir...?
tokenManager_23(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_22', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
has variable
clearing ir...?
liquidityProviders_38(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_37', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_7(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_6', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
has variable
clearing ir...?
gasFeeAccumulated_4(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_22', 'gasFeeAccumulated_3', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
has variable
clearing ir...?
incentivePool_26(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
clearing ir...?
REF_46(uint256) -> TMP_202.equilibriumFee
has variable
clearing ir...?
TMP_203(uint256) = amount_1 (c)* REF_46
has variable
[i] TMP_203 cleared
clearing ir...?
TMP_204(uint256) = TMP_203 (c)/ BASE_DIVISOR_4
has variable
[i] TMP_204 cleared
clearing ir...?
lpFee_1(uint256) := TMP_204(uint256)
has variable
[i] lpFee cleared
typecheckig node...
TMP_202(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_22(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
Function name: getAmountToTransfer
High Call: getTokensInfo
func name:getTokensInfo
other func name:getTokensInfo
TMP_202
hlc contract name: TokenManager func_name: getTokensInfo
wfc len: 0
COPIED
[i]Type for TMP_202

Name: TMP_202 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
BASE_DIVISOR_4(uint256) := ϕ(['BASE_DIVISOR_5', 'BASE_DIVISOR_3'])
Function name: getAmountToTransfer
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
done.
baseGas_6(uint256) := ϕ(['baseGas_5', 'baseGas_9', 'baseGas_2', 'baseGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for baseGas

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_23(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_22', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_38(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_37', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getAmountToTransfer
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_7(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_6', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_4(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_22', 'gasFeeAccumulated_3', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_26(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getAmountToTransfer
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_46(uint256) -> TMP_202.equilibriumFee
Function name: getAmountToTransfer
MEMBER
TMP_202
equilibriumFee
getAmountToTransfer
TMP_202 Fields:
^^^
[i]Type for REF_46

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_203(uint256) = amount_1 (c)* REF_46
Function name: getAmountToTransfer
testing mul...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_203 Function: getAmountToTransfer
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_203

Name: TMP_203 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_203(uint256) = amount_1 (c)* REF_46
XXXXX
TMP_204(uint256) = TMP_203 (c)/ BASE_DIVISOR_4
Function name: getAmountToTransfer
lnorm: 0 rnorm: 6
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_204 Function: getAmountToTransfer
Num: 
Den: 
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: TMP_203 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_204 Function: getAmountToTransfer
Num: 
Den: 
Norm: -6
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_204

Name: TMP_204 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
lpFee_1(uint256) := TMP_204(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_204 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
has variable
[i] TMP_210 cleared
clearing ir...?
TMP_211(uint256) = TMP_210 (c)/ BASE_DIVISOR_3
has variable
[i] TMP_211 cleared
clearing ir...?
lpFee_2(uint256) := TMP_211(uint256)
has variable
[i] lpFee cleared
typecheckig node...
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
Function name: getAmountToTransfer
testing mul...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_210 Function: getAmountToTransfer
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_210

Name: TMP_210 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
XXXXX
TMP_211(uint256) = TMP_210 (c)/ BASE_DIVISOR_3
Function name: getAmountToTransfer
lnorm: 0 rnorm: 6
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_211 Function: getAmountToTransfer
Num: 
Den: 
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: TMP_210 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_211 Function: getAmountToTransfer
Num: 
Den: 
Norm: -6
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_211

Name: TMP_211 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
lpFee_2(uint256) := TMP_211(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_211 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_47(uint256) -> incentivePool_26[tokenAddress_1]
has variable
clearing ir...?
REF_48(uint256) -> incentivePool_26[tokenAddress_1]
has variable
clearing ir...?
TMP_205(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_23(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
has variable
[i] TMP_205 cleared
clearing ir...?
BASE_DIVISOR_5(uint256) := ϕ(['BASE_DIVISOR_4', 'BASE_DIVISOR_5', 'BASE_DIVISOR_3'])
has variable
clearing ir...?
baseGas_7(uint256) := ϕ(['baseGas_6', 'baseGas_9', 'baseGas_2', 'baseGas_1'])
has variable
clearing ir...?
tokenManager_24(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_23', 'tokenManager_26'])
has variable
clearing ir...?
liquidityProviders_39(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_38', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_8(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_7'])
has variable
clearing ir...?
gasFeeAccumulated_5(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_4', 'gasFeeAccumulated_22', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
has variable
clearing ir...?
incentivePool_27(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_26', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
has variable
clearing ir...?
REF_50(uint256) -> TMP_205.equilibriumFee
has variable
clearing ir...?
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
has variable
[i] TMP_206 cleared
clearing ir...?
TMP_207(uint256) = amount_1 (c)* TMP_206
has variable
[i] TMP_207 cleared
clearing ir...?
TMP_208(uint256) = REF_48 (c)+ TMP_207
has variable
[i] TMP_208 cleared
clearing ir...?
TMP_209(uint256) = TMP_208 (c)/ BASE_DIVISOR_5
has variable
[i] TMP_209 cleared
clearing ir...?
incentivePool_28(mapping(address => uint256)) := ϕ(['incentivePool_26'])
has variable
clearing ir...?
REF_47 (->incentivePool_28) := TMP_209(uint256)
has variable
typecheckig node...
REF_47(uint256) -> incentivePool_26[tokenAddress_1]
Function name: getAmountToTransfer
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_47

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_48(uint256) -> incentivePool_26[tokenAddress_1]
Function name: getAmountToTransfer
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_48

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_205(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_23(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
Function name: getAmountToTransfer
High Call: getTokensInfo
func name:getTokensInfo
other func name:getTokensInfo
TMP_205
hlc contract name: TokenManager func_name: getTokensInfo
wfc len: 0
COPIED
[i]Type for TMP_205

Name: TMP_205 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
BASE_DIVISOR_5(uint256) := ϕ(['BASE_DIVISOR_4', 'BASE_DIVISOR_5', 'BASE_DIVISOR_3'])
Function name: getAmountToTransfer
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
done.
baseGas_7(uint256) := ϕ(['baseGas_6', 'baseGas_9', 'baseGas_2', 'baseGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for baseGas

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_24(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_23', 'tokenManager_26'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_39(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_38', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getAmountToTransfer
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_8(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_7'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_5(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_4', 'gasFeeAccumulated_22', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_27(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_26', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getAmountToTransfer
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_50(uint256) -> TMP_205.equilibriumFee
Function name: getAmountToTransfer
MEMBER
TMP_205
equilibriumFee
getAmountToTransfer
TMP_205 Fields:
^^^
[i]Type for REF_50

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
Function name: getAmountToTransfer
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
XXXXX
TMP_207(uint256) = amount_1 (c)* TMP_206
Function name: getAmountToTransfer
testing mul...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_207 Function: getAmountToTransfer
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_207

Name: TMP_207 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_207(uint256) = amount_1 (c)* TMP_206
XXXXX
TMP_208(uint256) = REF_48 (c)+ TMP_207
Function name: getAmountToTransfer

Name: TMP_208 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_208 Function: getAmountToTransfer
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_208

Name: TMP_208 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_209(uint256) = TMP_208 (c)/ BASE_DIVISOR_5
Function name: getAmountToTransfer
lnorm: 0 rnorm: 6
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_209 Function: getAmountToTransfer
Num: 
Den: 
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: TMP_208 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_209 Function: getAmountToTransfer
Num: 
Den: 
Norm: -6
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_28(mapping(address => uint256)) := ϕ(['incentivePool_26'])
Function name: getAmountToTransfer
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_47 (->incentivePool_28) := TMP_209(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_209 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: REF_47 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_47

Name: REF_47 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
lpFee_3(uint256) := ϕ(['lpFee_1', 'lpFee_2'])
has variable
[i] lpFee cleared
typecheckig node...
lpFee_3(uint256) := ϕ(['lpFee_1', 'lpFee_2'])
Function name: getAmountToTransfer
Phi
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
has variable
[i] TMP_212 cleared
clearing ir...?
TMP_213(uint256) = TMP_212 (c)/ BASE_DIVISOR_3
has variable
[i] TMP_213 cleared
clearing ir...?
transferFeeAmount_1(uint256) := TMP_213(uint256)
has variable
[i] transferFeeAmount cleared
typecheckig node...
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
Function name: getAmountToTransfer
testing mul...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_212 Function: getAmountToTransfer
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_212

Name: TMP_212 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
XXXXX
TMP_213(uint256) = TMP_212 (c)/ BASE_DIVISOR_3
Function name: getAmountToTransfer
lnorm: 0 rnorm: 6
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_213 Function: getAmountToTransfer
Num: 
Den: 
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: TMP_212 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_213 Function: getAmountToTransfer
Num: 
Den: 
Norm: -6
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_213

Name: TMP_213 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
transferFeeAmount_1(uint256) := TMP_213(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_213 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: transferFeeAmount Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for transferFeeAmount

Name: transferFeeAmount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
HIGH_LEVEL_CALL, dest:liquidityProviders_37(ILiquidityProviders), function:addLPFee, arguments:['tokenAddress_1', 'lpFee_3']  
clearing ir...?
baseGas_8(uint256) := ϕ(['baseGas_7', 'baseGas_9', 'baseGas_2', 'baseGas_1'])
has variable
clearing ir...?
tokenManager_25(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_24', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
has variable
clearing ir...?
liquidityProviders_40(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_39', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_9(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_8', 'gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
has variable
clearing ir...?
gasFeeAccumulated_6(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_5', 'gasFeeAccumulated_22', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
has variable
typecheckig node...
HIGH_LEVEL_CALL, dest:liquidityProviders_37(ILiquidityProviders), function:addLPFee, arguments:['tokenAddress_1', 'lpFee_3']  
High Call: addLPFee
func name:addLPFee
other func name:addLPFee
done.
baseGas_8(uint256) := ϕ(['baseGas_7', 'baseGas_9', 'baseGas_2', 'baseGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for baseGas

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_25(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_24', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_40(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_39', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getAmountToTransfer
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_9(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_8', 'gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_6(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_5', 'gasFeeAccumulated_22', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_215(uint256) = SOLIDITY_CALL gasleft()()
clearing ir...?
TMP_216(uint256) = initialGas_1 (c)- TMP_215
has variable
[i] TMP_216 cleared
clearing ir...?
totalGasUsed_1(uint256) := TMP_216(uint256)
has variable
[i] totalGasUsed cleared
typecheckig node...
TMP_215(uint256) = SOLIDITY_CALL gasleft()()
[i]Type for TMP_215

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_216(uint256) = initialGas_1 (c)- TMP_215
Function name: getAmountToTransfer
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: initialGas Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_215 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: initialGas Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_216 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_216

Name: TMP_216 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_216(uint256) = initialGas_1 (c)- TMP_215
XXXXX
totalGasUsed_1(uint256) := TMP_216(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_216 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_217(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_25(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
has variable
[i] TMP_217 cleared
clearing ir...?
baseGas_9(uint256) := ϕ(['baseGas_9', 'baseGas_2', 'baseGas_8', 'baseGas_1'])
has variable
clearing ir...?
tokenManager_26(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_25', 'tokenManager_33', 'tokenManager_26'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_10(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_9'])
has variable
clearing ir...?
gasFeeAccumulated_7(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_6', 'gasFeeAccumulated_22', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
has variable
clearing ir...?
REF_53(uint256) -> TMP_217.transferOverhead
has variable
clearing ir...?
TMP_218(uint256) = totalGasUsed_1 (c)+ REF_53
has variable
[i] TMP_218 cleared
clearing ir...?
totalGasUsed_2(uint256) := TMP_218(uint256)
has variable
[i] totalGasUsed cleared
typecheckig node...
TMP_217(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_25(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
Function name: getAmountToTransfer
High Call: getTokensInfo
func name:getTokensInfo
other func name:getTokensInfo
TMP_217
hlc contract name: TokenManager func_name: getTokensInfo
wfc len: 0
COPIED
[i]Type for TMP_217

Name: TMP_217 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
baseGas_9(uint256) := ϕ(['baseGas_9', 'baseGas_2', 'baseGas_8', 'baseGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for baseGas

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_26(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_25', 'tokenManager_33', 'tokenManager_26'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_10(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_9'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_7(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_6', 'gasFeeAccumulated_22', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_53(uint256) -> TMP_217.transferOverhead
Function name: getAmountToTransfer
MEMBER
TMP_217
transferOverhead
getAmountToTransfer
TMP_217 Fields:
^^^
[i]Type for REF_53

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: transferOverhead Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_218(uint256) = totalGasUsed_1 (c)+ REF_53
Function name: getAmountToTransfer

Name: TMP_218 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_218 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_218

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_218(uint256) = totalGasUsed_1 (c)+ REF_53
XXXXX
totalGasUsed_2(uint256) := TMP_218(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_219(uint256) = totalGasUsed_2 (c)+ baseGas_9
has variable
[i] TMP_219 cleared
clearing ir...?
totalGasUsed_3(uint256) := TMP_219(uint256)
has variable
[i] totalGasUsed cleared
typecheckig node...
TMP_219(uint256) = totalGasUsed_2 (c)+ baseGas_9
Function name: getAmountToTransfer

Name: TMP_219 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_219 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_219

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalGasUsed_3(uint256) := TMP_219(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_220(uint256) = totalGasUsed_3 (c)* tokenGasPrice_1
has variable
[i] TMP_220 cleared
clearing ir...?
gasFee_1(uint256) := TMP_220(uint256)
has variable
[i] gasFee cleared
typecheckig node...
TMP_220(uint256) = totalGasUsed_3 (c)* tokenGasPrice_1
Function name: getAmountToTransfer
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: tokenGasPrice Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_220 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_220

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFee_1(uint256) := TMP_220(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: gasFee Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for gasFee

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_54(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
has variable
clearing ir...?
REF_55(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
has variable
clearing ir...?
TMP_221(uint256) = REF_55 (c)+ gasFee_1
has variable
[i] TMP_221 cleared
clearing ir...?
gasFeeAccumulatedByToken_11(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_10'])
has variable
clearing ir...?
REF_54 (->gasFeeAccumulatedByToken_11) := TMP_221(uint256)
has variable
typecheckig node...
REF_54(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
Function name: getAmountToTransfer
INDEX

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_54

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_55(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
Function name: getAmountToTransfer
INDEX

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_55

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_221(uint256) = REF_55 (c)+ gasFee_1
Function name: getAmountToTransfer

Name: TMP_221 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_221 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_221

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_11(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_10'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_54 (->gasFeeAccumulatedByToken_11) := TMP_221(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_54

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_56(mapping(address => uint256)) -> gasFeeAccumulated_7[tokenAddress_1]
has variable
clearing ir...?
TMP_222(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
has variable
[i] TMP_222 cleared
clearing ir...?
REF_57(uint256) -> REF_56[TMP_222]
has variable
clearing ir...?
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
has variable
clearing ir...?
TMP_223(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
has variable
[i] TMP_223 cleared
clearing ir...?
REF_59(uint256) -> REF_58[TMP_223]
has variable
clearing ir...?
TMP_224(uint256) = REF_59 (c)+ gasFee_1
has variable
[i] TMP_224 cleared
clearing ir...?
gasFeeAccumulated_10(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_7'])
has variable
clearing ir...?
REF_57 (->gasFeeAccumulated_10) := TMP_224(uint256)
has variable
typecheckig node...
REF_56(mapping(address => uint256)) -> gasFeeAccumulated_7[tokenAddress_1]
Function name: getAmountToTransfer
INDEX

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_56

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_222(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: getAmountToTransfer
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_13 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_222 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_222

Name: TMP_222 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_57(uint256) -> REF_56[TMP_222]
Function name: getAmountToTransfer
INDEX

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_57

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
Function name: getAmountToTransfer
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
gasFeeAccumulated
[i]Type for REF_58

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
XXXXX
TMP_223(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: getAmountToTransfer
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_13 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_223 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_223

Name: TMP_223 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_59(uint256) -> REF_58[TMP_223]
Function name: getAmountToTransfer
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_59

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_224(uint256) = REF_59 (c)+ gasFee_1
Function name: getAmountToTransfer

Name: TMP_224 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_224 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_224

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_10(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_7'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_57 (->gasFeeAccumulated_10) := TMP_224(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_57

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_225(uint256) = transferFeeAmount_1 (c)+ gasFee_1
has variable
[i] TMP_225 cleared
clearing ir...?
TMP_226(uint256) = amount_1 (c)- TMP_225
has variable
[i] TMP_226 cleared
clearing ir...?
amountToTransfer_1(uint256) := TMP_226(uint256)
has variable
[i] amountToTransfer cleared
typecheckig node...
TMP_225(uint256) = transferFeeAmount_1 (c)+ gasFee_1
Function name: getAmountToTransfer

Name: TMP_225 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: -6 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: transferFeeAmount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: TMP_225 Function: getAmountToTransfer
Num: 
Den: 
Norm: -6
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_225

Name: TMP_225 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
TMP_226(uint256) = amount_1 (c)- TMP_225
Function name: getAmountToTransfer
Error with TMP_226 in function getAmountToTransfer
Error with: TMP_226 in function getAmountToTransfer
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fdb9fee39d0>]
lnorm: 0 rnorm: -6
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_225 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_226 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_226

Name: TMP_226 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amountToTransfer_1(uint256) := TMP_226(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_226 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amountToTransfer Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amountToTransfer

Name: amountToTransfer Function: getAmountToTransfer
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit FeeDetails(lpFee_3,transferFeeAmount_1,gasFee_1)
typecheckig node...
Emit FeeDetails(lpFee_3,transferFeeAmount_1,gasFee_1)
WORKLIST iteration 0 for function call "getAmountToTransfer":
 New undefined nodes- 9
 Old undefined nodes- 0
typecheckig node...
initialGas_1(uint256) := ϕ(['initialGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for initialGas

Name: initialGas Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint256) := ϕ(['amount_1'])
Function name: getAmountToTransfer
Phi
[i]Type for amount

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
tokenGasPrice_1(uint256) := ϕ(['tokenGasPrice_1'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenGasPrice

Name: tokenGasPrice Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
BASE_DIVISOR_1(uint256) := ϕ(['BASE_DIVISOR_5', 'BASE_DIVISOR_0', 'BASE_DIVISOR_3'])
Function name: getAmountToTransfer
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
done.
baseGas_3(uint256) := ϕ(['baseGas_9', 'baseGas_0', 'baseGas_2', 'baseGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for baseGas

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_20(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_0', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_35(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getAmountToTransfer
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_4(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_1(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_22', 'gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_23(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getAmountToTransfer
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_199(uint256) = INTERNAL_CALL, LiquidityPool.getTransferFee(address,uint256)(tokenAddress_1,amount_1)
Function name: getAmountToTransfer
Internal call...
getTransferFee
tokenAddress
amount
Function: getTransferFee
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[1], [-1], 0, None, [], -1]
0

Name: PIC_45 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_199

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_21(ITokenManager) := ϕ(['tokenManager_31'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_36(ILiquidityProviders) := ϕ(['liquidityProviders_43'])
Function name: getAmountToTransfer
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
transferFeePerc_1(uint256) := TMP_199(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for transferFeePerc

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
transferFeePerc_1(uint256) := TMP_199(uint256)
XXXXX
typecheckig node...
typecheckig node...
TMP_200(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_21(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
Function name: getAmountToTransfer
High Call: getTokensInfo
func name:getTokensInfo
other func name:getTokensInfo
TMP_200
hlc contract name: TokenManager func_name: getTokensInfo
wfc len: 0
COPIED
[i]Type for TMP_200

Name: TMP_200 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: equilibriumFee
Finance Type: undef
done.
BASE_DIVISOR_3(uint256) := ϕ(['BASE_DIVISOR_5', 'BASE_DIVISOR_2', 'BASE_DIVISOR_3'])
Function name: getAmountToTransfer
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
done.
baseGas_5(uint256) := ϕ(['baseGas_4', 'baseGas_9', 'baseGas_2', 'baseGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for baseGas

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_22(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_21', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_37(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_36', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getAmountToTransfer
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_6(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_5', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_3(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_2', 'gasFeeAccumulated_22', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_25(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_24', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getAmountToTransfer
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_44(uint256) -> TMP_200.equilibriumFee
Function name: getAmountToTransfer
MEMBER
TMP_200
equilibriumFee
getAmountToTransfer
TMP_200 Fields:
equilibriumFee
^^^

Name: equilibriumFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_44

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_201(bool) = transferFeePerc_1 > REF_44
Function name: getAmountToTransfer
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
True

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_201 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_201

Name: TMP_201 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_201(bool) = transferFeePerc_1 > REF_44
XXXXX
CONDITION TMP_201
Condition...
Conidtion: 
TMP_201
TMP_201
typecheckig node...
TMP_202(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_22(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
Function name: getAmountToTransfer
High Call: getTokensInfo
func name:getTokensInfo
other func name:getTokensInfo
TMP_202
hlc contract name: TokenManager func_name: getTokensInfo
wfc len: 0
COPIED
[i]Type for TMP_202

Name: TMP_202 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: equilibriumFee
Finance Type: undef
done.
BASE_DIVISOR_4(uint256) := ϕ(['BASE_DIVISOR_5', 'BASE_DIVISOR_3'])
Function name: getAmountToTransfer
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
done.
baseGas_6(uint256) := ϕ(['baseGas_5', 'baseGas_9', 'baseGas_2', 'baseGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for baseGas

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_23(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_22', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_38(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_37', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getAmountToTransfer
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_7(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_6', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_4(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_22', 'gasFeeAccumulated_3', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_26(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getAmountToTransfer
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_46(uint256) -> TMP_202.equilibriumFee
Function name: getAmountToTransfer
MEMBER
TMP_202
equilibriumFee
getAmountToTransfer
TMP_202 Fields:
equilibriumFee
^^^

Name: equilibriumFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_46

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_203(uint256) = amount_1 (c)* REF_46
Function name: getAmountToTransfer
testing mul...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_203 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_203

Name: TMP_203 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_204(uint256) = TMP_203 (c)/ BASE_DIVISOR_4
Function name: getAmountToTransfer
lnorm: 0 rnorm: 6
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_204 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: TMP_203 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_204 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_204

Name: TMP_204 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
lpFee_1(uint256) := TMP_204(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_204 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
Function name: getAmountToTransfer
testing mul...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_210 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_210

Name: TMP_210 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
XXXXX
TMP_211(uint256) = TMP_210 (c)/ BASE_DIVISOR_3
Function name: getAmountToTransfer
lnorm: 0 rnorm: 6
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_211 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: TMP_210 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_211 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_211

Name: TMP_211 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
lpFee_2(uint256) := TMP_211(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_211 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_47(uint256) -> incentivePool_26[tokenAddress_1]
Function name: getAmountToTransfer
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_47

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_48(uint256) -> incentivePool_26[tokenAddress_1]
Function name: getAmountToTransfer
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_48

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_205(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_23(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
Function name: getAmountToTransfer
High Call: getTokensInfo
func name:getTokensInfo
other func name:getTokensInfo
TMP_205
hlc contract name: TokenManager func_name: getTokensInfo
wfc len: 0
COPIED
[i]Type for TMP_205

Name: TMP_205 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: equilibriumFee
Finance Type: undef
done.
BASE_DIVISOR_5(uint256) := ϕ(['BASE_DIVISOR_4', 'BASE_DIVISOR_5', 'BASE_DIVISOR_3'])
Function name: getAmountToTransfer
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
done.
baseGas_7(uint256) := ϕ(['baseGas_6', 'baseGas_9', 'baseGas_2', 'baseGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for baseGas

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_24(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_23', 'tokenManager_26'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_39(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_38', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getAmountToTransfer
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_8(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_7'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_5(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_4', 'gasFeeAccumulated_22', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_27(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_26', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getAmountToTransfer
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_50(uint256) -> TMP_205.equilibriumFee
Function name: getAmountToTransfer
MEMBER
TMP_205
equilibriumFee
getAmountToTransfer
TMP_205 Fields:
equilibriumFee
^^^

Name: equilibriumFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_50

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
Function name: getAmountToTransfer
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
XXXXX
TMP_207(uint256) = amount_1 (c)* TMP_206
Function name: getAmountToTransfer
testing mul...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_207 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_207

Name: TMP_207 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_208(uint256) = REF_48 (c)+ TMP_207
Function name: getAmountToTransfer

Name: TMP_208 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_208 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_208

Name: TMP_208 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_209(uint256) = TMP_208 (c)/ BASE_DIVISOR_5
Function name: getAmountToTransfer
lnorm: 0 rnorm: 6
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_209 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: TMP_208 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_209 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_28(mapping(address => uint256)) := ϕ(['incentivePool_26'])
Function name: getAmountToTransfer
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_47 (->incentivePool_28) := TMP_209(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_209 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: REF_47 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_47

Name: REF_47 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
lpFee_3(uint256) := ϕ(['lpFee_1', 'lpFee_2'])
Function name: getAmountToTransfer
Phi
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
Function name: getAmountToTransfer
testing mul...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_212 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_212

Name: TMP_212 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
XXXXX
TMP_213(uint256) = TMP_212 (c)/ BASE_DIVISOR_3
Function name: getAmountToTransfer
lnorm: 0 rnorm: 6
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_213 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: TMP_212 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_213 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_213

Name: TMP_213 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
transferFeeAmount_1(uint256) := TMP_213(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_213 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: transferFeeAmount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for transferFeeAmount

Name: transferFeeAmount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
HIGH_LEVEL_CALL, dest:liquidityProviders_37(ILiquidityProviders), function:addLPFee, arguments:['tokenAddress_1', 'lpFee_3']  
High Call: addLPFee
func name:addLPFee
other func name:addLPFee
done.
baseGas_8(uint256) := ϕ(['baseGas_7', 'baseGas_9', 'baseGas_2', 'baseGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for baseGas

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_25(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_24', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_40(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_39', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getAmountToTransfer
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_9(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_8', 'gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_6(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_5', 'gasFeeAccumulated_22', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_215(uint256) = SOLIDITY_CALL gasleft()()
[i]Type for TMP_215

Name: TMP_215 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_216(uint256) = initialGas_1 (c)- TMP_215
Function name: getAmountToTransfer
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: initialGas Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_215 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: initialGas Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_216 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_216

Name: TMP_216 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_216(uint256) = initialGas_1 (c)- TMP_215
XXXXX
totalGasUsed_1(uint256) := TMP_216(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_216 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_217(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_25(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
Function name: getAmountToTransfer
High Call: getTokensInfo
func name:getTokensInfo
other func name:getTokensInfo
TMP_217
hlc contract name: TokenManager func_name: getTokensInfo
wfc len: 0
COPIED
[i]Type for TMP_217

Name: TMP_217 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: transferOverhead
Finance Type: undef
done.
baseGas_9(uint256) := ϕ(['baseGas_9', 'baseGas_2', 'baseGas_8', 'baseGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for baseGas

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_26(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_25', 'tokenManager_33', 'tokenManager_26'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_10(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_9'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_7(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_6', 'gasFeeAccumulated_22', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_53(uint256) -> TMP_217.transferOverhead
Function name: getAmountToTransfer
MEMBER
TMP_217
transferOverhead
getAmountToTransfer
TMP_217 Fields:
transferOverhead
^^^

Name: transferOverhead Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_53

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: transferOverhead Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_218(uint256) = totalGasUsed_1 (c)+ REF_53
Function name: getAmountToTransfer

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_218

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalGasUsed_2(uint256) := TMP_218(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_219(uint256) = totalGasUsed_2 (c)+ baseGas_9
Function name: getAmountToTransfer

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_219

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalGasUsed_3(uint256) := TMP_219(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_220(uint256) = totalGasUsed_3 (c)* tokenGasPrice_1
Function name: getAmountToTransfer
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: tokenGasPrice Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_220

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFee_1(uint256) := TMP_220(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for gasFee

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_54(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
Function name: getAmountToTransfer
INDEX

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_54

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_55(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
Function name: getAmountToTransfer
INDEX

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_55

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_221(uint256) = REF_55 (c)+ gasFee_1
Function name: getAmountToTransfer

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_221

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_11(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_10'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_54 (->gasFeeAccumulatedByToken_11) := TMP_221(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_54

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_56(mapping(address => uint256)) -> gasFeeAccumulated_7[tokenAddress_1]
Function name: getAmountToTransfer
INDEX

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_56

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_222(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: getAmountToTransfer
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_13 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_222 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_222

Name: TMP_222 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_57(uint256) -> REF_56[TMP_222]
Function name: getAmountToTransfer
INDEX

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_57

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
Function name: getAmountToTransfer
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
gasFeeAccumulated
[i]Type for REF_58

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
XXXXX
TMP_223(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: getAmountToTransfer
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_13 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_223 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_223

Name: TMP_223 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_59(uint256) -> REF_58[TMP_223]
Function name: getAmountToTransfer
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_59

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_224(uint256) = REF_59 (c)+ gasFee_1
Function name: getAmountToTransfer

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_224

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_10(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_7'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_57 (->gasFeeAccumulated_10) := TMP_224(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_57

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_225(uint256) = transferFeeAmount_1 (c)+ gasFee_1
Function name: getAmountToTransfer

Name: TMP_225 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: -6 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: transferFeeAmount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: TMP_225 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_225

Name: TMP_225 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
TMP_226(uint256) = amount_1 (c)- TMP_225
Function name: getAmountToTransfer
[W] Initializing defined variable to constant
lnorm: 0 rnorm: -6
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_225 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_226 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_226

Name: TMP_226 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amountToTransfer_1(uint256) := TMP_226(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_226 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amountToTransfer Function: getAmountToTransfer
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amountToTransfer

Name: amountToTransfer Function: getAmountToTransfer
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
Emit FeeDetails(lpFee_3,transferFeeAmount_1,gasFee_1)
WORKLIST iteration 1 for function call "getAmountToTransfer":
 New undefined nodes- 7
 Old undefined nodes- 9
typecheckig node...
initialGas_1(uint256) := ϕ(['initialGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for initialGas

Name: initialGas Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint256) := ϕ(['amount_1'])
Function name: getAmountToTransfer
Phi
[i]Type for amount

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
tokenGasPrice_1(uint256) := ϕ(['tokenGasPrice_1'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenGasPrice

Name: tokenGasPrice Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
BASE_DIVISOR_1(uint256) := ϕ(['BASE_DIVISOR_5', 'BASE_DIVISOR_0', 'BASE_DIVISOR_3'])
Function name: getAmountToTransfer
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
done.
baseGas_3(uint256) := ϕ(['baseGas_9', 'baseGas_0', 'baseGas_2', 'baseGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for baseGas

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_20(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_0', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_35(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_0', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getAmountToTransfer
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_4(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_1(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_22', 'gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_23(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_0', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getAmountToTransfer
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_199(uint256) = INTERNAL_CALL, LiquidityPool.getTransferFee(address,uint256)(tokenAddress_1,amount_1)
Function name: getAmountToTransfer
Internal call...
getTransferFee
tokenAddress
amount
Function: getTransferFee
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[1], [-1], 0, None, [], -1]
0

Name: PIC_45 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_199

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_21(ITokenManager) := ϕ(['tokenManager_31'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_36(ILiquidityProviders) := ϕ(['liquidityProviders_43'])
Function name: getAmountToTransfer
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
transferFeePerc_1(uint256) := TMP_199(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_199 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for transferFeePerc

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
transferFeePerc_1(uint256) := TMP_199(uint256)
XXXXX
typecheckig node...
typecheckig node...
TMP_200(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_21(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
Function name: getAmountToTransfer
High Call: getTokensInfo
func name:getTokensInfo
other func name:getTokensInfo
TMP_200
hlc contract name: TokenManager func_name: getTokensInfo
wfc len: 0
COPIED
[i]Type for TMP_200

Name: TMP_200 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: equilibriumFee
Finance Type: undef
done.
BASE_DIVISOR_3(uint256) := ϕ(['BASE_DIVISOR_5', 'BASE_DIVISOR_2', 'BASE_DIVISOR_3'])
Function name: getAmountToTransfer
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
done.
baseGas_5(uint256) := ϕ(['baseGas_4', 'baseGas_9', 'baseGas_2', 'baseGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for baseGas

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_22(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_21', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_37(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_36', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getAmountToTransfer
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_6(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_5', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_3(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_2', 'gasFeeAccumulated_22', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_25(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_24', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getAmountToTransfer
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_44(uint256) -> TMP_200.equilibriumFee
Function name: getAmountToTransfer
MEMBER
TMP_200
equilibriumFee
getAmountToTransfer
TMP_200 Fields:
equilibriumFee
^^^

Name: equilibriumFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_44

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_201(bool) = transferFeePerc_1 > REF_44
Function name: getAmountToTransfer
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
True

Name: TMP_200.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_201 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_201

Name: TMP_201 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_201(bool) = transferFeePerc_1 > REF_44
XXXXX
CONDITION TMP_201
Condition...
Conidtion: 
TMP_201
TMP_201
typecheckig node...
TMP_202(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_22(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
Function name: getAmountToTransfer
High Call: getTokensInfo
func name:getTokensInfo
other func name:getTokensInfo
TMP_202
hlc contract name: TokenManager func_name: getTokensInfo
wfc len: 0
COPIED
[i]Type for TMP_202

Name: TMP_202 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: equilibriumFee
Finance Type: undef
done.
BASE_DIVISOR_4(uint256) := ϕ(['BASE_DIVISOR_5', 'BASE_DIVISOR_3'])
Function name: getAmountToTransfer
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
done.
baseGas_6(uint256) := ϕ(['baseGas_5', 'baseGas_9', 'baseGas_2', 'baseGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for baseGas

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_23(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_22', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_38(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_37', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getAmountToTransfer
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_7(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_6', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_4(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_22', 'gasFeeAccumulated_3', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_26(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getAmountToTransfer
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_46(uint256) -> TMP_202.equilibriumFee
Function name: getAmountToTransfer
MEMBER
TMP_202
equilibriumFee
getAmountToTransfer
TMP_202 Fields:
equilibriumFee
^^^

Name: equilibriumFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_46

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_202.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_203(uint256) = amount_1 (c)* REF_46
Function name: getAmountToTransfer
testing mul...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_203 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_203

Name: TMP_203 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_204(uint256) = TMP_203 (c)/ BASE_DIVISOR_4
Function name: getAmountToTransfer
lnorm: 0 rnorm: 6
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_204 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: TMP_203 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_204 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_204

Name: TMP_204 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
lpFee_1(uint256) := TMP_204(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_204 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
Function name: getAmountToTransfer
testing mul...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_210 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_210

Name: TMP_210 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_210(uint256) = amount_1 (c)* transferFeePerc_1
XXXXX
TMP_211(uint256) = TMP_210 (c)/ BASE_DIVISOR_3
Function name: getAmountToTransfer
lnorm: 0 rnorm: 6
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_211 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: TMP_210 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_211 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_211

Name: TMP_211 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
lpFee_2(uint256) := TMP_211(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_211 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: lpFee Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_47(uint256) -> incentivePool_26[tokenAddress_1]
Function name: getAmountToTransfer
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_47

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_48(uint256) -> incentivePool_26[tokenAddress_1]
Function name: getAmountToTransfer
INDEX

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_48

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_205(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_23(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
Function name: getAmountToTransfer
High Call: getTokensInfo
func name:getTokensInfo
other func name:getTokensInfo
TMP_205
hlc contract name: TokenManager func_name: getTokensInfo
wfc len: 0
COPIED
[i]Type for TMP_205

Name: TMP_205 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: equilibriumFee
Finance Type: undef
done.
BASE_DIVISOR_5(uint256) := ϕ(['BASE_DIVISOR_4', 'BASE_DIVISOR_5', 'BASE_DIVISOR_3'])
Function name: getAmountToTransfer
Phi
[i]Type for BASE_DIVISOR

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
done.
baseGas_7(uint256) := ϕ(['baseGas_6', 'baseGas_9', 'baseGas_2', 'baseGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for baseGas

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_24(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_23', 'tokenManager_26'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_39(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_38', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getAmountToTransfer
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_8(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_7'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_5(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_4', 'gasFeeAccumulated_22', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_27(mapping(address => uint256)) := ϕ(['incentivePool_12', 'incentivePool_3', 'incentivePool_15', 'incentivePool_21', 'incentivePool_26', 'incentivePool_25', 'incentivePool_22', 'incentivePool_11', 'incentivePool_28'])
Function name: getAmountToTransfer
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_50(uint256) -> TMP_205.equilibriumFee
Function name: getAmountToTransfer
MEMBER
TMP_205
equilibriumFee
getAmountToTransfer
TMP_205 Fields:
equilibriumFee
^^^

Name: equilibriumFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_50

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: equilibriumFee Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
Function name: getAmountToTransfer
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: transferFeePerc Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_205.equilibriumFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_206(uint256) = transferFeePerc_1 (c)- REF_50
XXXXX
TMP_207(uint256) = amount_1 (c)* TMP_206
Function name: getAmountToTransfer
testing mul...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_207 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_207

Name: TMP_207 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_208(uint256) = REF_48 (c)+ TMP_207
Function name: getAmountToTransfer

Name: TMP_208 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_208 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_208

Name: TMP_208 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_209(uint256) = TMP_208 (c)/ BASE_DIVISOR_5
Function name: getAmountToTransfer
lnorm: 0 rnorm: 6
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_209 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: TMP_208 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_209 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_209

Name: TMP_209 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
incentivePool_28(mapping(address => uint256)) := ϕ(['incentivePool_26'])
Function name: getAmountToTransfer
Phi
[i]Type for incentivePool

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_47 (->incentivePool_28) := TMP_209(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_209 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: REF_47 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_47

Name: REF_47 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
lpFee_3(uint256) := ϕ(['lpFee_1', 'lpFee_2'])
Function name: getAmountToTransfer
Phi
[i]Type for lpFee

Name: lpFee Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
Function name: getAmountToTransfer
testing mul...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_212 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_212

Name: TMP_212 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_212(uint256) = amount_1 (c)* transferFeePerc_1
XXXXX
TMP_213(uint256) = TMP_212 (c)/ BASE_DIVISOR_3
Function name: getAmountToTransfer
lnorm: 0 rnorm: 6
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_213 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: TMP_212 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_213 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_213

Name: TMP_213 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
transferFeeAmount_1(uint256) := TMP_213(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_213 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: transferFeeAmount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for transferFeeAmount

Name: transferFeeAmount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
HIGH_LEVEL_CALL, dest:liquidityProviders_37(ILiquidityProviders), function:addLPFee, arguments:['tokenAddress_1', 'lpFee_3']  
High Call: addLPFee
func name:addLPFee
other func name:addLPFee
done.
baseGas_8(uint256) := ϕ(['baseGas_7', 'baseGas_9', 'baseGas_2', 'baseGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for baseGas

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_25(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_24', 'tokenManager_19', 'tokenManager_12', 'tokenManager_33', 'tokenManager_26'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
liquidityProviders_40(ILiquidityProviders) := ϕ(['liquidityProviders_24', 'liquidityProviders_40', 'liquidityProviders_1', 'liquidityProviders_39', 'liquidityProviders_43', 'liquidityProviders_45', 'liquidityProviders_17', 'liquidityProviders_2', 'liquidityProviders_14', 'liquidityProviders_34', 'liquidityProviders_5'])
Function name: getAmountToTransfer
Phi
[i]Type for liquidityProviders

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_9(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_8', 'gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_6(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_5', 'gasFeeAccumulated_22', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_215(uint256) = SOLIDITY_CALL gasleft()()
[i]Type for TMP_215

Name: TMP_215 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_216(uint256) = initialGas_1 (c)- TMP_215
Function name: getAmountToTransfer
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: initialGas Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_215 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: initialGas Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_216 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_216

Name: TMP_216 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_216(uint256) = initialGas_1 (c)- TMP_215
XXXXX
totalGasUsed_1(uint256) := TMP_216(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_216 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_217(ITokenManager.TokenInfo) = HIGH_LEVEL_CALL, dest:tokenManager_25(ITokenManager), function:getTokensInfo, arguments:['tokenAddress_1']  
Function name: getAmountToTransfer
High Call: getTokensInfo
func name:getTokensInfo
other func name:getTokensInfo
TMP_217
hlc contract name: TokenManager func_name: getTokensInfo
wfc len: 0
COPIED
[i]Type for TMP_217

Name: TMP_217 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: transferOverhead
Finance Type: undef
done.
baseGas_9(uint256) := ϕ(['baseGas_9', 'baseGas_2', 'baseGas_8', 'baseGas_1'])
Function name: getAmountToTransfer
Phi
[i]Type for baseGas

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tokenManager_26(ITokenManager) := ϕ(['tokenManager_31', 'tokenManager_1', 'tokenManager_7', 'tokenManager_19', 'tokenManager_12', 'tokenManager_25', 'tokenManager_33', 'tokenManager_26'])
Function name: getAmountToTransfer
Phi
[i]Type for tokenManager

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_10(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17', 'gasFeeAccumulatedByToken_9'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_7(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_6', 'gasFeeAccumulated_22', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_53(uint256) -> TMP_217.transferOverhead
Function name: getAmountToTransfer
MEMBER
TMP_217
transferOverhead
getAmountToTransfer
TMP_217 Fields:
transferOverhead
^^^

Name: transferOverhead Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_53

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: transferOverhead Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_218(uint256) = totalGasUsed_1 (c)+ REF_53
Function name: getAmountToTransfer

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_217.transferOverhead Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_218

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalGasUsed_2(uint256) := TMP_218(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_218 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_219(uint256) = totalGasUsed_2 (c)+ baseGas_9
Function name: getAmountToTransfer

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_219

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalGasUsed_3(uint256) := TMP_219(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_219 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalGasUsed

Name: totalGasUsed Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_220(uint256) = totalGasUsed_3 (c)* tokenGasPrice_1
Function name: getAmountToTransfer
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: tokenGasPrice Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_220

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFee_1(uint256) := TMP_220(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_220 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for gasFee

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_54(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
Function name: getAmountToTransfer
INDEX

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_54

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_55(uint256) -> gasFeeAccumulatedByToken_10[tokenAddress_1]
Function name: getAmountToTransfer
INDEX

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_55

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_221(uint256) = REF_55 (c)+ gasFee_1
Function name: getAmountToTransfer

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_221

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_11(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_10'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_54 (->gasFeeAccumulatedByToken_11) := TMP_221(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_221 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_54

Name: REF_54 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_56(mapping(address => uint256)) -> gasFeeAccumulated_7[tokenAddress_1]
Function name: getAmountToTransfer
INDEX

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_56

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_222(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: getAmountToTransfer
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_13 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_222 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_222

Name: TMP_222 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_57(uint256) -> REF_56[TMP_222]
Function name: getAmountToTransfer
INDEX

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_57

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
Function name: getAmountToTransfer
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
gasFeeAccumulated
[i]Type for REF_58

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_58(mapping(address => uint256)) -> gasFeeAccumulated_8[tokenAddress_1]
XXXXX
TMP_223(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: getAmountToTransfer
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_13 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_223 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_223

Name: TMP_223 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_59(uint256) -> REF_58[TMP_223]
Function name: getAmountToTransfer
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_59

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_224(uint256) = REF_59 (c)+ gasFee_1
Function name: getAmountToTransfer

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: gasFee Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_224

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_10(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_7'])
Function name: getAmountToTransfer
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_57 (->gasFeeAccumulated_10) := TMP_224(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_224 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_57

Name: REF_57 Function: getAmountToTransfer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_225(uint256) = transferFeeAmount_1 (c)+ gasFee_1
Function name: getAmountToTransfer

Name: TMP_225 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: -6 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: transferFeeAmount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: TMP_225 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_225

Name: TMP_225 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef
done.
TMP_226(uint256) = amount_1 (c)- TMP_225
Function name: getAmountToTransfer
[W] Initializing defined variable to constant
lnorm: 0 rnorm: -6
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_225 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: -6
LF: None
Fields: 
Finance Type: undef

Name: amount Function: getAmountToTransfer
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_226 Function: getAmountToTransfer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_226

Name: TMP_226 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amountToTransfer_1(uint256) := TMP_226(uint256)
Function name: getAmountToTransfer
asgn

Name: TMP_226 Function: getAmountToTransfer
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amountToTransfer Function: getAmountToTransfer
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amountToTransfer

Name: amountToTransfer Function: getAmountToTransfer
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
Emit FeeDetails(lpFee_3,transferFeeAmount_1,gasFee_1)
WORKLIST iteration 2 for function call "getAmountToTransfer":
 New undefined nodes- 7
 Old undefined nodes- 7
Saving return values for: getAmountToTransfer

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: getTransferFee
wooo
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: checkHashStatus
Function checkHashStatus not marked
Mark Iterations TRUE, proceeding anyway
Function name: checkHashStatus
Function Visibility (test): public
tokenAddress
Finding type for tokenAddress...
address
amount
Finding type for amount...
uint256
receiver
Finding type for receiver...
address
depositHash
Finding type for depositHash...
bytes
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: tokenAddress
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: receiver
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
has variable
[i] tokenAddress cleared
clearing ir...?
amount_1(uint256) := ϕ(['amount_1'])
has variable
[i] amount cleared
clearing ir...?
receiver_1(address) := ϕ(['receiver_1'])
has variable
[i] receiver cleared
clearing ir...?
depositHash_1(bytes) := ϕ(['depositHash_1'])
has variable
[i] depositHash cleared
clearing ir...?
processedHash_2(mapping(bytes32 => bool)) := ϕ(['processedHash_1', 'processedHash_2', 'processedHash_0'])
has variable
typecheckig node...
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Function name: checkHashStatus
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: checkHashStatus
Num: -1
Den: -1
Norm: u
LF: tokenAddress
Fields: 
Finance Type: undef
done.
amount_1(uint256) := ϕ(['amount_1'])
Function name: checkHashStatus
Phi
[i]Type for amount

Name: amount Function: checkHashStatus
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
receiver_1(address) := ϕ(['receiver_1'])
Function name: checkHashStatus
Phi
[i]Type for receiver

Name: receiver Function: checkHashStatus
Num: -1
Den: -1
Norm: u
LF: receiver
Fields: 
Finance Type: undef
done.
depositHash_1(bytes) := ϕ(['depositHash_1'])
Function name: checkHashStatus
Phi
[i]Type for depositHash

Name: depositHash Function: checkHashStatus
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
processedHash_2(mapping(bytes32 => bool)) := ϕ(['processedHash_1', 'processedHash_2', 'processedHash_0'])
Function name: checkHashStatus
Phi
[i]Type for processedHash

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_241(bytes32) = SOLIDITY_CALL keccak256(bytes)(depositHash_1)
clearing ir...?
TMP_242(bytes) = SOLIDITY_CALL abi.encode()(tokenAddress_1,amount_1,receiver_1,TMP_241)
clearing ir...?
TMP_243(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_242)
clearing ir...?
hashSendTransaction_1(bytes32) := TMP_243(bytes32)
has variable
[i] hashSendTransaction cleared
typecheckig node...
TMP_241(bytes32) = SOLIDITY_CALL keccak256(bytes)(depositHash_1)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_242(bytes) = SOLIDITY_CALL abi.encode()(tokenAddress_1,amount_1,receiver_1,TMP_241)
[i]Type for TMP_242

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_243(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_242)
[i]Type for TMP_243

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
hashSendTransaction_1(bytes32) := TMP_243(bytes32)
Function name: checkHashStatus
asgn

Name: TMP_243 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for hashSendTransaction

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
hashSendTransaction_1(bytes32) := TMP_243(bytes32)
XXXXX
clearning node...
clearing ir...?
REF_66(bool) -> processedHash_2[hashSendTransaction_1]
has variable
clearing ir...?
status_1(bool) := REF_66(bool)
has variable
[i] status cleared
typecheckig node...
REF_66(bool) -> processedHash_2[hashSendTransaction_1]
Function name: checkHashStatus
INDEX
[i]Type for REF_66

Name: REF_66 Function: checkHashStatus
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
status_1(bool) := REF_66(bool)
Function name: checkHashStatus
asgn

Name: REF_66 Function: checkHashStatus
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: checkHashStatus
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for status

Name: status Function: checkHashStatus
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "checkHashStatus":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
tokenAddress_1(address) := ϕ(['tokenAddress_1'])
Function name: checkHashStatus
Phi
[i]Type for tokenAddress

Name: tokenAddress Function: checkHashStatus
Num: -1
Den: -1
Norm: u
LF: tokenAddress
Fields: 
Finance Type: undef
done.
amount_1(uint256) := ϕ(['amount_1'])
Function name: checkHashStatus
Phi
[i]Type for amount

Name: amount Function: checkHashStatus
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
receiver_1(address) := ϕ(['receiver_1'])
Function name: checkHashStatus
Phi
[i]Type for receiver

Name: receiver Function: checkHashStatus
Num: -1
Den: -1
Norm: u
LF: receiver
Fields: 
Finance Type: undef
done.
depositHash_1(bytes) := ϕ(['depositHash_1'])
Function name: checkHashStatus
Phi
[i]Type for depositHash

Name: depositHash Function: checkHashStatus
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
processedHash_2(mapping(bytes32 => bool)) := ϕ(['processedHash_1', 'processedHash_2', 'processedHash_0'])
Function name: checkHashStatus
Phi
[i]Type for processedHash

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_241(bytes32) = SOLIDITY_CALL keccak256(bytes)(depositHash_1)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_242(bytes) = SOLIDITY_CALL abi.encode()(tokenAddress_1,amount_1,receiver_1,TMP_241)
[i]Type for TMP_242

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_243(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_242)
[i]Type for TMP_243

Name: TMP_243 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
hashSendTransaction_1(bytes32) := TMP_243(bytes32)
Function name: checkHashStatus
asgn

Name: TMP_243 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for hashSendTransaction

Name: hashSendTransaction Function: checkHashStatus
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
hashSendTransaction_1(bytes32) := TMP_243(bytes32)
XXXXX
typecheckig node...
REF_66(bool) -> processedHash_2[hashSendTransaction_1]
Function name: checkHashStatus
INDEX
[i]Type for REF_66

Name: REF_66 Function: checkHashStatus
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
status_1(bool) := REF_66(bool)
Function name: checkHashStatus
asgn

Name: REF_66 Function: checkHashStatus
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: checkHashStatus
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for status

Name: status Function: checkHashStatus
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "checkHashStatus":
 New undefined nodes- 1
 Old undefined nodes- 1
No save for this scenario
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: withdrawErc20GasFee
wooo
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: withdrawNativeGasFee
Function name: withdrawNativeGasFee
Function Visibility (test): external
-100
Add new
clearning node...
clearing ir...?
NATIVE_23(address) := ϕ(['NATIVE_0', 'NATIVE_22', 'NATIVE_32', 'NATIVE_8', 'NATIVE_18', 'NATIVE_28'])
has variable
clearing ir...?
gasFeeAccumulatedByToken_18(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
has variable
clearing ir...?
gasFeeAccumulated_17(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_22', 'gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
has variable
typecheckig node...
NATIVE_23(address) := ϕ(['NATIVE_0', 'NATIVE_22', 'NATIVE_32', 'NATIVE_8', 'NATIVE_18', 'NATIVE_28'])
Function name: withdrawNativeGasFee
Phi
[i]Type for NATIVE

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_18(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: withdrawNativeGasFee
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_17(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_22', 'gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
Function name: withdrawNativeGasFee
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, LiquidityPool.onlyExecutor()()
typecheckig node...
MODIFIER_CALL, LiquidityPool.onlyExecutor()()
Internal call...
onlyExecutor
Function: onlyExecutor
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: onlyExecutor
Function Visibility: internal
clearning node...
clearing ir...?
executorManager_4(IExecutorManager) := ϕ(['executorManager_6', 'executorManager_0', 'executorManager_1', 'executorManager_3'])
has variable
typecheckig node...
executorManager_4(IExecutorManager) := ϕ(['executorManager_6', 'executorManager_0', 'executorManager_1', 'executorManager_3'])
Function name: onlyExecutor
Phi
[i]Type for executorManager

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_312(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
has variable
[i] TMP_312 cleared
clearing ir...?
TMP_313(bool) = HIGH_LEVEL_CALL, dest:executorManager_5(IExecutorManager), function:getExecutorStatus, arguments:['TMP_312']  
has variable
[i] TMP_313 cleared
clearing ir...?
executorManager_6(IExecutorManager) := ϕ(['executorManager_6', 'executorManager_1', 'executorManager_3', 'executorManager_5'])
has variable
clearing ir...?
TMP_314(None) = SOLIDITY_CALL require(bool,string)(TMP_313,Only executor is allowed)
typecheckig node...
TMP_312(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: onlyExecutor
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_13 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_312 Function: onlyExecutor
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_312

Name: TMP_312 Function: onlyExecutor
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_313(bool) = HIGH_LEVEL_CALL, dest:executorManager_5(IExecutorManager), function:getExecutorStatus, arguments:['TMP_312']  
Function name: onlyExecutor
High Call: getExecutorStatus
func name:getExecutorStatus
other func name:getExecutorStatus
TMP_313
[i]Type for TMP_313

Name: TMP_313 Function: onlyExecutor
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
executorManager_6(IExecutorManager) := ϕ(['executorManager_6', 'executorManager_1', 'executorManager_3', 'executorManager_5'])
Function name: onlyExecutor
Phi
[i]Type for executorManager

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_314(None) = SOLIDITY_CALL require(bool,string)(TMP_313,Only executor is allowed)
[i]Type for TMP_314

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "onlyExecutor":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: onlyExecutor
done.
clearning node...
clearing ir...?
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
typecheckig node...
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Internal call...
whenNotPaused
Function: whenNotPaused
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
REF_74(mapping(address => uint256)) -> gasFeeAccumulated_20[NATIVE_26]
has variable
clearing ir...?
TMP_259(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
has variable
[i] TMP_259 cleared
clearing ir...?
REF_75(uint256) -> REF_74[TMP_259]
has variable
clearing ir...?
_gasFeeAccumulated_1(uint256) := REF_75(uint256)
has variable
[i] _gasFeeAccumulated cleared
typecheckig node...
REF_74(mapping(address => uint256)) -> gasFeeAccumulated_20[NATIVE_26]
Function name: withdrawNativeGasFee
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
gasFeeAccumulated
[i]Type for REF_74

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_74(mapping(address => uint256)) -> gasFeeAccumulated_20[NATIVE_26]
XXXXX
TMP_259(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: withdrawNativeGasFee
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_13 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_259 Function: withdrawNativeGasFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_259

Name: TMP_259 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_75(uint256) -> REF_74[TMP_259]
Function name: withdrawNativeGasFee
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_75

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_gasFeeAccumulated_1(uint256) := REF_75(uint256)
Function name: withdrawNativeGasFee
asgn

Name: REF_75 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _gasFeeAccumulated Function: withdrawNativeGasFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _gasFeeAccumulated

Name: _gasFeeAccumulated Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_260(bool) = _gasFeeAccumulated_1 != 0
has variable
[i] TMP_260 cleared
clearing ir...?
TMP_261(None) = SOLIDITY_CALL require(bool,string)(TMP_260,Gas Fee earned is 0)
typecheckig node...
TMP_260(bool) = _gasFeeAccumulated_1 != 0
Function name: withdrawNativeGasFee
[i]Type for TMP_260

Name: TMP_260 Function: withdrawNativeGasFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_261(None) = SOLIDITY_CALL require(bool,string)(TMP_260,Gas Fee earned is 0)
[i]Type for TMP_261

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_76(uint256) -> gasFeeAccumulatedByToken_22[NATIVE_27]
has variable
clearing ir...?
REF_77(uint256) -> gasFeeAccumulatedByToken_22[NATIVE_27]
has variable
clearing ir...?
TMP_262(uint256) = REF_77 (c)- _gasFeeAccumulated_1
has variable
[i] TMP_262 cleared
clearing ir...?
gasFeeAccumulatedByToken_23(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_22'])
has variable
clearing ir...?
REF_76 (->gasFeeAccumulatedByToken_23) := TMP_262(uint256)
has variable
typecheckig node...
REF_76(uint256) -> gasFeeAccumulatedByToken_22[NATIVE_27]
Function name: withdrawNativeGasFee
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
gasFeeAccumulatedByToken
[i]Type for REF_76

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_76(uint256) -> gasFeeAccumulatedByToken_22[NATIVE_27]
XXXXX
REF_77(uint256) -> gasFeeAccumulatedByToken_22[NATIVE_27]
Function name: withdrawNativeGasFee
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
gasFeeAccumulatedByToken
[i]Type for REF_77

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_77(uint256) -> gasFeeAccumulatedByToken_22[NATIVE_27]
XXXXX
TMP_262(uint256) = REF_77 (c)- _gasFeeAccumulated_1
Function name: withdrawNativeGasFee
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_77 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _gasFeeAccumulated Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _gasFeeAccumulated Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_262 Function: withdrawNativeGasFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_262

Name: TMP_262 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_23(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_22'])
Function name: withdrawNativeGasFee
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_76 (->gasFeeAccumulatedByToken_23) := TMP_262(uint256)
Function name: withdrawNativeGasFee
asgn

Name: TMP_262 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_76 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_76

Name: REF_76 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_78(mapping(address => uint256)) -> gasFeeAccumulated_21[NATIVE_27]
has variable
clearing ir...?
TMP_263(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
has variable
[i] TMP_263 cleared
clearing ir...?
REF_79(uint256) -> REF_78[TMP_263]
has variable
clearing ir...?
gasFeeAccumulated_22(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_21'])
has variable
clearing ir...?
REF_79 (->gasFeeAccumulated_22) := 0(uint256)
has variable
typecheckig node...
REF_78(mapping(address => uint256)) -> gasFeeAccumulated_21[NATIVE_27]
Function name: withdrawNativeGasFee
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
gasFeeAccumulated
[i]Type for REF_78

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_78(mapping(address => uint256)) -> gasFeeAccumulated_21[NATIVE_27]
XXXXX
TMP_263(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: withdrawNativeGasFee
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_13 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_263 Function: withdrawNativeGasFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_263

Name: TMP_263 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_79(uint256) -> REF_78[TMP_263]
Function name: withdrawNativeGasFee
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_79

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_22(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_21'])
Function name: withdrawNativeGasFee
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_79 (->gasFeeAccumulated_22) := 0(uint256)
Function name: withdrawNativeGasFee
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_79

Name: REF_79 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_264(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
has variable
[i] TMP_264 cleared
clearing ir...?
TMP_265 = CONVERT TMP_264 to address
has variable
[i] TMP_265 cleared
clearing ir...?
TUPLE_2(bool,bytes) = LOW_LEVEL_CALL, dest:TMP_265, function:call, arguments:[''] value:_gasFeeAccumulated_1 
clearing ir...?
success_1(bool)= UNPACK TUPLE_2 index: 0 
has variable
[i] success cleared
typecheckig node...
TMP_264(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: withdrawNativeGasFee
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_13 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_264 Function: withdrawNativeGasFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_264

Name: TMP_264 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_265 = CONVERT TMP_264 to address
Function name: withdrawNativeGasFee

Name: TMP_264 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_265 Function: withdrawNativeGasFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_265

Name: TMP_265 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TUPLE_2(bool,bytes) = LOW_LEVEL_CALL, dest:TMP_265, function:call, arguments:[''] value:_gasFeeAccumulated_1 
[i]Type for TUPLE_2

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
success_1(bool)= UNPACK TUPLE_2 index: 0 
Function name: withdrawNativeGasFee
Reading tuple TUPLE_2 index 0
Finding type for success...
bool
SKIP bool
[i]Type for success

Name: success Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_266(None) = SOLIDITY_CALL require(bool,string)(success_1,Native Transfer Failed)
typecheckig node...
TMP_266(None) = SOLIDITY_CALL require(bool,string)(success_1,Native Transfer Failed)
[i]Type for TMP_266

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_267 = CONVERT this to address
has variable
[i] TMP_267 cleared
clearing ir...?
TMP_268(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
has variable
[i] TMP_268 cleared
clearing ir...?
Emit GasFeeWithdraw(TMP_267,TMP_268,_gasFeeAccumulated_1)
typecheckig node...
TMP_267 = CONVERT this to address
Function name: withdrawNativeGasFee
[i]Type for TMP_267

Name: TMP_267 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: LiquidityPool
Fields: 
Finance Type: undef
done.
TMP_268(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: withdrawNativeGasFee
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_13 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_268 Function: withdrawNativeGasFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_268

Name: TMP_268 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
Emit GasFeeWithdraw(TMP_267,TMP_268,_gasFeeAccumulated_1)
WORKLIST iteration 0 for function call "withdrawNativeGasFee":
 New undefined nodes- 3
 Old undefined nodes- 0
typecheckig node...
NATIVE_23(address) := ϕ(['NATIVE_0', 'NATIVE_22', 'NATIVE_32', 'NATIVE_8', 'NATIVE_18', 'NATIVE_28'])
Function name: withdrawNativeGasFee
Phi
[i]Type for NATIVE

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_18(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_23', 'gasFeeAccumulatedByToken_0', 'gasFeeAccumulatedByToken_3', 'gasFeeAccumulatedByToken_11', 'gasFeeAccumulatedByToken_17'])
Function name: withdrawNativeGasFee
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_17(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_22', 'gasFeeAccumulated_0', 'gasFeeAccumulated_10', 'gasFeeAccumulated_16'])
Function name: withdrawNativeGasFee
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, LiquidityPool.onlyExecutor()()
Internal call...
onlyExecutor
Function: onlyExecutor
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
typecheckig node...
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
Internal call...
whenNotPaused
Function: whenNotPaused
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
typecheckig node...
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
typecheckig node...
REF_74(mapping(address => uint256)) -> gasFeeAccumulated_20[NATIVE_26]
Function name: withdrawNativeGasFee
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
gasFeeAccumulated
[i]Type for REF_74

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_74(mapping(address => uint256)) -> gasFeeAccumulated_20[NATIVE_26]
XXXXX
TMP_259(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: withdrawNativeGasFee
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_13 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_259 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_259

Name: TMP_259 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_75(uint256) -> REF_74[TMP_259]
Function name: withdrawNativeGasFee
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_75

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_gasFeeAccumulated_1(uint256) := REF_75(uint256)
Function name: withdrawNativeGasFee
asgn

Name: REF_75 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _gasFeeAccumulated Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _gasFeeAccumulated

Name: _gasFeeAccumulated Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_260(bool) = _gasFeeAccumulated_1 != 0
Function name: withdrawNativeGasFee
[i]Type for TMP_260

Name: TMP_260 Function: withdrawNativeGasFee
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_261(None) = SOLIDITY_CALL require(bool,string)(TMP_260,Gas Fee earned is 0)
[i]Type for TMP_261

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_76(uint256) -> gasFeeAccumulatedByToken_22[NATIVE_27]
Function name: withdrawNativeGasFee
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
gasFeeAccumulatedByToken
[i]Type for REF_76

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_76(uint256) -> gasFeeAccumulatedByToken_22[NATIVE_27]
XXXXX
REF_77(uint256) -> gasFeeAccumulatedByToken_22[NATIVE_27]
Function name: withdrawNativeGasFee
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
gasFeeAccumulatedByToken
[i]Type for REF_77

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_77(uint256) -> gasFeeAccumulatedByToken_22[NATIVE_27]
XXXXX
TMP_262(uint256) = REF_77 (c)- _gasFeeAccumulated_1
Function name: withdrawNativeGasFee
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_77 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _gasFeeAccumulated Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _gasFeeAccumulated Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_262 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_262

Name: TMP_262 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulatedByToken_23(mapping(address => uint256)) := ϕ(['gasFeeAccumulatedByToken_22'])
Function name: withdrawNativeGasFee
Phi
[i]Type for gasFeeAccumulatedByToken

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_76 (->gasFeeAccumulatedByToken_23) := TMP_262(uint256)
Function name: withdrawNativeGasFee
asgn

Name: TMP_262 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_76 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_76

Name: REF_76 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_78(mapping(address => uint256)) -> gasFeeAccumulated_21[NATIVE_27]
Function name: withdrawNativeGasFee
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
gasFeeAccumulated
[i]Type for REF_78

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_78(mapping(address => uint256)) -> gasFeeAccumulated_21[NATIVE_27]
XXXXX
TMP_263(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: withdrawNativeGasFee
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_13 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_263 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_263

Name: TMP_263 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_79(uint256) -> REF_78[TMP_263]
Function name: withdrawNativeGasFee
INDEX

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_79

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gasFeeAccumulated_22(mapping(address => mapping(address => uint256))) := ϕ(['gasFeeAccumulated_21'])
Function name: withdrawNativeGasFee
Phi
[i]Type for gasFeeAccumulated

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_79 (->gasFeeAccumulated_22) := 0(uint256)
Function name: withdrawNativeGasFee
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_79

Name: REF_79 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_264(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: withdrawNativeGasFee
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_13 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_264 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_264

Name: TMP_264 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_265 = CONVERT TMP_264 to address
Function name: withdrawNativeGasFee

Name: TMP_264 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_265 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_265

Name: TMP_265 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TUPLE_2(bool,bytes) = LOW_LEVEL_CALL, dest:TMP_265, function:call, arguments:[''] value:_gasFeeAccumulated_1 
[i]Type for TUPLE_2

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
success_1(bool)= UNPACK TUPLE_2 index: 0 
Function name: withdrawNativeGasFee
Reading tuple TUPLE_2 index 0
Finding type for success...
bool
SKIP bool
[i]Type for success

Name: success Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_266(None) = SOLIDITY_CALL require(bool,string)(success_1,Native Transfer Failed)
[i]Type for TMP_266

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_267 = CONVERT this to address
Function name: withdrawNativeGasFee
[i]Type for TMP_267

Name: TMP_267 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: LiquidityPool
Fields: 
Finance Type: undef
done.
TMP_268(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: withdrawNativeGasFee
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_13 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_268 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_268

Name: TMP_268 Function: withdrawNativeGasFee
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
Emit GasFeeWithdraw(TMP_267,TMP_268,_gasFeeAccumulated_1)
WORKLIST iteration 1 for function call "withdrawNativeGasFee":
 New undefined nodes- 3
 Old undefined nodes- 3
Saving return values for: withdrawNativeGasFee
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: transfer
wooo
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _msgSender
Function _msgSender not marked
Mark Iterations TRUE, proceeding anyway
Function name: _msgSender
Function Visibility (test): internal
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _msgData
Function _msgData not marked
Mark Iterations TRUE, proceeding anyway
Function name: _msgData
Function Visibility (test): internal
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: receive
Function receive not marked
Mark Iterations TRUE, proceeding anyway
Function name: receive
Function Visibility (test): external
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_293(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
has variable
[i] TMP_293 cleared
clearing ir...?
Emit EthReceived(TMP_293,msg.value)
typecheckig node...
TMP_293(address) = INTERNAL_CALL, LiquidityPool._msgSender()()
Function name: receive
Internal call...
_msgSender
Function: _msgSender
ic
[i]Type for TMP_293

Name: TMP_293 Function: receive
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
Emit EthReceived(TMP_293,msg.value)
WORKLIST iteration 0 for function call "receive":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: slitherConstructorConstantVariables
Function slitherConstructorConstantVariables not marked
Mark Iterations TRUE, proceeding anyway
Function name: slitherConstructorConstantVariables
Function Visibility (test): internal
State_var: executorManager
Finding type for executorManager...
IExecutorManager
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IExecutorManager
IExecutorManager
Final Type: IExecutorManager
 NO FIELDS

Name: executorManager Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: liquidityProviders
Finding type for liquidityProviders...
ILiquidityProviders
Check copy_toekn_tuple
(-1, -1, 0, 'LPP')
----
Type: ILiquidityProviders
ILiquidityProviders
Final Type: ILiquidityProviders
 NO FIELDS

Name: liquidityProviders Function: global
Num: -1
Den: -1
Norm: 0
LF: LPP
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: NATIVE
Finding type for NATIVE...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: NATIVE Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulated
Finding type for gasFeeAccumulated...
mapping(address => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => mapping(address => uint256))
mapping(address => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gasFeeAccumulatedByToken
Finding type for gasFeeAccumulatedByToken...
mapping(address => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: gasFeeAccumulatedByToken Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: incentivePool
Finding type for incentivePool...
mapping(address => uint256)
Check copy_toekn_tuple
([1], [-1], 0, None)
----
Type: mapping(address => uint256)
mapping(address => uint256)
uint256
Final Type: uint256

Name: incentivePool Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tokenManager
Finding type for tokenManager...
ITokenManager
Check copy_toekn_tuple
(-1, -1, 0, 'TokenManager')
----
Type: ITokenManager
ITokenManager
Final Type: ITokenManager
 NO FIELDS

Name: tokenManager Function: global
Num: -1
Den: -1
Norm: 0
LF: TokenManager
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: _trustedForwarder
Finding type for _trustedForwarder...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _trustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: BASE_DIVISOR
Finding type for BASE_DIVISOR...
uint256
Check copy_toekn_tuple
(-1, -1, 6, None)
----
Type: uint256
uint256
Final Type: uint256

Name: BASE_DIVISOR Function: global
Num: -1
Den: -1
Norm: 6
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: baseGas
Finding type for baseGas...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: baseGas Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _paused
Finding type for _paused...
bool
SKIP bool
State_var: processedHash
Finding type for processedHash...
mapping(bytes32 => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(bytes32 => bool)
mapping(bytes32 => bool)
bool
Final Type: bool

Name: processedHash Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _pauser
Finding type for _pauser...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _pauser Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Errors: [<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fdb9fee39d0>]
Seen contract: {'LiquidityPool': True} Contract name out: IERC20Detailed
[x] IERC20Detailed not run
Seen contract: {'LiquidityPool': True, 'IERC20Detailed': True} Contract name out: IERC20Nonces
[x] IERC20Nonces not run
Seen contract: {'LiquidityPool': True, 'IERC20Detailed': True, 'IERC20Nonces': True} Contract name out: IERC20Permit
[x] IERC20Permit not run
Seen contract: {'LiquidityPool': True, 'IERC20Detailed': True, 'IERC20Nonces': True, 'IERC20Permit': True} Contract name out: IExecutorManager
[x] IExecutorManager not run
Seen contract: {'LiquidityPool': True, 'IERC20Detailed': True, 'IERC20Nonces': True, 'IERC20Permit': True, 'IExecutorManager': True} Contract name out: ILiquidityProviders
[x] ILiquidityProviders not run
Seen contract: {'LiquidityPool': True, 'IERC20Detailed': True, 'IERC20Nonces': True, 'IERC20Permit': True, 'IExecutorManager': True, 'ILiquidityProviders': True} Contract name out: ITokenManager
[x] ITokenManager not run
Seen contract: {'LiquidityPool': True, 'IERC20Detailed': True, 'IERC20Nonces': True, 'IERC20Permit': True, 'IExecutorManager': True, 'ILiquidityProviders': True, 'ITokenManager': True} Contract name out: ERC2771ContextUpgradeable
[x] ERC2771ContextUpgradeable not run
Seen contract: {'LiquidityPool': True, 'IERC20Detailed': True, 'IERC20Nonces': True, 'IERC20Permit': True, 'IExecutorManager': True, 'ILiquidityProviders': True, 'ITokenManager': True, 'ERC2771ContextUpgradeable': True} Contract name out: OwnableUpgradeable
[x] OwnableUpgradeable not run
Seen contract: {'LiquidityPool': True, 'IERC20Detailed': True, 'IERC20Nonces': True, 'IERC20Permit': True, 'IExecutorManager': True, 'ILiquidityProviders': True, 'ITokenManager': True, 'ERC2771ContextUpgradeable': True, 'OwnableUpgradeable': True} Contract name out: Initializable
[x] Initializable not run
Seen contract: {'LiquidityPool': True, 'IERC20Detailed': True, 'IERC20Nonces': True, 'IERC20Permit': True, 'IExecutorManager': True, 'ILiquidityProviders': True, 'ITokenManager': True, 'ERC2771ContextUpgradeable': True, 'OwnableUpgradeable': True, 'Initializable': True} Contract name out: PausableUpgradeable
[x] PausableUpgradeable not run
Seen contract: {'LiquidityPool': True, 'IERC20Detailed': True, 'IERC20Nonces': True, 'IERC20Permit': True, 'IExecutorManager': True, 'ILiquidityProviders': True, 'ITokenManager': True, 'ERC2771ContextUpgradeable': True, 'OwnableUpgradeable': True, 'Initializable': True, 'PausableUpgradeable': True} Contract name out: ReentrancyGuardUpgradeable
[x] ReentrancyGuardUpgradeable not run
Seen contract: {'LiquidityPool': True, 'IERC20Detailed': True, 'IERC20Nonces': True, 'IERC20Permit': True, 'IExecutorManager': True, 'ILiquidityProviders': True, 'ITokenManager': True, 'ERC2771ContextUpgradeable': True, 'OwnableUpgradeable': True, 'Initializable': True, 'PausableUpgradeable': True, 'ReentrancyGuardUpgradeable': True} Contract name out: IERC20Upgradeable
[x] IERC20Upgradeable not run
Seen contract: {'LiquidityPool': True, 'IERC20Detailed': True, 'IERC20Nonces': True, 'IERC20Permit': True, 'IExecutorManager': True, 'ILiquidityProviders': True, 'ITokenManager': True, 'ERC2771ContextUpgradeable': True, 'OwnableUpgradeable': True, 'Initializable': True, 'PausableUpgradeable': True, 'ReentrancyGuardUpgradeable': True, 'IERC20Upgradeable': True} Contract name out: SafeERC20Upgradeable
[x] SafeERC20Upgradeable not run
Seen contract: {'LiquidityPool': True, 'IERC20Detailed': True, 'IERC20Nonces': True, 'IERC20Permit': True, 'IExecutorManager': True, 'ILiquidityProviders': True, 'ITokenManager': True, 'ERC2771ContextUpgradeable': True, 'OwnableUpgradeable': True, 'Initializable': True, 'PausableUpgradeable': True, 'ReentrancyGuardUpgradeable': True, 'IERC20Upgradeable': True, 'SafeERC20Upgradeable': True} Contract name out: AddressUpgradeable
[x] AddressUpgradeable not run
Seen contract: {'LiquidityPool': True, 'IERC20Detailed': True, 'IERC20Nonces': True, 'IERC20Permit': True, 'IExecutorManager': True, 'ILiquidityProviders': True, 'ITokenManager': True, 'ERC2771ContextUpgradeable': True, 'OwnableUpgradeable': True, 'Initializable': True, 'PausableUpgradeable': True, 'ReentrancyGuardUpgradeable': True, 'IERC20Upgradeable': True, 'SafeERC20Upgradeable': True, 'AddressUpgradeable': True} Contract name out: ContextUpgradeable
[x] ContextUpgradeable not run
Seen contract: {'LiquidityPool': True, 'IERC20Detailed': True, 'IERC20Nonces': True, 'IERC20Permit': True, 'IExecutorManager': True, 'ILiquidityProviders': True, 'ITokenManager': True, 'ERC2771ContextUpgradeable': True, 'OwnableUpgradeable': True, 'Initializable': True, 'PausableUpgradeable': True, 'ReentrancyGuardUpgradeable': True, 'IERC20Upgradeable': True, 'SafeERC20Upgradeable': True, 'AddressUpgradeable': True, 'ContextUpgradeable': True} Contract name out: Pausable
[x] Pausable not run
Function count: 45
