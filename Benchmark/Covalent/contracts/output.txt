DelegatedStaking
OwnableUpgradeable
Initializable
IERC20Upgradeable
IERC20PermitUpgradeable
SafeERC20Upgradeable
AddressUpgradeable
ContextUpgradeable
contract name: DelegatedStaking
WARNING!!!!
DelegatedStaking_types.txt
Finance file: DelegatedStaking_ftypes.txt
"DelegatedStaking_types.txt" opened successfully.
[*c], DelegatedStaking

initialize

depositRewardTokens

takeOutRewardTokens

recoverUnstaking

redeemRewards

addValidator

disableValidator

setAllocatedTokensPerEpoch

setMaxCapMultiplier

setValidatorCommissionRate

redelegateUnstaked

transferUnstakedOut

getDelegatorDetails

stake

[t], global, allocatedTokensPerEpoch

[t], global, divider

[t], global, endEpoch

[t], global, globalExchangeRate, 1, 2, 18

[t], global, lastUpdateEpoch

[t], global, totalGlobalShares

[t], global, validators

[t*], global, validators, delegated

[t*], global, validators, globalShares

[t*], global, validators, exchangeRate, 1, 2, 18

[t], global, validatorsN

[t], global, _initializing

[t], global, delegatorCoolDown

[t], global, maxCapMultiplier

[t], global, validatorCoolDown

[t], global, rewardsLocked

[t], global, _initialized

[t], global, validatorMinStakedRequired

[t], global, CQT

[t], global, _owner

[t], global, minStakedRequired

[t], initialize, minStakedRequired

[t], depositRewardTokens, amount, 1, -1, 0

[t], takeOutRewardTokens, amount, 1, -1, 0

[t], recoverUnstaking, amount, 1, -1, 0

[t], recoverUnstaking, validatorId

[t], recoverUnstaking, unstakingId

[t], _stake, validatorId

[t], _stake, amount, 1, -1, 0

[t], _stake, withTransfer

[t], redeemRewards, validatorId

[t], redeemRewards, beneficiary

[t], redeemRewards, amount, 1, -1, 0

[t], addValidator, validator

[t], addValidator, operator

[t], addValidator, commissionRate

[t], disableValidator, validatorId

[t], setAllocatedTokensPerEpoch, amount, 1, -1, 0

[t], unstake, validatorId

[t], unstake, amount, 1, -1, 0

[t], setMaxCapMultiplier, amount

[t], setValidatorCommissionRate, amount

[t], setValidatorCommissionRate, validatorId

[t], redelegateUnstaked, amount, 1, -1, 0

[t], redelegateUnstaked, oldValidatorId

[t], redelegateUnstaked, newValidatorId

[t], redelegateUnstaked, unstakingId

[t], transferUnstakedOut, amount, 1, -1, 0

[t], transferUnstakedOut, validatorId

[t], transferUnstakedOut, unstakingId

[t], stake, validatorId

[t], stake, amount, 1, -1, 0

[t], getDelegatorDetails, delegator

Param: [*c]
Param:  DelegatedStaking

Param: [xf]
Param:  initialize

Param: [xf]
Param:  depositRewardTokens

Param: [xf]
Param:  takeOutRewardTokens

Param: [xf]
Param:  recoverUnstaking

Param: [xf]
Param:  redeemRewards

Param: [xf]
Param:  addValidator

Param: [xf]
Param:  disableValidator

Param: [xf]
Param:  setAllocatedTokensPerEpoch

Param: [xf]
Param:  setMaxCapMultiplier

Param: [xf]
Param:  setValidatorCommissionRate

Param: [xf]
Param:  redelegateUnstaked

Param: [xf]
Param:  transferUnstakedOut

Param: [xf]
Param:  getDelegatorDetails

Param: [t]
Param:  global
Param:  allocatedTokensPerEpoch

Param: [t]
Param:  global
Param:  divider

Param: [t]
Param:  global
Param:  endEpoch

Param: [t]
Param:  global
Param:  globalExchangeRate
Param:  1
Param:  2
Param:  18
Param:  f: 12

Isolated Param: 12
F num: 12
Param: [t]
Param:  global
Param:  lastUpdateEpoch

Param: [t]
Param:  global
Param:  totalGlobalShares

Param: [t]
Param:  global
Param:  validators

Param: [t*]
Param:  global
Param:  validators
Param:  delegated

Param: [t*]
Param:  global
Param:  validators
Param:  globalShares

Param: [t*]
Param:  global
Param:  validators
Param:  exchangeRate
Param:  1
Param:  2
Param:  18
Param:  f: 12

Isolated Param: 12
F num: 12
Param: [t]
Param:  global
Param:  validatorsN

Param: [t]
Param:  global
Param:  _initializing

Param: [t]
Param:  global
Param:  delegatorCoolDown

Param: [t]
Param:  global
Param:  maxCapMultiplier

Param: [t]
Param:  global
Param:  validatorCoolDown

Param: [t]
Param:  global
Param:  rewardsLocked

Param: [t]
Param:  global
Param:  _initialized

Param: [t]
Param:  global
Param:  validatorMinStakedRequired

Param: [t]
Param:  global
Param:  CQT

Param: [t]
Param:  global
Param:  _owner

Param: [t]
Param:  global
Param:  minStakedRequired

Param: 

Param: [t]
Param:  _stake
Param:  validatorId

Param: [t]
Param:  _stake
Param:  amount
Param:  1
Param:  -1
Param:  0
Param:  f: 0

Isolated Param: 0
F num: 0
Param: [t]
Param:  _stake
Param:  withTransfer

Param: 

Param: [t]
Param:  unstake
Param:  validatorId

Param: [t]
Param:  unstake
Param:  amount
Param:  1
Param:  -1
Param:  0
Param:  f:0 

Isolated Param: 0
F num: 0
[*] DelegatedStaking run
Checking... initialize Visibility: public
[o] Marked
Checking... _transferToContract Visibility: internal
[x] Not visible 
Checking... _transferFromContract Visibility: internal
[x] Not visible 
Checking... depositRewardTokens Visibility: public
[o] Marked
Checking... takeOutRewardTokens Visibility: public
[o] Marked
Checking... _updateGlobalExchangeRate Visibility: internal
[x] Not visible 
Checking... _updateValidator Visibility: internal
[x] Not visible 
Checking... _sharesToTokens Visibility: internal
[x] Not visible 
Checking... _tokensToShares Visibility: internal
[x] Not visible 
Checking... stake Visibility: public
[o] Marked
Checking... _stake Visibility: public
[o] Marked
Checking... unstake Visibility: public
[o] Marked
Checking... recoverUnstaking Visibility: public
[o] Marked
Checking... _redeemRewards Visibility: internal
[x] Not visible 
Checking... redeemAllRewards Visibility: external
[x] No Binary
Checking... redeemRewards Visibility: external
[o] Marked
Checking... addValidator Visibility: public
[o] Marked
Checking... disableValidator Visibility: public
[o] Marked
Checking... setAllocatedTokensPerEpoch Visibility: public
[o] Marked
Checking... setMaxCapMultiplier Visibility: public
[o] Marked
Checking... setValidatorCommissionRate Visibility: public
[o] Marked
Checking... setValidatorMinStakedRequired Visibility: public
[x] No Binary
Checking... redelegateUnstaked Visibility: public
[o] Marked
Checking... transferUnstakedOut Visibility: public
[o] Marked
Checking... getValidatorsDetails Visibility: public
[o] Marked
Checking... getDelegatorDetails Visibility: public
[o] Marked
Checking... getMetadata Visibility: public
[o] Marked
Checking... slitherConstructorConstantVariables Visibility: internal
[x] Not visible 
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
State_var: divider
Finding type for divider...
uint256
State_var: endEpoch
Finding type for endEpoch...
uint128
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
State_var: validatorsN
Finding type for validatorsN...
uint128
State_var: _initialized
Finding type for _initialized...
uint8
State_var: _initializing
Finding type for _initializing...
bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
State_var: _owner
Finding type for _owner...
address
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
contract name: OwnableUpgradeable
WARNING!!!!
OwnableUpgradeable_types.txt
Finance File not Found
Type File not found.
[x] OwnableUpgradeable not run
contract name: Initializable
WARNING!!!!
Initializable_types.txt
Finance File not Found
Type File not found.
[x] Initializable not run
contract name: IERC20Upgradeable
WARNING!!!!
IERC20Upgradeable_types.txt
Finance File not Found
Type File not found.
[x] IERC20Upgradeable not run
contract name: IERC20PermitUpgradeable
WARNING!!!!
IERC20PermitUpgradeable_types.txt
Finance File not Found
Type File not found.
[x] IERC20PermitUpgradeable not run
contract name: SafeERC20Upgradeable
WARNING!!!!
SafeERC20Upgradeable_types.txt
Finance File not Found
Type File not found.
[x] SafeERC20Upgradeable not run
contract name: AddressUpgradeable
WARNING!!!!
AddressUpgradeable_types.txt
Finance File not Found
Type File not found.
[x] AddressUpgradeable not run
contract name: ContextUpgradeable
WARNING!!!!
ContextUpgradeable_types.txt
Finance File not Found
Type File not found.
[x] ContextUpgradeable not run
Seen contract: {} Contract name out: DelegatedStaking
[*] DelegatedStaking run
Reading Function: initialize
Function name: initialize
Function Visibility (test): public
minStakedRequired
Finding type for minStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint128
uint128
Final Type: uint128

Name: minStakedRequired Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, Initializable.initializer()()
typecheckig node...
MODIFIER_CALL, Initializable.initializer()()
Internal call...
initializer
Function: initializer
ic
Internal cal param_cache
-100
added
xyz
Function name: initializer
Function Visibility: internal
clearning node...
clearing ir...?
_initialized_4(uint8) := ϕ(['_initialized_2', '_initialized_0', '_initialized_5', '_initialized_7'])
has variable
clearing ir...?
_initializing_3(bool) := ϕ(['_initializing_0', '_initializing_4', '_initializing_5', '_initializing_8'])
has variable
typecheckig node...
_initialized_4(uint8) := ϕ(['_initialized_2', '_initialized_0', '_initialized_5', '_initialized_7'])
Function name: initializer
Phi
[i]Type for _initialized

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_initializing_3(bool) := ϕ(['_initializing_0', '_initializing_4', '_initializing_5', '_initializing_8'])
Function name: initializer
Phi
[i]Type for _initializing

Name: _initializing Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_315 = ! _initializing_3 
clearing ir...?
isTopLevelCall_1(bool) := TMP_315(bool)
has variable
[i] isTopLevelCall cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_315 = ! _initializing_3 
[i]Type for TMP_315

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
isTopLevelCall_1(bool) := TMP_315(bool)
Function name: initializer
asgn

Name: TMP_315 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
isTopLevelCall_1(bool) := TMP_315(bool)
XXXXX
clearning node...
clearing ir...?
TMP_316(bool) = _initialized_4 < 1
has variable
[i] TMP_316 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_317(bool) = isTopLevelCall_1 && TMP_316
has variable
[i] TMP_317 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_318 = CONVERT this to address
has variable
[i] TMP_318 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_319(bool) = LIBRARY_CALL, dest:AddressUpgradeable, function:AddressUpgradeable.isContract(address), arguments:['TMP_318'] 
has variable
[i] TMP_319 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_320 = ! TMP_319 
clearing ir...?
TMP_321(bool) = _initialized_4 == 1
has variable
[i] TMP_321 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_322(bool) = TMP_320 && TMP_321
has variable
[i] TMP_322 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_323(bool) = TMP_317 || TMP_322
has variable
[i] TMP_323 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_324(None) = SOLIDITY_CALL require(bool,string)(TMP_323,Initializable: contract is already initialized)
typecheckig node...
TMP_316(bool) = _initialized_4 < 1
Function name: initializer
testing lt...
val: 1
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_316

Name: TMP_316 Function: initializer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_317(bool) = isTopLevelCall_1 && TMP_316
Function name: initializer
[i]Type for TMP_317

Name: TMP_317 Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_318 = CONVERT this to address
Function name: initializer
[i]Type for TMP_318

Name: TMP_318 Function: initializer
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
TMP_319(bool) = LIBRARY_CALL, dest:AddressUpgradeable, function:AddressUpgradeable.isContract(address), arguments:['TMP_318'] 
Function name: initializer
Library Call: isContract
[i]Type for TMP_319

Name: TMP_319 Function: initializer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_320 = ! TMP_319 
[i]Type for TMP_320

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_321(bool) = _initialized_4 == 1
Function name: initializer
[i]Type for TMP_321

Name: TMP_321 Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_322(bool) = TMP_320 && TMP_321
Function name: initializer
[i]Type for TMP_322

Name: TMP_322 Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_323(bool) = TMP_317 || TMP_322
Function name: initializer
[i]Type for TMP_323

Name: TMP_323 Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_324(None) = SOLIDITY_CALL require(bool,string)(TMP_323,Initializable: contract is already initialized)
[i]Type for TMP_324

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_initialized_5(uint8) := 1(uint256)
has variable
typecheckig node...
_initialized_5(uint8) := 1(uint256)
Function name: initializer
asgn
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _initialized Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 1
0
val: 1
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
CONDITION isTopLevelCall_1
typecheckig node...
CONDITION isTopLevelCall_1
Condition...
Conidtion: 
isTopLevelCall_1
isTopLevelCall_1
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_initializing_4(bool) := True(bool)
has variable
typecheckig node...
_initializing_4(bool) := True(bool)
Function name: initializer
asgn
val: True

Name: True Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _initializing Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: True
0
val: True
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
CONDITION isTopLevelCall_1
typecheckig node...
CONDITION isTopLevelCall_1
Condition...
Conidtion: 
isTopLevelCall_1
isTopLevelCall_1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_initializing_5(bool) := False(bool)
has variable
typecheckig node...
_initializing_5(bool) := False(bool)
Function name: initializer
asgn
val: False

Name: False Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _initializing Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: False
0
val: False
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit Initialized(1)
typecheckig node...
Emit Initialized(1)
WORKLIST iteration 0 for function call "initializer":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
_initialized_4(uint8) := ϕ(['_initialized_2', '_initialized_0', '_initialized_5', '_initialized_7'])
Function name: initializer
Phi
[i]Type for _initialized

Name: _initialized Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_initializing_3(bool) := ϕ(['_initializing_0', '_initializing_4', '_initializing_5', '_initializing_8'])
Function name: initializer
Phi
[i]Type for _initializing

Name: _initializing Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_315 = ! _initializing_3 
[i]Type for TMP_315

Name: TMP_315 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
isTopLevelCall_1(bool) := TMP_315(bool)
Function name: initializer
asgn

Name: TMP_315 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
isTopLevelCall_1(bool) := TMP_315(bool)
XXXXX
typecheckig node...
TMP_316(bool) = _initialized_4 < 1
Function name: initializer
testing lt...
val: 1
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_316

Name: TMP_316 Function: initializer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_317(bool) = isTopLevelCall_1 && TMP_316
Function name: initializer
[i]Type for TMP_317

Name: TMP_317 Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_318 = CONVERT this to address
Function name: initializer
[i]Type for TMP_318

Name: TMP_318 Function: initializer
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
TMP_319(bool) = LIBRARY_CALL, dest:AddressUpgradeable, function:AddressUpgradeable.isContract(address), arguments:['TMP_318'] 
Function name: initializer
Library Call: isContract
[i]Type for TMP_319

Name: TMP_319 Function: initializer
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_320 = ! TMP_319 
[i]Type for TMP_320

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_321(bool) = _initialized_4 == 1
Function name: initializer
[i]Type for TMP_321

Name: TMP_321 Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_322(bool) = TMP_320 && TMP_321
Function name: initializer
[i]Type for TMP_322

Name: TMP_322 Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_323(bool) = TMP_317 || TMP_322
Function name: initializer
[i]Type for TMP_323

Name: TMP_323 Function: initializer
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_324(None) = SOLIDITY_CALL require(bool,string)(TMP_323,Initializable: contract is already initialized)
[i]Type for TMP_324

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_initialized_5(uint8) := 1(uint256)
Function name: initializer
asgn
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _initialized Function: initializer
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 1
0
val: 1
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
CONDITION isTopLevelCall_1
Condition...
Conidtion: 
isTopLevelCall_1
isTopLevelCall_1
typecheckig node...
typecheckig node...
typecheckig node...
_initializing_4(bool) := True(bool)
Function name: initializer
asgn
val: True

Name: True Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _initializing Function: initializer
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: True
0
val: True
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
CONDITION isTopLevelCall_1
Condition...
Conidtion: 
isTopLevelCall_1
isTopLevelCall_1
typecheckig node...
typecheckig node...
_initializing_5(bool) := False(bool)
Function name: initializer
asgn
val: False

Name: False Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _initializing Function: initializer
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: False
0
val: False
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
Emit Initialized(1)
WORKLIST iteration 1 for function call "initializer":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: initializer
done.
This IR caused addback:
MODIFIER_CALL, Initializable.initializer()()
XXXXX
clearning node...
clearing ir...?
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init()()
typecheckig node...
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init()()
Internal call...
__Ownable_init
Function: __Ownable_init
ic
Internal cal param_cache
-100
added
xyz
Function name: __Ownable_init
Function Visibility: internal
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, Initializable.onlyInitializing()()
typecheckig node...
MODIFIER_CALL, Initializable.onlyInitializing()()
Internal call...
onlyInitializing
Function: onlyInitializing
ic
Internal cal param_cache
-100
added
xyz
Function name: onlyInitializing
Function Visibility: internal
clearning node...
clearing ir...?
_initializing_9(bool) := ϕ(['_initializing_0', '_initializing_4', '_initializing_5', '_initializing_8'])
has variable
typecheckig node...
_initializing_9(bool) := ϕ(['_initializing_0', '_initializing_4', '_initializing_5', '_initializing_8'])
Function name: onlyInitializing
Phi
[i]Type for _initializing

Name: _initializing Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_331(None) = SOLIDITY_CALL require(bool,string)(_initializing_9,Initializable: contract is not initializing)
typecheckig node...
TMP_331(None) = SOLIDITY_CALL require(bool,string)(_initializing_9,Initializable: contract is not initializing)
[i]Type for TMP_331

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "onlyInitializing":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: onlyInitializing
done.
clearning node...
clearing ir...?
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init_unchained()()
typecheckig node...
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init_unchained()()
Internal call...
__Ownable_init_unchained
Function: __Ownable_init_unchained
ic
Internal cal param_cache
-100
added
xyz
Function name: __Ownable_init_unchained
Function Visibility: internal
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, Initializable.onlyInitializing()()
typecheckig node...
MODIFIER_CALL, Initializable.onlyInitializing()()
Internal call...
onlyInitializing
Function: onlyInitializing
ic
Internal cal param_cache
0
0
done.
clearning node...
clearing ir...?
TMP_2(address) = INTERNAL_CALL, ContextUpgradeable._msgSender()()
has variable
[i] TMP_2 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
INTERNAL_CALL, OwnableUpgradeable._transferOwnership(address)(TMP_2)
typecheckig node...
TMP_2(address) = INTERNAL_CALL, ContextUpgradeable._msgSender()()
Function name: __Ownable_init_unchained
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
-100
added
xyz
Function name: _msgSender
Function Visibility: internal
clearning node...
typecheckig node...
clearning node...
clearing ir...?
RETURN msg.sender
typecheckig node...
RETURN msg.sender
RETURN
msg.sender
WORKLIST iteration 0 for function call "_msgSender":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _msgSender

Name: PIC_3 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_2

Name: TMP_2 Function: __Ownable_init_unchained
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, OwnableUpgradeable._transferOwnership(address)(TMP_2)
Internal call...
_transferOwnership
TMP_2
Function: _transferOwnership
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _transferOwnership
Function Visibility: internal
clearning node...
clearing ir...?
newOwner_1(address) := ϕ(['TMP_9', 'TMP_2', 'newOwner_1'])
has variable
[i] newOwner cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
_owner_2(address) := ϕ(['_owner_3', '_owner_0'])
has variable
typecheckig node...
newOwner_1(address) := ϕ(['TMP_9', 'TMP_2', 'newOwner_1'])
Function name: _transferOwnership
Phi
[i]Type for newOwner

Name: newOwner Function: _transferOwnership
Num: -1
Den: -1
Norm: u
LF: newOwner
Fields: 
Finance Type: undef
done.
_owner_2(address) := ϕ(['_owner_3', '_owner_0'])
Function name: _transferOwnership
Phi
[i]Type for _owner

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: _owner
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
oldOwner_1(address) := _owner_2(address)
has variable
[i] oldOwner cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
oldOwner_1(address) := _owner_2(address)
Function name: _transferOwnership
asgn

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: _owner
Fields: 
Finance Type: undef

Name: oldOwner Function: _transferOwnership
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for oldOwner

Name: oldOwner Function: _transferOwnership
Num: -1
Den: -1
Norm: u
LF: _owner
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_owner_3(address) := newOwner_1(address)
has variable
typecheckig node...
_owner_3(address) := newOwner_1(address)
Function name: _transferOwnership
asgn

Name: newOwner Function: _transferOwnership
Num: -1
Den: -1
Norm: u
LF: newOwner
Fields: 
Finance Type: undef

Name: _owner Function: _transferOwnership
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _owner

Name: _owner Function: _transferOwnership
Num: -1
Den: -1
Norm: u
LF: newOwner
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit OwnershipTransferred(oldOwner_1,newOwner_1)
typecheckig node...
Emit OwnershipTransferred(oldOwner_1,newOwner_1)
WORKLIST iteration 0 for function call "_transferOwnership":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _transferOwnership
done.
WORKLIST iteration 0 for function call "__Ownable_init_unchained":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: __Ownable_init_unchained
done.
WORKLIST iteration 0 for function call "__Ownable_init":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: __Ownable_init
done.
clearning node...
clearing ir...?
validatorMinStakedRequired_1(uint128) := minStakedRequired_1(uint128)
has variable
typecheckig node...
validatorMinStakedRequired_1(uint128) := minStakedRequired_1(uint128)
Function name: initialize
asgn

Name: minStakedRequired Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorMinStakedRequired Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for validatorMinStakedRequired

Name: validatorMinStakedRequired Function: initialize
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_31(uint256) = 180 (c)* 6646
has variable
[i] TMP_31 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
validatorCoolDown_1(uint128) := TMP_31(uint256)
has variable
typecheckig node...
TMP_31(uint256) = 180 (c)* 6646
Function name: initialize
testing mul...
val: 180
val: 6646
val: 180
val: 6646
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 6646

Name: 6646 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_31 Function: initialize
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_31

Name: TMP_31 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
validatorCoolDown_1(uint128) := TMP_31(uint256)
Function name: initialize
asgn

Name: TMP_31 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: validatorCoolDown Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for validatorCoolDown

Name: validatorCoolDown Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_32(uint256) = 28 (c)* 6646
has variable
[i] TMP_32 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
delegatorCoolDown_1(uint128) := TMP_32(uint256)
has variable
typecheckig node...
TMP_32(uint256) = 28 (c)* 6646
Function name: initialize
testing mul...
val: 28
val: 6646
val: 28
val: 6646
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 6646

Name: 6646 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_32 Function: initialize
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_32

Name: TMP_32 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
delegatorCoolDown_1(uint128) := TMP_32(uint256)
Function name: initialize
asgn

Name: TMP_32 Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: delegatorCoolDown Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for delegatorCoolDown

Name: delegatorCoolDown Function: initialize
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
maxCapMultiplier_1(uint128) := 10(uint256)
has variable
typecheckig node...
maxCapMultiplier_1(uint128) := 10(uint256)
Function name: initialize
asgn
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: maxCapMultiplier Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 10
1
1
val: 10
1
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for maxCapMultiplier

Name: maxCapMultiplier Function: initialize
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_33(uint256) = 10 (c)** 18
has variable
[i] TMP_33 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_34(uint256) = 1 (c)* TMP_33
has variable
[i] TMP_34 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
allocatedTokensPerEpoch_1(uint128) := TMP_34(uint256)
has variable
typecheckig node...
TMP_33(uint256) = 10 (c)** 18
Function name: initialize
val: 10
1
val: 18

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 18 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_33 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
18
val: 10
1
[i]Type for TMP_33

Name: TMP_33 Function: initialize
Num: -1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
TMP_34(uint256) = 1 (c)* TMP_33
Function name: initialize
testing mul...
val: 1
val: 1
lnorm: 0 rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_33 Function: initialize
Num: -1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_34 Function: initialize
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_34

Name: TMP_34 Function: initialize
Num: -1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
allocatedTokensPerEpoch_1(uint128) := TMP_34(uint256)
Function name: initialize
asgn

Name: TMP_34 Function: initialize
Num: -1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: allocatedTokensPerEpoch Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
18
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for allocatedTokensPerEpoch

Name: allocatedTokensPerEpoch Function: initialize
Num: -1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_35(uint256) = 10 (c)** 18
has variable
[i] TMP_35 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
globalExchangeRate_1(uint128) := TMP_35(uint256)
has variable
typecheckig node...
TMP_35(uint256) = 10 (c)** 18
Function name: initialize
val: 10
1
val: 18

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 18 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_35 Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
18
val: 10
1
[i]Type for TMP_35

Name: TMP_35 Function: initialize
Num: -1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
globalExchangeRate_1(uint128) := TMP_35(uint256)
Function name: initialize
asgn

Name: TMP_35 Function: initialize
Num: -1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: globalExchangeRate Function: initialize
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
18
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: initialize
Num: -1
Den: -1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit Initialized(minStakedRequired_1,validatorCoolDown_1,delegatorCoolDown_1,maxCapMultiplier_1,allocatedTokensPerEpoch_1,globalExchangeRate_1)
typecheckig node...
Emit Initialized(minStakedRequired_1,validatorCoolDown_1,delegatorCoolDown_1,maxCapMultiplier_1,allocatedTokensPerEpoch_1,globalExchangeRate_1)
WORKLIST iteration 0 for function call "initialize":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: initialize
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
FIELDS:
validators Fields:
globalShares
delegated
exchangeRate
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _transferToContract
Function _transferToContract not marked
Mark Iterations TRUE, proceeding anyway
Function name: _transferToContract
Function Visibility (test): internal
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
FIELDS:
validators Fields:
globalShares
delegated
exchangeRate
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _transferFromContract
Function _transferFromContract not marked
Mark Iterations TRUE, proceeding anyway
Function name: _transferFromContract
Function Visibility (test): internal
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
FIELDS:
validators Fields:
globalShares
delegated
exchangeRate
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: depositRewardTokens
Function name: depositRewardTokens
Function Visibility (test): public
amount
Finding type for amount...
uint128
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint128
uint128
Final Type: uint128

Name: amount Function: depositRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
allocatedTokensPerEpoch_2(uint128) := ϕ(['allocatedTokensPerEpoch_1', 'allocatedTokensPerEpoch_5', 'allocatedTokensPerEpoch_9', 'allocatedTokensPerEpoch_3', 'allocatedTokensPerEpoch_0'])
has variable
clearing ir...?
rewardsLocked_1(uint128) := ϕ(['rewardsLocked_5', 'rewardsLocked_3', 'rewardsLocked_0', 'rewardsLocked_10', 'rewardsLocked_6', 'rewardsLocked_8', 'rewardsLocked_2'])
has variable
clearing ir...?
endEpoch_1(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
has variable
typecheckig node...
allocatedTokensPerEpoch_2(uint128) := ϕ(['allocatedTokensPerEpoch_1', 'allocatedTokensPerEpoch_5', 'allocatedTokensPerEpoch_9', 'allocatedTokensPerEpoch_3', 'allocatedTokensPerEpoch_0'])
Function name: depositRewardTokens
Phi
[i]Type for allocatedTokensPerEpoch

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rewardsLocked_1(uint128) := ϕ(['rewardsLocked_5', 'rewardsLocked_3', 'rewardsLocked_0', 'rewardsLocked_10', 'rewardsLocked_6', 'rewardsLocked_8', 'rewardsLocked_2'])
Function name: depositRewardTokens
Phi
[i]Type for rewardsLocked

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_1(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
Function name: depositRewardTokens
Phi
[i]Type for endEpoch

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
Internal cal param_cache
-100
added
xyz
Function name: onlyOwner
Function Visibility: internal
clearning node...
typecheckig node...
clearning node...
clearing ir...?
INTERNAL_CALL, OwnableUpgradeable._checkOwner()()
typecheckig node...
INTERNAL_CALL, OwnableUpgradeable._checkOwner()()
Internal call...
_checkOwner
Function: _checkOwner
ic
Internal cal param_cache
-100
added
xyz
Function name: _checkOwner
Function Visibility: internal
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_5(address) = INTERNAL_CALL, OwnableUpgradeable.owner()()
has variable
[i] TMP_5 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_6(address) = INTERNAL_CALL, ContextUpgradeable._msgSender()()
has variable
[i] TMP_6 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_7(bool) = TMP_5 == TMP_6
has variable
[i] TMP_7 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_8(None) = SOLIDITY_CALL require(bool,string)(TMP_7,Ownable: caller is not the owner)
typecheckig node...
TMP_5(address) = INTERNAL_CALL, OwnableUpgradeable.owner()()
Function name: _checkOwner
Internal call...
owner
Function: owner
ic
Internal cal param_cache
-100
added
xyz
Function name: owner
Function Visibility: public
clearning node...
clearing ir...?
_owner_1(address) := ϕ(['_owner_3', '_owner_0'])
has variable
typecheckig node...
_owner_1(address) := ϕ(['_owner_3', '_owner_0'])
Function name: owner
Phi
[i]Type for _owner

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _owner_1
typecheckig node...
RETURN _owner_1
RETURN

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "owner":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: owner

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_5

Name: TMP_5 Function: _checkOwner
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_6(address) = INTERNAL_CALL, ContextUpgradeable._msgSender()()
Function name: _checkOwner
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
0
0

Name: PIC_3 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_6 Function: _checkOwner
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_6

Name: TMP_6 Function: _checkOwner
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_7(bool) = TMP_5 == TMP_6
Function name: _checkOwner
[i]Type for TMP_7

Name: TMP_7 Function: _checkOwner
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_8(None) = SOLIDITY_CALL require(bool,string)(TMP_7,Ownable: caller is not the owner)
[i]Type for TMP_8

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_checkOwner":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _checkOwner
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "onlyOwner":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: onlyOwner
done.
clearning node...
clearing ir...?
TMP_41(bool) = amount_1 >= allocatedTokensPerEpoch_3
has variable
[i] TMP_41 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_42(None) = SOLIDITY_CALL require(bool,string)(TMP_41,Does not cover least 1 epoch)
typecheckig node...
TMP_41(bool) = amount_1 >= allocatedTokensPerEpoch_3
Function name: depositRewardTokens
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_41

Name: TMP_41 Function: depositRewardTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_42(None) = SOLIDITY_CALL require(bool,string)(TMP_41,Does not cover least 1 epoch)
[i]Type for TMP_42

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_43(uint128) = amount_1 (c)% allocatedTokensPerEpoch_3
has variable
[i] TMP_43 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_44(bool) = TMP_43 == 0
has variable
[i] TMP_44 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_45(None) = SOLIDITY_CALL require(bool,string)(TMP_44,Not multiple)
typecheckig node...
TMP_43(uint128) = amount_1 (c)% allocatedTokensPerEpoch_3
Function name: depositRewardTokens
[i]Type for TMP_43

Name: TMP_43 Function: depositRewardTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_44(bool) = TMP_43 == 0
Function name: depositRewardTokens
[i]Type for TMP_44

Name: TMP_44 Function: depositRewardTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_45(None) = SOLIDITY_CALL require(bool,string)(TMP_44,Not multiple)
[i]Type for TMP_45

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_46(bool) = endEpoch_2 != 0
has variable
[i] TMP_46 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_46
typecheckig node...
TMP_46(bool) = endEpoch_2 != 0
Function name: depositRewardTokens
[i]Type for TMP_46

Name: TMP_46 Function: depositRewardTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_46
Condition...
Conidtion: 
TMP_46
TMP_46
clearning node...
clearing ir...?
TMP_47(uint128) = amount_1 / allocatedTokensPerEpoch_3
has variable
[i] TMP_47 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
endEpoch_3(uint128) = endEpoch_2 + TMP_47
has variable
typecheckig node...
TMP_47(uint128) = amount_1 / allocatedTokensPerEpoch_3
Function name: depositRewardTokens
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_47 Function: depositRewardTokens
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: depositRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_47 Function: depositRewardTokens
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_47

Name: TMP_47 Function: depositRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_3(uint128) = endEpoch_2 + TMP_47
Function name: depositRewardTokens

Name: endEpoch Function: depositRewardTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_47 Function: depositRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: endEpoch Function: depositRewardTokens
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for endEpoch

Name: endEpoch Function: depositRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
rewardsLocked_3(uint128) = rewardsLocked_2 + amount_1
has variable
typecheckig node...
rewardsLocked_3(uint128) = rewardsLocked_2 + amount_1
Function name: depositRewardTokens

Name: rewardsLocked Function: depositRewardTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: depositRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: rewardsLocked Function: depositRewardTokens
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for rewardsLocked

Name: rewardsLocked Function: depositRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._transferToContract(address,uint128)(msg.sender,amount_1)
typecheckig node...
INTERNAL_CALL, DelegatedStaking._transferToContract(address,uint128)(msg.sender,amount_1)
Internal call...
_transferToContract
msg.sender
amount
Function: _transferToContract
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _transferToContract
Function Visibility: internal
clearning node...
clearing ir...?
from_1(address) := ϕ(['msg.sender'])
has variable
[i] from cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_1'])
has variable
[i] amount cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CQT_1(IERC20Upgradeable) := ϕ(['CQT_0'])
has variable
typecheckig node...
from_1(address) := ϕ(['msg.sender'])
Function name: _transferToContract
Phi
[i]Type for from

Name: from Function: _transferToContract
Num: -1
Den: -1
Norm: u
LF: from
Fields: 
Finance Type: undef
done.
amount_1(uint128) := ϕ(['amount_1', 'amount_1'])
Function name: _transferToContract
Phi
[i]Type for amount

Name: amount Function: _transferToContract
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CQT_1(IERC20Upgradeable) := ϕ(['CQT_0'])
Function name: _transferToContract
Phi
[i]Type for CQT

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_38 = CONVERT this to address
has variable
[i] TMP_38 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256), arguments:['CQT_1', 'from_1', 'TMP_38', 'amount_1'] 
typecheckig node...
TMP_38 = CONVERT this to address
Function name: _transferToContract
[i]Type for TMP_38

Name: TMP_38 Function: _transferToContract
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256), arguments:['CQT_1', 'from_1', 'TMP_38', 'amount_1'] 
Library Call: safeTransferFrom
done.
WORKLIST iteration 0 for function call "_transferToContract":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _transferToContract
done.
clearning node...
clearing ir...?
Emit RewardTokensDeposited(amount_1)
typecheckig node...
Emit RewardTokensDeposited(amount_1)
WORKLIST iteration 0 for function call "depositRewardTokens":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: depositRewardTokens
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
FIELDS:
validators Fields:
globalShares
delegated
exchangeRate
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: takeOutRewardTokens
Function name: takeOutRewardTokens
Function Visibility (test): public
amount
Finding type for amount...
uint128
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint128
uint128
Final Type: uint128

Name: amount Function: takeOutRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
allocatedTokensPerEpoch_4(uint128) := ϕ(['allocatedTokensPerEpoch_1', 'allocatedTokensPerEpoch_5', 'allocatedTokensPerEpoch_9', 'allocatedTokensPerEpoch_3', 'allocatedTokensPerEpoch_0'])
has variable
clearing ir...?
rewardsLocked_4(uint128) := ϕ(['rewardsLocked_5', 'rewardsLocked_3', 'rewardsLocked_0', 'rewardsLocked_10', 'rewardsLocked_6', 'rewardsLocked_8', 'rewardsLocked_2'])
has variable
clearing ir...?
endEpoch_4(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
has variable
typecheckig node...
allocatedTokensPerEpoch_4(uint128) := ϕ(['allocatedTokensPerEpoch_1', 'allocatedTokensPerEpoch_5', 'allocatedTokensPerEpoch_9', 'allocatedTokensPerEpoch_3', 'allocatedTokensPerEpoch_0'])
Function name: takeOutRewardTokens
Phi
[i]Type for allocatedTokensPerEpoch

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rewardsLocked_4(uint128) := ϕ(['rewardsLocked_5', 'rewardsLocked_3', 'rewardsLocked_0', 'rewardsLocked_10', 'rewardsLocked_6', 'rewardsLocked_8', 'rewardsLocked_2'])
Function name: takeOutRewardTokens
Phi
[i]Type for rewardsLocked

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_4(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
Function name: takeOutRewardTokens
Phi
[i]Type for endEpoch

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
Internal cal param_cache
0
0
done.
clearning node...
clearing ir...?
TMP_51(bool) = amount_1 > 0
has variable
[i] TMP_51 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_52(None) = SOLIDITY_CALL require(bool,string)(TMP_51,Amount is 0)
typecheckig node...
TMP_51(bool) = amount_1 > 0
Function name: takeOutRewardTokens
testing gt...
val: 0
val: 0
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_51

Name: TMP_51 Function: takeOutRewardTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_52(None) = SOLIDITY_CALL require(bool,string)(TMP_51,Amount is 0)
[i]Type for TMP_52

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_53(uint128) = amount_1 (c)% allocatedTokensPerEpoch_5
has variable
[i] TMP_53 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_54(bool) = TMP_53 == 0
has variable
[i] TMP_54 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_55(None) = SOLIDITY_CALL require(bool,string)(TMP_54,Not multiple)
typecheckig node...
TMP_53(uint128) = amount_1 (c)% allocatedTokensPerEpoch_5
Function name: takeOutRewardTokens
[i]Type for TMP_53

Name: TMP_53 Function: takeOutRewardTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_54(bool) = TMP_53 == 0
Function name: takeOutRewardTokens
[i]Type for TMP_54

Name: TMP_54 Function: takeOutRewardTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_55(None) = SOLIDITY_CALL require(bool,string)(TMP_54,Not multiple)
[i]Type for TMP_55

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_56(bool) = endEpoch_5 != 0
has variable
[i] TMP_56 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_56
typecheckig node...
TMP_56(bool) = endEpoch_5 != 0
Function name: takeOutRewardTokens
[i]Type for TMP_56

Name: TMP_56 Function: takeOutRewardTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_56
Condition...
Conidtion: 
TMP_56
TMP_56
clearning node...
clearing ir...?
TMP_63(bool) = rewardsLocked_5 >= amount_1
has variable
[i] TMP_63 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_64(None) = SOLIDITY_CALL require(bool,string)(TMP_63,Amount is greater than available)
typecheckig node...
TMP_63(bool) = rewardsLocked_5 >= amount_1
Function name: takeOutRewardTokens
testing gt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_63

Name: TMP_63 Function: takeOutRewardTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_64(None) = SOLIDITY_CALL require(bool,string)(TMP_63,Amount is greater than available)
[i]Type for TMP_64

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_57 = CONVERT block.number to uint128
has variable
[i] TMP_57 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
currentEpoch_1(uint128) := TMP_57(uint128)
has variable
[i] currentEpoch cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_57 = CONVERT block.number to uint128
Function name: takeOutRewardTokens
[i]Type for TMP_57

Name: TMP_57 Function: takeOutRewardTokens
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
currentEpoch_1(uint128) := TMP_57(uint128)
Function name: takeOutRewardTokens
asgn

Name: TMP_57 Function: takeOutRewardTokens
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef

Name: currentEpoch Function: takeOutRewardTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentEpoch

Name: currentEpoch Function: takeOutRewardTokens
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_58(uint128) = amount_1 (c)/ allocatedTokensPerEpoch_5
has variable
[i] TMP_58 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
epochs_1(uint128) := TMP_58(uint128)
has variable
[i] epochs cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_58(uint128) = amount_1 (c)/ allocatedTokensPerEpoch_5
Function name: takeOutRewardTokens
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_58 Function: takeOutRewardTokens
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: takeOutRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_58 Function: takeOutRewardTokens
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_58

Name: TMP_58 Function: takeOutRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
epochs_1(uint128) := TMP_58(uint128)
Function name: takeOutRewardTokens
asgn

Name: TMP_58 Function: takeOutRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: epochs Function: takeOutRewardTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for epochs

Name: epochs Function: takeOutRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_59(uint128) = endEpoch_5 (c)- epochs_1
has variable
[i] TMP_59 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_60(bool) = TMP_59 > currentEpoch_1
has variable
[i] TMP_60 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_61(None) = SOLIDITY_CALL require(bool,string)(TMP_60,Cannot takeout rewards from past)
typecheckig node...
TMP_59(uint128) = endEpoch_5 (c)- epochs_1
Function name: takeOutRewardTokens
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: epochs Function: takeOutRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: epochs Function: takeOutRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_59 Function: takeOutRewardTokens
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_59

Name: TMP_59 Function: takeOutRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_60(bool) = TMP_59 > currentEpoch_1
Function name: takeOutRewardTokens
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: currentEpoch Function: takeOutRewardTokens
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
True
[i]Type for TMP_60

Name: TMP_60 Function: takeOutRewardTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_61(None) = SOLIDITY_CALL require(bool,string)(TMP_60,Cannot takeout rewards from past)
[i]Type for TMP_61

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
rewardsLocked_6(uint128) = rewardsLocked_5 - amount_1
has variable
typecheckig node...
rewardsLocked_6(uint128) = rewardsLocked_5 - amount_1
Function name: takeOutRewardTokens
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: takeOutRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: takeOutRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: rewardsLocked Function: takeOutRewardTokens
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for rewardsLocked

Name: rewardsLocked Function: takeOutRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_62(uint128) = endEpoch_5 - epochs_1
has variable
[i] TMP_62 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
endEpoch_6(uint128) := TMP_62(uint128)
has variable
typecheckig node...
TMP_62(uint128) = endEpoch_5 - epochs_1
Function name: takeOutRewardTokens
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: epochs Function: takeOutRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: epochs Function: takeOutRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_62 Function: takeOutRewardTokens
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: takeOutRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_6(uint128) := TMP_62(uint128)
Function name: takeOutRewardTokens
asgn

Name: TMP_62 Function: takeOutRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: endEpoch Function: takeOutRewardTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for endEpoch

Name: endEpoch Function: takeOutRewardTokens
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._transferFromContract(address,uint128)(msg.sender,amount_1)
typecheckig node...
INTERNAL_CALL, DelegatedStaking._transferFromContract(address,uint128)(msg.sender,amount_1)
Internal call...
_transferFromContract
msg.sender
amount
Function: _transferFromContract
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _transferFromContract
Function Visibility: internal
clearning node...
clearing ir...?
to_1(address) := ϕ(['msg.sender', 'beneficiary_1'])
has variable
[i] to cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
amount_1(uint128) := ϕ(['toTransfer_3', 'amount_5', 'amount_1', 'amount_1'])
has variable
[i] amount cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CQT_2(IERC20Upgradeable) := ϕ(['CQT_0'])
has variable
typecheckig node...
to_1(address) := ϕ(['msg.sender', 'beneficiary_1'])
Function name: _transferFromContract
Phi
[i]Type for to

Name: to Function: _transferFromContract
Num: -1
Den: -1
Norm: u
LF: to
Fields: 
Finance Type: undef
done.
amount_1(uint128) := ϕ(['toTransfer_3', 'amount_5', 'amount_1', 'amount_1'])
Function name: _transferFromContract
Phi
[i]Type for amount

Name: amount Function: _transferFromContract
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CQT_2(IERC20Upgradeable) := ϕ(['CQT_0'])
Function name: _transferFromContract
Phi
[i]Type for CQT

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['CQT_2', 'to_1', 'amount_1'] 
typecheckig node...
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['CQT_2', 'to_1', 'amount_1'] 
Library Call: safeTransfer
done.
WORKLIST iteration 0 for function call "_transferFromContract":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _transferFromContract
done.
clearning node...
clearing ir...?
Emit AllocatedTokensTaken(amount_1)
typecheckig node...
Emit AllocatedTokensTaken(amount_1)
WORKLIST iteration 0 for function call "takeOutRewardTokens":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: takeOutRewardTokens
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
FIELDS:
validators Fields:
globalShares
delegated
exchangeRate
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _updateGlobalExchangeRate
Function _updateGlobalExchangeRate not marked
Mark Iterations TRUE, proceeding anyway
Function name: _updateGlobalExchangeRate
Function Visibility (test): internal
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
FIELDS:
validators Fields:
globalShares
delegated
exchangeRate
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _updateValidator
Function _updateValidator not marked
Mark Iterations TRUE, proceeding anyway
Function name: _updateValidator
Function Visibility (test): internal
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
FIELDS:
validators Fields:
globalShares
delegated
exchangeRate
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _sharesToTokens
Function _sharesToTokens not marked
Mark Iterations TRUE, proceeding anyway
Function name: _sharesToTokens
Function Visibility (test): internal
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
FIELDS:
validators Fields:
globalShares
delegated
exchangeRate
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _tokensToShares
Function _tokensToShares not marked
Mark Iterations TRUE, proceeding anyway
Function name: _tokensToShares
Function Visibility (test): internal
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
FIELDS:
validators Fields:
globalShares
delegated
exchangeRate
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: stake
Function name: stake
Function Visibility (test): public
validatorId
Finding type for validatorId...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorId Function: stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
amount
Finding type for amount...
uint128
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint128
uint128
Final Type: uint128

Name: amount Function: stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_104(int256) = 1 (c)+ 1
has variable
[i] TMP_104 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
a_1(int256) := TMP_104(int256)
has variable
[i] a cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_104(int256) = 1 (c)+ 1
Function name: stake
val: 1
val: 1

Name: TMP_104 Function: stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_104 Function: stake
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_104

Name: TMP_104 Function: stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
a_1(int256) := TMP_104(int256)
Function name: stake
asgn

Name: TMP_104 Function: stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: a Function: stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for a

Name: a Function: stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._stake(uint128,uint128,bool)(validatorId_1,amount_1,True)
typecheckig node...
INTERNAL_CALL, DelegatedStaking._stake(uint128,uint128,bool)(validatorId_1,amount_1,True)
Internal call...
_stake
validatorId
amount
True
Function: _stake
ic
val: True
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _stake
Function Visibility: public
clearning node...
clearing ir...?
validatorId_1(uint128) := ϕ(['validatorId_1', 'validatorId_1', 'newValidatorId_1'])
has variable
[i] validatorId cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_1', 'amount_1'])
has variable
[i] amount cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
divider_6(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
clearing ir...?
maxCapMultiplier_2(uint128) := ϕ(['maxCapMultiplier_0', 'maxCapMultiplier_7', 'maxCapMultiplier_1', 'maxCapMultiplier_6', 'maxCapMultiplier_4'])
has variable
clearing ir...?
validatorMinStakedRequired_2(uint128) := ϕ(['validatorMinStakedRequired_1', 'validatorMinStakedRequired_4', 'validatorMinStakedRequired_0', 'validatorMinStakedRequired_7', 'validatorMinStakedRequired_6'])
has variable
clearing ir...?
allocatedTokensPerEpoch_7(uint128) := ϕ(['allocatedTokensPerEpoch_1', 'allocatedTokensPerEpoch_5', 'allocatedTokensPerEpoch_9', 'allocatedTokensPerEpoch_3', 'allocatedTokensPerEpoch_0'])
has variable
clearing ir...?
rewardsLocked_7(uint128) := ϕ(['rewardsLocked_5', 'rewardsLocked_3', 'rewardsLocked_0', 'rewardsLocked_10', 'rewardsLocked_6', 'rewardsLocked_8', 'rewardsLocked_2'])
has variable
clearing ir...?
endEpoch_8(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
has variable
clearing ir...?
totalGlobalShares_2(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
has variable
clearing ir...?
globalExchangeRate_6(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
has variable
clearing ir...?
validatorsN_1(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
has variable
clearing ir...?
validators_1(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
has variable
typecheckig node...
validatorId_1(uint128) := ϕ(['validatorId_1', 'validatorId_1', 'newValidatorId_1'])
Function name: _stake
Phi
[i]Type for validatorId

Name: validatorId Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint128) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Function name: _stake
Phi
[i]Type for amount

Name: amount Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
divider_6(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _stake
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
maxCapMultiplier_2(uint128) := ϕ(['maxCapMultiplier_0', 'maxCapMultiplier_7', 'maxCapMultiplier_1', 'maxCapMultiplier_6', 'maxCapMultiplier_4'])
Function name: _stake
Phi
[i]Type for maxCapMultiplier

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validatorMinStakedRequired_2(uint128) := ϕ(['validatorMinStakedRequired_1', 'validatorMinStakedRequired_4', 'validatorMinStakedRequired_0', 'validatorMinStakedRequired_7', 'validatorMinStakedRequired_6'])
Function name: _stake
Phi
[i]Type for validatorMinStakedRequired

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
allocatedTokensPerEpoch_7(uint128) := ϕ(['allocatedTokensPerEpoch_1', 'allocatedTokensPerEpoch_5', 'allocatedTokensPerEpoch_9', 'allocatedTokensPerEpoch_3', 'allocatedTokensPerEpoch_0'])
Function name: _stake
Phi
[i]Type for allocatedTokensPerEpoch

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rewardsLocked_7(uint128) := ϕ(['rewardsLocked_5', 'rewardsLocked_3', 'rewardsLocked_0', 'rewardsLocked_10', 'rewardsLocked_6', 'rewardsLocked_8', 'rewardsLocked_2'])
Function name: _stake
Phi
[i]Type for rewardsLocked

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_8(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
Function name: _stake
Phi
[i]Type for endEpoch

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalGlobalShares_2(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
Function name: _stake
Phi
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
globalExchangeRate_6(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
Function name: _stake
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
validatorsN_1(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
Function name: _stake
Phi
[i]Type for validatorsN

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_1(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: _stake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_106(bool) = amount_1 >= divider_6
has variable
[i] TMP_106 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,Amount must be at least 1 token)
typecheckig node...
TMP_106(bool) = amount_1 >= divider_6
Function name: _stake
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_106

Name: TMP_106 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,Amount must be at least 1 token)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_108(bool) = validatorId_1 < validatorsN_1
has variable
[i] TMP_108 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_109(None) = SOLIDITY_CALL require(bool,string)(TMP_108,Invalid validator)
typecheckig node...
TMP_108(bool) = validatorId_1 < validatorsN_1
Function name: _stake
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_108

Name: TMP_108 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_109(None) = SOLIDITY_CALL require(bool,string)(TMP_108,Invalid validator)
[i]Type for TMP_109

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_12(DelegatedStaking.Validator) -> validators_1[validatorId_1]
has variable
clearing ir...?
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_12(DelegatedStaking.Validator)
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_12(DelegatedStaking.Validator) -> validators_1[validatorId_1]
Function name: _stake
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_12

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_12(DelegatedStaking.Validator)
Function name: _stake
asgn

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef

Name: v Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_13(uint128) -> v_1 (-> ['validators']).disabledEpoch
has variable
clearing ir...?
TMP_110(bool) = REF_13 == 0
has variable
[i] TMP_110 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_111(None) = SOLIDITY_CALL require(bool,string)(TMP_110,Validator is disabled)
typecheckig node...
REF_13(uint128) -> v_1 (-> ['validators']).disabledEpoch
Function name: _stake
MEMBER
v
disabledEpoch
_stake
v Fields:
globalShares
delegated
exchangeRate
^^^
[i]Type for REF_13

Name: v.disabledEpoch Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_110(bool) = REF_13 == 0
Function name: _stake
[i]Type for TMP_110

Name: TMP_110 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_111(None) = SOLIDITY_CALL require(bool,string)(TMP_110,Validator is disabled)
[i]Type for TMP_111

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_112(bool) = endEpoch_8 == 0
has variable
[i] TMP_112 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_112
typecheckig node...
TMP_112(bool) = endEpoch_8 == 0
Function name: _stake
[i]Type for TMP_112

Name: TMP_112 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_112
Condition...
Conidtion: 
TMP_112
TMP_112
clearning node...
clearing ir...?
TMP_113 = CONVERT block.number to uint128
has variable
[i] TMP_113 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_114(uint128) = rewardsLocked_7 / allocatedTokensPerEpoch_7
has variable
[i] TMP_114 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_115(uint128) = TMP_113 + TMP_114
has variable
[i] TMP_115 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
endEpoch_9(uint128) := TMP_115(uint128)
has variable
typecheckig node...
TMP_113 = CONVERT block.number to uint128
Function name: _stake
[i]Type for TMP_113

Name: TMP_113 Function: _stake
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
TMP_114(uint128) = rewardsLocked_7 / allocatedTokensPerEpoch_7
Function name: _stake
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_114 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_114

Name: TMP_114 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_115(uint128) = TMP_113 + TMP_114
Function name: _stake

Name: TMP_115 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_114 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_115 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_115

Name: TMP_115 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_9(uint128) := TMP_115(uint128)
Function name: _stake
asgn

Name: TMP_115 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: endEpoch Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for endEpoch

Name: endEpoch Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
rewardsLocked_8(uint128) := 0(uint256)
has variable
typecheckig node...
rewardsLocked_8(uint128) := 0(uint256)
Function name: _stake
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: rewardsLocked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardsLocked

Name: rewardsLocked Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_116(bool) = endEpoch_9 > block.number
has variable
[i] TMP_116 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_117(None) = SOLIDITY_CALL require(bool,string)(TMP_116,Program ended)
typecheckig node...
TMP_116(bool) = endEpoch_9 > block.number
Function name: _stake
testing gt...
block.number
[i]Type for TMP_116

Name: TMP_116 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_117(None) = SOLIDITY_CALL require(bool,string)(TMP_116,Program ended)
[i]Type for TMP_117

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
clearing ir...?
globalExchangeRate_7(uint128) := ϕ(['globalExchangeRate_3'])
has variable
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
Internal call...
_updateGlobalExchangeRate
Function: _updateGlobalExchangeRate
ic
Internal cal param_cache
-100
added
xyz
Function name: _updateGlobalExchangeRate
Function Visibility: internal
clearning node...
clearing ir...?
divider_1(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
clearing ir...?
allocatedTokensPerEpoch_6(uint128) := ϕ(['allocatedTokensPerEpoch_1', 'allocatedTokensPerEpoch_5', 'allocatedTokensPerEpoch_9', 'allocatedTokensPerEpoch_3', 'allocatedTokensPerEpoch_0'])
has variable
clearing ir...?
endEpoch_7(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
has variable
clearing ir...?
totalGlobalShares_1(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
has variable
clearing ir...?
lastUpdateEpoch_1(uint128) := ϕ(['lastUpdateEpoch_0', 'lastUpdateEpoch_2'])
has variable
clearing ir...?
globalExchangeRate_2(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
has variable
typecheckig node...
divider_1(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _updateGlobalExchangeRate
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
allocatedTokensPerEpoch_6(uint128) := ϕ(['allocatedTokensPerEpoch_1', 'allocatedTokensPerEpoch_5', 'allocatedTokensPerEpoch_9', 'allocatedTokensPerEpoch_3', 'allocatedTokensPerEpoch_0'])
Function name: _updateGlobalExchangeRate
Phi
[i]Type for allocatedTokensPerEpoch

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_7(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
Function name: _updateGlobalExchangeRate
Phi
[i]Type for endEpoch

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalGlobalShares_1(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
Function name: _updateGlobalExchangeRate
Phi
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastUpdateEpoch_1(uint128) := ϕ(['lastUpdateEpoch_0', 'lastUpdateEpoch_2'])
Function name: _updateGlobalExchangeRate
Phi
[i]Type for lastUpdateEpoch

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
globalExchangeRate_2(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
Function name: _updateGlobalExchangeRate
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
clearning node...
clearing ir...?
TMP_68 = CONVERT block.number to uint128
has variable
[i] TMP_68 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
currentBlock_1(uint128) := TMP_68(uint128)
has variable
[i] currentBlock cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_68 = CONVERT block.number to uint128
Function name: _updateGlobalExchangeRate
[i]Type for TMP_68

Name: TMP_68 Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
currentBlock_1(uint128) := TMP_68(uint128)
Function name: _updateGlobalExchangeRate
asgn

Name: TMP_68 Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef

Name: currentBlock Function: _updateGlobalExchangeRate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentBlock

Name: currentBlock Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_79(bool) = currentBlock_1 < endEpoch_7
has variable
[i] TMP_79 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_79
typecheckig node...
TMP_79(bool) = currentBlock_1 < endEpoch_7
Function name: _updateGlobalExchangeRate
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_79

Name: TMP_79 Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_79
Condition...
Conidtion: 
TMP_79
TMP_79
clearning node...
clearing ir...?
currentEpoch_2(uint128) := endEpoch_7(uint128)
has variable
[i] currentEpoch cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
currentEpoch_2(uint128) := endEpoch_7(uint128)
Function name: _updateGlobalExchangeRate
asgn

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentEpoch Function: _updateGlobalExchangeRate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentEpoch

Name: currentEpoch Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
currentEpoch_1(uint128) := currentBlock_1(uint128)
has variable
[i] currentEpoch cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
currentEpoch_1(uint128) := currentBlock_1(uint128)
Function name: _updateGlobalExchangeRate
asgn

Name: currentBlock Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef

Name: currentEpoch Function: _updateGlobalExchangeRate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentEpoch

Name: currentEpoch Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
currentEpoch_3(uint128) := ϕ(['currentEpoch_1', 'currentEpoch_2'])
has variable
[i] currentEpoch cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
currentEpoch_3(uint128) := ϕ(['currentEpoch_1', 'currentEpoch_2'])
Function name: _updateGlobalExchangeRate
Phi
[i]Type for currentEpoch

Name: currentEpoch Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_69(bool) = currentEpoch_3 != lastUpdateEpoch_1
has variable
[i] TMP_69 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_69
typecheckig node...
TMP_69(bool) = currentEpoch_3 != lastUpdateEpoch_1
Function name: _updateGlobalExchangeRate
[i]Type for TMP_69

Name: TMP_69 Function: _updateGlobalExchangeRate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_69
Condition...
Conidtion: 
TMP_69
TMP_69
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_70(bool) = totalGlobalShares_1 > 0
has variable
[i] TMP_70 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_70
typecheckig node...
TMP_70(bool) = totalGlobalShares_1 > 0
Function name: _updateGlobalExchangeRate
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_70

Name: TMP_70 Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_70
Condition...
Conidtion: 
TMP_70
TMP_70
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_71 = CONVERT allocatedTokensPerEpoch_6 to uint256
has variable
[i] TMP_71 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_72(uint256) = TMP_71 * divider_1
has variable
[i] TMP_72 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_73(uint128) = currentEpoch_3 - lastUpdateEpoch_1
has variable
[i] TMP_73 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_74 = CONVERT TMP_73 to uint256
has variable
[i] TMP_74 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_75(uint256) = TMP_72 * TMP_74
has variable
[i] TMP_75 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_76 = CONVERT totalGlobalShares_1 to uint256
has variable
[i] TMP_76 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_77(uint256) = TMP_75 / TMP_76
has variable
[i] TMP_77 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_78 = CONVERT TMP_77 to uint128
has variable
[i] TMP_78 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
globalExchangeRate_3(uint128) = globalExchangeRate_2 + TMP_78
has variable
typecheckig node...
TMP_71 = CONVERT allocatedTokensPerEpoch_6 to uint256
Function name: _updateGlobalExchangeRate

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_71 Function: _updateGlobalExchangeRate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_71

Name: TMP_71 Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_72(uint256) = TMP_71 * divider_1
Function name: _updateGlobalExchangeRate
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_72 Function: _updateGlobalExchangeRate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_72

Name: TMP_72 Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_73(uint128) = currentEpoch_3 - lastUpdateEpoch_1
Function name: _updateGlobalExchangeRate
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: currentEpoch Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_73 Function: _updateGlobalExchangeRate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_73

Name: TMP_73 Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_74 = CONVERT TMP_73 to uint256
Function name: _updateGlobalExchangeRate

Name: TMP_73 Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_74 Function: _updateGlobalExchangeRate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_74

Name: TMP_74 Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_75(uint256) = TMP_72 * TMP_74
Function name: _updateGlobalExchangeRate
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_74 Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_75 Function: _updateGlobalExchangeRate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_75

Name: TMP_75 Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_76 = CONVERT totalGlobalShares_1 to uint256
Function name: _updateGlobalExchangeRate

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_76 Function: _updateGlobalExchangeRate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_76

Name: TMP_76 Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_77(uint256) = TMP_75 / TMP_76
Function name: _updateGlobalExchangeRate
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_77 Function: _updateGlobalExchangeRate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_77

Name: TMP_77 Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_78 = CONVERT TMP_77 to uint128
Function name: _updateGlobalExchangeRate

Name: TMP_77 Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_78 Function: _updateGlobalExchangeRate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_78

Name: TMP_78 Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
globalExchangeRate_3(uint128) = globalExchangeRate_2 + TMP_78
Function name: _updateGlobalExchangeRate

Name: globalExchangeRate Function: _updateGlobalExchangeRate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 18 rnorm: u
Dest type: 12, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Dest updated
Right type: -1, Left type: 12
Final dest type: 112

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: globalExchangeRate Function: _updateGlobalExchangeRate
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: _updateGlobalExchangeRate
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
clearning node...
clearing ir...?
lastUpdateEpoch_2(uint128) := currentEpoch_3(uint128)
has variable
typecheckig node...
lastUpdateEpoch_2(uint128) := currentEpoch_3(uint128)
Function name: _updateGlobalExchangeRate
asgn

Name: currentEpoch Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef

Name: lastUpdateEpoch Function: _updateGlobalExchangeRate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for lastUpdateEpoch

Name: lastUpdateEpoch Function: _updateGlobalExchangeRate
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_updateGlobalExchangeRate":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _updateGlobalExchangeRate
done.
globalExchangeRate_7(uint128) := ϕ(['globalExchangeRate_3'])
Function name: _stake
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._updateValidator(DelegatedStaking.Validator)(v_1 (-> ['validators']))
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateValidator(DelegatedStaking.Validator)(v_1 (-> ['validators']))
Internal call...
_updateValidator
v
Function: _updateValidator
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: [disabledEpoch, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333b54fd0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333ae0490>, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333ae0610>]
    fintype: -1
-100
added
xyz
Function name: _updateValidator
Function Visibility: internal
clearning node...
clearing ir...?
v_1 (-> [])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])", "v_1 (-> ['validators'])", "v_1 (-> ['validators'])", 'REF_94', "v_5 (-> ['validators'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
divider_2(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
clearing ir...?
globalExchangeRate_4(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
has variable
typecheckig node...
v_1 (-> [])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])", "v_1 (-> ['validators'])", "v_1 (-> ['validators'])", 'REF_94', "v_5 (-> ['validators'])"])
Function name: _updateValidator
Phi
[i]Type for v

Name: v Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
divider_2(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _updateValidator
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
globalExchangeRate_4(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
Function name: _updateValidator
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
clearning node...
clearing ir...?
REF_2(uint128) -> v_1 (-> []).disabledEpoch
has variable
clearing ir...?
TMP_80(bool) = REF_2 == 0
has variable
[i] TMP_80 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_80
typecheckig node...
REF_2(uint128) -> v_1 (-> []).disabledEpoch
Function name: _updateValidator
MEMBER
v
disabledEpoch
_updateValidator
v Fields:
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_2

Name: v.disabledEpoch Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_80(bool) = REF_2 == 0
Function name: _updateValidator
[i]Type for TMP_80

Name: TMP_80 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_80
Condition...
Conidtion: 
TMP_80
TMP_80
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_3(uint128) -> v_1 (-> []).totalShares
has variable
clearing ir...?
TMP_81(bool) = REF_3 == 0
has variable
[i] TMP_81 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_81
typecheckig node...
REF_3(uint128) -> v_1 (-> []).totalShares
Function name: _updateValidator
MEMBER
v
totalShares
_updateValidator
v Fields:
disabledEpoch
globalShares
delegated
exchangeRate
^^^
[i]Type for REF_3

Name: v.totalShares Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_81(bool) = REF_3 == 0
Function name: _updateValidator
[i]Type for TMP_81

Name: TMP_81 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_81
Condition...
Conidtion: 
TMP_81
TMP_81
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_4(uint128) -> v_1 (-> []).exchangeRate
has variable
clearing ir...?
v_4 (-> [])(DelegatedStaking.Validator) := ϕ(['v_1 (-> [])'])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_4 (->v_4 (-> [])) := globalExchangeRate_4(uint128)
has variable
typecheckig node...
REF_4(uint128) -> v_1 (-> []).exchangeRate
Function name: _updateValidator
MEMBER
v
exchangeRate
_updateValidator
v Fields:
totalShares
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for REF_4

Name: v.exchangeRate Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: v.exchangeRate Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_4 (-> [])(DelegatedStaking.Validator) := ϕ(['v_1 (-> [])'])
Function name: _updateValidator
Phi
[i]Type for v

Name: v Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_4 (->v_4 (-> [])) := globalExchangeRate_4(uint128)
Function name: _updateValidator
asgn

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_4 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
18
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for REF_4

Name: REF_4 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_4 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
clearning node...
clearing ir...?
REF_5(uint128) -> v_1 (-> []).lastUpdateGlobalRate
has variable
clearing ir...?
TMP_82(uint128) = globalExchangeRate_4 - REF_5
has variable
[i] TMP_82 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
rateDifference_1(uint128) := TMP_82(uint128)
has variable
[i] rateDifference cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_5(uint128) -> v_1 (-> []).lastUpdateGlobalRate
Function name: _updateValidator
MEMBER
v
lastUpdateGlobalRate
_updateValidator
v Fields:
totalShares
disabledEpoch
globalShares
delegated
exchangeRate
^^^
[i]Type for REF_5

Name: v.lastUpdateGlobalRate Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.lastUpdateGlobalRate Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastUpdateGlobalRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_82(uint128) = globalExchangeRate_4 - REF_5
Function name: _updateValidator
lnorm: 18 rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: v.lastUpdateGlobalRate Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_82 Function: _updateValidator
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_82

Name: TMP_82 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
This IR caused addback:
TMP_82(uint128) = globalExchangeRate_4 - REF_5
XXXXX
rateDifference_1(uint128) := TMP_82(uint128)
Function name: _updateValidator
asgn

Name: TMP_82 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: rateDifference Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
18
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for rateDifference

Name: rateDifference Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
clearning node...
clearing ir...?
v_5 (-> [])(DelegatedStaking.Validator) := ϕ(['v_3 (-> [])', 'v_4 (-> [])'])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
v_5 (-> [])(DelegatedStaking.Validator) := ϕ(['v_3 (-> [])', 'v_4 (-> [])'])
Function name: _updateValidator
Phi
[i]Type for v

Name: v Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_6(uint128) -> v_1 (-> []).globalShares
has variable
clearing ir...?
TMP_83(uint128) = INTERNAL_CALL, DelegatedStaking._sharesToTokens(uint128,uint128)(REF_6,rateDifference_1)
has variable
[i] TMP_83 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
tokensGivenToValidator_1(uint128) := TMP_83(uint128)
has variable
[i] tokensGivenToValidator cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_6(uint128) -> v_1 (-> []).globalShares
Function name: _updateValidator
MEMBER
v
globalShares
_updateValidator
v Fields:
totalShares
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_6

Name: v.globalShares Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.globalShares Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_83(uint128) = INTERNAL_CALL, DelegatedStaking._sharesToTokens(uint128,uint128)(REF_6,rateDifference_1)
Function name: _updateValidator
Internal call...
_sharesToTokens
REF_6
rateDifference
Function: _sharesToTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 112
-100
added
xyz
Function name: _sharesToTokens
Function Visibility: internal
clearning node...
clearing ir...?
sharesN_1(uint128) := ϕ(['REF_145', 'REF_133', 'REF_6', 'REF_138', 'REF_63'])
has variable
[i] sharesN cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
rate_1(uint128) := ϕ(['rateDifference_1', 'REF_64', 'TMP_286', 'REF_146', 'TMP_298'])
has variable
[i] rate cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
divider_4(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
sharesN_1(uint128) := ϕ(['REF_145', 'REF_133', 'REF_6', 'REF_138', 'REF_63'])
Function name: _sharesToTokens
Phi
[i]Type for sharesN

Name: sharesN Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rate_1(uint128) := ϕ(['rateDifference_1', 'REF_64', 'TMP_286', 'REF_146', 'TMP_298'])
Function name: _sharesToTokens
Phi
[i]Type for rate

Name: rate Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
divider_4(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _sharesToTokens
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_94 = CONVERT sharesN_1 to uint256
has variable
[i] TMP_94 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_95 = CONVERT rate_1 to uint256
has variable
[i] TMP_95 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_96(uint256) = TMP_94 (c)* TMP_95
has variable
[i] TMP_96 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_97(uint256) = TMP_96 (c)/ divider_4
has variable
[i] TMP_97 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_98 = CONVERT TMP_97 to uint128
has variable
[i] TMP_98 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
RETURN TMP_98
typecheckig node...
TMP_94 = CONVERT sharesN_1 to uint256
Function name: _sharesToTokens

Name: sharesN Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_94 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_94

Name: TMP_94 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_95 = CONVERT rate_1 to uint256
Function name: _sharesToTokens

Name: rate Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_95 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_95

Name: TMP_95 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_96(uint256) = TMP_94 (c)* TMP_95
Function name: _sharesToTokens
testing mul...
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: -1
Final dest type: 112

Name: TMP_95 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_96 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_96

Name: TMP_96 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_97(uint256) = TMP_96 (c)/ divider_4
Function name: _sharesToTokens
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_97 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_96 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_97 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_97

Name: TMP_97 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_98 = CONVERT TMP_97 to uint128
Function name: _sharesToTokens

Name: TMP_97 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_98 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_98

Name: TMP_98 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
RETURN TMP_98
RETURN

Name: TMP_98 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
WORKLIST iteration 0 for function call "_sharesToTokens":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToTokens

Name: TMP_98 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
___
[i]Type for TMP_83

Name: TMP_83 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
tokensGivenToValidator_1(uint128) := TMP_83(uint128)
Function name: _updateValidator
asgn

Name: TMP_83 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: tokensGivenToValidator Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for tokensGivenToValidator

Name: tokensGivenToValidator Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
clearning node...
clearing ir...?
REF_11(uint128) -> v_5 (-> []).lastUpdateGlobalRate
has variable
clearing ir...?
v_6 (-> [])(DelegatedStaking.Validator) := ϕ(['v_5 (-> [])'])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_11 (->v_6 (-> [])) := globalExchangeRate_4(uint128)
has variable
typecheckig node...
REF_11(uint128) -> v_5 (-> []).lastUpdateGlobalRate
Function name: _updateValidator
MEMBER
v
lastUpdateGlobalRate
_updateValidator
v Fields:
disabledEpoch
globalShares
delegated
exchangeRate
^^^
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint128
uint128
Final Type: uint128
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: None
None
Final Type: None
[i]Type for REF_11

Name: v.lastUpdateGlobalRate Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.lastUpdateGlobalRate Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastUpdateGlobalRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_6 (-> [])(DelegatedStaking.Validator) := ϕ(['v_5 (-> [])'])
Function name: _updateValidator
Phi
[i]Type for v

Name: v Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: lastUpdateGlobalRate, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_11 (->v_6 (-> [])) := globalExchangeRate_4(uint128)
Function name: _updateValidator
asgn

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_11 Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
18
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for REF_11

Name: REF_11 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_11 Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastUpdateGlobalRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_84 = CONVERT tokensGivenToValidator_1 to uint256
has variable
[i] TMP_84 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_7(uint128) -> v_1 (-> []).commissionRate
has variable
clearing ir...?
TMP_85 = CONVERT REF_7 to uint256
has variable
[i] TMP_85 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_86(uint256) = TMP_84 * TMP_85
has variable
[i] TMP_86 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_87(uint256) = TMP_86 / divider_3
has variable
[i] TMP_87 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_88 = CONVERT TMP_87 to uint128
has variable
[i] TMP_88 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
commissionPaid_1(uint128) := TMP_88(uint128)
has variable
[i] commissionPaid cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_84 = CONVERT tokensGivenToValidator_1 to uint256
Function name: _updateValidator

Name: tokensGivenToValidator Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_84 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_84

Name: TMP_84 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
REF_7(uint128) -> v_1 (-> []).commissionRate
Function name: _updateValidator
MEMBER
v
commissionRate
_updateValidator
v Fields:
totalShares
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^
[i]Type for REF_7

Name: v.commissionRate Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionRate Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_85 = CONVERT REF_7 to uint256
Function name: _updateValidator

Name: v.commissionRate Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_85 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_85

Name: TMP_85 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_85 = CONVERT REF_7 to uint256
XXXXX
TMP_86(uint256) = TMP_84 * TMP_85
Function name: _updateValidator
testing mul...
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_84 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_86 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_86

Name: TMP_86 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
This IR caused addback:
TMP_86(uint256) = TMP_84 * TMP_85
XXXXX
TMP_87(uint256) = TMP_86 / divider_3
Function name: _updateValidator
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_87 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_86 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_87 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_87

Name: TMP_87 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_88 = CONVERT TMP_87 to uint128
Function name: _updateValidator

Name: TMP_87 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_88 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_88

Name: TMP_88 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
commissionPaid_1(uint128) := TMP_88(uint128)
Function name: _updateValidator
asgn

Name: TMP_88 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: commissionPaid Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for commissionPaid

Name: commissionPaid Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
clearning node...
clearing ir...?
REF_8(uint128) -> v_1 (-> []).exchangeRate
has variable
clearing ir...?
TMP_89(uint128) = tokensGivenToValidator_1 (c)- commissionPaid_1
has variable
[i] TMP_89 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_90 = CONVERT TMP_89 to uint256
has variable
[i] TMP_90 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_91(uint256) = TMP_90 (c)* divider_3
has variable
[i] TMP_91 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_9(uint128) -> v_1 (-> []).totalShares
has variable
clearing ir...?
TMP_92(uint256) = TMP_91 (c)/ REF_9
has variable
[i] TMP_92 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_93 = CONVERT TMP_92 to uint128
has variable
[i] TMP_93 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
v_2 (-> [])(DelegatedStaking.Validator) := ϕ(['v_1 (-> [])'])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_8(-> v_2 (-> [])) = REF_8 (c)+ TMP_93
has variable
typecheckig node...
REF_8(uint128) -> v_1 (-> []).exchangeRate
Function name: _updateValidator
MEMBER
v
exchangeRate
_updateValidator
v Fields:
totalShares
commissionRate
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for REF_8

Name: v.exchangeRate Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: v.exchangeRate Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_89(uint128) = tokensGivenToValidator_1 (c)- commissionPaid_1
Function name: _updateValidator
lnorm: u rnorm: u
Finance type key: (12, 12)
Func: sub
Dest type: 12, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 112
Final dest type: 112

Name: tokensGivenToValidator Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: commissionPaid Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: tokensGivenToValidator Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_89 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_89

Name: TMP_89 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_90 = CONVERT TMP_89 to uint256
Function name: _updateValidator

Name: TMP_89 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_90 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_90

Name: TMP_90 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_91(uint256) = TMP_90 (c)* divider_3
Function name: _updateValidator
testing mul...
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_90 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_91 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_91

Name: TMP_91 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
REF_9(uint128) -> v_1 (-> []).totalShares
Function name: _updateValidator
MEMBER
v
totalShares
_updateValidator
v Fields:
totalShares
commissionRate
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_9

Name: v.totalShares Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_92(uint256) = TMP_91 (c)/ REF_9
Function name: _updateValidator
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_92 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_91 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_92 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_92

Name: TMP_92 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_93 = CONVERT TMP_92 to uint128
Function name: _updateValidator

Name: TMP_92 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_93 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_93

Name: TMP_93 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
v_2 (-> [])(DelegatedStaking.Validator) := ϕ(['v_1 (-> [])'])
Function name: _updateValidator
Phi
[i]Type for v

Name: v Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: lastUpdateGlobalRate, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_8(-> v_2 (-> [])) = REF_8 (c)+ TMP_93
Function name: _updateValidator

Name: REF_8 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
initlize checks
;;;
lnorm: 18 rnorm: u
Finance type key: (12, 12)
Func: add
Dest type: 12, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 12
Final dest type: 112

Name: REF_8 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: REF_8 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for REF_8

Name: REF_8 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: REF_8 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
clearning node...
clearing ir...?
REF_10(uint128) -> v_2 (-> []).commissionAvailableToRedeem
has variable
clearing ir...?
v_3 (-> [])(DelegatedStaking.Validator) := ϕ(['v_2 (-> [])'])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_10(-> v_3 (-> [])) = REF_10 + commissionPaid_1
has variable
typecheckig node...
REF_10(uint128) -> v_2 (-> []).commissionAvailableToRedeem
Function name: _updateValidator
MEMBER
v
commissionAvailableToRedeem
_updateValidator
v Fields:
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^
[i]Type for REF_10

Name: v.commissionAvailableToRedeem Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_3 (-> [])(DelegatedStaking.Validator) := ϕ(['v_2 (-> [])'])
Function name: _updateValidator
Phi
[i]Type for v

Name: v Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionAvailableToRedeem, lastUpdateGlobalRate, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_10(-> v_3 (-> [])) = REF_10 + commissionPaid_1
Function name: _updateValidator

Name: REF_10 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 112
Final dest type: 112

Name: commissionPaid Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_10 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for REF_10

Name: REF_10 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_10 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_10(-> v_3 (-> [])) = REF_10 + commissionPaid_1
XXXXX
WORKLIST iteration 0 for function call "_updateValidator":
 New undefined nodes- 3
 Old undefined nodes- 0
typecheckig node...
v_1 (-> [])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])", "v_1 (-> ['validators'])", "v_1 (-> ['validators'])", 'REF_94', "v_5 (-> ['validators'])"])
Function name: _updateValidator
Phi
[i]Type for v

Name: v Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, commissionRate, commissionAvailableToRedeem, lastUpdateGlobalRate, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
divider_2(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _updateValidator
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
globalExchangeRate_4(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
Function name: _updateValidator
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
REF_2(uint128) -> v_1 (-> []).disabledEpoch
Function name: _updateValidator
MEMBER
v
disabledEpoch
_updateValidator
v Fields:
totalShares
commissionRate
commissionAvailableToRedeem
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_2

Name: v.disabledEpoch Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_80(bool) = REF_2 == 0
Function name: _updateValidator
[i]Type for TMP_80

Name: TMP_80 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_80
Condition...
Conidtion: 
TMP_80
TMP_80
typecheckig node...
typecheckig node...
REF_3(uint128) -> v_1 (-> []).totalShares
Function name: _updateValidator
MEMBER
v
totalShares
_updateValidator
v Fields:
totalShares
commissionRate
commissionAvailableToRedeem
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_3

Name: v.totalShares Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_81(bool) = REF_3 == 0
Function name: _updateValidator
[i]Type for TMP_81

Name: TMP_81 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_81
Condition...
Conidtion: 
TMP_81
TMP_81
typecheckig node...
typecheckig node...
REF_4(uint128) -> v_1 (-> []).exchangeRate
Function name: _updateValidator
MEMBER
[W] Initializing defined variable to constant
v
exchangeRate
_updateValidator
v Fields:
totalShares
commissionRate
commissionAvailableToRedeem
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for REF_4

Name: v.exchangeRate Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: v.exchangeRate Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
v_4 (-> [])(DelegatedStaking.Validator) := ϕ(['v_1 (-> [])'])
Function name: _updateValidator
Phi
[i]Type for v

Name: v Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, commissionRate, commissionAvailableToRedeem, lastUpdateGlobalRate, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_4 (->v_4 (-> [])) := globalExchangeRate_4(uint128)
Function name: _updateValidator
asgn

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_4 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
18
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for REF_4

Name: REF_4 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_4 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
typecheckig node...
REF_5(uint128) -> v_1 (-> []).lastUpdateGlobalRate
Function name: _updateValidator
MEMBER
v
lastUpdateGlobalRate
_updateValidator
v Fields:
totalShares
commissionRate
commissionAvailableToRedeem
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: lastUpdateGlobalRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_5

Name: v.lastUpdateGlobalRate Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.lastUpdateGlobalRate Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastUpdateGlobalRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_82(uint128) = globalExchangeRate_4 - REF_5
Function name: _updateValidator
lnorm: 18 rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: v.lastUpdateGlobalRate Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_82 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_82

Name: TMP_82 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
rateDifference_1(uint128) := TMP_82(uint128)
Function name: _updateValidator
asgn

Name: TMP_82 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: rateDifference Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
18
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for rateDifference

Name: rateDifference Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
v_5 (-> [])(DelegatedStaking.Validator) := ϕ(['v_3 (-> [])', 'v_4 (-> [])'])
Function name: _updateValidator
Phi
[i]Type for v

Name: v Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, commissionRate, commissionAvailableToRedeem, lastUpdateGlobalRate, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_6(uint128) -> v_1 (-> []).globalShares
Function name: _updateValidator
MEMBER
v
globalShares
_updateValidator
v Fields:
totalShares
commissionRate
commissionAvailableToRedeem
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_6

Name: v.globalShares Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.globalShares Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_83(uint128) = INTERNAL_CALL, DelegatedStaking._sharesToTokens(uint128,uint128)(REF_6,rateDifference_1)
Function name: _updateValidator
Internal call...
_sharesToTokens
REF_6
rateDifference
Function: _sharesToTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 112
0
0

Name: TMP_98 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_83 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_83

Name: TMP_83 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
tokensGivenToValidator_1(uint128) := TMP_83(uint128)
Function name: _updateValidator
asgn

Name: TMP_83 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: tokensGivenToValidator Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for tokensGivenToValidator

Name: tokensGivenToValidator Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
REF_11(uint128) -> v_5 (-> []).lastUpdateGlobalRate
Function name: _updateValidator
MEMBER
v
lastUpdateGlobalRate
_updateValidator
v Fields:
totalShares
commissionRate
commissionAvailableToRedeem
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: lastUpdateGlobalRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: v.lastUpdateGlobalRate Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.lastUpdateGlobalRate Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastUpdateGlobalRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_6 (-> [])(DelegatedStaking.Validator) := ϕ(['v_5 (-> [])'])
Function name: _updateValidator
Phi
[i]Type for v

Name: v Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, commissionRate, commissionAvailableToRedeem, lastUpdateGlobalRate, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_11 (->v_6 (-> [])) := globalExchangeRate_4(uint128)
Function name: _updateValidator
asgn

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_11 Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
18
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for REF_11

Name: REF_11 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_11 Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastUpdateGlobalRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_84 = CONVERT tokensGivenToValidator_1 to uint256
Function name: _updateValidator

Name: tokensGivenToValidator Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_84 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_84

Name: TMP_84 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
REF_7(uint128) -> v_1 (-> []).commissionRate
Function name: _updateValidator
MEMBER
v
commissionRate
_updateValidator
v Fields:
totalShares
commissionRate
commissionAvailableToRedeem
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_7

Name: v.commissionRate Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionRate Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_85 = CONVERT REF_7 to uint256
Function name: _updateValidator

Name: v.commissionRate Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_85 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_85

Name: TMP_85 Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_86(uint256) = TMP_84 * TMP_85
Function name: _updateValidator
testing mul...
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_84 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_86 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_86

Name: TMP_86 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_87(uint256) = TMP_86 / divider_3
Function name: _updateValidator
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_87 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_86 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_87 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_87

Name: TMP_87 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_88 = CONVERT TMP_87 to uint128
Function name: _updateValidator

Name: TMP_87 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_88 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_88

Name: TMP_88 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
commissionPaid_1(uint128) := TMP_88(uint128)
Function name: _updateValidator
asgn

Name: TMP_88 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: commissionPaid Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for commissionPaid

Name: commissionPaid Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
REF_8(uint128) -> v_1 (-> []).exchangeRate
Function name: _updateValidator
MEMBER
[W] Initializing defined variable to constant
v
exchangeRate
_updateValidator
v Fields:
totalShares
commissionRate
commissionAvailableToRedeem
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for REF_8

Name: v.exchangeRate Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: v.exchangeRate Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_89(uint128) = tokensGivenToValidator_1 (c)- commissionPaid_1
Function name: _updateValidator
lnorm: u rnorm: u
Finance type key: (12, 12)
Func: sub
Dest type: 12, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 112
Final dest type: 112

Name: tokensGivenToValidator Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: commissionPaid Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: tokensGivenToValidator Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_89 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_89

Name: TMP_89 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_90 = CONVERT TMP_89 to uint256
Function name: _updateValidator

Name: TMP_89 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_90 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_90

Name: TMP_90 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_91(uint256) = TMP_90 (c)* divider_3
Function name: _updateValidator
testing mul...
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_90 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_91 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_91

Name: TMP_91 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
REF_9(uint128) -> v_1 (-> []).totalShares
Function name: _updateValidator
MEMBER
v
totalShares
_updateValidator
v Fields:
totalShares
commissionRate
commissionAvailableToRedeem
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_9

Name: v.totalShares Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_92(uint256) = TMP_91 (c)/ REF_9
Function name: _updateValidator
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_92 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_91 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_92 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_92

Name: TMP_92 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_93 = CONVERT TMP_92 to uint128
Function name: _updateValidator

Name: TMP_92 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_93 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_93

Name: TMP_93 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
v_2 (-> [])(DelegatedStaking.Validator) := ϕ(['v_1 (-> [])'])
Function name: _updateValidator
Phi
[i]Type for v

Name: v Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, commissionRate, commissionAvailableToRedeem, lastUpdateGlobalRate, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_8(-> v_2 (-> [])) = REF_8 (c)+ TMP_93
Function name: _updateValidator

Name: REF_8 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
initlize checks
;;;
lnorm: 18 rnorm: u
Finance type key: (12, 12)
Func: add
Dest type: 12, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 12
Final dest type: 112

Name: REF_8 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: REF_8 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for REF_8

Name: REF_8 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: REF_8 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
typecheckig node...
REF_10(uint128) -> v_2 (-> []).commissionAvailableToRedeem
Function name: _updateValidator
MEMBER
[W] Initializing defined variable to constant
v
commissionAvailableToRedeem
_updateValidator
v Fields:
totalShares
commissionRate
commissionAvailableToRedeem
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: commissionAvailableToRedeem Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_10

Name: v.commissionAvailableToRedeem Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: commissionAvailableToRedeem Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_3 (-> [])(DelegatedStaking.Validator) := ϕ(['v_2 (-> [])'])
Function name: _updateValidator
Phi
[i]Type for v

Name: v Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, commissionRate, commissionAvailableToRedeem, lastUpdateGlobalRate, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_10(-> v_3 (-> [])) = REF_10 + commissionPaid_1
Function name: _updateValidator

Name: REF_10 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
initlize checks
;;;
lnorm: u rnorm: u
Finance type key: (12, 12)
Func: add
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 112
Final dest type: 112

Name: REF_10 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_10 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for REF_10

Name: REF_10 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_10 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: commissionAvailableToRedeem Function: None
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "_updateValidator":
 New undefined nodes- 0
 Old undefined nodes- 3
typecheckig node...
v_1 (-> [])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])", "v_1 (-> ['validators'])", "v_1 (-> ['validators'])", 'REF_94', "v_5 (-> ['validators'])"])
Function name: _updateValidator
Phi
[i]Type for v

Name: v Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, commissionRate, commissionAvailableToRedeem, lastUpdateGlobalRate, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
divider_2(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _updateValidator
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
globalExchangeRate_4(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
Function name: _updateValidator
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
REF_2(uint128) -> v_1 (-> []).disabledEpoch
Function name: _updateValidator
MEMBER
v
disabledEpoch
_updateValidator
v Fields:
totalShares
commissionRate
commissionAvailableToRedeem
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_2

Name: v.disabledEpoch Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_80(bool) = REF_2 == 0
Function name: _updateValidator
[i]Type for TMP_80

Name: TMP_80 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_80
Condition...
Conidtion: 
TMP_80
TMP_80
typecheckig node...
typecheckig node...
REF_3(uint128) -> v_1 (-> []).totalShares
Function name: _updateValidator
MEMBER
v
totalShares
_updateValidator
v Fields:
totalShares
commissionRate
commissionAvailableToRedeem
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_3

Name: v.totalShares Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_81(bool) = REF_3 == 0
Function name: _updateValidator
[i]Type for TMP_81

Name: TMP_81 Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_81
Condition...
Conidtion: 
TMP_81
TMP_81
typecheckig node...
typecheckig node...
REF_4(uint128) -> v_1 (-> []).exchangeRate
Function name: _updateValidator
MEMBER
v
exchangeRate
_updateValidator
v Fields:
totalShares
commissionRate
commissionAvailableToRedeem
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for REF_4

Name: v.exchangeRate Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: v.exchangeRate Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
v_4 (-> [])(DelegatedStaking.Validator) := ϕ(['v_1 (-> [])'])
Function name: _updateValidator
Phi
[i]Type for v

Name: v Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, commissionRate, commissionAvailableToRedeem, lastUpdateGlobalRate, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_4 (->v_4 (-> [])) := globalExchangeRate_4(uint128)
Function name: _updateValidator
asgn

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_4 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
18
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for REF_4

Name: REF_4 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_4 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
typecheckig node...
REF_5(uint128) -> v_1 (-> []).lastUpdateGlobalRate
Function name: _updateValidator
MEMBER
v
lastUpdateGlobalRate
_updateValidator
v Fields:
totalShares
commissionRate
commissionAvailableToRedeem
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: lastUpdateGlobalRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_5

Name: v.lastUpdateGlobalRate Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.lastUpdateGlobalRate Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastUpdateGlobalRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_82(uint128) = globalExchangeRate_4 - REF_5
Function name: _updateValidator
lnorm: 18 rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: v.lastUpdateGlobalRate Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_82 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_82

Name: TMP_82 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
rateDifference_1(uint128) := TMP_82(uint128)
Function name: _updateValidator
asgn

Name: TMP_82 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: rateDifference Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
18
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for rateDifference

Name: rateDifference Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
v_5 (-> [])(DelegatedStaking.Validator) := ϕ(['v_3 (-> [])', 'v_4 (-> [])'])
Function name: _updateValidator
Phi
[i]Type for v

Name: v Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, commissionRate, commissionAvailableToRedeem, lastUpdateGlobalRate, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_6(uint128) -> v_1 (-> []).globalShares
Function name: _updateValidator
MEMBER
v
globalShares
_updateValidator
v Fields:
totalShares
commissionRate
commissionAvailableToRedeem
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_6

Name: v.globalShares Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.globalShares Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_83(uint128) = INTERNAL_CALL, DelegatedStaking._sharesToTokens(uint128,uint128)(REF_6,rateDifference_1)
Function name: _updateValidator
Internal call...
_sharesToTokens
REF_6
rateDifference
Function: _sharesToTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 112
0
0

Name: TMP_98 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_83 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_83

Name: TMP_83 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
tokensGivenToValidator_1(uint128) := TMP_83(uint128)
Function name: _updateValidator
asgn

Name: TMP_83 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: tokensGivenToValidator Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for tokensGivenToValidator

Name: tokensGivenToValidator Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
REF_11(uint128) -> v_5 (-> []).lastUpdateGlobalRate
Function name: _updateValidator
MEMBER
v
lastUpdateGlobalRate
_updateValidator
v Fields:
totalShares
commissionRate
commissionAvailableToRedeem
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: lastUpdateGlobalRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: v.lastUpdateGlobalRate Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.lastUpdateGlobalRate Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastUpdateGlobalRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_6 (-> [])(DelegatedStaking.Validator) := ϕ(['v_5 (-> [])'])
Function name: _updateValidator
Phi
[i]Type for v

Name: v Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, commissionRate, commissionAvailableToRedeem, lastUpdateGlobalRate, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_11 (->v_6 (-> [])) := globalExchangeRate_4(uint128)
Function name: _updateValidator
asgn

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_11 Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
18
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for REF_11

Name: REF_11 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_11 Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastUpdateGlobalRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_84 = CONVERT tokensGivenToValidator_1 to uint256
Function name: _updateValidator

Name: tokensGivenToValidator Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_84 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_84

Name: TMP_84 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
REF_7(uint128) -> v_1 (-> []).commissionRate
Function name: _updateValidator
MEMBER
v
commissionRate
_updateValidator
v Fields:
totalShares
commissionRate
commissionAvailableToRedeem
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_7

Name: v.commissionRate Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionRate Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_85 = CONVERT REF_7 to uint256
Function name: _updateValidator

Name: v.commissionRate Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_85 Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_85

Name: TMP_85 Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_86(uint256) = TMP_84 * TMP_85
Function name: _updateValidator
testing mul...
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_84 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_86 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_86

Name: TMP_86 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_87(uint256) = TMP_86 / divider_3
Function name: _updateValidator
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_87 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_86 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_87 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_87

Name: TMP_87 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_88 = CONVERT TMP_87 to uint128
Function name: _updateValidator

Name: TMP_87 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_88 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_88

Name: TMP_88 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
commissionPaid_1(uint128) := TMP_88(uint128)
Function name: _updateValidator
asgn

Name: TMP_88 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: commissionPaid Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for commissionPaid

Name: commissionPaid Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
REF_8(uint128) -> v_1 (-> []).exchangeRate
Function name: _updateValidator
MEMBER
v
exchangeRate
_updateValidator
v Fields:
totalShares
commissionRate
commissionAvailableToRedeem
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for REF_8

Name: v.exchangeRate Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: v.exchangeRate Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_89(uint128) = tokensGivenToValidator_1 (c)- commissionPaid_1
Function name: _updateValidator
lnorm: u rnorm: u
Finance type key: (12, 12)
Func: sub
Dest type: 12, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 112
Final dest type: 112

Name: tokensGivenToValidator Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: commissionPaid Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: tokensGivenToValidator Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_89 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_89

Name: TMP_89 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_90 = CONVERT TMP_89 to uint256
Function name: _updateValidator

Name: TMP_89 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_90 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_90

Name: TMP_90 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_91(uint256) = TMP_90 (c)* divider_3
Function name: _updateValidator
testing mul...
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_90 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_91 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_91

Name: TMP_91 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
REF_9(uint128) -> v_1 (-> []).totalShares
Function name: _updateValidator
MEMBER
v
totalShares
_updateValidator
v Fields:
totalShares
commissionRate
commissionAvailableToRedeem
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_9

Name: v.totalShares Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_92(uint256) = TMP_91 (c)/ REF_9
Function name: _updateValidator
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_92 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_91 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_92 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_92

Name: TMP_92 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_93 = CONVERT TMP_92 to uint128
Function name: _updateValidator

Name: TMP_92 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_93 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_93

Name: TMP_93 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
v_2 (-> [])(DelegatedStaking.Validator) := ϕ(['v_1 (-> [])'])
Function name: _updateValidator
Phi
[i]Type for v

Name: v Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, commissionRate, commissionAvailableToRedeem, lastUpdateGlobalRate, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_8(-> v_2 (-> [])) = REF_8 (c)+ TMP_93
Function name: _updateValidator

Name: REF_8 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
initlize checks
;;;
lnorm: 18 rnorm: u
Finance type key: (12, 12)
Func: add
Dest type: 12, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 12
Final dest type: 112

Name: REF_8 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: REF_8 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for REF_8

Name: REF_8 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: REF_8 Function: _updateValidator
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
typecheckig node...
REF_10(uint128) -> v_2 (-> []).commissionAvailableToRedeem
Function name: _updateValidator
MEMBER
[W] Initializing defined variable to constant
v
commissionAvailableToRedeem
_updateValidator
v Fields:
totalShares
commissionRate
commissionAvailableToRedeem
lastUpdateGlobalRate
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: commissionAvailableToRedeem Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_10

Name: v.commissionAvailableToRedeem Function: _updateValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: commissionAvailableToRedeem Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_3 (-> [])(DelegatedStaking.Validator) := ϕ(['v_2 (-> [])'])
Function name: _updateValidator
Phi
[i]Type for v

Name: v Function: _updateValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, commissionRate, commissionAvailableToRedeem, lastUpdateGlobalRate, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_10(-> v_3 (-> [])) = REF_10 + commissionPaid_1
Function name: _updateValidator

Name: REF_10 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
initlize checks
;;;
lnorm: u rnorm: u
Finance type key: (12, 12)
Func: add
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 112
Final dest type: 112

Name: REF_10 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_10 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for REF_10

Name: REF_10 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_10 Function: _updateValidator
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: commissionAvailableToRedeem Function: None
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 2 for function call "_updateValidator":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _updateValidator
done.
clearning node...
clearing ir...?
REF_14(address) -> v_1 (-> ['validators'])._address
has variable
clearing ir...?
TMP_120(bool) = msg.sender == REF_14
has variable
[i] TMP_120 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_120
typecheckig node...
REF_14(address) -> v_1 (-> ['validators'])._address
Function name: _stake
MEMBER
v
_address
_stake
v Fields:
disabledEpoch
globalShares
delegated
exchangeRate
^^^
[i]Type for REF_14

Name: v._address Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_120(bool) = msg.sender == REF_14
Function name: _stake
[i]Type for TMP_120

Name: TMP_120 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_120
Condition...
Conidtion: 
TMP_120
TMP_120
clearning node...
clearing ir...?
REF_18(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
has variable
clearing ir...?
REF_19(address) -> v_1 (-> ['validators'])._address
has variable
clearing ir...?
REF_20(DelegatedStaking.Staking) -> REF_18[REF_19]
has variable
clearing ir...?
REF_21(uint128) -> REF_20.staked
has variable
clearing ir...?
validatorStaked_1(uint128) := REF_21(uint128)
has variable
[i] validatorStaked cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_18(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: _stake
MEMBER
v
stakings
_stake
v Fields:
disabledEpoch
_address
globalShares
delegated
exchangeRate
^^^
[i]Type for REF_18

Name: v.stakings Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_19(address) -> v_1 (-> ['validators'])._address
Function name: _stake
MEMBER
v
_address
_stake
v Fields:
disabledEpoch
_address
stakings
globalShares
delegated
exchangeRate
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_19

Name: v._address Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_20(DelegatedStaking.Staking) -> REF_18[REF_19]
Function name: _stake
INDEX

Name: v.stakings Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _stake
REF_18
[i]Type for REF_20

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_20(DelegatedStaking.Staking) -> REF_18[REF_19]
XXXXX
REF_21(uint128) -> REF_20.staked
Function name: _stake
MEMBER
v.stakings
staked
_stake
v.stakings Fields:
^^^
[i]Type for REF_21

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validatorStaked_1(uint128) := REF_21(uint128)
Function name: _stake
asgn

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorStaked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for validatorStaked

Name: validatorStaked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
validatorStaked_1(uint128) := REF_21(uint128)
XXXXX
clearning node...
clearing ir...?
REF_15(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
has variable
clearing ir...?
REF_16(DelegatedStaking.Staking) -> REF_15[msg.sender]
has variable
clearing ir...?
REF_17(uint128) -> REF_16.staked
has variable
clearing ir...?
TMP_121(uint128) = amount_1 (c)+ REF_17
has variable
[i] TMP_121 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_122(bool) = TMP_121 >= validatorMinStakedRequired_4
has variable
[i] TMP_122 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_123(None) = SOLIDITY_CALL require(bool,string)(TMP_122,Amount < min staked required)
typecheckig node...
REF_15(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: _stake
MEMBER
v
stakings
_stake
v Fields:
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_15

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_16(DelegatedStaking.Staking) -> REF_15[msg.sender]
Function name: _stake
INDEX

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _stake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_16

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_17(uint128) -> REF_16.staked
Function name: _stake
MEMBER
v.stakings
staked
_stake
v.stakings Fields:
^^^
[i]Type for REF_17

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_121(uint128) = amount_1 (c)+ REF_17
Function name: _stake

Name: TMP_121 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_121 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_121

Name: TMP_121 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_121(uint128) = amount_1 (c)+ REF_17
XXXXX
TMP_122(bool) = TMP_121 >= validatorMinStakedRequired_4
Function name: _stake
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_122

Name: TMP_122 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_123(None) = SOLIDITY_CALL require(bool,string)(TMP_122,Amount < min staked required)
[i]Type for TMP_123

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_124(uint128) = validatorStaked_1 (c)* maxCapMultiplier_4
has variable
[i] TMP_124 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
validatorMaxCap_1(uint128) := TMP_124(uint128)
has variable
[i] validatorMaxCap cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_124(uint128) = validatorStaked_1 (c)* maxCapMultiplier_4
Function name: _stake
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_124 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_124

Name: TMP_124 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_124(uint128) = validatorStaked_1 (c)* maxCapMultiplier_4
XXXXX
validatorMaxCap_1(uint128) := TMP_124(uint128)
Function name: _stake
asgn

Name: TMP_124 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorMaxCap Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for validatorMaxCap

Name: validatorMaxCap Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
CONDITION withTransfer_1
typecheckig node...
CONDITION withTransfer_1
Condition...
Conidtion: 
withTransfer_1
withTransfer_1
clearning node...
clearing ir...?
REF_22(uint128) -> v_1 (-> ['validators']).delegated
has variable
clearing ir...?
TMP_125(uint128) = REF_22 (c)- validatorStaked_1
has variable
[i] TMP_125 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_126(uint128) = TMP_125 (c)+ amount_1
has variable
[i] TMP_126 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
newDelegated_1(uint128) := TMP_126(uint128)
has variable
[i] newDelegated cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_22(uint128) -> v_1 (-> ['validators']).delegated
Function name: _stake
MEMBER
v
delegated
_stake
v Fields:
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_22

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_125(uint128) = REF_22 (c)- validatorStaked_1
Function name: _stake
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorStaked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_125 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_125

Name: TMP_125 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_125(uint128) = REF_22 (c)- validatorStaked_1
XXXXX
TMP_126(uint128) = TMP_125 (c)+ amount_1
Function name: _stake

Name: TMP_126 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_126 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_126

Name: TMP_126 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
newDelegated_1(uint128) := TMP_126(uint128)
Function name: _stake
asgn

Name: TMP_126 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newDelegated Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newDelegated

Name: newDelegated Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._transferToContract(address,uint128)(msg.sender,amount_1)
typecheckig node...
INTERNAL_CALL, DelegatedStaking._transferToContract(address,uint128)(msg.sender,amount_1)
Internal call...
_transferToContract
msg.sender
amount
Function: _transferToContract
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _transferToContract
Function Visibility: internal
clearning node...
clearing ir...?
from_1(address) := ϕ(['msg.sender'])
has variable
[i] from cleared

Name: from Function: _transferToContract
Num: 
Den: 
Norm: u
LF: from
Fields: 
Finance Type: undef
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _transferToContract
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CQT_1(IERC20Upgradeable) := ϕ(['CQT_0'])
has variable
typecheckig node...
from_1(address) := ϕ(['msg.sender'])
Function name: _transferToContract
Phi
[i]Type for from

Name: from Function: _transferToContract
Num: -1
Den: -1
Norm: u
LF: from
Fields: 
Finance Type: undef
done.
amount_1(uint128) := ϕ(['amount_1', 'amount_1'])
Function name: _transferToContract
Phi
[i]Type for amount

Name: amount Function: _transferToContract
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CQT_1(IERC20Upgradeable) := ϕ(['CQT_0'])
Function name: _transferToContract
Phi
[i]Type for CQT

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_38 = CONVERT this to address
has variable
[i] TMP_38 cleared

Name: TMP_38 Function: _transferToContract
Num: 
Den: 
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
clearing ir...?
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256), arguments:['CQT_1', 'from_1', 'TMP_38', 'amount_1'] 
typecheckig node...
TMP_38 = CONVERT this to address
Function name: _transferToContract
[i]Type for TMP_38

Name: TMP_38 Function: _transferToContract
Num: 
Den: 
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256), arguments:['CQT_1', 'from_1', 'TMP_38', 'amount_1'] 
Library Call: safeTransferFrom
done.
WORKLIST iteration 0 for function call "_transferToContract":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _transferToContract
done.
clearning node...
clearing ir...?
TMP_127(bool) = newDelegated_1 <= validatorMaxCap_1
has variable
[i] TMP_127 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_128(None) = SOLIDITY_CALL require(bool,string)(TMP_127,Validator max capacity exceeded)
typecheckig node...
TMP_127(bool) = newDelegated_1 <= validatorMaxCap_1
Function name: _stake
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_127

Name: TMP_127 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_128(None) = SOLIDITY_CALL require(bool,string)(TMP_127,Validator max capacity exceeded)
[i]Type for TMP_128

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_23(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
has variable
clearing ir...?
REF_24(DelegatedStaking.Staking) -> REF_23[msg.sender]
has variable
clearing ir...?
s_1 (-> ['v'])(DelegatedStaking.Staking) := REF_24(DelegatedStaking.Staking)
has variable
[i] s cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_23(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: _stake
MEMBER
v
stakings
_stake
v Fields:
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_23

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_24(DelegatedStaking.Staking) -> REF_23[msg.sender]
Function name: _stake
INDEX

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _stake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_24

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_1 (-> ['v'])(DelegatedStaking.Staking) := REF_24(DelegatedStaking.Staking)
Function name: _stake
asgn

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for s

Name: s Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_130(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_1,globalExchangeRate_9)
has variable
[i] TMP_130 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
globalSharesToAdd_1(uint128) := TMP_130(uint128)
has variable
[i] globalSharesToAdd cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_130(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_1,globalExchangeRate_9)
Function name: _stake
Internal call...
_tokensToShares
amount
globalExchangeRate
Function: _tokensToShares
ic
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 112
-100
added
xyz
Function name: _tokensToShares
Function Visibility: internal
clearning node...
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
has variable
[i] amount cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
has variable
[i] rate cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
Function name: _tokensToShares
Phi
[i]Type for amount

Name: amount Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
Function name: _tokensToShares
Phi
[i]Type for rate

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _tokensToShares
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99 = CONVERT amount_1 to uint256
has variable
[i] TMP_99 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_100(uint256) = TMP_99 (c)* divider_5
has variable
[i] TMP_100 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_101 = CONVERT rate_1 to uint256
has variable
[i] TMP_101 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_102(uint256) = TMP_100 (c)/ TMP_101
has variable
[i] TMP_102 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_103 = CONVERT TMP_102 to uint128
has variable
[i] TMP_103 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
RETURN TMP_103
typecheckig node...
TMP_99 = CONVERT amount_1 to uint256
Function name: _tokensToShares

Name: amount Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_99

Name: TMP_99 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_100(uint256) = TMP_99 (c)* divider_5
Function name: _tokensToShares
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_99 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_100

Name: TMP_100 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_101 = CONVERT rate_1 to uint256
Function name: _tokensToShares

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_101

Name: TMP_101 Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_102(uint256) = TMP_100 (c)/ TMP_101
Function name: _tokensToShares
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: -1
Final dest type: 112

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: PIC_24 Function: None
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_102

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_103 = CONVERT TMP_102 to uint128
Function name: _tokensToShares

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
RETURN TMP_103
RETURN

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
WORKLIST iteration 0 for function call "_tokensToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _tokensToShares

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
___
[i]Type for TMP_130

Name: TMP_130 Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
globalSharesToAdd_1(uint128) := TMP_130(uint128)
Function name: _stake
asgn

Name: TMP_130 Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: globalSharesToAdd Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for globalSharesToAdd

Name: globalSharesToAdd Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
clearning node...
clearing ir...?
totalGlobalShares_7(uint128) = totalGlobalShares_6 + globalSharesToAdd_1
has variable
typecheckig node...
totalGlobalShares_7(uint128) = totalGlobalShares_6 + globalSharesToAdd_1
Function name: _stake

Name: totalGlobalShares Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: -1
Final dest type: 112

Name: globalSharesToAdd Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: totalGlobalShares Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
clearning node...
clearing ir...?
REF_25(uint128) -> v_1 (-> ['validators']).globalShares
has variable
clearing ir...?
v_2 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_25(-> v_2 (-> ['validators'])) = REF_25 + globalSharesToAdd_1
has variable
clearing ir...?
validators_2(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_2 (-> ['validators'])"])
has variable
typecheckig node...
REF_25(uint128) -> v_1 (-> ['validators']).globalShares
Function name: _stake
MEMBER
v
globalShares
_stake
v Fields:
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_25

Name: v.globalShares Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.globalShares Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_2 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_25(-> v_2 (-> ['validators'])) = REF_25 + globalSharesToAdd_1
Function name: _stake

Name: REF_25 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 112
Final dest type: 112

Name: globalSharesToAdd Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_25 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for REF_25

Name: REF_25 Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_25 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_2(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_2 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
newDelegatorSharesN_1(uint128) := 0(uint256)
has variable
[i] newDelegatorSharesN cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
newDelegatorSharesN_1(uint128) := 0(uint256)
Function name: _stake
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: newDelegatorSharesN Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newDelegatorSharesN

Name: newDelegatorSharesN Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_26(uint128) -> v_2 (-> ['validators']).totalShares
has variable
clearing ir...?
v_3 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_2 (-> ['validators'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_26(-> v_3 (-> ['validators'])) = REF_26 + newDelegatorSharesN_1
has variable
clearing ir...?
validators_3(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_3 (-> ['validators'])"])
has variable
typecheckig node...
REF_26(uint128) -> v_2 (-> ['validators']).totalShares
Function name: _stake
MEMBER
v
totalShares
_stake
v Fields:
globalShares
delegated
exchangeRate
^^^
[i]Type for REF_26

Name: v.totalShares Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_3 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_2 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_26(-> v_3 (-> ['validators'])) = REF_26 + newDelegatorSharesN_1
Function name: _stake

Name: REF_26 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: newDelegatorSharesN Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_26 Function: _stake
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_26

Name: REF_26 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_26 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_26(-> v_3 (-> ['validators'])) = REF_26 + newDelegatorSharesN_1
XXXXX
validators_3(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_3 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_27(uint128) -> s_1 (-> ['v']).shares
has variable
clearing ir...?
s_2 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_1 (-> ['v'])"])
has variable
[i] s cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_27(-> s_2 (-> ['v'])) = REF_27 + newDelegatorSharesN_1
has variable
clearing ir...?
v_5 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_2 (-> ['v'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_27(uint128) -> s_1 (-> ['v']).shares
Function name: _stake
MEMBER
s
shares
_stake
s Fields:
^^^
[i]Type for REF_27

Name: s.shares Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_2 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_1 (-> ['v'])"])
Function name: _stake
Phi
[i]Type for s

Name: s Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: shares
Finance Type: undef
done.
REF_27(-> s_2 (-> ['v'])) = REF_27 + newDelegatorSharesN_1
Function name: _stake

Name: REF_27 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: newDelegatorSharesN Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_27 Function: _stake
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_27

Name: REF_27 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_27 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_27(-> s_2 (-> ['v'])) = REF_27 + newDelegatorSharesN_1
XXXXX
v_5 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_2 (-> ['v'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_28(uint128) -> v_3 (-> ['validators']).delegated
has variable
clearing ir...?
v_4 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_3 (-> ['validators'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_28(-> v_4 (-> ['validators'])) = REF_28 + amount_1
has variable
clearing ir...?
validators_4(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_4 (-> ['validators'])"])
has variable
typecheckig node...
REF_28(uint128) -> v_3 (-> ['validators']).delegated
Function name: _stake
MEMBER
v
delegated
_stake
v Fields:
totalShares
globalShares
delegated
exchangeRate
^^^

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_28

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_4 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_3 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_28(-> v_4 (-> ['validators'])) = REF_28 + amount_1
Function name: _stake

Name: REF_28 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_28 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_28

Name: REF_28 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_28 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_4(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_4 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_29(uint128) -> s_2 (-> ['v']).staked
has variable
clearing ir...?
s_3 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_2 (-> ['v'])"])
has variable
[i] s cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_29(-> s_3 (-> ['v'])) = REF_29 + amount_1
has variable
clearing ir...?
v_6 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_3 (-> ['v'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_29(uint128) -> s_2 (-> ['v']).staked
Function name: _stake
MEMBER
s
staked
_stake
s Fields:
shares
^^^
[i]Type for REF_29

Name: s.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_3 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_2 (-> ['v'])"])
Function name: _stake
Phi
[i]Type for s

Name: s Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
REF_29(-> s_3 (-> ['v'])) = REF_29 + amount_1
Function name: _stake

Name: REF_29 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_29 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_29

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_29(-> s_3 (-> ['v'])) = REF_29 + amount_1
XXXXX
v_6 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_3 (-> ['v'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit Staked(validatorId_1,msg.sender,amount_1)
typecheckig node...
Emit Staked(validatorId_1,msg.sender,amount_1)
WORKLIST iteration 0 for function call "_stake":
 New undefined nodes- 7
 Old undefined nodes- 0
typecheckig node...
validatorId_1(uint128) := ϕ(['validatorId_1', 'validatorId_1', 'newValidatorId_1'])
Function name: _stake
Phi
[i]Type for validatorId

Name: validatorId Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint128) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Function name: _stake
Phi
[i]Type for amount

Name: amount Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
divider_6(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _stake
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
maxCapMultiplier_2(uint128) := ϕ(['maxCapMultiplier_0', 'maxCapMultiplier_7', 'maxCapMultiplier_1', 'maxCapMultiplier_6', 'maxCapMultiplier_4'])
Function name: _stake
Phi
[i]Type for maxCapMultiplier

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validatorMinStakedRequired_2(uint128) := ϕ(['validatorMinStakedRequired_1', 'validatorMinStakedRequired_4', 'validatorMinStakedRequired_0', 'validatorMinStakedRequired_7', 'validatorMinStakedRequired_6'])
Function name: _stake
Phi
[i]Type for validatorMinStakedRequired

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
allocatedTokensPerEpoch_7(uint128) := ϕ(['allocatedTokensPerEpoch_1', 'allocatedTokensPerEpoch_5', 'allocatedTokensPerEpoch_9', 'allocatedTokensPerEpoch_3', 'allocatedTokensPerEpoch_0'])
Function name: _stake
Phi
[i]Type for allocatedTokensPerEpoch

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rewardsLocked_7(uint128) := ϕ(['rewardsLocked_5', 'rewardsLocked_3', 'rewardsLocked_0', 'rewardsLocked_10', 'rewardsLocked_6', 'rewardsLocked_8', 'rewardsLocked_2'])
Function name: _stake
Phi
[i]Type for rewardsLocked

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_8(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
Function name: _stake
Phi
[i]Type for endEpoch

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalGlobalShares_2(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
Function name: _stake
Phi
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: global
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
globalExchangeRate_6(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
Function name: _stake
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
validatorsN_1(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
Function name: _stake
Phi
[i]Type for validatorsN

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_1(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: _stake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
TMP_106(bool) = amount_1 >= divider_6
Function name: _stake
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_106

Name: TMP_106 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,Amount must be at least 1 token)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_108(bool) = validatorId_1 < validatorsN_1
Function name: _stake
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_108

Name: TMP_108 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_109(None) = SOLIDITY_CALL require(bool,string)(TMP_108,Invalid validator)
[i]Type for TMP_109

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_12(DelegatedStaking.Validator) -> validators_1[validatorId_1]
Function name: _stake
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_12

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_12(DelegatedStaking.Validator)
Function name: _stake
asgn

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_13(uint128) -> v_1 (-> ['validators']).disabledEpoch
Function name: _stake
MEMBER
v
disabledEpoch
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: v.disabledEpoch Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_110(bool) = REF_13 == 0
Function name: _stake
[i]Type for TMP_110

Name: TMP_110 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_111(None) = SOLIDITY_CALL require(bool,string)(TMP_110,Validator is disabled)
[i]Type for TMP_111

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_112(bool) = endEpoch_8 == 0
Function name: _stake
[i]Type for TMP_112

Name: TMP_112 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_112
Condition...
Conidtion: 
TMP_112
TMP_112
typecheckig node...
TMP_113 = CONVERT block.number to uint128
Function name: _stake
[i]Type for TMP_113

Name: TMP_113 Function: _stake
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
TMP_114(uint128) = rewardsLocked_7 / allocatedTokensPerEpoch_7
Function name: _stake
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_114 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_114

Name: TMP_114 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_115(uint128) = TMP_113 + TMP_114
Function name: _stake

Name: TMP_115 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_114 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_115 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_115

Name: TMP_115 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_9(uint128) := TMP_115(uint128)
Function name: _stake
asgn

Name: TMP_115 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: endEpoch Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for endEpoch

Name: endEpoch Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
rewardsLocked_8(uint128) := 0(uint256)
Function name: _stake
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: rewardsLocked Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardsLocked

Name: rewardsLocked Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_116(bool) = endEpoch_9 > block.number
Function name: _stake
testing gt...
block.number
[i]Type for TMP_116

Name: TMP_116 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_117(None) = SOLIDITY_CALL require(bool,string)(TMP_116,Program ended)
[i]Type for TMP_117

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
Internal call...
_updateGlobalExchangeRate
Function: _updateGlobalExchangeRate
ic
Internal cal param_cache
0
0
done.
globalExchangeRate_7(uint128) := ϕ(['globalExchangeRate_3'])
Function name: _stake
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateValidator(DelegatedStaking.Validator)(v_1 (-> ['validators']))
Internal call...
_updateValidator
v
Function: _updateValidator
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: [totalShares, disabledEpoch, _address, stakings, staked, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333b54fd0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333ae0490>, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333ae0610>]
    fintype: -1
0
0
done.
typecheckig node...
REF_14(address) -> v_1 (-> ['validators'])._address
Function name: _stake
MEMBER
v
_address
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_14

Name: v._address Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_120(bool) = msg.sender == REF_14
Function name: _stake
[i]Type for TMP_120

Name: TMP_120 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_120
Condition...
Conidtion: 
TMP_120
TMP_120
typecheckig node...
REF_18(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: _stake
MEMBER
v
stakings
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_18

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_19(address) -> v_1 (-> ['validators'])._address
Function name: _stake
MEMBER
v
_address
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_19

Name: v._address Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_20(DelegatedStaking.Staking) -> REF_18[REF_19]
Function name: _stake
INDEX

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _stake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_20

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_21(uint128) -> REF_20.staked
Function name: _stake
MEMBER
v.stakings
staked
_stake
v.stakings Fields:
^^^
[i]Type for REF_21

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validatorStaked_1(uint128) := REF_21(uint128)
Function name: _stake
asgn

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorStaked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for validatorStaked

Name: validatorStaked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
validatorStaked_1(uint128) := REF_21(uint128)
XXXXX
typecheckig node...
REF_15(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: _stake
MEMBER
v
stakings
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_15

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_16(DelegatedStaking.Staking) -> REF_15[msg.sender]
Function name: _stake
INDEX

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _stake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_16

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_17(uint128) -> REF_16.staked
Function name: _stake
MEMBER
v.stakings
staked
_stake
v.stakings Fields:
^^^
[i]Type for REF_17

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_121(uint128) = amount_1 (c)+ REF_17
Function name: _stake

Name: TMP_121 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_121 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_121

Name: TMP_121 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_121(uint128) = amount_1 (c)+ REF_17
XXXXX
TMP_122(bool) = TMP_121 >= validatorMinStakedRequired_4
Function name: _stake
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_122

Name: TMP_122 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_123(None) = SOLIDITY_CALL require(bool,string)(TMP_122,Amount < min staked required)
[i]Type for TMP_123

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_124(uint128) = validatorStaked_1 (c)* maxCapMultiplier_4
Function name: _stake
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_124 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_124

Name: TMP_124 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_124(uint128) = validatorStaked_1 (c)* maxCapMultiplier_4
XXXXX
validatorMaxCap_1(uint128) := TMP_124(uint128)
Function name: _stake
asgn

Name: TMP_124 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorMaxCap Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for validatorMaxCap

Name: validatorMaxCap Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
CONDITION withTransfer_1
Condition...
Conidtion: 
withTransfer_1
withTransfer_1
typecheckig node...
REF_22(uint128) -> v_1 (-> ['validators']).delegated
Function name: _stake
MEMBER
v
delegated
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_22

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_125(uint128) = REF_22 (c)- validatorStaked_1
Function name: _stake
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorStaked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_125 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_125

Name: TMP_125 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_125(uint128) = REF_22 (c)- validatorStaked_1
XXXXX
TMP_126(uint128) = TMP_125 (c)+ amount_1
Function name: _stake

Name: TMP_126 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_126 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_126

Name: TMP_126 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
newDelegated_1(uint128) := TMP_126(uint128)
Function name: _stake
asgn

Name: TMP_126 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newDelegated Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newDelegated

Name: newDelegated Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
INTERNAL_CALL, DelegatedStaking._transferToContract(address,uint128)(msg.sender,amount_1)
Internal call...
_transferToContract
msg.sender
amount
Function: _transferToContract
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _transferToContract
Function Visibility: internal
clearning node...
clearing ir...?
from_1(address) := ϕ(['msg.sender'])
has variable
[i] from cleared

Name: from Function: _transferToContract
Num: 
Den: 
Norm: u
LF: from
Fields: 
Finance Type: undef
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _transferToContract
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CQT_1(IERC20Upgradeable) := ϕ(['CQT_0'])
has variable
typecheckig node...
from_1(address) := ϕ(['msg.sender'])
Function name: _transferToContract
Phi
[i]Type for from

Name: from Function: _transferToContract
Num: -1
Den: -1
Norm: u
LF: from
Fields: 
Finance Type: undef
done.
amount_1(uint128) := ϕ(['amount_1', 'amount_1'])
Function name: _transferToContract
Phi
[i]Type for amount

Name: amount Function: _transferToContract
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CQT_1(IERC20Upgradeable) := ϕ(['CQT_0'])
Function name: _transferToContract
Phi
[i]Type for CQT

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_38 = CONVERT this to address
has variable
[i] TMP_38 cleared

Name: TMP_38 Function: _transferToContract
Num: 
Den: 
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
clearing ir...?
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256), arguments:['CQT_1', 'from_1', 'TMP_38', 'amount_1'] 
typecheckig node...
TMP_38 = CONVERT this to address
Function name: _transferToContract
[i]Type for TMP_38

Name: TMP_38 Function: _transferToContract
Num: 
Den: 
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256), arguments:['CQT_1', 'from_1', 'TMP_38', 'amount_1'] 
Library Call: safeTransferFrom
done.
WORKLIST iteration 0 for function call "_transferToContract":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _transferToContract
done.
typecheckig node...
TMP_127(bool) = newDelegated_1 <= validatorMaxCap_1
Function name: _stake
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_127

Name: TMP_127 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_128(None) = SOLIDITY_CALL require(bool,string)(TMP_127,Validator max capacity exceeded)
[i]Type for TMP_128

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_23(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: _stake
MEMBER
v
stakings
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_23

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_24(DelegatedStaking.Staking) -> REF_23[msg.sender]
Function name: _stake
INDEX

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _stake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_24

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_1 (-> ['v'])(DelegatedStaking.Staking) := REF_24(DelegatedStaking.Staking)
Function name: _stake
asgn

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for s

Name: s Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_130(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_1,globalExchangeRate_9)
Function name: _stake
Internal call...
_tokensToShares
amount
globalExchangeRate
Function: _tokensToShares
ic
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 112
0
0

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_130 Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_130

Name: TMP_130 Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
globalSharesToAdd_1(uint128) := TMP_130(uint128)
Function name: _stake
asgn

Name: TMP_130 Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: globalSharesToAdd Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for globalSharesToAdd

Name: globalSharesToAdd Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
totalGlobalShares_7(uint128) = totalGlobalShares_6 + globalSharesToAdd_1
Function name: _stake

Name: totalGlobalShares Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
initlize checks
;;;
lnorm: u rnorm: u
Finance type key: (12, 12)
Func: add
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 112
Final dest type: 112

Name: totalGlobalShares Function: global
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: totalGlobalShares Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
REF_25(uint128) -> v_1 (-> ['validators']).globalShares
Function name: _stake
MEMBER
v
globalShares
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_25

Name: v.globalShares Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.globalShares Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_2 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_25(-> v_2 (-> ['validators'])) = REF_25 + globalSharesToAdd_1
Function name: _stake

Name: REF_25 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 112
Final dest type: 112

Name: globalSharesToAdd Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_25 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for REF_25

Name: REF_25 Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_25 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_2(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_2 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
newDelegatorSharesN_1(uint128) := 0(uint256)
Function name: _stake
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: newDelegatorSharesN Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newDelegatorSharesN

Name: newDelegatorSharesN Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_26(uint128) -> v_2 (-> ['validators']).totalShares
Function name: _stake
MEMBER
v
totalShares
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: totalShares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_26

Name: v.totalShares Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
v_3 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_2 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_26(-> v_3 (-> ['validators'])) = REF_26 + newDelegatorSharesN_1
Function name: _stake

Name: REF_26 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: newDelegatorSharesN Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_26 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_26

Name: REF_26 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_26 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
validators_3(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_3 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_27(uint128) -> s_1 (-> ['v']).shares
Function name: _stake
MEMBER
s
shares
_stake
s Fields:
staked
shares
^^^

Name: shares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_27

Name: s.shares Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
s_2 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_1 (-> ['v'])"])
Function name: _stake
Phi
[i]Type for s

Name: s Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
REF_27(-> s_2 (-> ['v'])) = REF_27 + newDelegatorSharesN_1
Function name: _stake

Name: REF_27 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: newDelegatorSharesN Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_27 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_27

Name: REF_27 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_27 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
v_5 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_2 (-> ['v'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_28(uint128) -> v_3 (-> ['validators']).delegated
Function name: _stake
MEMBER
v
delegated
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_28

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_4 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_3 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_28(-> v_4 (-> ['validators'])) = REF_28 + amount_1
Function name: _stake

Name: REF_28 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_28 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_28

Name: REF_28 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_28 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_4(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_4 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_29(uint128) -> s_2 (-> ['v']).staked
Function name: _stake
MEMBER
[W] Initializing defined variable to constant
s
staked
_stake
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_29

Name: s.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_3 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_2 (-> ['v'])"])
Function name: _stake
Phi
[i]Type for s

Name: s Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
REF_29(-> s_3 (-> ['v'])) = REF_29 + amount_1
Function name: _stake

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_29

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_6 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_3 (-> ['v'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
Emit Staked(validatorId_1,msg.sender,amount_1)
WORKLIST iteration 1 for function call "_stake":
 New undefined nodes- 4
 Old undefined nodes- 7
typecheckig node...
validatorId_1(uint128) := ϕ(['validatorId_1', 'validatorId_1', 'newValidatorId_1'])
Function name: _stake
Phi
[i]Type for validatorId

Name: validatorId Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint128) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Function name: _stake
Phi
[i]Type for amount

Name: amount Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
divider_6(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _stake
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
maxCapMultiplier_2(uint128) := ϕ(['maxCapMultiplier_0', 'maxCapMultiplier_7', 'maxCapMultiplier_1', 'maxCapMultiplier_6', 'maxCapMultiplier_4'])
Function name: _stake
Phi
[i]Type for maxCapMultiplier

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validatorMinStakedRequired_2(uint128) := ϕ(['validatorMinStakedRequired_1', 'validatorMinStakedRequired_4', 'validatorMinStakedRequired_0', 'validatorMinStakedRequired_7', 'validatorMinStakedRequired_6'])
Function name: _stake
Phi
[i]Type for validatorMinStakedRequired

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
allocatedTokensPerEpoch_7(uint128) := ϕ(['allocatedTokensPerEpoch_1', 'allocatedTokensPerEpoch_5', 'allocatedTokensPerEpoch_9', 'allocatedTokensPerEpoch_3', 'allocatedTokensPerEpoch_0'])
Function name: _stake
Phi
[i]Type for allocatedTokensPerEpoch

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rewardsLocked_7(uint128) := ϕ(['rewardsLocked_5', 'rewardsLocked_3', 'rewardsLocked_0', 'rewardsLocked_10', 'rewardsLocked_6', 'rewardsLocked_8', 'rewardsLocked_2'])
Function name: _stake
Phi
[i]Type for rewardsLocked

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_8(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
Function name: _stake
Phi
[i]Type for endEpoch

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalGlobalShares_2(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
Function name: _stake
Phi
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: global
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
globalExchangeRate_6(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
Function name: _stake
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
validatorsN_1(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
Function name: _stake
Phi
[i]Type for validatorsN

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_1(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: _stake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
TMP_106(bool) = amount_1 >= divider_6
Function name: _stake
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_106

Name: TMP_106 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,Amount must be at least 1 token)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_108(bool) = validatorId_1 < validatorsN_1
Function name: _stake
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_108

Name: TMP_108 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_109(None) = SOLIDITY_CALL require(bool,string)(TMP_108,Invalid validator)
[i]Type for TMP_109

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_12(DelegatedStaking.Validator) -> validators_1[validatorId_1]
Function name: _stake
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_12

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_12(DelegatedStaking.Validator)
Function name: _stake
asgn

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_13(uint128) -> v_1 (-> ['validators']).disabledEpoch
Function name: _stake
MEMBER
v
disabledEpoch
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: v.disabledEpoch Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_110(bool) = REF_13 == 0
Function name: _stake
[i]Type for TMP_110

Name: TMP_110 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_111(None) = SOLIDITY_CALL require(bool,string)(TMP_110,Validator is disabled)
[i]Type for TMP_111

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_112(bool) = endEpoch_8 == 0
Function name: _stake
[i]Type for TMP_112

Name: TMP_112 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_112
Condition...
Conidtion: 
TMP_112
TMP_112
typecheckig node...
TMP_113 = CONVERT block.number to uint128
Function name: _stake
[i]Type for TMP_113

Name: TMP_113 Function: _stake
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
TMP_114(uint128) = rewardsLocked_7 / allocatedTokensPerEpoch_7
Function name: _stake
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_114 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_114

Name: TMP_114 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_115(uint128) = TMP_113 + TMP_114
Function name: _stake

Name: TMP_115 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_114 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_115 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_115

Name: TMP_115 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_9(uint128) := TMP_115(uint128)
Function name: _stake
asgn

Name: TMP_115 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: endEpoch Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for endEpoch

Name: endEpoch Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
rewardsLocked_8(uint128) := 0(uint256)
Function name: _stake
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: rewardsLocked Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardsLocked

Name: rewardsLocked Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_116(bool) = endEpoch_9 > block.number
Function name: _stake
testing gt...
block.number
[i]Type for TMP_116

Name: TMP_116 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_117(None) = SOLIDITY_CALL require(bool,string)(TMP_116,Program ended)
[i]Type for TMP_117

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
Internal call...
_updateGlobalExchangeRate
Function: _updateGlobalExchangeRate
ic
Internal cal param_cache
0
0
done.
globalExchangeRate_7(uint128) := ϕ(['globalExchangeRate_3'])
Function name: _stake
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateValidator(DelegatedStaking.Validator)(v_1 (-> ['validators']))
Internal call...
_updateValidator
v
Function: _updateValidator
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: [totalShares, disabledEpoch, _address, stakings, staked, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333b54fd0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333ae0490>, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333ae0610>]
    fintype: -1
0
0
done.
typecheckig node...
REF_14(address) -> v_1 (-> ['validators'])._address
Function name: _stake
MEMBER
v
_address
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_14

Name: v._address Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_120(bool) = msg.sender == REF_14
Function name: _stake
[i]Type for TMP_120

Name: TMP_120 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_120
Condition...
Conidtion: 
TMP_120
TMP_120
typecheckig node...
REF_18(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: _stake
MEMBER
v
stakings
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_18

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_19(address) -> v_1 (-> ['validators'])._address
Function name: _stake
MEMBER
v
_address
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_19

Name: v._address Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_20(DelegatedStaking.Staking) -> REF_18[REF_19]
Function name: _stake
INDEX

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _stake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_20

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_21(uint128) -> REF_20.staked
Function name: _stake
MEMBER
v.stakings
staked
_stake
v.stakings Fields:
^^^
[i]Type for REF_21

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validatorStaked_1(uint128) := REF_21(uint128)
Function name: _stake
asgn

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorStaked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for validatorStaked

Name: validatorStaked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
validatorStaked_1(uint128) := REF_21(uint128)
XXXXX
typecheckig node...
REF_15(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: _stake
MEMBER
v
stakings
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_15

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_16(DelegatedStaking.Staking) -> REF_15[msg.sender]
Function name: _stake
INDEX

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _stake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_16

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_17(uint128) -> REF_16.staked
Function name: _stake
MEMBER
v.stakings
staked
_stake
v.stakings Fields:
^^^
[i]Type for REF_17

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_121(uint128) = amount_1 (c)+ REF_17
Function name: _stake

Name: TMP_121 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_121 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_121

Name: TMP_121 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_121(uint128) = amount_1 (c)+ REF_17
XXXXX
TMP_122(bool) = TMP_121 >= validatorMinStakedRequired_4
Function name: _stake
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_122

Name: TMP_122 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_123(None) = SOLIDITY_CALL require(bool,string)(TMP_122,Amount < min staked required)
[i]Type for TMP_123

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_124(uint128) = validatorStaked_1 (c)* maxCapMultiplier_4
Function name: _stake
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_124 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_124

Name: TMP_124 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_124(uint128) = validatorStaked_1 (c)* maxCapMultiplier_4
XXXXX
validatorMaxCap_1(uint128) := TMP_124(uint128)
Function name: _stake
asgn

Name: TMP_124 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorMaxCap Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for validatorMaxCap

Name: validatorMaxCap Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
CONDITION withTransfer_1
Condition...
Conidtion: 
withTransfer_1
withTransfer_1
typecheckig node...
REF_22(uint128) -> v_1 (-> ['validators']).delegated
Function name: _stake
MEMBER
v
delegated
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_22

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_125(uint128) = REF_22 (c)- validatorStaked_1
Function name: _stake
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorStaked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_125 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_125

Name: TMP_125 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_125(uint128) = REF_22 (c)- validatorStaked_1
XXXXX
TMP_126(uint128) = TMP_125 (c)+ amount_1
Function name: _stake

Name: TMP_126 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_126 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_126

Name: TMP_126 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
newDelegated_1(uint128) := TMP_126(uint128)
Function name: _stake
asgn

Name: TMP_126 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newDelegated Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newDelegated

Name: newDelegated Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
INTERNAL_CALL, DelegatedStaking._transferToContract(address,uint128)(msg.sender,amount_1)
Internal call...
_transferToContract
msg.sender
amount
Function: _transferToContract
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _transferToContract
Function Visibility: internal
clearning node...
clearing ir...?
from_1(address) := ϕ(['msg.sender'])
has variable
[i] from cleared

Name: from Function: _transferToContract
Num: 
Den: 
Norm: u
LF: from
Fields: 
Finance Type: undef
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _transferToContract
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CQT_1(IERC20Upgradeable) := ϕ(['CQT_0'])
has variable
typecheckig node...
from_1(address) := ϕ(['msg.sender'])
Function name: _transferToContract
Phi
[i]Type for from

Name: from Function: _transferToContract
Num: -1
Den: -1
Norm: u
LF: from
Fields: 
Finance Type: undef
done.
amount_1(uint128) := ϕ(['amount_1', 'amount_1'])
Function name: _transferToContract
Phi
[i]Type for amount

Name: amount Function: _transferToContract
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CQT_1(IERC20Upgradeable) := ϕ(['CQT_0'])
Function name: _transferToContract
Phi
[i]Type for CQT

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_38 = CONVERT this to address
has variable
[i] TMP_38 cleared

Name: TMP_38 Function: _transferToContract
Num: 
Den: 
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
clearing ir...?
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256), arguments:['CQT_1', 'from_1', 'TMP_38', 'amount_1'] 
typecheckig node...
TMP_38 = CONVERT this to address
Function name: _transferToContract
[i]Type for TMP_38

Name: TMP_38 Function: _transferToContract
Num: 
Den: 
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256), arguments:['CQT_1', 'from_1', 'TMP_38', 'amount_1'] 
Library Call: safeTransferFrom
done.
WORKLIST iteration 0 for function call "_transferToContract":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _transferToContract
done.
typecheckig node...
TMP_127(bool) = newDelegated_1 <= validatorMaxCap_1
Function name: _stake
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_127

Name: TMP_127 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_128(None) = SOLIDITY_CALL require(bool,string)(TMP_127,Validator max capacity exceeded)
[i]Type for TMP_128

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_23(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: _stake
MEMBER
v
stakings
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_23

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_24(DelegatedStaking.Staking) -> REF_23[msg.sender]
Function name: _stake
INDEX

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _stake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_24

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_1 (-> ['v'])(DelegatedStaking.Staking) := REF_24(DelegatedStaking.Staking)
Function name: _stake
asgn

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for s

Name: s Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
typecheckig node...
TMP_130(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_1,globalExchangeRate_9)
Function name: _stake
Internal call...
_tokensToShares
amount
globalExchangeRate
Function: _tokensToShares
ic
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 112
0
0

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_130 Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_130

Name: TMP_130 Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
globalSharesToAdd_1(uint128) := TMP_130(uint128)
Function name: _stake
asgn

Name: TMP_130 Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: globalSharesToAdd Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for globalSharesToAdd

Name: globalSharesToAdd Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
totalGlobalShares_7(uint128) = totalGlobalShares_6 + globalSharesToAdd_1
Function name: _stake

Name: totalGlobalShares Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
initlize checks
;;;
lnorm: u rnorm: u
Finance type key: (12, 12)
Func: add
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 112
Final dest type: 112

Name: totalGlobalShares Function: global
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: totalGlobalShares Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
REF_25(uint128) -> v_1 (-> ['validators']).globalShares
Function name: _stake
MEMBER
v
globalShares
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_25

Name: v.globalShares Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.globalShares Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_2 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_25(-> v_2 (-> ['validators'])) = REF_25 + globalSharesToAdd_1
Function name: _stake

Name: REF_25 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 112
Final dest type: 112

Name: globalSharesToAdd Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_25 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for REF_25

Name: REF_25 Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_25 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_2(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_2 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
newDelegatorSharesN_1(uint128) := 0(uint256)
Function name: _stake
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: newDelegatorSharesN Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newDelegatorSharesN

Name: newDelegatorSharesN Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_26(uint128) -> v_2 (-> ['validators']).totalShares
Function name: _stake
MEMBER
v
totalShares
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: totalShares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_26

Name: v.totalShares Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
v_3 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_2 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_26(-> v_3 (-> ['validators'])) = REF_26 + newDelegatorSharesN_1
Function name: _stake

Name: REF_26 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: newDelegatorSharesN Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_26 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_26

Name: REF_26 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_26 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
validators_3(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_3 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_27(uint128) -> s_1 (-> ['v']).shares
Function name: _stake
MEMBER
s
shares
_stake
s Fields:
staked
shares
^^^

Name: shares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_27

Name: s.shares Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
s_2 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_1 (-> ['v'])"])
Function name: _stake
Phi
[i]Type for s

Name: s Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
REF_27(-> s_2 (-> ['v'])) = REF_27 + newDelegatorSharesN_1
Function name: _stake

Name: REF_27 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: newDelegatorSharesN Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_27 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_27

Name: REF_27 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_27 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
v_5 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_2 (-> ['v'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_28(uint128) -> v_3 (-> ['validators']).delegated
Function name: _stake
MEMBER
v
delegated
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_28

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_4 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_3 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_28(-> v_4 (-> ['validators'])) = REF_28 + amount_1
Function name: _stake

Name: REF_28 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_28 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_28

Name: REF_28 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_28 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_4(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_4 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_29(uint128) -> s_2 (-> ['v']).staked
Function name: _stake
MEMBER
[W] Initializing defined variable to constant
s
staked
_stake
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_29

Name: s.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_3 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_2 (-> ['v'])"])
Function name: _stake
Phi
[i]Type for s

Name: s Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
REF_29(-> s_3 (-> ['v'])) = REF_29 + amount_1
Function name: _stake

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_29

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_6 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_3 (-> ['v'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
Emit Staked(validatorId_1,msg.sender,amount_1)
WORKLIST iteration 2 for function call "_stake":
 New undefined nodes- 4
 Old undefined nodes- 4
Saving return values for: _stake
done.
This IR caused addback:
INTERNAL_CALL, DelegatedStaking._stake(uint128,uint128,bool)(validatorId_1,amount_1,True)
XXXXX
WORKLIST iteration 0 for function call "stake":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: stake
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
FIELDS:
validators Fields:
globalShares
delegated
exchangeRate
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _stake
Function name: _stake
Function Visibility (test): public
validatorId
Finding type for validatorId...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorId Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
amount
Finding type for amount...
uint128
Check copy_toekn_tuple
(1, -1, 0, None, 0)
----
Type: uint128
uint128
Final Type: uint128

Name: amount Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
[*]Type fetched successfully
withTransfer
Finding type for withTransfer...
bool
SKIP bool
-100
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: 0
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
validatorId_1(uint128) := ϕ(['validatorId_1', 'validatorId_1', 'newValidatorId_1'])
has variable
[i] validatorId cleared

Name: validatorId Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_1', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
divider_6(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
clearing ir...?
maxCapMultiplier_2(uint128) := ϕ(['maxCapMultiplier_0', 'maxCapMultiplier_7', 'maxCapMultiplier_1', 'maxCapMultiplier_6', 'maxCapMultiplier_4'])
has variable
clearing ir...?
validatorMinStakedRequired_2(uint128) := ϕ(['validatorMinStakedRequired_1', 'validatorMinStakedRequired_4', 'validatorMinStakedRequired_0', 'validatorMinStakedRequired_7', 'validatorMinStakedRequired_6'])
has variable
clearing ir...?
allocatedTokensPerEpoch_7(uint128) := ϕ(['allocatedTokensPerEpoch_1', 'allocatedTokensPerEpoch_5', 'allocatedTokensPerEpoch_9', 'allocatedTokensPerEpoch_3', 'allocatedTokensPerEpoch_0'])
has variable
clearing ir...?
rewardsLocked_7(uint128) := ϕ(['rewardsLocked_5', 'rewardsLocked_3', 'rewardsLocked_0', 'rewardsLocked_10', 'rewardsLocked_6', 'rewardsLocked_8', 'rewardsLocked_2'])
has variable
clearing ir...?
endEpoch_8(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
has variable
clearing ir...?
totalGlobalShares_2(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
has variable
clearing ir...?
globalExchangeRate_6(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
has variable
clearing ir...?
validatorsN_1(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
has variable
clearing ir...?
validators_1(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
has variable
typecheckig node...
validatorId_1(uint128) := ϕ(['validatorId_1', 'validatorId_1', 'newValidatorId_1'])
Function name: _stake
Phi
[i]Type for validatorId

Name: validatorId Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint128) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Function name: _stake
Phi
[i]Type for amount

Name: amount Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
divider_6(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _stake
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
maxCapMultiplier_2(uint128) := ϕ(['maxCapMultiplier_0', 'maxCapMultiplier_7', 'maxCapMultiplier_1', 'maxCapMultiplier_6', 'maxCapMultiplier_4'])
Function name: _stake
Phi
[i]Type for maxCapMultiplier

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validatorMinStakedRequired_2(uint128) := ϕ(['validatorMinStakedRequired_1', 'validatorMinStakedRequired_4', 'validatorMinStakedRequired_0', 'validatorMinStakedRequired_7', 'validatorMinStakedRequired_6'])
Function name: _stake
Phi
[i]Type for validatorMinStakedRequired

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
allocatedTokensPerEpoch_7(uint128) := ϕ(['allocatedTokensPerEpoch_1', 'allocatedTokensPerEpoch_5', 'allocatedTokensPerEpoch_9', 'allocatedTokensPerEpoch_3', 'allocatedTokensPerEpoch_0'])
Function name: _stake
Phi
[i]Type for allocatedTokensPerEpoch

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rewardsLocked_7(uint128) := ϕ(['rewardsLocked_5', 'rewardsLocked_3', 'rewardsLocked_0', 'rewardsLocked_10', 'rewardsLocked_6', 'rewardsLocked_8', 'rewardsLocked_2'])
Function name: _stake
Phi
[i]Type for rewardsLocked

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_8(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
Function name: _stake
Phi
[i]Type for endEpoch

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalGlobalShares_2(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
Function name: _stake
Phi
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
globalExchangeRate_6(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
Function name: _stake
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
validatorsN_1(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
Function name: _stake
Phi
[i]Type for validatorsN

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_1(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: _stake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_106(bool) = amount_1 >= divider_6
has variable
[i] TMP_106 cleared

Name: TMP_106 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,Amount must be at least 1 token)
typecheckig node...
TMP_106(bool) = amount_1 >= divider_6
Function name: _stake
testing gt...
lnorm: 0 rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0
[i]Type for TMP_106

Name: TMP_106 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,Amount must be at least 1 token)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_108(bool) = validatorId_1 < validatorsN_1
has variable
[i] TMP_108 cleared

Name: TMP_108 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_109(None) = SOLIDITY_CALL require(bool,string)(TMP_108,Invalid validator)
typecheckig node...
TMP_108(bool) = validatorId_1 < validatorsN_1
Function name: _stake
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_108

Name: TMP_108 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_109(None) = SOLIDITY_CALL require(bool,string)(TMP_108,Invalid validator)
[i]Type for TMP_109

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_12(DelegatedStaking.Validator) -> validators_1[validatorId_1]
has variable
clearing ir...?
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_12(DelegatedStaking.Validator)
has variable
[i] v cleared

Name: v Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
typecheckig node...
REF_12(DelegatedStaking.Validator) -> validators_1[validatorId_1]
Function name: _stake
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_12

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_12(DelegatedStaking.Validator)
Function name: _stake
asgn

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef

Name: v Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_13(uint128) -> v_1 (-> ['validators']).disabledEpoch
has variable
clearing ir...?
TMP_110(bool) = REF_13 == 0
has variable
[i] TMP_110 cleared

Name: TMP_110 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_111(None) = SOLIDITY_CALL require(bool,string)(TMP_110,Validator is disabled)
typecheckig node...
REF_13(uint128) -> v_1 (-> ['validators']).disabledEpoch
Function name: _stake
MEMBER
v
disabledEpoch
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: v.disabledEpoch Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_110(bool) = REF_13 == 0
Function name: _stake
[i]Type for TMP_110

Name: TMP_110 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_111(None) = SOLIDITY_CALL require(bool,string)(TMP_110,Validator is disabled)
[i]Type for TMP_111

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_112(bool) = endEpoch_8 == 0
has variable
[i] TMP_112 cleared

Name: TMP_112 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_112
typecheckig node...
TMP_112(bool) = endEpoch_8 == 0
Function name: _stake
[i]Type for TMP_112

Name: TMP_112 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_112
Condition...
Conidtion: 
TMP_112
TMP_112
clearning node...
clearing ir...?
TMP_113 = CONVERT block.number to uint128
has variable
[i] TMP_113 cleared

Name: TMP_113 Function: _stake
Num: 
Den: 
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
clearing ir...?
TMP_114(uint128) = rewardsLocked_7 / allocatedTokensPerEpoch_7
has variable
[i] TMP_114 cleared

Name: TMP_114 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_115(uint128) = TMP_113 + TMP_114
has variable
[i] TMP_115 cleared

Name: TMP_115 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
endEpoch_9(uint128) := TMP_115(uint128)
has variable
typecheckig node...
TMP_113 = CONVERT block.number to uint128
Function name: _stake
[i]Type for TMP_113

Name: TMP_113 Function: _stake
Num: 
Den: 
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
TMP_114(uint128) = rewardsLocked_7 / allocatedTokensPerEpoch_7
Function name: _stake
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_114 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_114

Name: TMP_114 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_115(uint128) = TMP_113 + TMP_114
Function name: _stake

Name: TMP_115 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_114 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_115 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_115

Name: TMP_115 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_115(uint128) = TMP_113 + TMP_114
XXXXX
endEpoch_9(uint128) := TMP_115(uint128)
Function name: _stake
asgn

Name: TMP_115 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: endEpoch Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for endEpoch

Name: endEpoch Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
rewardsLocked_8(uint128) := 0(uint256)
has variable
typecheckig node...
rewardsLocked_8(uint128) := 0(uint256)
Function name: _stake
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: rewardsLocked Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardsLocked

Name: rewardsLocked Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_116(bool) = endEpoch_9 > block.number
has variable
[i] TMP_116 cleared

Name: TMP_116 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_117(None) = SOLIDITY_CALL require(bool,string)(TMP_116,Program ended)
typecheckig node...
TMP_116(bool) = endEpoch_9 > block.number
Function name: _stake
testing gt...
block.number
[i]Type for TMP_116

Name: TMP_116 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_117(None) = SOLIDITY_CALL require(bool,string)(TMP_116,Program ended)
[i]Type for TMP_117

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
clearing ir...?
globalExchangeRate_7(uint128) := ϕ(['globalExchangeRate_3'])
has variable
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
Internal call...
_updateGlobalExchangeRate
Function: _updateGlobalExchangeRate
ic
Internal cal param_cache
0
0
done.
globalExchangeRate_7(uint128) := ϕ(['globalExchangeRate_3'])
Function name: _stake
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._updateValidator(DelegatedStaking.Validator)(v_1 (-> ['validators']))
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateValidator(DelegatedStaking.Validator)(v_1 (-> ['validators']))
Internal call...
_updateValidator
v
Function: _updateValidator
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: [totalShares, disabledEpoch, _address, stakings, staked, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333b54fd0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333ae0490>, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333ae0610>]
    fintype: -1
0
0
done.
clearning node...
clearing ir...?
REF_14(address) -> v_1 (-> ['validators'])._address
has variable
clearing ir...?
TMP_120(bool) = msg.sender == REF_14
has variable
[i] TMP_120 cleared

Name: TMP_120 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_120
typecheckig node...
REF_14(address) -> v_1 (-> ['validators'])._address
Function name: _stake
MEMBER
v
_address
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_14

Name: v._address Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_120(bool) = msg.sender == REF_14
Function name: _stake
[i]Type for TMP_120

Name: TMP_120 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_120
Condition...
Conidtion: 
TMP_120
TMP_120
clearning node...
clearing ir...?
REF_18(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
has variable
clearing ir...?
REF_19(address) -> v_1 (-> ['validators'])._address
has variable
clearing ir...?
REF_20(DelegatedStaking.Staking) -> REF_18[REF_19]
has variable
clearing ir...?
REF_21(uint128) -> REF_20.staked
has variable
clearing ir...?
validatorStaked_1(uint128) := REF_21(uint128)
has variable
[i] validatorStaked cleared

Name: validatorStaked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_18(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: _stake
MEMBER
v
stakings
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_18

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_19(address) -> v_1 (-> ['validators'])._address
Function name: _stake
MEMBER
v
_address
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_19

Name: v._address Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_20(DelegatedStaking.Staking) -> REF_18[REF_19]
Function name: _stake
INDEX

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _stake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_20

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_21(uint128) -> REF_20.staked
Function name: _stake
MEMBER
v.stakings
staked
_stake
v.stakings Fields:
^^^
[i]Type for REF_21

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validatorStaked_1(uint128) := REF_21(uint128)
Function name: _stake
asgn

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorStaked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for validatorStaked

Name: validatorStaked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
validatorStaked_1(uint128) := REF_21(uint128)
XXXXX
clearning node...
clearing ir...?
REF_15(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
has variable
clearing ir...?
REF_16(DelegatedStaking.Staking) -> REF_15[msg.sender]
has variable
clearing ir...?
REF_17(uint128) -> REF_16.staked
has variable
clearing ir...?
TMP_121(uint128) = amount_1 (c)+ REF_17
has variable
[i] TMP_121 cleared

Name: TMP_121 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_122(bool) = TMP_121 >= validatorMinStakedRequired_4
has variable
[i] TMP_122 cleared

Name: TMP_122 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_123(None) = SOLIDITY_CALL require(bool,string)(TMP_122,Amount < min staked required)
typecheckig node...
REF_15(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: _stake
MEMBER
v
stakings
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_15

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_16(DelegatedStaking.Staking) -> REF_15[msg.sender]
Function name: _stake
INDEX

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _stake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_16

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_17(uint128) -> REF_16.staked
Function name: _stake
MEMBER
v.stakings
staked
_stake
v.stakings Fields:
^^^
[i]Type for REF_17

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_121(uint128) = amount_1 (c)+ REF_17
Function name: _stake

Name: TMP_121 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: amount Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_121 Function: _stake
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_121

Name: TMP_121 Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
This IR caused addback:
TMP_121(uint128) = amount_1 (c)+ REF_17
XXXXX
TMP_122(bool) = TMP_121 >= validatorMinStakedRequired_4
Function name: _stake
testing gt...
lnorm: 0 rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0
[i]Type for TMP_122

Name: TMP_122 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_123(None) = SOLIDITY_CALL require(bool,string)(TMP_122,Amount < min staked required)
[i]Type for TMP_123

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_124(uint128) = validatorStaked_1 (c)* maxCapMultiplier_4
has variable
[i] TMP_124 cleared

Name: TMP_124 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
validatorMaxCap_1(uint128) := TMP_124(uint128)
has variable
[i] validatorMaxCap cleared

Name: validatorMaxCap Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_124(uint128) = validatorStaked_1 (c)* maxCapMultiplier_4
Function name: _stake
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_124 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_124

Name: TMP_124 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_124(uint128) = validatorStaked_1 (c)* maxCapMultiplier_4
XXXXX
validatorMaxCap_1(uint128) := TMP_124(uint128)
Function name: _stake
asgn

Name: TMP_124 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorMaxCap Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for validatorMaxCap

Name: validatorMaxCap Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
CONDITION withTransfer_1
typecheckig node...
CONDITION withTransfer_1
Condition...
Conidtion: 
withTransfer_1
withTransfer_1
clearning node...
clearing ir...?
REF_22(uint128) -> v_1 (-> ['validators']).delegated
has variable
clearing ir...?
TMP_125(uint128) = REF_22 (c)- validatorStaked_1
has variable
[i] TMP_125 cleared

Name: TMP_125 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_126(uint128) = TMP_125 (c)+ amount_1
has variable
[i] TMP_126 cleared

Name: TMP_126 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
newDelegated_1(uint128) := TMP_126(uint128)
has variable
[i] newDelegated cleared

Name: newDelegated Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_22(uint128) -> v_1 (-> ['validators']).delegated
Function name: _stake
MEMBER
v
delegated
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_22

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_125(uint128) = REF_22 (c)- validatorStaked_1
Function name: _stake
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorStaked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_125 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_125

Name: TMP_125 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_125(uint128) = REF_22 (c)- validatorStaked_1
XXXXX
TMP_126(uint128) = TMP_125 (c)+ amount_1
Function name: _stake

Name: TMP_126 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: -1
Final dest type: 0

Name: amount Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_126 Function: _stake
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_126

Name: TMP_126 Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
newDelegated_1(uint128) := TMP_126(uint128)
Function name: _stake
asgn

Name: TMP_126 Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: newDelegated Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (0, -1)
Func: assign
Dest type: 0, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0
[i]Type for newDelegated

Name: newDelegated Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._transferToContract(address,uint128)(msg.sender,amount_1)
typecheckig node...
INTERNAL_CALL, DelegatedStaking._transferToContract(address,uint128)(msg.sender,amount_1)
Internal call...
_transferToContract
msg.sender
amount
Function: _transferToContract
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: 0
-100
added
xyz
Function name: _transferToContract
Function Visibility: internal
clearning node...
clearing ir...?
from_1(address) := ϕ(['msg.sender'])
has variable
[i] from cleared

Name: from Function: _transferToContract
Num: 
Den: 
Norm: u
LF: from
Fields: 
Finance Type: undef
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _transferToContract
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CQT_1(IERC20Upgradeable) := ϕ(['CQT_0'])
has variable
typecheckig node...
from_1(address) := ϕ(['msg.sender'])
Function name: _transferToContract
Phi
[i]Type for from

Name: from Function: _transferToContract
Num: -1
Den: -1
Norm: u
LF: from
Fields: 
Finance Type: undef
done.
amount_1(uint128) := ϕ(['amount_1', 'amount_1'])
Function name: _transferToContract
Phi
[i]Type for amount

Name: amount Function: _transferToContract
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
CQT_1(IERC20Upgradeable) := ϕ(['CQT_0'])
Function name: _transferToContract
Phi
[i]Type for CQT

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_38 = CONVERT this to address
has variable
[i] TMP_38 cleared

Name: TMP_38 Function: _transferToContract
Num: 
Den: 
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
clearing ir...?
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256), arguments:['CQT_1', 'from_1', 'TMP_38', 'amount_1'] 
typecheckig node...
TMP_38 = CONVERT this to address
Function name: _transferToContract
[i]Type for TMP_38

Name: TMP_38 Function: _transferToContract
Num: 
Den: 
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256), arguments:['CQT_1', 'from_1', 'TMP_38', 'amount_1'] 
Library Call: safeTransferFrom
done.
WORKLIST iteration 0 for function call "_transferToContract":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _transferToContract
done.
clearning node...
clearing ir...?
TMP_127(bool) = newDelegated_1 <= validatorMaxCap_1
has variable
[i] TMP_127 cleared

Name: TMP_127 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_128(None) = SOLIDITY_CALL require(bool,string)(TMP_127,Validator max capacity exceeded)
typecheckig node...
TMP_127(bool) = newDelegated_1 <= validatorMaxCap_1
Function name: _stake
testing lt...
lnorm: 0 rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0
[i]Type for TMP_127

Name: TMP_127 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_128(None) = SOLIDITY_CALL require(bool,string)(TMP_127,Validator max capacity exceeded)
[i]Type for TMP_128

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_23(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
has variable
clearing ir...?
REF_24(DelegatedStaking.Staking) -> REF_23[msg.sender]
has variable
clearing ir...?
s_1 (-> ['v'])(DelegatedStaking.Staking) := REF_24(DelegatedStaking.Staking)
has variable
[i] s cleared

Name: s Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
typecheckig node...
REF_23(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: _stake
MEMBER
v
stakings
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_23

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_24(DelegatedStaking.Staking) -> REF_23[msg.sender]
Function name: _stake
INDEX

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _stake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_24

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_1 (-> ['v'])(DelegatedStaking.Staking) := REF_24(DelegatedStaking.Staking)
Function name: _stake
asgn

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for s

Name: s Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_130(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_1,globalExchangeRate_9)
has variable
[i] TMP_130 cleared

Name: TMP_130 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
globalSharesToAdd_1(uint128) := TMP_130(uint128)
has variable
[i] globalSharesToAdd cleared

Name: globalSharesToAdd Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
typecheckig node...
TMP_130(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_1,globalExchangeRate_9)
Function name: _stake
Internal call...
_tokensToShares
amount
globalExchangeRate
Function: _tokensToShares
ic
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: 0
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 12
-100
added
xyz
Function name: _tokensToShares
Function Visibility: internal
clearning node...
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
has variable
[i] rate cleared

Name: rate Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
Function name: _tokensToShares
Phi
[i]Type for amount

Name: amount Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
Function name: _tokensToShares
Phi
[i]Type for rate

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _tokensToShares
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99 = CONVERT amount_1 to uint256
has variable
[i] TMP_99 cleared

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_100(uint256) = TMP_99 (c)* divider_5
has variable
[i] TMP_100 cleared

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_101 = CONVERT rate_1 to uint256
has variable
[i] TMP_101 cleared

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_102(uint256) = TMP_100 (c)/ TMP_101
has variable
[i] TMP_102 cleared

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_103 = CONVERT TMP_102 to uint128
has variable
[i] TMP_103 cleared

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
RETURN TMP_103
typecheckig node...
TMP_99 = CONVERT amount_1 to uint256
Function name: _tokensToShares

Name: amount Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_99

Name: TMP_99 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_100(uint256) = TMP_99 (c)* divider_5
Function name: _tokensToShares
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_99 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_100

Name: TMP_100 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_101 = CONVERT rate_1 to uint256
Function name: _tokensToShares

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_101

Name: TMP_101 Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_102(uint256) = TMP_100 (c)/ TMP_101
Function name: _tokensToShares
lnorm: u rnorm: u
Finance type key: (0, 12)
Func: div
Dest type: 1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 112: True}
Right type: 12, Left type: 0
Left side: 0, Right side: 12, Checked Ratio: 12
False
Final dest type: 1

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: PIC_34 Function: None
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_102

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_103 = CONVERT TMP_102 to uint128
Function name: _tokensToShares

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_103

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
RETURN TMP_103
RETURN

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
WORKLIST iteration 0 for function call "_tokensToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _tokensToShares

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
___
[i]Type for TMP_130

Name: TMP_130 Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
globalSharesToAdd_1(uint128) := TMP_130(uint128)
Function name: _stake
asgn

Name: TMP_130 Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: globalSharesToAdd Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
u
Finance type key: (1, -1)
Func: assign
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 1
Final dest type: 1
[i]Type for globalSharesToAdd

Name: globalSharesToAdd Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
clearning node...
clearing ir...?
totalGlobalShares_7(uint128) = totalGlobalShares_6 + globalSharesToAdd_1
has variable
typecheckig node...
totalGlobalShares_7(uint128) = totalGlobalShares_6 + globalSharesToAdd_1
Function name: _stake

Name: totalGlobalShares Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 1, Left type: -1
Final dest type: 1

Name: globalSharesToAdd Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: totalGlobalShares Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
clearning node...
clearing ir...?
REF_25(uint128) -> v_1 (-> ['validators']).globalShares
has variable
clearing ir...?
v_2 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
has variable
[i] v cleared

Name: v Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
clearing ir...?
REF_25(-> v_2 (-> ['validators'])) = REF_25 + globalSharesToAdd_1
has variable
clearing ir...?
validators_2(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_2 (-> ['validators'])"])
has variable
typecheckig node...
REF_25(uint128) -> v_1 (-> ['validators']).globalShares
Function name: _stake
MEMBER
v
globalShares
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_25

Name: v.globalShares Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.globalShares Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_2 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_25(-> v_2 (-> ['validators'])) = REF_25 + globalSharesToAdd_1
Function name: _stake

Name: REF_25 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 1, Left type: 1
Final dest type: 1

Name: globalSharesToAdd Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_25 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for REF_25

Name: REF_25 Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_25 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_2(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_2 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
newDelegatorSharesN_1(uint128) := 0(uint256)
has variable
[i] newDelegatorSharesN cleared

Name: newDelegatorSharesN Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
newDelegatorSharesN_1(uint128) := 0(uint256)
Function name: _stake
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: newDelegatorSharesN Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newDelegatorSharesN

Name: newDelegatorSharesN Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_26(uint128) -> v_2 (-> ['validators']).totalShares
has variable
clearing ir...?
v_3 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_2 (-> ['validators'])"])
has variable
[i] v cleared

Name: v Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
clearing ir...?
REF_26(-> v_3 (-> ['validators'])) = REF_26 + newDelegatorSharesN_1
has variable
clearing ir...?
validators_3(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_3 (-> ['validators'])"])
has variable
typecheckig node...
REF_26(uint128) -> v_2 (-> ['validators']).totalShares
Function name: _stake
MEMBER
v
totalShares
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: totalShares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_26

Name: v.totalShares Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
v_3 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_2 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_26(-> v_3 (-> ['validators'])) = REF_26 + newDelegatorSharesN_1
Function name: _stake

Name: REF_26 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: newDelegatorSharesN Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_26 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_26

Name: REF_26 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_26 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
validators_3(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_3 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_27(uint128) -> s_1 (-> ['v']).shares
has variable
clearing ir...?
s_2 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_1 (-> ['v'])"])
has variable
[i] s cleared

Name: s Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
clearing ir...?
REF_27(-> s_2 (-> ['v'])) = REF_27 + newDelegatorSharesN_1
has variable
clearing ir...?
v_5 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_2 (-> ['v'])"])
has variable
[i] v cleared

Name: v Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
typecheckig node...
REF_27(uint128) -> s_1 (-> ['v']).shares
Function name: _stake
MEMBER
s
shares
_stake
s Fields:
staked
shares
^^^

Name: shares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_27

Name: s.shares Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
s_2 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_1 (-> ['v'])"])
Function name: _stake
Phi
[i]Type for s

Name: s Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
REF_27(-> s_2 (-> ['v'])) = REF_27 + newDelegatorSharesN_1
Function name: _stake

Name: REF_27 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: newDelegatorSharesN Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_27 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_27

Name: REF_27 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_27 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
v_5 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_2 (-> ['v'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_28(uint128) -> v_3 (-> ['validators']).delegated
has variable
clearing ir...?
v_4 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_3 (-> ['validators'])"])
has variable
[i] v cleared

Name: v Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
clearing ir...?
REF_28(-> v_4 (-> ['validators'])) = REF_28 + amount_1
has variable
clearing ir...?
validators_4(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_4 (-> ['validators'])"])
has variable
typecheckig node...
REF_28(uint128) -> v_3 (-> ['validators']).delegated
Function name: _stake
MEMBER
v
delegated
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_28

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_4 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_3 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_28(-> v_4 (-> ['validators'])) = REF_28 + amount_1
Function name: _stake

Name: REF_28 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: 0
Final dest type: 0

Name: amount Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: REF_28 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
[i]Type for REF_28

Name: REF_28 Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: REF_28 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_4(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_4 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_29(uint128) -> s_2 (-> ['v']).staked
has variable
clearing ir...?
s_3 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_2 (-> ['v'])"])
has variable
[i] s cleared

Name: s Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
clearing ir...?
REF_29(-> s_3 (-> ['v'])) = REF_29 + amount_1
has variable
clearing ir...?
v_6 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_3 (-> ['v'])"])
has variable
[i] v cleared

Name: v Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
typecheckig node...
REF_29(uint128) -> s_2 (-> ['v']).staked
Function name: _stake
MEMBER
[W] Initializing defined variable to constant
s
staked
_stake
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_29

Name: s.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_3 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_2 (-> ['v'])"])
Function name: _stake
Phi
[i]Type for s

Name: s Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
REF_29(-> s_3 (-> ['v'])) = REF_29 + amount_1
Function name: _stake

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: 0
Final dest type: 0

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_29

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_6 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_3 (-> ['v'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit Staked(validatorId_1,msg.sender,amount_1)
typecheckig node...
Emit Staked(validatorId_1,msg.sender,amount_1)
WORKLIST iteration 0 for function call "_stake":
 New undefined nodes- 5
 Old undefined nodes- 0
typecheckig node...
validatorId_1(uint128) := ϕ(['validatorId_1', 'validatorId_1', 'newValidatorId_1'])
Function name: _stake
Phi
[i]Type for validatorId

Name: validatorId Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_1(uint128) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Function name: _stake
Phi
[i]Type for amount

Name: amount Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
divider_6(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _stake
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
maxCapMultiplier_2(uint128) := ϕ(['maxCapMultiplier_0', 'maxCapMultiplier_7', 'maxCapMultiplier_1', 'maxCapMultiplier_6', 'maxCapMultiplier_4'])
Function name: _stake
Phi
[i]Type for maxCapMultiplier

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validatorMinStakedRequired_2(uint128) := ϕ(['validatorMinStakedRequired_1', 'validatorMinStakedRequired_4', 'validatorMinStakedRequired_0', 'validatorMinStakedRequired_7', 'validatorMinStakedRequired_6'])
Function name: _stake
Phi
[i]Type for validatorMinStakedRequired

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
allocatedTokensPerEpoch_7(uint128) := ϕ(['allocatedTokensPerEpoch_1', 'allocatedTokensPerEpoch_5', 'allocatedTokensPerEpoch_9', 'allocatedTokensPerEpoch_3', 'allocatedTokensPerEpoch_0'])
Function name: _stake
Phi
[i]Type for allocatedTokensPerEpoch

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rewardsLocked_7(uint128) := ϕ(['rewardsLocked_5', 'rewardsLocked_3', 'rewardsLocked_0', 'rewardsLocked_10', 'rewardsLocked_6', 'rewardsLocked_8', 'rewardsLocked_2'])
Function name: _stake
Phi
[i]Type for rewardsLocked

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_8(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
Function name: _stake
Phi
[i]Type for endEpoch

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalGlobalShares_2(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
Function name: _stake
Phi
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: global
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
globalExchangeRate_6(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
Function name: _stake
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
validatorsN_1(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
Function name: _stake
Phi
[i]Type for validatorsN

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_1(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: _stake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
TMP_106(bool) = amount_1 >= divider_6
Function name: _stake
testing gt...
lnorm: 0 rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0
[i]Type for TMP_106

Name: TMP_106 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_107(None) = SOLIDITY_CALL require(bool,string)(TMP_106,Amount must be at least 1 token)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_108(bool) = validatorId_1 < validatorsN_1
Function name: _stake
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_108

Name: TMP_108 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_109(None) = SOLIDITY_CALL require(bool,string)(TMP_108,Invalid validator)
[i]Type for TMP_109

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_12(DelegatedStaking.Validator) -> validators_1[validatorId_1]
Function name: _stake
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_12

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_12(DelegatedStaking.Validator)
Function name: _stake
asgn

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_13(uint128) -> v_1 (-> ['validators']).disabledEpoch
Function name: _stake
MEMBER
v
disabledEpoch
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: v.disabledEpoch Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_110(bool) = REF_13 == 0
Function name: _stake
[i]Type for TMP_110

Name: TMP_110 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_111(None) = SOLIDITY_CALL require(bool,string)(TMP_110,Validator is disabled)
[i]Type for TMP_111

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_112(bool) = endEpoch_8 == 0
Function name: _stake
[i]Type for TMP_112

Name: TMP_112 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_112
Condition...
Conidtion: 
TMP_112
TMP_112
typecheckig node...
TMP_113 = CONVERT block.number to uint128
Function name: _stake
[i]Type for TMP_113

Name: TMP_113 Function: _stake
Num: 
Den: 
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
TMP_114(uint128) = rewardsLocked_7 / allocatedTokensPerEpoch_7
Function name: _stake
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_114 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_114

Name: TMP_114 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_115(uint128) = TMP_113 + TMP_114
Function name: _stake

Name: TMP_115 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_114 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_115 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_115

Name: TMP_115 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_115(uint128) = TMP_113 + TMP_114
XXXXX
endEpoch_9(uint128) := TMP_115(uint128)
Function name: _stake
asgn

Name: TMP_115 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: endEpoch Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for endEpoch

Name: endEpoch Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
rewardsLocked_8(uint128) := 0(uint256)
Function name: _stake
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: rewardsLocked Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardsLocked

Name: rewardsLocked Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_116(bool) = endEpoch_9 > block.number
Function name: _stake
testing gt...
block.number
[i]Type for TMP_116

Name: TMP_116 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_117(None) = SOLIDITY_CALL require(bool,string)(TMP_116,Program ended)
[i]Type for TMP_117

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
Internal call...
_updateGlobalExchangeRate
Function: _updateGlobalExchangeRate
ic
Internal cal param_cache
0
0
done.
globalExchangeRate_7(uint128) := ϕ(['globalExchangeRate_3'])
Function name: _stake
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateValidator(DelegatedStaking.Validator)(v_1 (-> ['validators']))
Internal call...
_updateValidator
v
Function: _updateValidator
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: [totalShares, disabledEpoch, _address, stakings, staked, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333b54fd0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333ae0490>, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333ae0610>]
    fintype: -1
0
0
done.
typecheckig node...
REF_14(address) -> v_1 (-> ['validators'])._address
Function name: _stake
MEMBER
v
_address
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_14

Name: v._address Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_120(bool) = msg.sender == REF_14
Function name: _stake
[i]Type for TMP_120

Name: TMP_120 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_120
Condition...
Conidtion: 
TMP_120
TMP_120
typecheckig node...
REF_18(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: _stake
MEMBER
v
stakings
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_18

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_19(address) -> v_1 (-> ['validators'])._address
Function name: _stake
MEMBER
v
_address
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_19

Name: v._address Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_20(DelegatedStaking.Staking) -> REF_18[REF_19]
Function name: _stake
INDEX

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _stake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_20

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_21(uint128) -> REF_20.staked
Function name: _stake
MEMBER
v.stakings
staked
_stake
v.stakings Fields:
^^^
[i]Type for REF_21

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validatorStaked_1(uint128) := REF_21(uint128)
Function name: _stake
asgn

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorStaked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for validatorStaked

Name: validatorStaked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
validatorStaked_1(uint128) := REF_21(uint128)
XXXXX
typecheckig node...
REF_15(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: _stake
MEMBER
v
stakings
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_15

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_16(DelegatedStaking.Staking) -> REF_15[msg.sender]
Function name: _stake
INDEX

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _stake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_16

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_17(uint128) -> REF_16.staked
Function name: _stake
MEMBER
v.stakings
staked
_stake
v.stakings Fields:
^^^
[i]Type for REF_17

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_121(uint128) = amount_1 (c)+ REF_17
Function name: _stake

Name: TMP_121 Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: amount Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_121 Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_121

Name: TMP_121 Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
This IR caused addback:
TMP_121(uint128) = amount_1 (c)+ REF_17
XXXXX
TMP_122(bool) = TMP_121 >= validatorMinStakedRequired_4
Function name: _stake
testing gt...
lnorm: 0 rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0
[i]Type for TMP_122

Name: TMP_122 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_123(None) = SOLIDITY_CALL require(bool,string)(TMP_122,Amount < min staked required)
[i]Type for TMP_123

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_124(uint128) = validatorStaked_1 (c)* maxCapMultiplier_4
Function name: _stake
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_124 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_124

Name: TMP_124 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_124(uint128) = validatorStaked_1 (c)* maxCapMultiplier_4
XXXXX
validatorMaxCap_1(uint128) := TMP_124(uint128)
Function name: _stake
asgn

Name: TMP_124 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorMaxCap Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for validatorMaxCap

Name: validatorMaxCap Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
CONDITION withTransfer_1
Condition...
Conidtion: 
withTransfer_1
withTransfer_1
typecheckig node...
REF_22(uint128) -> v_1 (-> ['validators']).delegated
Function name: _stake
MEMBER
v
delegated
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_22

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_125(uint128) = REF_22 (c)- validatorStaked_1
Function name: _stake
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorStaked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_125 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_125

Name: TMP_125 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_125(uint128) = REF_22 (c)- validatorStaked_1
XXXXX
TMP_126(uint128) = TMP_125 (c)+ amount_1
Function name: _stake

Name: TMP_126 Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: -1
Final dest type: 0

Name: amount Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_126 Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_126

Name: TMP_126 Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
newDelegated_1(uint128) := TMP_126(uint128)
Function name: _stake
asgn

Name: TMP_126 Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: newDelegated Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
0
Finance type key: (0, -1)
Func: assign
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0
[i]Type for newDelegated

Name: newDelegated Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
typecheckig node...
typecheckig node...
INTERNAL_CALL, DelegatedStaking._transferToContract(address,uint128)(msg.sender,amount_1)
Internal call...
_transferToContract
msg.sender
amount
Function: _transferToContract
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: 0
-100
added
xyz
Function name: _transferToContract
Function Visibility: internal
clearning node...
clearing ir...?
from_1(address) := ϕ(['msg.sender'])
has variable
[i] from cleared

Name: from Function: _transferToContract
Num: 
Den: 
Norm: u
LF: from
Fields: 
Finance Type: undef
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _transferToContract
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
CQT_1(IERC20Upgradeable) := ϕ(['CQT_0'])
has variable
typecheckig node...
from_1(address) := ϕ(['msg.sender'])
Function name: _transferToContract
Phi
[i]Type for from

Name: from Function: _transferToContract
Num: -1
Den: -1
Norm: u
LF: from
Fields: 
Finance Type: undef
done.
amount_1(uint128) := ϕ(['amount_1', 'amount_1'])
Function name: _transferToContract
Phi
[i]Type for amount

Name: amount Function: _transferToContract
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
CQT_1(IERC20Upgradeable) := ϕ(['CQT_0'])
Function name: _transferToContract
Phi
[i]Type for CQT

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_38 = CONVERT this to address
has variable
[i] TMP_38 cleared

Name: TMP_38 Function: _transferToContract
Num: 
Den: 
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
clearing ir...?
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256), arguments:['CQT_1', 'from_1', 'TMP_38', 'amount_1'] 
typecheckig node...
TMP_38 = CONVERT this to address
Function name: _transferToContract
[i]Type for TMP_38

Name: TMP_38 Function: _transferToContract
Num: 
Den: 
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable,address,address,uint256), arguments:['CQT_1', 'from_1', 'TMP_38', 'amount_1'] 
Library Call: safeTransferFrom
done.
WORKLIST iteration 0 for function call "_transferToContract":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _transferToContract
done.
typecheckig node...
TMP_127(bool) = newDelegated_1 <= validatorMaxCap_1
Function name: _stake
testing lt...
lnorm: 0 rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0
[i]Type for TMP_127

Name: TMP_127 Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_128(None) = SOLIDITY_CALL require(bool,string)(TMP_127,Validator max capacity exceeded)
[i]Type for TMP_128

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_23(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: _stake
MEMBER
v
stakings
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_23

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_24(DelegatedStaking.Staking) -> REF_23[msg.sender]
Function name: _stake
INDEX

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _stake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_24

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_1 (-> ['v'])(DelegatedStaking.Staking) := REF_24(DelegatedStaking.Staking)
Function name: _stake
asgn

Name: v.stakings Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for s

Name: s Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
typecheckig node...
TMP_130(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_1,globalExchangeRate_9)
Function name: _stake
Internal call...
_tokensToShares
amount
globalExchangeRate
Function: _tokensToShares
ic
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: 0
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 12
-100
added
xyz
Function name: _tokensToShares
Function Visibility: internal
clearning node...
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
has variable
[i] rate cleared

Name: rate Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
Function name: _tokensToShares
Phi
[i]Type for amount

Name: amount Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
Function name: _tokensToShares
Phi
[i]Type for rate

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _tokensToShares
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99 = CONVERT amount_1 to uint256
has variable
[i] TMP_99 cleared

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_100(uint256) = TMP_99 (c)* divider_5
has variable
[i] TMP_100 cleared

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_101 = CONVERT rate_1 to uint256
has variable
[i] TMP_101 cleared

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
TMP_102(uint256) = TMP_100 (c)/ TMP_101
has variable
[i] TMP_102 cleared

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
clearing ir...?
TMP_103 = CONVERT TMP_102 to uint128
has variable
[i] TMP_103 cleared

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
clearing ir...?
RETURN TMP_103
typecheckig node...
TMP_99 = CONVERT amount_1 to uint256
Function name: _tokensToShares

Name: amount Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_99

Name: TMP_99 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_100(uint256) = TMP_99 (c)* divider_5
Function name: _tokensToShares
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_99 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_100

Name: TMP_100 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_101 = CONVERT rate_1 to uint256
Function name: _tokensToShares

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for TMP_101

Name: TMP_101 Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_102(uint256) = TMP_100 (c)/ TMP_101
Function name: _tokensToShares
lnorm: u rnorm: u
Finance type key: (0, 12)
Func: div
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 12, Left type: 0
Left side: 0, Right side: 12, Checked Ratio: 12
False
Final dest type: 1

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: PIC_38 Function: None
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_102

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_103 = CONVERT TMP_102 to uint128
Function name: _tokensToShares

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_103

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
RETURN TMP_103
RETURN

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
WORKLIST iteration 0 for function call "_tokensToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _tokensToShares

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
___
[i]Type for TMP_130

Name: TMP_130 Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
globalSharesToAdd_1(uint128) := TMP_130(uint128)
Function name: _stake
asgn

Name: TMP_130 Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: globalSharesToAdd Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
u
Finance type key: (1, -1)
Func: assign
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 1
Final dest type: 1
[i]Type for globalSharesToAdd

Name: globalSharesToAdd Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
typecheckig node...
totalGlobalShares_7(uint128) = totalGlobalShares_6 + globalSharesToAdd_1
Function name: _stake

Name: totalGlobalShares Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
initlize checks
;;;
lnorm: u rnorm: u
Finance type key: (1, 1)
Func: add
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 1, Left type: 1
Final dest type: 1

Name: totalGlobalShares Function: global
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: totalGlobalShares Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
typecheckig node...
REF_25(uint128) -> v_1 (-> ['validators']).globalShares
Function name: _stake
MEMBER
v
globalShares
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_25

Name: v.globalShares Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.globalShares Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_2 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_25(-> v_2 (-> ['validators'])) = REF_25 + globalSharesToAdd_1
Function name: _stake

Name: REF_25 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 1, Left type: 1
Final dest type: 1

Name: globalSharesToAdd Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_25 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for REF_25

Name: REF_25 Function: _stake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_25 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_2(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_2 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
newDelegatorSharesN_1(uint128) := 0(uint256)
Function name: _stake
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: newDelegatorSharesN Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newDelegatorSharesN

Name: newDelegatorSharesN Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_26(uint128) -> v_2 (-> ['validators']).totalShares
Function name: _stake
MEMBER
v
totalShares
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: totalShares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_26

Name: v.totalShares Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
v_3 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_2 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_26(-> v_3 (-> ['validators'])) = REF_26 + newDelegatorSharesN_1
Function name: _stake

Name: REF_26 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: newDelegatorSharesN Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_26 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_26

Name: REF_26 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_26 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
validators_3(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_3 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_27(uint128) -> s_1 (-> ['v']).shares
Function name: _stake
MEMBER
s
shares
_stake
s Fields:
staked
shares
^^^

Name: shares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_27

Name: s.shares Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
s_2 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_1 (-> ['v'])"])
Function name: _stake
Phi
[i]Type for s

Name: s Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
REF_27(-> s_2 (-> ['v'])) = REF_27 + newDelegatorSharesN_1
Function name: _stake

Name: REF_27 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: newDelegatorSharesN Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_27 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_27

Name: REF_27 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_27 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
v_5 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_2 (-> ['v'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_28(uint128) -> v_3 (-> ['validators']).delegated
Function name: _stake
MEMBER
v
delegated
_stake
v Fields:
totalShares
disabledEpoch
_address
stakings
staked
globalShares
delegated
exchangeRate
^^^

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_28

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_4 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_3 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_28(-> v_4 (-> ['validators'])) = REF_28 + amount_1
Function name: _stake

Name: REF_28 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: 0
Final dest type: 0

Name: amount Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: REF_28 Function: _stake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
[i]Type for REF_28

Name: REF_28 Function: _stake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: REF_28 Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_4(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_4 (-> ['validators'])"])
Function name: _stake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_29(uint128) -> s_2 (-> ['v']).staked
Function name: _stake
MEMBER
[W] Initializing defined variable to constant
s
staked
_stake
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_29

Name: s.staked Function: _stake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_3 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_2 (-> ['v'])"])
Function name: _stake
Phi
[i]Type for s

Name: s Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
REF_29(-> s_3 (-> ['v'])) = REF_29 + amount_1
Function name: _stake

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: 0
Final dest type: 0

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_29

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_29 Function: _stake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_6 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_3 (-> ['v'])"])
Function name: _stake
Phi
[i]Type for v

Name: v Function: _stake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, disabledEpoch, _address, stakings, staked, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
Emit Staked(validatorId_1,msg.sender,amount_1)
WORKLIST iteration 1 for function call "_stake":
 New undefined nodes- 5
 Old undefined nodes- 5
Saving return values for: _stake
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
FIELDS:
validators Fields:
globalShares
delegated
exchangeRate
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: unstake
Function name: unstake
Function Visibility (test): public
validatorId
Finding type for validatorId...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorId Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
amount
Finding type for amount...
uint128
Check copy_toekn_tuple
(1, -1, 0, None, 0)
----
Type: uint128
uint128
Final Type: uint128

Name: amount Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
[*]Type fetched successfully
-100
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: 0
clearning node...
clearing ir...?
validatorCoolDown_2(uint128) := ϕ(['validatorCoolDown_3', 'validatorCoolDown_0', 'validatorCoolDown_1', 'validatorCoolDown_4'])
has variable
clearing ir...?
delegatorCoolDown_2(uint128) := ϕ(['delegatorCoolDown_0', 'delegatorCoolDown_1', 'delegatorCoolDown_3', 'delegatorCoolDown_4'])
has variable
clearing ir...?
maxCapMultiplier_5(uint128) := ϕ(['maxCapMultiplier_0', 'maxCapMultiplier_7', 'maxCapMultiplier_1', 'maxCapMultiplier_6', 'maxCapMultiplier_4'])
has variable
clearing ir...?
validatorMinStakedRequired_5(uint128) := ϕ(['validatorMinStakedRequired_1', 'validatorMinStakedRequired_4', 'validatorMinStakedRequired_0', 'validatorMinStakedRequired_7', 'validatorMinStakedRequired_6'])
has variable
clearing ir...?
endEpoch_10(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
has variable
clearing ir...?
totalGlobalShares_8(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
has variable
clearing ir...?
globalExchangeRate_11(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
has variable
clearing ir...?
validatorsN_2(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
has variable
clearing ir...?
validators_5(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
has variable
typecheckig node...
validatorCoolDown_2(uint128) := ϕ(['validatorCoolDown_3', 'validatorCoolDown_0', 'validatorCoolDown_1', 'validatorCoolDown_4'])
Function name: unstake
Phi
[i]Type for validatorCoolDown

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
delegatorCoolDown_2(uint128) := ϕ(['delegatorCoolDown_0', 'delegatorCoolDown_1', 'delegatorCoolDown_3', 'delegatorCoolDown_4'])
Function name: unstake
Phi
[i]Type for delegatorCoolDown

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
maxCapMultiplier_5(uint128) := ϕ(['maxCapMultiplier_0', 'maxCapMultiplier_7', 'maxCapMultiplier_1', 'maxCapMultiplier_6', 'maxCapMultiplier_4'])
Function name: unstake
Phi
[i]Type for maxCapMultiplier

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validatorMinStakedRequired_5(uint128) := ϕ(['validatorMinStakedRequired_1', 'validatorMinStakedRequired_4', 'validatorMinStakedRequired_0', 'validatorMinStakedRequired_7', 'validatorMinStakedRequired_6'])
Function name: unstake
Phi
[i]Type for validatorMinStakedRequired

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_10(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
Function name: unstake
Phi
[i]Type for endEpoch

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalGlobalShares_8(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
Function name: unstake
Phi
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
globalExchangeRate_11(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
Function name: unstake
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
validatorsN_2(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
Function name: unstake
Phi
[i]Type for validatorsN

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_5(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: unstake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_132(bool) = validatorId_1 < validatorsN_2
has variable
[i] TMP_132 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_133(None) = SOLIDITY_CALL require(bool,string)(TMP_132,Invalid validator)
typecheckig node...
TMP_132(bool) = validatorId_1 < validatorsN_2
Function name: unstake
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_132

Name: TMP_132 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_133(None) = SOLIDITY_CALL require(bool,string)(TMP_132,Invalid validator)
[i]Type for TMP_133

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_30(DelegatedStaking.Validator) -> validators_5[validatorId_1]
has variable
clearing ir...?
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_30(DelegatedStaking.Validator)
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_30(DelegatedStaking.Validator) -> validators_5[validatorId_1]
Function name: unstake
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_30

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_30(DelegatedStaking.Validator)
Function name: unstake
asgn

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef

Name: v Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_31(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
has variable
clearing ir...?
REF_32(DelegatedStaking.Staking) -> REF_31[msg.sender]
has variable
clearing ir...?
s_1 (-> ['v'])(DelegatedStaking.Staking) := REF_32(DelegatedStaking.Staking)
has variable
[i] s cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_31(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: unstake
MEMBER
v
stakings
unstake
v Fields:
globalShares
delegated
exchangeRate
^^^
[i]Type for REF_31

Name: v.stakings Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_32(DelegatedStaking.Staking) -> REF_31[msg.sender]
Function name: unstake
INDEX

Name: v.stakings Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: unstake
not variable
REF_31
[i]Type for REF_32

Name: v.stakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_32(DelegatedStaking.Staking) -> REF_31[msg.sender]
XXXXX
s_1 (-> ['v'])(DelegatedStaking.Staking) := REF_32(DelegatedStaking.Staking)
Function name: unstake
asgn

Name: v.stakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for s

Name: s Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_33(uint128) -> s_1 (-> ['v']).staked
has variable
clearing ir...?
TMP_134(bool) = REF_33 >= amount_1
has variable
[i] TMP_134 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,Staked < amount provided)
typecheckig node...
REF_33(uint128) -> s_1 (-> ['v']).staked
Function name: unstake
MEMBER
s
staked
unstake
s Fields:
^^^
[i]Type for REF_33

Name: s.staked Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_134(bool) = REF_33 >= amount_1
Function name: unstake
testing gt...
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: -1
Final dest type: 0

Name: amount Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_134 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_134

Name: TMP_134 Function: unstake
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
This IR caused addback:
TMP_134(bool) = REF_33 >= amount_1
XXXXX
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,Staked < amount provided)
[i]Type for TMP_135

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_34(address) -> v_1 (-> ['validators'])._address
has variable
clearing ir...?
TMP_136(bool) = msg.sender == REF_34
has variable
[i] TMP_136 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
isValidator_1(bool) := TMP_136(bool)
has variable
[i] isValidator cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_34(address) -> v_1 (-> ['validators'])._address
Function name: unstake
MEMBER
v
_address
unstake
v Fields:
stakings
globalShares
delegated
exchangeRate
^^^
[i]Type for REF_34

Name: v._address Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_136(bool) = msg.sender == REF_34
Function name: unstake
[i]Type for TMP_136

Name: TMP_136 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
isValidator_1(bool) := TMP_136(bool)
Function name: unstake
asgn

Name: TMP_136 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: isValidator Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for isValidator

Name: isValidator Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
isValidator_1(bool) := TMP_136(bool)
XXXXX
clearning node...
clearing ir...?
REF_35(uint128) -> v_1 (-> ['validators']).exchangeRate
has variable
clearing ir...?
TMP_137(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_1,REF_35)
has variable
[i] TMP_137 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
validatorSharesRemove_1(uint128) := TMP_137(uint128)
has variable
[i] validatorSharesRemove cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_35(uint128) -> v_1 (-> ['validators']).exchangeRate
Function name: unstake
MEMBER
v
exchangeRate
unstake
v Fields:
stakings
_address
globalShares
delegated
exchangeRate
^^^

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for REF_35

Name: v.exchangeRate Function: unstake
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: v.exchangeRate Function: unstake
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_137(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_1,REF_35)
Function name: unstake
Internal call...
_tokensToShares
amount
REF_35
Function: _tokensToShares
ic
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: 0
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 12
-100
added
xyz
Function name: _tokensToShares
Function Visibility: internal
clearning node...
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
has variable
[i] rate cleared

Name: rate Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
Function name: _tokensToShares
Phi
[i]Type for amount

Name: amount Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
Function name: _tokensToShares
Phi
[i]Type for rate

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _tokensToShares
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99 = CONVERT amount_1 to uint256
has variable
[i] TMP_99 cleared

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_100(uint256) = TMP_99 (c)* divider_5
has variable
[i] TMP_100 cleared

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_101 = CONVERT rate_1 to uint256
has variable
[i] TMP_101 cleared

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
TMP_102(uint256) = TMP_100 (c)/ TMP_101
has variable
[i] TMP_102 cleared

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
clearing ir...?
TMP_103 = CONVERT TMP_102 to uint128
has variable
[i] TMP_103 cleared

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
clearing ir...?
RETURN TMP_103
typecheckig node...
TMP_99 = CONVERT amount_1 to uint256
Function name: _tokensToShares

Name: amount Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_99

Name: TMP_99 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_100(uint256) = TMP_99 (c)* divider_5
Function name: _tokensToShares
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_99 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_100

Name: TMP_100 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_101 = CONVERT rate_1 to uint256
Function name: _tokensToShares

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for TMP_101

Name: TMP_101 Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_102(uint256) = TMP_100 (c)/ TMP_101
Function name: _tokensToShares
lnorm: u rnorm: u
Finance type key: (0, 12)
Func: div
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 12, Left type: 0
Left side: 0, Right side: 12, Checked Ratio: 12
False
Final dest type: 1

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: PIC_41 Function: None
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_102

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_103 = CONVERT TMP_102 to uint128
Function name: _tokensToShares

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_103

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
RETURN TMP_103
RETURN

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
WORKLIST iteration 0 for function call "_tokensToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _tokensToShares

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
___
[i]Type for TMP_137

Name: TMP_137 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
validatorSharesRemove_1(uint128) := TMP_137(uint128)
Function name: unstake
asgn

Name: TMP_137 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: validatorSharesRemove Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (1, -1)
Func: assign
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 1
Final dest type: 1
[i]Type for validatorSharesRemove

Name: validatorSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
clearning node...
clearing ir...?
TMP_138(bool) = validatorSharesRemove_1 > 0
has variable
[i] TMP_138 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_139(None) = SOLIDITY_CALL require(bool,string)(TMP_138,Unstake amount is too small)
typecheckig node...
TMP_138(bool) = validatorSharesRemove_1 > 0
Function name: unstake
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_138

Name: TMP_138 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_139(None) = SOLIDITY_CALL require(bool,string)(TMP_138,Unstake amount is too small)
[i]Type for TMP_139

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_36(uint128) -> v_1 (-> ['validators']).disabledEpoch
has variable
clearing ir...?
TMP_140(bool) = REF_36 == 0
has variable
[i] TMP_140 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_140
typecheckig node...
REF_36(uint128) -> v_1 (-> ['validators']).disabledEpoch
Function name: unstake
MEMBER
v
disabledEpoch
unstake
v Fields:
stakings
_address
globalShares
delegated
exchangeRate
^^^
[i]Type for REF_36

Name: v.disabledEpoch Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_140(bool) = REF_36 == 0
Function name: unstake
[i]Type for TMP_140

Name: TMP_140 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_140
Condition...
Conidtion: 
TMP_140
TMP_140
clearning node...
clearing ir...?
v_5 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_4 (-> ['validators'])", "v_1 (-> ['validators'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
v_5 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_4 (-> ['validators'])", "v_1 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_141(bool) = endEpoch_11 > block.number
has variable
[i] TMP_141 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_142(bool) = isValidator_1 && TMP_141
has variable
[i] TMP_142 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_142
typecheckig node...
TMP_141(bool) = endEpoch_11 > block.number
Function name: unstake
testing gt...
block.number
[i]Type for TMP_141

Name: TMP_141 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_142(bool) = isValidator_1 && TMP_141
Function name: unstake
[i]Type for TMP_142

Name: TMP_142 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_142
Condition...
Conidtion: 
TMP_142
TMP_142
clearning node...
clearing ir...?
REF_37(uint128) -> s_1 (-> ['v']).staked
has variable
clearing ir...?
TMP_143(uint128) = REF_37 (c)- amount_1
has variable
[i] TMP_143 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
newValidatorStaked_1(uint128) := TMP_143(uint128)
has variable
[i] newValidatorStaked cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_37(uint128) -> s_1 (-> ['v']).staked
Function name: unstake
MEMBER
s
staked
unstake
s Fields:
staked
^^^

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_37

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_143(uint128) = REF_37 (c)- amount_1
Function name: unstake
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: -1
Final dest type: 0

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: amount Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_143 Function: unstake
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_143

Name: TMP_143 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
newValidatorStaked_1(uint128) := TMP_143(uint128)
Function name: unstake
asgn

Name: TMP_143 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: newValidatorStaked Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (0, -1)
Func: assign
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0
[i]Type for newValidatorStaked

Name: newValidatorStaked Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
clearning node...
clearing ir...?
REF_43(uint128) -> s_1 (-> ['v']).shares
has variable
clearing ir...?
s_2 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_1 (-> ['v'])"])
has variable
[i] s cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_43(-> s_2 (-> ['v'])) = REF_43 - validatorSharesRemove_1
has variable
clearing ir...?
v_8 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_2 (-> ['v'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_43(uint128) -> s_1 (-> ['v']).shares
Function name: unstake
MEMBER
s
shares
unstake
s Fields:
staked
^^^
[i]Type for REF_43

Name: s.shares Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_2 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_1 (-> ['v'])"])
Function name: unstake
Phi
[i]Type for s

Name: s Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: shares
Finance Type: undef
done.
REF_43(-> s_2 (-> ['v'])) = REF_43 - validatorSharesRemove_1
Function name: unstake
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 1, Left type: 1
Final dest type: 1

Name: REF_43 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: validatorSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: validatorSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_43 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for REF_43

Name: REF_43 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_43 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_43(-> s_2 (-> ['v'])) = REF_43 - validatorSharesRemove_1
XXXXX
v_8 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_2 (-> ['v'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_44(uint128) -> s_2 (-> ['v']).staked
has variable
clearing ir...?
s_3 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_2 (-> ['v'])"])
has variable
[i] s cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_44(-> s_3 (-> ['v'])) = REF_44 - amount_1
has variable
clearing ir...?
v_9 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_3 (-> ['v'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_44(uint128) -> s_2 (-> ['v']).staked
Function name: unstake
MEMBER
s
staked
unstake
s Fields:
shares
^^^
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint128
uint128
Final Type: uint128
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: None
None
Final Type: None
[i]Type for REF_44

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_3 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_2 (-> ['v'])"])
Function name: unstake
Phi
[i]Type for s

Name: s Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
REF_44(-> s_3 (-> ['v'])) = REF_44 - amount_1
Function name: unstake
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: 0
Final dest type: 0

Name: REF_44 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: amount Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: amount Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: REF_44 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
[i]Type for REF_44

Name: REF_44 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: REF_44 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_9 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_3 (-> ['v'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_144(uint128) = newValidatorStaked_1 (c)* maxCapMultiplier_6
has variable
[i] TMP_144 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
newValidatorMaxCap_1(uint128) := TMP_144(uint128)
has variable
[i] newValidatorMaxCap cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_144(uint128) = newValidatorStaked_1 (c)* maxCapMultiplier_6
Function name: unstake
testing mul...
lnorm: 0 rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: newValidatorStaked Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_144 Function: unstake
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_144

Name: TMP_144 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
newValidatorMaxCap_1(uint128) := TMP_144(uint128)
Function name: unstake
asgn

Name: TMP_144 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: newValidatorMaxCap Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (0, -1)
Func: assign
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0
[i]Type for newValidatorMaxCap

Name: newValidatorMaxCap Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
clearning node...
clearing ir...?
REF_38(uint128) -> v_1 (-> ['validators']).delegated
has variable
clearing ir...?
REF_39(uint128) -> s_1 (-> ['v']).staked
has variable
clearing ir...?
TMP_145(uint128) = REF_38 (c)- REF_39
has variable
[i] TMP_145 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
delegated_1(uint128) := TMP_145(uint128)
has variable
[i] delegated cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_38(uint128) -> v_1 (-> ['validators']).delegated
Function name: unstake
MEMBER
v
delegated
unstake
v Fields:
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_38

Name: v.delegated Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_39(uint128) -> s_1 (-> ['v']).staked
Function name: unstake
MEMBER
s
staked
unstake
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_39

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_145(uint128) = REF_38 (c)- REF_39
Function name: unstake
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: v.delegated Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_145 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_145

Name: TMP_145 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
delegated_1(uint128) := TMP_145(uint128)
Function name: unstake
asgn

Name: TMP_145 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for delegated

Name: delegated Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_50(uint128) -> v_5 (-> ['validators']).disabledEpoch
has variable
clearing ir...?
TMP_160(bool) = REF_50 != 0
has variable
[i] TMP_160 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_160
typecheckig node...
REF_50(uint128) -> v_5 (-> ['validators']).disabledEpoch
Function name: unstake
MEMBER
v
disabledEpoch
unstake
v Fields:
globalShares
delegated
exchangeRate
^^^
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint128
uint128
Final Type: uint128
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: None
None
Final Type: None
[i]Type for REF_50

Name: v.disabledEpoch Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_160(bool) = REF_50 != 0
Function name: unstake
[i]Type for TMP_160

Name: TMP_160 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_160
Condition...
Conidtion: 
TMP_160
TMP_160
clearning node...
clearing ir...?
TMP_146(bool) = delegated_1 <= newValidatorMaxCap_1
has variable
[i] TMP_146 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_147(None) = SOLIDITY_CALL require(bool,string)(TMP_146,Cannot unstake beyond max cap)
typecheckig node...
TMP_146(bool) = delegated_1 <= newValidatorMaxCap_1
Function name: unstake
testing lt...
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: -1
Final dest type: 0
[i]Type for TMP_146

Name: TMP_146 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_147(None) = SOLIDITY_CALL require(bool,string)(TMP_146,Cannot unstake beyond max cap)
[i]Type for TMP_147

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_150(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_1,globalExchangeRate_12)
has variable
[i] TMP_150 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
globalSharesRemove_1(uint128) := TMP_150(uint128)
has variable
[i] globalSharesRemove cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_150(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_1,globalExchangeRate_12)
Function name: unstake
Internal call...
_tokensToShares
amount
globalExchangeRate
Function: _tokensToShares
ic
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: 0
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 12
-100
added
xyz
Function name: _tokensToShares
Function Visibility: internal
clearning node...
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
has variable
[i] rate cleared

Name: rate Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
Function name: _tokensToShares
Phi
[i]Type for amount

Name: amount Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
Function name: _tokensToShares
Phi
[i]Type for rate

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _tokensToShares
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99 = CONVERT amount_1 to uint256
has variable
[i] TMP_99 cleared

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_100(uint256) = TMP_99 (c)* divider_5
has variable
[i] TMP_100 cleared

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_101 = CONVERT rate_1 to uint256
has variable
[i] TMP_101 cleared

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
TMP_102(uint256) = TMP_100 (c)/ TMP_101
has variable
[i] TMP_102 cleared

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
clearing ir...?
TMP_103 = CONVERT TMP_102 to uint128
has variable
[i] TMP_103 cleared

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
clearing ir...?
RETURN TMP_103
typecheckig node...
TMP_99 = CONVERT amount_1 to uint256
Function name: _tokensToShares

Name: amount Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_99

Name: TMP_99 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_100(uint256) = TMP_99 (c)* divider_5
Function name: _tokensToShares
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_99 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_100

Name: TMP_100 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_101 = CONVERT rate_1 to uint256
Function name: _tokensToShares

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for TMP_101

Name: TMP_101 Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_102(uint256) = TMP_100 (c)/ TMP_101
Function name: _tokensToShares
lnorm: u rnorm: u
Finance type key: (0, 12)
Func: div
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 12, Left type: 0
Left side: 0, Right side: 12, Checked Ratio: 12
False
Final dest type: 1

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: PIC_45 Function: None
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_102

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_103 = CONVERT TMP_102 to uint128
Function name: _tokensToShares

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_103

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
RETURN TMP_103
RETURN

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
WORKLIST iteration 0 for function call "_tokensToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _tokensToShares

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
___
[i]Type for TMP_150

Name: TMP_150 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
globalSharesRemove_1(uint128) := TMP_150(uint128)
Function name: unstake
asgn

Name: TMP_150 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: globalSharesRemove Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (1, -1)
Func: assign
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 1
Final dest type: 1
[i]Type for globalSharesRemove

Name: globalSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
clearning node...
clearing ir...?
REF_51(uint128) -> v_5 (-> ['validators']).disabledEpoch
has variable
clearing ir...?
coolDownEnd_2(uint128) := REF_51(uint128)
has variable
[i] coolDownEnd cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_51(uint128) -> v_5 (-> ['validators']).disabledEpoch
Function name: unstake
MEMBER
v
disabledEpoch
unstake
v Fields:
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_51

Name: v.disabledEpoch Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
coolDownEnd_2(uint128) := REF_51(uint128)
Function name: unstake
asgn

Name: v.disabledEpoch Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for coolDownEnd

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_148(bool) = newValidatorStaked_1 >= validatorMinStakedRequired_6
has variable
[i] TMP_148 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_149(None) = SOLIDITY_CALL require(bool,string)(TMP_148,Unstake > min staked required)
typecheckig node...
TMP_148(bool) = newValidatorStaked_1 >= validatorMinStakedRequired_6
Function name: unstake
testing gt...
lnorm: 0 rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0
[i]Type for TMP_148

Name: TMP_148 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_149(None) = SOLIDITY_CALL require(bool,string)(TMP_148,Unstake > min staked required)
[i]Type for TMP_149

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_161 = CONVERT block.number to uint128
has variable
[i] TMP_161 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
coolDownEnd_1(uint128) := TMP_161(uint128)
has variable
[i] coolDownEnd cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_161 = CONVERT block.number to uint128
Function name: unstake
[i]Type for TMP_161

Name: TMP_161 Function: unstake
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
coolDownEnd_1(uint128) := TMP_161(uint128)
Function name: unstake
asgn

Name: TMP_161 Function: unstake
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef

Name: coolDownEnd Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for coolDownEnd

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_151(bool) = globalSharesRemove_1 > 0
has variable
[i] TMP_151 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_152(None) = SOLIDITY_CALL require(bool,string)(TMP_151,Unstake amount is too small)
typecheckig node...
TMP_151(bool) = globalSharesRemove_1 > 0
Function name: unstake
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_151

Name: TMP_151 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_152(None) = SOLIDITY_CALL require(bool,string)(TMP_151,Unstake amount is too small)
[i]Type for TMP_152

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
coolDownEnd_3(uint128) := ϕ(['coolDownEnd_1', 'coolDownEnd_2'])
has variable
[i] coolDownEnd cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
coolDownEnd_3(uint128) := ϕ(['coolDownEnd_1', 'coolDownEnd_2'])
Function name: unstake
Phi
[i]Type for coolDownEnd

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
totalGlobalShares_11(uint128) = totalGlobalShares_10 - globalSharesRemove_1
has variable
typecheckig node...
totalGlobalShares_11(uint128) = totalGlobalShares_10 - globalSharesRemove_1
Function name: unstake
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 1, Left type: -1
Final dest type: 1

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: globalSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: totalGlobalShares Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
clearning node...
clearing ir...?
CONDITION isValidator_1
typecheckig node...
CONDITION isValidator_1
Condition...
Conidtion: 
isValidator_1
isValidator_1
clearning node...
clearing ir...?
REF_40(uint128) -> v_1 (-> ['validators']).globalShares
has variable
clearing ir...?
v_2 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_40(-> v_2 (-> ['validators'])) = REF_40 - globalSharesRemove_1
has variable
clearing ir...?
validators_7(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_2 (-> ['validators'])"])
has variable
typecheckig node...
REF_40(uint128) -> v_1 (-> ['validators']).globalShares
Function name: unstake
MEMBER
v
globalShares
unstake
v Fields:
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_40

Name: v.globalShares Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.globalShares Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_2 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_40(-> v_2 (-> ['validators'])) = REF_40 - globalSharesRemove_1
Function name: unstake
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 1, Left type: 1
Final dest type: 1

Name: REF_40 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: globalSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: globalSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_40 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for REF_40

Name: REF_40 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_40 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_7(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_2 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
coolDownEnd_4(uint128) = coolDownEnd_3 + delegatorCoolDown_4
has variable
[i] coolDownEnd cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
coolDownEnd_4(uint128) = coolDownEnd_3 + delegatorCoolDown_4
Function name: unstake

Name: coolDownEnd Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for coolDownEnd

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_41(uint128) -> v_2 (-> ['validators']).totalShares
has variable
clearing ir...?
v_3 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_2 (-> ['validators'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_41(-> v_3 (-> ['validators'])) = REF_41 - validatorSharesRemove_1
has variable
clearing ir...?
validators_8(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_3 (-> ['validators'])"])
has variable
typecheckig node...
REF_41(uint128) -> v_2 (-> ['validators']).totalShares
Function name: unstake
MEMBER
v
totalShares
unstake
v Fields:
globalShares
delegated
exchangeRate
^^^
[i]Type for REF_41

Name: v.totalShares Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_3 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_2 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_41(-> v_3 (-> ['validators'])) = REF_41 - validatorSharesRemove_1
Function name: unstake
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 1, Left type: 1
Final dest type: 1

Name: REF_41 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: validatorSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: validatorSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_41 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for REF_41

Name: REF_41 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_41 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_41(-> v_3 (-> ['validators'])) = REF_41 - validatorSharesRemove_1
XXXXX
validators_8(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_3 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
coolDownEnd_5(uint128) = coolDownEnd_3 + validatorCoolDown_4
has variable
[i] coolDownEnd cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
coolDownEnd_5(uint128) = coolDownEnd_3 + validatorCoolDown_4
Function name: unstake

Name: coolDownEnd Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for coolDownEnd

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
coolDownEnd_6(uint128) := ϕ(['coolDownEnd_4', 'coolDownEnd_5'])
has variable
[i] coolDownEnd cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
coolDownEnd_6(uint128) := ϕ(['coolDownEnd_4', 'coolDownEnd_5'])
Function name: unstake
Phi
[i]Type for coolDownEnd

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
Internal call...
_updateGlobalExchangeRate
Function: _updateGlobalExchangeRate
ic
Internal cal param_cache
0
0
done.
clearning node...
clearing ir...?
REF_42(uint128) -> v_3 (-> ['validators']).delegated
has variable
clearing ir...?
v_4 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_3 (-> ['validators'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_42(-> v_4 (-> ['validators'])) = REF_42 - amount_1
has variable
clearing ir...?
validators_9(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_4 (-> ['validators'])"])
has variable
typecheckig node...
REF_42(uint128) -> v_3 (-> ['validators']).delegated
Function name: unstake
MEMBER
v
delegated
unstake
v Fields:
totalShares
globalShares
delegated
exchangeRate
^^^

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_42

Name: v.delegated Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_4 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_3 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_42(-> v_4 (-> ['validators'])) = REF_42 - amount_1
Function name: unstake
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: 0
Final dest type: 0

Name: REF_42 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: amount Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: amount Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: REF_42 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
[i]Type for REF_42

Name: REF_42 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: REF_42 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_9(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_4 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._updateValidator(DelegatedStaking.Validator)(v_5 (-> ['validators']))
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateValidator(DelegatedStaking.Validator)(v_5 (-> ['validators']))
Internal call...
_updateValidator
v
Function: _updateValidator
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: [<slither.core.variables.variable.Variable object at 0x7fa332f5e7f0>, totalShares, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333b54fd0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333ae0490>, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333ae0610>]
    fintype: -1
0
0
done.
clearning node...
clearing ir...?
REF_45(mapping(address => DelegatedStaking.Unstaking[])) -> v_5 (-> ['validators']).unstakings
has variable
clearing ir...?
REF_46(DelegatedStaking.Unstaking[]) -> REF_45[msg.sender]
has variable
clearing ir...?
TMP_155 = new Unstaking(coolDownEnd_6,amount_1)
clearing ir...?
REF_48 -> LENGTH REF_46
clearing ir...?
TMP_157(uint256) := REF_48(uint256)
has variable
[i] TMP_157 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_158(uint256) = TMP_157 (c)+ 1
has variable
[i] TMP_158 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
v_6 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_5 (-> ['validators'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_48 (->v_7 (-> ['validators'])) := TMP_158(uint256)
has variable
clearing ir...?
REF_49(DelegatedStaking.Unstaking) -> REF_46[TMP_157]
has variable
clearing ir...?
v_7 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_6 (-> ['validators'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_49 (->v_7 (-> ['validators'])) := TMP_155(DelegatedStaking.Unstaking)
has variable
clearing ir...?
validators_6(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_7 (-> ['validators'])"])
has variable
typecheckig node...
REF_45(mapping(address => DelegatedStaking.Unstaking[])) -> v_5 (-> ['validators']).unstakings
Function name: unstake
MEMBER
v
unstakings
unstake
v Fields:
disabledEpoch
totalShares
globalShares
delegated
exchangeRate
^^^
[i]Type for REF_45

Name: v.unstakings Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.unstakings Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: unstakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_46(DelegatedStaking.Unstaking[]) -> REF_45[msg.sender]
Function name: unstake
INDEX

Name: v.unstakings Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: unstake
not variable
REF_45
[i]Type for REF_46

Name: v.unstakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_46(DelegatedStaking.Unstaking[]) -> REF_45[msg.sender]
XXXXX
TMP_155 = new Unstaking(coolDownEnd_6,amount_1)
[i]Type for TMP_155

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_48 -> LENGTH REF_46
[i]Type for REF_48

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_157(uint256) := REF_48(uint256)
Function name: unstake
asgn

Name: REF_48 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_157 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_157

Name: TMP_157 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_157(uint256) := REF_48(uint256)
XXXXX
TMP_158(uint256) = TMP_157 (c)+ 1
Function name: unstake
val: 1

Name: TMP_158 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_158 Function: unstake
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_158

Name: TMP_158 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_158(uint256) = TMP_157 (c)+ 1
XXXXX
v_6 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_5 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_48 (->v_7 (-> ['validators'])) := TMP_158(uint256)
Function name: unstake
asgn

Name: TMP_158 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_48 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_48

Name: REF_48 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_49(DelegatedStaking.Unstaking) -> REF_46[TMP_157]
Function name: unstake
INDEX

Name: v.unstakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: unstake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_49

Name: v.unstakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_7 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_6 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, totalShares, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_49 (->v_7 (-> ['validators'])) := TMP_155(DelegatedStaking.Unstaking)
Function name: unstake
asgn

Name: TMP_155 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_49 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_49

Name: REF_49 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_49 (->v_7 (-> ['validators'])) := TMP_155(DelegatedStaking.Unstaking)
XXXXX
validators_6(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_7 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit Unstaked(validatorId_1,msg.sender,amount_1)
typecheckig node...
Emit Unstaked(validatorId_1,msg.sender,amount_1)
WORKLIST iteration 0 for function call "unstake":
 New undefined nodes- 6
 Old undefined nodes- 0
typecheckig node...
validatorCoolDown_2(uint128) := ϕ(['validatorCoolDown_3', 'validatorCoolDown_0', 'validatorCoolDown_1', 'validatorCoolDown_4'])
Function name: unstake
Phi
[i]Type for validatorCoolDown

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
delegatorCoolDown_2(uint128) := ϕ(['delegatorCoolDown_0', 'delegatorCoolDown_1', 'delegatorCoolDown_3', 'delegatorCoolDown_4'])
Function name: unstake
Phi
[i]Type for delegatorCoolDown

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
maxCapMultiplier_5(uint128) := ϕ(['maxCapMultiplier_0', 'maxCapMultiplier_7', 'maxCapMultiplier_1', 'maxCapMultiplier_6', 'maxCapMultiplier_4'])
Function name: unstake
Phi
[i]Type for maxCapMultiplier

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validatorMinStakedRequired_5(uint128) := ϕ(['validatorMinStakedRequired_1', 'validatorMinStakedRequired_4', 'validatorMinStakedRequired_0', 'validatorMinStakedRequired_7', 'validatorMinStakedRequired_6'])
Function name: unstake
Phi
[i]Type for validatorMinStakedRequired

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_10(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
Function name: unstake
Phi
[i]Type for endEpoch

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalGlobalShares_8(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
Function name: unstake
Phi
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: global
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
globalExchangeRate_11(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
Function name: unstake
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
validatorsN_2(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
Function name: unstake
Phi
[i]Type for validatorsN

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_5(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: unstake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
TMP_132(bool) = validatorId_1 < validatorsN_2
Function name: unstake
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_132

Name: TMP_132 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_133(None) = SOLIDITY_CALL require(bool,string)(TMP_132,Invalid validator)
[i]Type for TMP_133

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_30(DelegatedStaking.Validator) -> validators_5[validatorId_1]
Function name: unstake
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_30

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_30(DelegatedStaking.Validator)
Function name: unstake
asgn

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: stakings, _address, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: stakings, _address, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_31(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: unstake
MEMBER
v
stakings
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_31

Name: v.stakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_32(DelegatedStaking.Staking) -> REF_31[msg.sender]
Function name: unstake
INDEX

Name: v.stakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: unstake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_32

Name: v.stakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_1 (-> ['v'])(DelegatedStaking.Staking) := REF_32(DelegatedStaking.Staking)
Function name: unstake
asgn

Name: v.stakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for s

Name: s Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
typecheckig node...
REF_33(uint128) -> s_1 (-> ['v']).staked
Function name: unstake
MEMBER
s
staked
unstake
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_33

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_134(bool) = REF_33 >= amount_1
Function name: unstake
testing gt...
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: -1
Final dest type: 0
[W] Initializing defined variable to constant
[i]Type for TMP_134

Name: TMP_134 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,Staked < amount provided)
[i]Type for TMP_135

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_34(address) -> v_1 (-> ['validators'])._address
Function name: unstake
MEMBER
v
_address
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_34

Name: v._address Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_136(bool) = msg.sender == REF_34
Function name: unstake
[i]Type for TMP_136

Name: TMP_136 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
isValidator_1(bool) := TMP_136(bool)
Function name: unstake
asgn

Name: TMP_136 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: isValidator Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for isValidator

Name: isValidator Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
isValidator_1(bool) := TMP_136(bool)
XXXXX
typecheckig node...
REF_35(uint128) -> v_1 (-> ['validators']).exchangeRate
Function name: unstake
MEMBER
v
exchangeRate
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for REF_35

Name: v.exchangeRate Function: unstake
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: v.exchangeRate Function: unstake
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_137(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_1,REF_35)
Function name: unstake
Internal call...
_tokensToShares
amount
REF_35
Function: _tokensToShares
ic
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: 0
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 12
-100
added
xyz
Function name: _tokensToShares
Function Visibility: internal
clearning node...
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
has variable
[i] rate cleared

Name: rate Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
Function name: _tokensToShares
Phi
[i]Type for amount

Name: amount Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
Function name: _tokensToShares
Phi
[i]Type for rate

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _tokensToShares
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99 = CONVERT amount_1 to uint256
has variable
[i] TMP_99 cleared

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_100(uint256) = TMP_99 (c)* divider_5
has variable
[i] TMP_100 cleared

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_101 = CONVERT rate_1 to uint256
has variable
[i] TMP_101 cleared

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
TMP_102(uint256) = TMP_100 (c)/ TMP_101
has variable
[i] TMP_102 cleared

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
clearing ir...?
TMP_103 = CONVERT TMP_102 to uint128
has variable
[i] TMP_103 cleared

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
clearing ir...?
RETURN TMP_103
typecheckig node...
TMP_99 = CONVERT amount_1 to uint256
Function name: _tokensToShares

Name: amount Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_99

Name: TMP_99 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_100(uint256) = TMP_99 (c)* divider_5
Function name: _tokensToShares
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_99 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_100

Name: TMP_100 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_101 = CONVERT rate_1 to uint256
Function name: _tokensToShares

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for TMP_101

Name: TMP_101 Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_102(uint256) = TMP_100 (c)/ TMP_101
Function name: _tokensToShares
lnorm: u rnorm: u
Finance type key: (0, 12)
Func: div
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 12, Left type: 0
Left side: 0, Right side: 12, Checked Ratio: 12
False
Final dest type: 1

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: PIC_47 Function: None
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_102

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_103 = CONVERT TMP_102 to uint128
Function name: _tokensToShares

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_103

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
RETURN TMP_103
RETURN

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
WORKLIST iteration 0 for function call "_tokensToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _tokensToShares

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
___
[i]Type for TMP_137

Name: TMP_137 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
validatorSharesRemove_1(uint128) := TMP_137(uint128)
Function name: unstake
asgn

Name: TMP_137 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: validatorSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
u
Finance type key: (1, -1)
Func: assign
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 1
Final dest type: 1
[i]Type for validatorSharesRemove

Name: validatorSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
typecheckig node...
TMP_138(bool) = validatorSharesRemove_1 > 0
Function name: unstake
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_138

Name: TMP_138 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_139(None) = SOLIDITY_CALL require(bool,string)(TMP_138,Unstake amount is too small)
[i]Type for TMP_139

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_36(uint128) -> v_1 (-> ['validators']).disabledEpoch
Function name: unstake
MEMBER
v
disabledEpoch
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_36

Name: v.disabledEpoch Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_140(bool) = REF_36 == 0
Function name: unstake
[i]Type for TMP_140

Name: TMP_140 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_140
Condition...
Conidtion: 
TMP_140
TMP_140
typecheckig node...
v_5 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_4 (-> ['validators'])", "v_1 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, totalShares, stakings, _address, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
TMP_141(bool) = endEpoch_11 > block.number
Function name: unstake
testing gt...
block.number
[i]Type for TMP_141

Name: TMP_141 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_142(bool) = isValidator_1 && TMP_141
Function name: unstake
[i]Type for TMP_142

Name: TMP_142 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_142
Condition...
Conidtion: 
TMP_142
TMP_142
typecheckig node...
REF_37(uint128) -> s_1 (-> ['v']).staked
Function name: unstake
MEMBER
s
staked
unstake
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_37

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_143(uint128) = REF_37 (c)- amount_1
Function name: unstake
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: -1
Final dest type: 0

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: amount Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_143 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_143

Name: TMP_143 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
newValidatorStaked_1(uint128) := TMP_143(uint128)
Function name: unstake
asgn

Name: TMP_143 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: newValidatorStaked Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
0
Finance type key: (0, -1)
Func: assign
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0
[i]Type for newValidatorStaked

Name: newValidatorStaked Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
typecheckig node...
REF_43(uint128) -> s_1 (-> ['v']).shares
Function name: unstake
MEMBER
[W] Initializing defined variable to constant
s
shares
unstake
s Fields:
staked
shares
^^^

Name: shares Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_43

Name: s.shares Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: shares Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_2 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_1 (-> ['v'])"])
Function name: unstake
Phi
[i]Type for s

Name: s Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
REF_43(-> s_2 (-> ['v'])) = REF_43 - validatorSharesRemove_1
Function name: unstake
lnorm: u rnorm: u
Finance type key: (1, 1)
Func: sub
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 1, Left type: 1
Final dest type: 1

Name: REF_43 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: validatorSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_43 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_43 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for REF_43

Name: REF_43 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_43 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: shares Function: None
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_8 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_2 (-> ['v'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, totalShares, stakings, _address, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_44(uint128) -> s_2 (-> ['v']).staked
Function name: unstake
MEMBER
s
staked
unstake
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_44

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_3 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_2 (-> ['v'])"])
Function name: unstake
Phi
[i]Type for s

Name: s Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
REF_44(-> s_3 (-> ['v'])) = REF_44 - amount_1
Function name: unstake
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: 0
Final dest type: 0

Name: REF_44 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: amount Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: amount Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: REF_44 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
[i]Type for REF_44

Name: REF_44 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: REF_44 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_9 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_3 (-> ['v'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, totalShares, stakings, _address, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
TMP_144(uint128) = newValidatorStaked_1 (c)* maxCapMultiplier_6
Function name: unstake
testing mul...
lnorm: 0 rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: newValidatorStaked Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_144 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_144

Name: TMP_144 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
newValidatorMaxCap_1(uint128) := TMP_144(uint128)
Function name: unstake
asgn

Name: TMP_144 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: newValidatorMaxCap Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
0
Finance type key: (0, -1)
Func: assign
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0
[i]Type for newValidatorMaxCap

Name: newValidatorMaxCap Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
typecheckig node...
REF_38(uint128) -> v_1 (-> ['validators']).delegated
Function name: unstake
MEMBER
v
delegated
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_38

Name: v.delegated Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_39(uint128) -> s_1 (-> ['v']).staked
Function name: unstake
MEMBER
s
staked
unstake
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_39

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_145(uint128) = REF_38 (c)- REF_39
Function name: unstake
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: v.delegated Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_145 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_145

Name: TMP_145 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
delegated_1(uint128) := TMP_145(uint128)
Function name: unstake
asgn

Name: TMP_145 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for delegated

Name: delegated Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
REF_50(uint128) -> v_5 (-> ['validators']).disabledEpoch
Function name: unstake
MEMBER
v
disabledEpoch
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_50

Name: v.disabledEpoch Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_160(bool) = REF_50 != 0
Function name: unstake
[i]Type for TMP_160

Name: TMP_160 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_160
Condition...
Conidtion: 
TMP_160
TMP_160
typecheckig node...
TMP_146(bool) = delegated_1 <= newValidatorMaxCap_1
Function name: unstake
testing lt...
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: -1
Final dest type: 0
[i]Type for TMP_146

Name: TMP_146 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_147(None) = SOLIDITY_CALL require(bool,string)(TMP_146,Cannot unstake beyond max cap)
[i]Type for TMP_147

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_150(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_1,globalExchangeRate_12)
Function name: unstake
Internal call...
_tokensToShares
amount
globalExchangeRate
Function: _tokensToShares
ic
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: 0
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 12
-100
added
xyz
Function name: _tokensToShares
Function Visibility: internal
clearning node...
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
has variable
[i] rate cleared

Name: rate Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
Function name: _tokensToShares
Phi
[i]Type for amount

Name: amount Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
Function name: _tokensToShares
Phi
[i]Type for rate

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _tokensToShares
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99 = CONVERT amount_1 to uint256
has variable
[i] TMP_99 cleared

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_100(uint256) = TMP_99 (c)* divider_5
has variable
[i] TMP_100 cleared

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_101 = CONVERT rate_1 to uint256
has variable
[i] TMP_101 cleared

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
TMP_102(uint256) = TMP_100 (c)/ TMP_101
has variable
[i] TMP_102 cleared

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
clearing ir...?
TMP_103 = CONVERT TMP_102 to uint128
has variable
[i] TMP_103 cleared

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
clearing ir...?
RETURN TMP_103
typecheckig node...
TMP_99 = CONVERT amount_1 to uint256
Function name: _tokensToShares

Name: amount Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_99

Name: TMP_99 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_100(uint256) = TMP_99 (c)* divider_5
Function name: _tokensToShares
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_99 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_100

Name: TMP_100 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_101 = CONVERT rate_1 to uint256
Function name: _tokensToShares

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for TMP_101

Name: TMP_101 Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_102(uint256) = TMP_100 (c)/ TMP_101
Function name: _tokensToShares
lnorm: u rnorm: u
Finance type key: (0, 12)
Func: div
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 12, Left type: 0
Left side: 0, Right side: 12, Checked Ratio: 12
False
Final dest type: 1

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: PIC_49 Function: None
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_102

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_103 = CONVERT TMP_102 to uint128
Function name: _tokensToShares

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_103

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
RETURN TMP_103
RETURN

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
WORKLIST iteration 0 for function call "_tokensToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _tokensToShares

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
___
[i]Type for TMP_150

Name: TMP_150 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
globalSharesRemove_1(uint128) := TMP_150(uint128)
Function name: unstake
asgn

Name: TMP_150 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: globalSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
u
Finance type key: (1, -1)
Func: assign
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 1
Final dest type: 1
[i]Type for globalSharesRemove

Name: globalSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
typecheckig node...
REF_51(uint128) -> v_5 (-> ['validators']).disabledEpoch
Function name: unstake
MEMBER
v
disabledEpoch
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_51

Name: v.disabledEpoch Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
coolDownEnd_2(uint128) := REF_51(uint128)
Function name: unstake
asgn

Name: v.disabledEpoch Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for coolDownEnd

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_148(bool) = newValidatorStaked_1 >= validatorMinStakedRequired_6
Function name: unstake
testing gt...
lnorm: 0 rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0
[i]Type for TMP_148

Name: TMP_148 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_149(None) = SOLIDITY_CALL require(bool,string)(TMP_148,Unstake > min staked required)
[i]Type for TMP_149

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_161 = CONVERT block.number to uint128
Function name: unstake
[i]Type for TMP_161

Name: TMP_161 Function: unstake
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
coolDownEnd_1(uint128) := TMP_161(uint128)
Function name: unstake
asgn

Name: TMP_161 Function: unstake
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for coolDownEnd

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_151(bool) = globalSharesRemove_1 > 0
Function name: unstake
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_151

Name: TMP_151 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_152(None) = SOLIDITY_CALL require(bool,string)(TMP_151,Unstake amount is too small)
[i]Type for TMP_152

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
coolDownEnd_3(uint128) := ϕ(['coolDownEnd_1', 'coolDownEnd_2'])
Function name: unstake
Phi
[i]Type for coolDownEnd

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
typecheckig node...
totalGlobalShares_11(uint128) = totalGlobalShares_10 - globalSharesRemove_1
Function name: unstake
lnorm: u rnorm: u
Finance type key: (1, 1)
Func: sub
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 1, Left type: 1
Final dest type: 1

Name: totalGlobalShares Function: global
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: globalSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: totalGlobalShares Function: global
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: totalGlobalShares Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
typecheckig node...
CONDITION isValidator_1
Condition...
Conidtion: 
isValidator_1
isValidator_1
typecheckig node...
REF_40(uint128) -> v_1 (-> ['validators']).globalShares
Function name: unstake
MEMBER
v
globalShares
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_40

Name: v.globalShares Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.globalShares Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_2 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, totalShares, stakings, _address, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_40(-> v_2 (-> ['validators'])) = REF_40 - globalSharesRemove_1
Function name: unstake
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 1, Left type: 1
Final dest type: 1

Name: REF_40 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: globalSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: globalSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_40 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for REF_40

Name: REF_40 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_40 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_7(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_2 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
coolDownEnd_4(uint128) = coolDownEnd_3 + delegatorCoolDown_4
Function name: unstake

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for coolDownEnd

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_41(uint128) -> v_2 (-> ['validators']).totalShares
Function name: unstake
MEMBER
[W] Initializing defined variable to constant
v
totalShares
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: totalShares Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_41

Name: v.totalShares Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: totalShares Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_3 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_2 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, totalShares, stakings, _address, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_41(-> v_3 (-> ['validators'])) = REF_41 - validatorSharesRemove_1
Function name: unstake
lnorm: u rnorm: u
Finance type key: (1, 1)
Func: sub
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 1, Left type: 1
Final dest type: 1

Name: REF_41 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: validatorSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_41 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_41 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for REF_41

Name: REF_41 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_41 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: totalShares Function: None
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_8(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_3 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
coolDownEnd_5(uint128) = coolDownEnd_3 + validatorCoolDown_4
Function name: unstake

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for coolDownEnd

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
coolDownEnd_6(uint128) := ϕ(['coolDownEnd_4', 'coolDownEnd_5'])
Function name: unstake
Phi
[i]Type for coolDownEnd

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
Internal call...
_updateGlobalExchangeRate
Function: _updateGlobalExchangeRate
ic
Internal cal param_cache
0
0
done.
typecheckig node...
REF_42(uint128) -> v_3 (-> ['validators']).delegated
Function name: unstake
MEMBER
v
delegated
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_42

Name: v.delegated Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_4 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_3 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, totalShares, stakings, _address, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_42(-> v_4 (-> ['validators'])) = REF_42 - amount_1
Function name: unstake
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: 0
Final dest type: 0

Name: REF_42 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: amount Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: amount Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: REF_42 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
[i]Type for REF_42

Name: REF_42 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: REF_42 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_9(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_4 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateValidator(DelegatedStaking.Validator)(v_5 (-> ['validators']))
Internal call...
_updateValidator
v
Function: _updateValidator
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: [unstakings, totalShares, stakings, _address, disabledEpoch, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333b54fd0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333ae0490>, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333ae0610>]
    fintype: -1
0
0
done.
typecheckig node...
REF_45(mapping(address => DelegatedStaking.Unstaking[])) -> v_5 (-> ['validators']).unstakings
Function name: unstake
MEMBER
v
unstakings
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: unstakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_45

Name: v.unstakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.unstakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: unstakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_46(DelegatedStaking.Unstaking[]) -> REF_45[msg.sender]
Function name: unstake
INDEX

Name: v.unstakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: unstake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_46

Name: v.unstakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_155 = new Unstaking(coolDownEnd_6,amount_1)
[i]Type for TMP_155

Name: TMP_155 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_48 -> LENGTH REF_46
[i]Type for REF_48

Name: REF_48 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_157(uint256) := REF_48(uint256)
Function name: unstake
asgn

Name: REF_48 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_157 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_157

Name: TMP_157 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_158(uint256) = TMP_157 (c)+ 1
Function name: unstake
val: 1

Name: TMP_158 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_158 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_158

Name: TMP_158 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
v_6 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_5 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, totalShares, stakings, _address, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_48 (->v_7 (-> ['validators'])) := TMP_158(uint256)
Function name: unstake
asgn

Name: TMP_158 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_48 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_48

Name: REF_48 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_49(DelegatedStaking.Unstaking) -> REF_46[TMP_157]
Function name: unstake
INDEX

Name: v.unstakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: unstake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_49

Name: v.unstakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_7 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_6 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, totalShares, stakings, _address, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_49 (->v_7 (-> ['validators'])) := TMP_155(DelegatedStaking.Unstaking)
Function name: unstake
asgn

Name: TMP_155 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_49 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_49

Name: REF_49 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_49 (->v_7 (-> ['validators'])) := TMP_155(DelegatedStaking.Unstaking)
XXXXX
validators_6(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_7 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
Emit Unstaked(validatorId_1,msg.sender,amount_1)
WORKLIST iteration 1 for function call "unstake":
 New undefined nodes- 2
 Old undefined nodes- 6
typecheckig node...
validatorCoolDown_2(uint128) := ϕ(['validatorCoolDown_3', 'validatorCoolDown_0', 'validatorCoolDown_1', 'validatorCoolDown_4'])
Function name: unstake
Phi
[i]Type for validatorCoolDown

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
delegatorCoolDown_2(uint128) := ϕ(['delegatorCoolDown_0', 'delegatorCoolDown_1', 'delegatorCoolDown_3', 'delegatorCoolDown_4'])
Function name: unstake
Phi
[i]Type for delegatorCoolDown

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
maxCapMultiplier_5(uint128) := ϕ(['maxCapMultiplier_0', 'maxCapMultiplier_7', 'maxCapMultiplier_1', 'maxCapMultiplier_6', 'maxCapMultiplier_4'])
Function name: unstake
Phi
[i]Type for maxCapMultiplier

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validatorMinStakedRequired_5(uint128) := ϕ(['validatorMinStakedRequired_1', 'validatorMinStakedRequired_4', 'validatorMinStakedRequired_0', 'validatorMinStakedRequired_7', 'validatorMinStakedRequired_6'])
Function name: unstake
Phi
[i]Type for validatorMinStakedRequired

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_10(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
Function name: unstake
Phi
[i]Type for endEpoch

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalGlobalShares_8(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
Function name: unstake
Phi
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: global
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
globalExchangeRate_11(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
Function name: unstake
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
validatorsN_2(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
Function name: unstake
Phi
[i]Type for validatorsN

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_5(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: unstake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
TMP_132(bool) = validatorId_1 < validatorsN_2
Function name: unstake
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_132

Name: TMP_132 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_133(None) = SOLIDITY_CALL require(bool,string)(TMP_132,Invalid validator)
[i]Type for TMP_133

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_30(DelegatedStaking.Validator) -> validators_5[validatorId_1]
Function name: unstake
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_30

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_30(DelegatedStaking.Validator)
Function name: unstake
asgn

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, totalShares, stakings, _address, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, totalShares, stakings, _address, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_31(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: unstake
MEMBER
v
stakings
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_31

Name: v.stakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_32(DelegatedStaking.Staking) -> REF_31[msg.sender]
Function name: unstake
INDEX

Name: v.stakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: unstake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_32

Name: v.stakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_1 (-> ['v'])(DelegatedStaking.Staking) := REF_32(DelegatedStaking.Staking)
Function name: unstake
asgn

Name: v.stakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for s

Name: s Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
typecheckig node...
REF_33(uint128) -> s_1 (-> ['v']).staked
Function name: unstake
MEMBER
s
staked
unstake
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_33

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_134(bool) = REF_33 >= amount_1
Function name: unstake
testing gt...
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: -1
Final dest type: 0
[i]Type for TMP_134

Name: TMP_134 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,Staked < amount provided)
[i]Type for TMP_135

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_34(address) -> v_1 (-> ['validators'])._address
Function name: unstake
MEMBER
v
_address
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_34

Name: v._address Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_136(bool) = msg.sender == REF_34
Function name: unstake
[i]Type for TMP_136

Name: TMP_136 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
isValidator_1(bool) := TMP_136(bool)
Function name: unstake
asgn

Name: TMP_136 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: isValidator Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for isValidator

Name: isValidator Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
isValidator_1(bool) := TMP_136(bool)
XXXXX
typecheckig node...
REF_35(uint128) -> v_1 (-> ['validators']).exchangeRate
Function name: unstake
MEMBER
v
exchangeRate
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for REF_35

Name: v.exchangeRate Function: unstake
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: v.exchangeRate Function: unstake
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_137(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_1,REF_35)
Function name: unstake
Internal call...
_tokensToShares
amount
REF_35
Function: _tokensToShares
ic
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: 0
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 12
-100
added
xyz
Function name: _tokensToShares
Function Visibility: internal
clearning node...
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
has variable
[i] rate cleared

Name: rate Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
Function name: _tokensToShares
Phi
[i]Type for amount

Name: amount Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
Function name: _tokensToShares
Phi
[i]Type for rate

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _tokensToShares
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99 = CONVERT amount_1 to uint256
has variable
[i] TMP_99 cleared

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_100(uint256) = TMP_99 (c)* divider_5
has variable
[i] TMP_100 cleared

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_101 = CONVERT rate_1 to uint256
has variable
[i] TMP_101 cleared

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
TMP_102(uint256) = TMP_100 (c)/ TMP_101
has variable
[i] TMP_102 cleared

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
clearing ir...?
TMP_103 = CONVERT TMP_102 to uint128
has variable
[i] TMP_103 cleared

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
clearing ir...?
RETURN TMP_103
typecheckig node...
TMP_99 = CONVERT amount_1 to uint256
Function name: _tokensToShares

Name: amount Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_99

Name: TMP_99 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_100(uint256) = TMP_99 (c)* divider_5
Function name: _tokensToShares
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_99 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_100

Name: TMP_100 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_101 = CONVERT rate_1 to uint256
Function name: _tokensToShares

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for TMP_101

Name: TMP_101 Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_102(uint256) = TMP_100 (c)/ TMP_101
Function name: _tokensToShares
lnorm: u rnorm: u
Finance type key: (0, 12)
Func: div
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 12, Left type: 0
Left side: 0, Right side: 12, Checked Ratio: 12
False
Final dest type: 1

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: PIC_51 Function: None
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_102

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_103 = CONVERT TMP_102 to uint128
Function name: _tokensToShares

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_103

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
RETURN TMP_103
RETURN

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
WORKLIST iteration 0 for function call "_tokensToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _tokensToShares

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
___
[i]Type for TMP_137

Name: TMP_137 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
validatorSharesRemove_1(uint128) := TMP_137(uint128)
Function name: unstake
asgn

Name: TMP_137 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: validatorSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
u
Finance type key: (1, -1)
Func: assign
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 1
Final dest type: 1
[i]Type for validatorSharesRemove

Name: validatorSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
typecheckig node...
TMP_138(bool) = validatorSharesRemove_1 > 0
Function name: unstake
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_138

Name: TMP_138 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_139(None) = SOLIDITY_CALL require(bool,string)(TMP_138,Unstake amount is too small)
[i]Type for TMP_139

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_36(uint128) -> v_1 (-> ['validators']).disabledEpoch
Function name: unstake
MEMBER
v
disabledEpoch
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_36

Name: v.disabledEpoch Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_140(bool) = REF_36 == 0
Function name: unstake
[i]Type for TMP_140

Name: TMP_140 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_140
Condition...
Conidtion: 
TMP_140
TMP_140
typecheckig node...
v_5 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_4 (-> ['validators'])", "v_1 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, totalShares, stakings, _address, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
TMP_141(bool) = endEpoch_11 > block.number
Function name: unstake
testing gt...
block.number
[i]Type for TMP_141

Name: TMP_141 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_142(bool) = isValidator_1 && TMP_141
Function name: unstake
[i]Type for TMP_142

Name: TMP_142 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_142
Condition...
Conidtion: 
TMP_142
TMP_142
typecheckig node...
REF_37(uint128) -> s_1 (-> ['v']).staked
Function name: unstake
MEMBER
s
staked
unstake
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_37

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_143(uint128) = REF_37 (c)- amount_1
Function name: unstake
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: -1
Final dest type: 0

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: amount Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_143 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_143

Name: TMP_143 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
newValidatorStaked_1(uint128) := TMP_143(uint128)
Function name: unstake
asgn

Name: TMP_143 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: newValidatorStaked Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
0
Finance type key: (0, -1)
Func: assign
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0
[i]Type for newValidatorStaked

Name: newValidatorStaked Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
typecheckig node...
REF_43(uint128) -> s_1 (-> ['v']).shares
Function name: unstake
MEMBER
[W] Initializing defined variable to constant
s
shares
unstake
s Fields:
staked
shares
^^^

Name: shares Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_43

Name: s.shares Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: shares Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_2 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_1 (-> ['v'])"])
Function name: unstake
Phi
[i]Type for s

Name: s Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
REF_43(-> s_2 (-> ['v'])) = REF_43 - validatorSharesRemove_1
Function name: unstake
lnorm: u rnorm: u
Finance type key: (1, 1)
Func: sub
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 1, Left type: 1
Final dest type: 1

Name: REF_43 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: validatorSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_43 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_43 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for REF_43

Name: REF_43 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_43 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: shares Function: None
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_8 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_2 (-> ['v'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, totalShares, stakings, _address, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_44(uint128) -> s_2 (-> ['v']).staked
Function name: unstake
MEMBER
s
staked
unstake
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_44

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_3 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_2 (-> ['v'])"])
Function name: unstake
Phi
[i]Type for s

Name: s Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
REF_44(-> s_3 (-> ['v'])) = REF_44 - amount_1
Function name: unstake
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: 0
Final dest type: 0

Name: REF_44 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: amount Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: amount Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: REF_44 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
[i]Type for REF_44

Name: REF_44 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: REF_44 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_9 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_3 (-> ['v'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, totalShares, stakings, _address, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
TMP_144(uint128) = newValidatorStaked_1 (c)* maxCapMultiplier_6
Function name: unstake
testing mul...
lnorm: 0 rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: newValidatorStaked Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_144 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_144

Name: TMP_144 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
newValidatorMaxCap_1(uint128) := TMP_144(uint128)
Function name: unstake
asgn

Name: TMP_144 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: newValidatorMaxCap Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
0
Finance type key: (0, -1)
Func: assign
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0
[i]Type for newValidatorMaxCap

Name: newValidatorMaxCap Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
typecheckig node...
REF_38(uint128) -> v_1 (-> ['validators']).delegated
Function name: unstake
MEMBER
v
delegated
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_38

Name: v.delegated Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_39(uint128) -> s_1 (-> ['v']).staked
Function name: unstake
MEMBER
s
staked
unstake
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_39

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_145(uint128) = REF_38 (c)- REF_39
Function name: unstake
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: v.delegated Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_145 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_145

Name: TMP_145 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
delegated_1(uint128) := TMP_145(uint128)
Function name: unstake
asgn

Name: TMP_145 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for delegated

Name: delegated Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
REF_50(uint128) -> v_5 (-> ['validators']).disabledEpoch
Function name: unstake
MEMBER
v
disabledEpoch
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_50

Name: v.disabledEpoch Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_160(bool) = REF_50 != 0
Function name: unstake
[i]Type for TMP_160

Name: TMP_160 Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_160
Condition...
Conidtion: 
TMP_160
TMP_160
typecheckig node...
TMP_146(bool) = delegated_1 <= newValidatorMaxCap_1
Function name: unstake
testing lt...
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: -1
Final dest type: 0
[i]Type for TMP_146

Name: TMP_146 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_147(None) = SOLIDITY_CALL require(bool,string)(TMP_146,Cannot unstake beyond max cap)
[i]Type for TMP_147

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_150(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_1,globalExchangeRate_12)
Function name: unstake
Internal call...
_tokensToShares
amount
globalExchangeRate
Function: _tokensToShares
ic
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: 0
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 12
-100
added
xyz
Function name: _tokensToShares
Function Visibility: internal
clearning node...
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
has variable
[i] rate cleared

Name: rate Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
Function name: _tokensToShares
Phi
[i]Type for amount

Name: amount Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
Function name: _tokensToShares
Phi
[i]Type for rate

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _tokensToShares
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99 = CONVERT amount_1 to uint256
has variable
[i] TMP_99 cleared

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_100(uint256) = TMP_99 (c)* divider_5
has variable
[i] TMP_100 cleared

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_101 = CONVERT rate_1 to uint256
has variable
[i] TMP_101 cleared

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
TMP_102(uint256) = TMP_100 (c)/ TMP_101
has variable
[i] TMP_102 cleared

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
clearing ir...?
TMP_103 = CONVERT TMP_102 to uint128
has variable
[i] TMP_103 cleared

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
clearing ir...?
RETURN TMP_103
typecheckig node...
TMP_99 = CONVERT amount_1 to uint256
Function name: _tokensToShares

Name: amount Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_99

Name: TMP_99 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_100(uint256) = TMP_99 (c)* divider_5
Function name: _tokensToShares
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_99 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_100

Name: TMP_100 Function: _tokensToShares
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_101 = CONVERT rate_1 to uint256
Function name: _tokensToShares

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for TMP_101

Name: TMP_101 Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_102(uint256) = TMP_100 (c)/ TMP_101
Function name: _tokensToShares
lnorm: u rnorm: u
Finance type key: (0, 12)
Func: div
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 12, Left type: 0
Left side: 0, Right side: 12, Checked Ratio: 12
False
Final dest type: 1

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: PIC_53 Function: None
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_102

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_103 = CONVERT TMP_102 to uint128
Function name: _tokensToShares

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_103

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
RETURN TMP_103
RETURN

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
WORKLIST iteration 0 for function call "_tokensToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _tokensToShares

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
___
[i]Type for TMP_150

Name: TMP_150 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
globalSharesRemove_1(uint128) := TMP_150(uint128)
Function name: unstake
asgn

Name: TMP_150 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: globalSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
u
Finance type key: (1, -1)
Func: assign
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 1
Final dest type: 1
[i]Type for globalSharesRemove

Name: globalSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
typecheckig node...
REF_51(uint128) -> v_5 (-> ['validators']).disabledEpoch
Function name: unstake
MEMBER
v
disabledEpoch
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_51

Name: v.disabledEpoch Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
coolDownEnd_2(uint128) := REF_51(uint128)
Function name: unstake
asgn

Name: v.disabledEpoch Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for coolDownEnd

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_148(bool) = newValidatorStaked_1 >= validatorMinStakedRequired_6
Function name: unstake
testing gt...
lnorm: 0 rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 0
Final dest type: 0
[i]Type for TMP_148

Name: TMP_148 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_149(None) = SOLIDITY_CALL require(bool,string)(TMP_148,Unstake > min staked required)
[i]Type for TMP_149

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_161 = CONVERT block.number to uint128
Function name: unstake
[i]Type for TMP_161

Name: TMP_161 Function: unstake
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
coolDownEnd_1(uint128) := TMP_161(uint128)
Function name: unstake
asgn

Name: TMP_161 Function: unstake
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for coolDownEnd

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_151(bool) = globalSharesRemove_1 > 0
Function name: unstake
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_151

Name: TMP_151 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_152(None) = SOLIDITY_CALL require(bool,string)(TMP_151,Unstake amount is too small)
[i]Type for TMP_152

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
coolDownEnd_3(uint128) := ϕ(['coolDownEnd_1', 'coolDownEnd_2'])
Function name: unstake
Phi
[i]Type for coolDownEnd

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
typecheckig node...
totalGlobalShares_11(uint128) = totalGlobalShares_10 - globalSharesRemove_1
Function name: unstake
lnorm: u rnorm: u
Finance type key: (1, 1)
Func: sub
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 1, Left type: 1
Final dest type: 1

Name: totalGlobalShares Function: global
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: globalSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: totalGlobalShares Function: global
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: totalGlobalShares Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
typecheckig node...
CONDITION isValidator_1
Condition...
Conidtion: 
isValidator_1
isValidator_1
typecheckig node...
REF_40(uint128) -> v_1 (-> ['validators']).globalShares
Function name: unstake
MEMBER
v
globalShares
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_40

Name: v.globalShares Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.globalShares Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_2 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, totalShares, stakings, _address, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_40(-> v_2 (-> ['validators'])) = REF_40 - globalSharesRemove_1
Function name: unstake
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 1, Left type: 1
Final dest type: 1

Name: REF_40 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: globalSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: globalSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_40 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for REF_40

Name: REF_40 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_40 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_7(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_2 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
coolDownEnd_4(uint128) = coolDownEnd_3 + delegatorCoolDown_4
Function name: unstake

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for coolDownEnd

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_41(uint128) -> v_2 (-> ['validators']).totalShares
Function name: unstake
MEMBER
[W] Initializing defined variable to constant
v
totalShares
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: totalShares Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_41

Name: v.totalShares Function: unstake
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: totalShares Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_3 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_2 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, totalShares, stakings, _address, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_41(-> v_3 (-> ['validators'])) = REF_41 - validatorSharesRemove_1
Function name: unstake
lnorm: u rnorm: u
Finance type key: (1, 1)
Func: sub
Dest type: 1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 1, Left type: 1
Final dest type: 1

Name: REF_41 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: validatorSharesRemove Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_41 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_41 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for REF_41

Name: REF_41 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: REF_41 Function: unstake
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: totalShares Function: None
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_8(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_3 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
coolDownEnd_5(uint128) = coolDownEnd_3 + validatorCoolDown_4
Function name: unstake

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for coolDownEnd

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
coolDownEnd_6(uint128) := ϕ(['coolDownEnd_4', 'coolDownEnd_5'])
Function name: unstake
Phi
[i]Type for coolDownEnd

Name: coolDownEnd Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
Internal call...
_updateGlobalExchangeRate
Function: _updateGlobalExchangeRate
ic
Internal cal param_cache
0
0
done.
typecheckig node...
REF_42(uint128) -> v_3 (-> ['validators']).delegated
Function name: unstake
MEMBER
v
delegated
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_42

Name: v.delegated Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_4 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_3 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, totalShares, stakings, _address, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_42(-> v_4 (-> ['validators'])) = REF_42 - amount_1
Function name: unstake
lnorm: u rnorm: 0
Dest type: 0, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 0, Left type: 0
Final dest type: 0

Name: REF_42 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: amount Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: amount Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: REF_42 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
[i]Type for REF_42

Name: REF_42 Function: unstake
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: REF_42 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_9(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_4 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateValidator(DelegatedStaking.Validator)(v_5 (-> ['validators']))
Internal call...
_updateValidator
v
Function: _updateValidator
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: [unstakings, totalShares, stakings, _address, disabledEpoch, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333b54fd0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333ae0490>, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333ae0610>]
    fintype: -1
0
0
done.
typecheckig node...
REF_45(mapping(address => DelegatedStaking.Unstaking[])) -> v_5 (-> ['validators']).unstakings
Function name: unstake
MEMBER
v
unstakings
unstake
v Fields:
unstakings
totalShares
stakings
_address
disabledEpoch
globalShares
delegated
exchangeRate
^^^

Name: unstakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_45

Name: v.unstakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.unstakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: unstakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_46(DelegatedStaking.Unstaking[]) -> REF_45[msg.sender]
Function name: unstake
INDEX

Name: v.unstakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: unstake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_46

Name: v.unstakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_155 = new Unstaking(coolDownEnd_6,amount_1)
[i]Type for TMP_155

Name: TMP_155 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_48 -> LENGTH REF_46
[i]Type for REF_48

Name: REF_48 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_157(uint256) := REF_48(uint256)
Function name: unstake
asgn

Name: REF_48 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_157 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_157

Name: TMP_157 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_158(uint256) = TMP_157 (c)+ 1
Function name: unstake
val: 1

Name: TMP_158 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_158 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_158

Name: TMP_158 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
v_6 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_5 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, totalShares, stakings, _address, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_48 (->v_7 (-> ['validators'])) := TMP_158(uint256)
Function name: unstake
asgn

Name: TMP_158 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_48 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_48

Name: REF_48 Function: unstake
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_49(DelegatedStaking.Unstaking) -> REF_46[TMP_157]
Function name: unstake
INDEX

Name: v.unstakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: unstake
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_49

Name: v.unstakings Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_7 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_6 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for v

Name: v Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, totalShares, stakings, _address, disabledEpoch, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_49 (->v_7 (-> ['validators'])) := TMP_155(DelegatedStaking.Unstaking)
Function name: unstake
asgn

Name: TMP_155 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_49 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_49

Name: REF_49 Function: unstake
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_49 (->v_7 (-> ['validators'])) := TMP_155(DelegatedStaking.Unstaking)
XXXXX
validators_6(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_7 (-> ['validators'])"])
Function name: unstake
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
Emit Unstaked(validatorId_1,msg.sender,amount_1)
WORKLIST iteration 2 for function call "unstake":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: unstake
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
FIELDS:
validators Fields:
globalShares
delegated
exchangeRate
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: recoverUnstaking
Function name: recoverUnstaking
Function Visibility (test): public
amount
Finding type for amount...
uint128
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint128
uint128
Final Type: uint128

Name: amount Function: recoverUnstaking
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
validatorId
Finding type for validatorId...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorId Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
unstakingId
Finding type for unstakingId...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint128
uint128
Final Type: uint128

Name: unstakingId Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
validators_10(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
has variable
typecheckig node...
validators_10(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: recoverUnstaking
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_52(DelegatedStaking.Validator) -> validators_10[validatorId_1]
has variable
clearing ir...?
REF_53(mapping(address => DelegatedStaking.Unstaking[])) -> REF_52.unstakings
has variable
clearing ir...?
REF_54(DelegatedStaking.Unstaking[]) -> REF_53[msg.sender]
has variable
clearing ir...?
REF_55(DelegatedStaking.Unstaking) -> REF_54[unstakingId_1]
has variable
clearing ir...?
us_1 (-> ['validators'])(DelegatedStaking.Unstaking) := REF_55(DelegatedStaking.Unstaking)
has variable
[i] us cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_52(DelegatedStaking.Validator) -> validators_10[validatorId_1]
Function name: recoverUnstaking
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_52

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_53(mapping(address => DelegatedStaking.Unstaking[])) -> REF_52.unstakings
Function name: recoverUnstaking
MEMBER
validators
unstakings
global
validators Fields:
globalShares
delegated
exchangeRate
^^^
[i]Type for REF_53

Name: validators.unstakings Function: recoverUnstaking
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validators.unstakings Function: recoverUnstaking
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: unstakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_54(DelegatedStaking.Unstaking[]) -> REF_53[msg.sender]
Function name: recoverUnstaking
INDEX

Name: validators.unstakings Function: recoverUnstaking
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: recoverUnstaking
not variable
REF_53
[i]Type for REF_54

Name: validators.unstakings Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_54(DelegatedStaking.Unstaking[]) -> REF_53[msg.sender]
XXXXX
REF_55(DelegatedStaking.Unstaking) -> REF_54[unstakingId_1]
Function name: recoverUnstaking
INDEX

Name: validators.unstakings Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: recoverUnstaking
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_55

Name: validators.unstakings Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_1 (-> ['validators'])(DelegatedStaking.Unstaking) := REF_55(DelegatedStaking.Unstaking)
Function name: recoverUnstaking
asgn

Name: validators.unstakings Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us Function: recoverUnstaking
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for us

Name: us Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_56(uint128) -> us_1 (-> ['validators']).amount
has variable
clearing ir...?
TMP_162(bool) = REF_56 >= amount_1
has variable
[i] TMP_162 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_163(None) = SOLIDITY_CALL require(bool,string)(TMP_162,Unstaking has less tokens)
typecheckig node...
REF_56(uint128) -> us_1 (-> ['validators']).amount
Function name: recoverUnstaking
MEMBER
us
amount
recoverUnstaking
us Fields:
^^^
[i]Type for REF_56

Name: us.amount Function: recoverUnstaking
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: recoverUnstaking
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_162(bool) = REF_56 >= amount_1
Function name: recoverUnstaking
testing gt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: recoverUnstaking
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_162 Function: recoverUnstaking
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_162

Name: TMP_162 Function: recoverUnstaking
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_162(bool) = REF_56 >= amount_1
XXXXX
TMP_163(None) = SOLIDITY_CALL require(bool,string)(TMP_162,Unstaking has less tokens)
[i]Type for TMP_163

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._stake(uint128,uint128,bool)(validatorId_1,amount_1,False)
typecheckig node...
INTERNAL_CALL, DelegatedStaking._stake(uint128,uint128,bool)(validatorId_1,amount_1,False)
Internal call...
_stake
validatorId
amount
False
Function: _stake
ic
val: False
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
0
done.
clearning node...
clearing ir...?
REF_57(uint128) -> us_1 (-> ['validators']).amount
has variable
clearing ir...?
us_2 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_1 (-> ['validators'])"])
has variable
[i] us cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_57(-> us_2 (-> ['validators'])) = REF_57 (c)- amount_1
has variable
clearing ir...?
validators_11(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_2 (-> ['validators'])"])
has variable
typecheckig node...
REF_57(uint128) -> us_1 (-> ['validators']).amount
Function name: recoverUnstaking
MEMBER
us
amount
recoverUnstaking
us Fields:
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_57

Name: us.amount Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_2 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_1 (-> ['validators'])"])
Function name: recoverUnstaking
Phi
[i]Type for us

Name: us Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: amount
Finance Type: undef
done.
REF_57(-> us_2 (-> ['validators'])) = REF_57 (c)- amount_1
Function name: recoverUnstaking
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_57 Function: recoverUnstaking
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: recoverUnstaking
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: recoverUnstaking
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_57 Function: recoverUnstaking
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_57

Name: REF_57 Function: recoverUnstaking
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_57 Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_11(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_2 (-> ['validators'])"])
Function name: recoverUnstaking
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_58(uint128) -> us_2 (-> ['validators']).amount
has variable
clearing ir...?
TMP_165(bool) = REF_58 == 0
has variable
[i] TMP_165 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_165
typecheckig node...
REF_58(uint128) -> us_2 (-> ['validators']).amount
Function name: recoverUnstaking
MEMBER
us
amount
recoverUnstaking
us Fields:
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_58

Name: us.amount Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_165(bool) = REF_58 == 0
Function name: recoverUnstaking
[i]Type for TMP_165

Name: TMP_165 Function: recoverUnstaking
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_165
Condition...
Conidtion: 
TMP_165
TMP_165
clearning node...
clearing ir...?
REF_59(uint128) -> us_2 (-> ['validators']).coolDownEnd
has variable
clearing ir...?
us_3 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_2 (-> ['validators'])"])
has variable
[i] us cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_59 (->us_3 (-> ['validators'])) := 0(uint256)
has variable
clearing ir...?
validators_12(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_3 (-> ['validators'])"])
has variable
typecheckig node...
REF_59(uint128) -> us_2 (-> ['validators']).coolDownEnd
Function name: recoverUnstaking
MEMBER
us
coolDownEnd
recoverUnstaking
us Fields:
amount
^^^
[i]Type for REF_59

Name: us.coolDownEnd Function: recoverUnstaking
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.coolDownEnd Function: recoverUnstaking
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_3 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_2 (-> ['validators'])"])
Function name: recoverUnstaking
Phi
[i]Type for us

Name: us Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
done.
REF_59 (->us_3 (-> ['validators'])) := 0(uint256)
Function name: recoverUnstaking
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_59 Function: recoverUnstaking
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_59

Name: REF_59 Function: recoverUnstaking
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_59 Function: recoverUnstaking
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_12(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_3 (-> ['validators'])"])
Function name: recoverUnstaking
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
Emit RecoveredUnstake(validatorId_1,msg.sender,amount_1,unstakingId_1)
typecheckig node...
Emit RecoveredUnstake(validatorId_1,msg.sender,amount_1,unstakingId_1)
WORKLIST iteration 0 for function call "recoverUnstaking":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
validators_10(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: recoverUnstaking
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_52(DelegatedStaking.Validator) -> validators_10[validatorId_1]
Function name: recoverUnstaking
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, globalShares, delegated, exchangeRate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_52

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_53(mapping(address => DelegatedStaking.Unstaking[])) -> REF_52.unstakings
Function name: recoverUnstaking
MEMBER
validators
unstakings
global
validators Fields:
unstakings
globalShares
delegated
exchangeRate
^^^

Name: unstakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_53

Name: validators.unstakings Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validators.unstakings Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: unstakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_54(DelegatedStaking.Unstaking[]) -> REF_53[msg.sender]
Function name: recoverUnstaking
INDEX

Name: validators.unstakings Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: recoverUnstaking
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_54

Name: validators.unstakings Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_55(DelegatedStaking.Unstaking) -> REF_54[unstakingId_1]
Function name: recoverUnstaking
INDEX

Name: validators.unstakings Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: recoverUnstaking
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_55

Name: validators.unstakings Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_1 (-> ['validators'])(DelegatedStaking.Unstaking) := REF_55(DelegatedStaking.Unstaking)
Function name: recoverUnstaking
asgn

Name: validators.unstakings Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: amount
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for us

Name: us Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: amount
Finance Type: undef
done.
typecheckig node...
REF_56(uint128) -> us_1 (-> ['validators']).amount
Function name: recoverUnstaking
MEMBER
us
amount
recoverUnstaking
us Fields:
coolDownEnd
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_56

Name: us.amount Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_162(bool) = REF_56 >= amount_1
Function name: recoverUnstaking
testing gt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[W] Initializing defined variable to constant
[i]Type for TMP_162

Name: TMP_162 Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_163(None) = SOLIDITY_CALL require(bool,string)(TMP_162,Unstaking has less tokens)
[i]Type for TMP_163

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._stake(uint128,uint128,bool)(validatorId_1,amount_1,False)
Internal call...
_stake
validatorId
amount
False
Function: _stake
ic
val: False
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
0
done.
typecheckig node...
REF_57(uint128) -> us_1 (-> ['validators']).amount
Function name: recoverUnstaking
MEMBER
us
amount
recoverUnstaking
us Fields:
coolDownEnd
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_57

Name: us.amount Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_2 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_1 (-> ['validators'])"])
Function name: recoverUnstaking
Phi
[i]Type for us

Name: us Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
done.
REF_57(-> us_2 (-> ['validators'])) = REF_57 (c)- amount_1
Function name: recoverUnstaking
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_57 Function: recoverUnstaking
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: recoverUnstaking
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: recoverUnstaking
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_57 Function: recoverUnstaking
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_57

Name: REF_57 Function: recoverUnstaking
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_57 Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_11(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_2 (-> ['validators'])"])
Function name: recoverUnstaking
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_58(uint128) -> us_2 (-> ['validators']).amount
Function name: recoverUnstaking
MEMBER
us
amount
recoverUnstaking
us Fields:
coolDownEnd
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_58

Name: us.amount Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_165(bool) = REF_58 == 0
Function name: recoverUnstaking
[i]Type for TMP_165

Name: TMP_165 Function: recoverUnstaking
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_165
Condition...
Conidtion: 
TMP_165
TMP_165
typecheckig node...
REF_59(uint128) -> us_2 (-> ['validators']).coolDownEnd
Function name: recoverUnstaking
MEMBER
us
coolDownEnd
recoverUnstaking
us Fields:
coolDownEnd
amount
^^^

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_59

Name: us.coolDownEnd Function: recoverUnstaking
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: us.coolDownEnd Function: recoverUnstaking
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
us_3 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_2 (-> ['validators'])"])
Function name: recoverUnstaking
Phi
[i]Type for us

Name: us Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
done.
REF_59 (->us_3 (-> ['validators'])) := 0(uint256)
Function name: recoverUnstaking
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_59 Function: recoverUnstaking
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_59

Name: REF_59 Function: recoverUnstaking
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_59 Function: recoverUnstaking
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
validators_12(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_3 (-> ['validators'])"])
Function name: recoverUnstaking
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
typecheckig node...
Emit RecoveredUnstake(validatorId_1,msg.sender,amount_1,unstakingId_1)
WORKLIST iteration 1 for function call "recoverUnstaking":
 New undefined nodes- 0
 Old undefined nodes- 2
typecheckig node...
validators_10(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: recoverUnstaking
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_52(DelegatedStaking.Validator) -> validators_10[validatorId_1]
Function name: recoverUnstaking
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, globalShares, delegated, exchangeRate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_52

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, globalShares, delegated, exchangeRate
Finance Type: undef
done.
REF_53(mapping(address => DelegatedStaking.Unstaking[])) -> REF_52.unstakings
Function name: recoverUnstaking
MEMBER
validators
unstakings
global
validators Fields:
unstakings
globalShares
delegated
exchangeRate
^^^

Name: unstakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_53

Name: validators.unstakings Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validators.unstakings Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: unstakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_54(DelegatedStaking.Unstaking[]) -> REF_53[msg.sender]
Function name: recoverUnstaking
INDEX

Name: validators.unstakings Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: recoverUnstaking
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_54

Name: validators.unstakings Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_55(DelegatedStaking.Unstaking) -> REF_54[unstakingId_1]
Function name: recoverUnstaking
INDEX

Name: validators.unstakings Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: recoverUnstaking
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_55

Name: validators.unstakings Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_1 (-> ['validators'])(DelegatedStaking.Unstaking) := REF_55(DelegatedStaking.Unstaking)
Function name: recoverUnstaking
asgn

Name: validators.unstakings Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for us

Name: us Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
done.
typecheckig node...
REF_56(uint128) -> us_1 (-> ['validators']).amount
Function name: recoverUnstaking
MEMBER
us
amount
recoverUnstaking
us Fields:
coolDownEnd
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_56

Name: us.amount Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_162(bool) = REF_56 >= amount_1
Function name: recoverUnstaking
testing gt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_162

Name: TMP_162 Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_163(None) = SOLIDITY_CALL require(bool,string)(TMP_162,Unstaking has less tokens)
[i]Type for TMP_163

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._stake(uint128,uint128,bool)(validatorId_1,amount_1,False)
Internal call...
_stake
validatorId
amount
False
Function: _stake
ic
val: False
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
0
done.
typecheckig node...
REF_57(uint128) -> us_1 (-> ['validators']).amount
Function name: recoverUnstaking
MEMBER
us
amount
recoverUnstaking
us Fields:
coolDownEnd
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_57

Name: us.amount Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_2 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_1 (-> ['validators'])"])
Function name: recoverUnstaking
Phi
[i]Type for us

Name: us Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
done.
REF_57(-> us_2 (-> ['validators'])) = REF_57 (c)- amount_1
Function name: recoverUnstaking
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_57 Function: recoverUnstaking
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: recoverUnstaking
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: recoverUnstaking
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_57 Function: recoverUnstaking
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_57

Name: REF_57 Function: recoverUnstaking
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_57 Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_11(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_2 (-> ['validators'])"])
Function name: recoverUnstaking
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
REF_58(uint128) -> us_2 (-> ['validators']).amount
Function name: recoverUnstaking
MEMBER
us
amount
recoverUnstaking
us Fields:
coolDownEnd
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_58

Name: us.amount Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_165(bool) = REF_58 == 0
Function name: recoverUnstaking
[i]Type for TMP_165

Name: TMP_165 Function: recoverUnstaking
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_165
Condition...
Conidtion: 
TMP_165
TMP_165
typecheckig node...
REF_59(uint128) -> us_2 (-> ['validators']).coolDownEnd
Function name: recoverUnstaking
MEMBER
us
coolDownEnd
recoverUnstaking
us Fields:
coolDownEnd
amount
^^^

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_59

Name: us.coolDownEnd Function: recoverUnstaking
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: us.coolDownEnd Function: recoverUnstaking
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
us_3 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_2 (-> ['validators'])"])
Function name: recoverUnstaking
Phi
[i]Type for us

Name: us Function: recoverUnstaking
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
done.
REF_59 (->us_3 (-> ['validators'])) := 0(uint256)
Function name: recoverUnstaking
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_59 Function: recoverUnstaking
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_59

Name: REF_59 Function: recoverUnstaking
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_59 Function: recoverUnstaking
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
validators_12(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_3 (-> ['validators'])"])
Function name: recoverUnstaking
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: unstakings, globalShares, delegated, exchangeRate
Finance Type: undef
done.
typecheckig node...
typecheckig node...
Emit RecoveredUnstake(validatorId_1,msg.sender,amount_1,unstakingId_1)
WORKLIST iteration 2 for function call "recoverUnstaking":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: recoverUnstaking
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
None
unstakings
coolDownEnd
None
unstakings
amount
FIELDS:
unstakings Fields:
^^^
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
validators.unstakings
coolDownEnd
global
validators.unstakings
amount
FIELDS:
validators.unstakings Fields:
^^^
FIELDS:
validators Fields:
globalShares
delegated
exchangeRate
unstakings
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _redeemRewards
Function _redeemRewards not marked
Mark Iterations TRUE, proceeding anyway
Function name: _redeemRewards
Function Visibility (test): internal
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
unstakings
coolDownEnd
global
unstakings
amount
FIELDS:
unstakings Fields:
^^^
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
validators.unstakings
coolDownEnd
global
validators.unstakings
amount
FIELDS:
validators.unstakings Fields:
^^^
FIELDS:
validators Fields:
globalShares
delegated
exchangeRate
unstakings
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: redeemAllRewards
Function redeemAllRewards not marked
Mark Iterations TRUE, proceeding anyway
Function name: redeemAllRewards
Function Visibility (test): external
validatorId
Finding type for validatorId...
uint128
beneficiary
Finding type for beneficiary...
address
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: beneficiary
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._redeemRewards(uint128,address,uint128)(validatorId_1,beneficiary_1,0)
typecheckig node...
INTERNAL_CALL, DelegatedStaking._redeemRewards(uint128,address,uint128)(validatorId_1,beneficiary_1,0)
Internal call...
_redeemRewards
validatorId
beneficiary
0
Function: _redeemRewards
ic
done.
WORKLIST iteration 0 for function call "redeemAllRewards":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
unstakings
coolDownEnd
global
unstakings
amount
FIELDS:
unstakings Fields:
^^^
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
validators.unstakings
coolDownEnd
global
validators.unstakings
amount
FIELDS:
validators.unstakings Fields:
^^^
FIELDS:
validators Fields:
globalShares
delegated
exchangeRate
unstakings
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: redeemRewards
Function name: redeemRewards
Function Visibility (test): external
validatorId
Finding type for validatorId...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorId Function: redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
beneficiary
Finding type for beneficiary...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: beneficiary Function: redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
amount
Finding type for amount...
uint128
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint128
uint128
Final Type: uint128

Name: amount Function: redeemRewards
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_196(bool) = amount_1 > 0
has variable
[i] TMP_196 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_197(None) = SOLIDITY_CALL require(bool,string)(TMP_196,Amount is 0)
typecheckig node...
TMP_196(bool) = amount_1 > 0
Function name: redeemRewards
testing gt...
val: 0
val: 0
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_196

Name: TMP_196 Function: redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_197(None) = SOLIDITY_CALL require(bool,string)(TMP_196,Amount is 0)
[i]Type for TMP_197

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._redeemRewards(uint128,address,uint128)(validatorId_1,beneficiary_1,amount_1)
typecheckig node...
INTERNAL_CALL, DelegatedStaking._redeemRewards(uint128,address,uint128)(validatorId_1,beneficiary_1,amount_1)
Internal call...
_redeemRewards
validatorId
beneficiary
amount
Function: _redeemRewards
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _redeemRewards
Function Visibility: internal
clearning node...
clearing ir...?
validatorId_1(uint128) := ϕ(['validatorId_1', 'validatorId_1'])
has variable
[i] validatorId cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
beneficiary_1(address) := ϕ(['beneficiary_1', 'beneficiary_1'])
has variable
[i] beneficiary cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
amount_1(uint128) := ϕ(['amount_1'])
has variable
[i] amount cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
totalGlobalShares_12(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
has variable
clearing ir...?
globalExchangeRate_14(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
has variable
clearing ir...?
validators_13(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
has variable
typecheckig node...
validatorId_1(uint128) := ϕ(['validatorId_1', 'validatorId_1'])
Function name: _redeemRewards
Phi
[i]Type for validatorId

Name: validatorId Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
beneficiary_1(address) := ϕ(['beneficiary_1', 'beneficiary_1'])
Function name: _redeemRewards
Phi
[i]Type for beneficiary

Name: beneficiary Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: beneficiary
Fields: 
Finance Type: undef
done.
amount_1(uint128) := ϕ(['amount_1'])
Function name: _redeemRewards
Phi
[i]Type for amount

Name: amount Function: _redeemRewards
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalGlobalShares_12(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
Function name: _redeemRewards
Phi
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
globalExchangeRate_14(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
Function name: _redeemRewards
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
validators_13(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: _redeemRewards
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_167 = CONVERT 0 to address
has variable
[i] TMP_167 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_168(bool) = beneficiary_1 != TMP_167
has variable
[i] TMP_168 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_169(None) = SOLIDITY_CALL require(bool,string)(TMP_168,Invalid beneficiary)
typecheckig node...
TMP_167 = CONVERT 0 to address
Function name: _redeemRewards
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_167 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_167

Name: TMP_167 Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_168(bool) = beneficiary_1 != TMP_167
Function name: _redeemRewards
[i]Type for TMP_168

Name: TMP_168 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_169(None) = SOLIDITY_CALL require(bool,string)(TMP_168,Invalid beneficiary)
[i]Type for TMP_169

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
clearing ir...?
globalExchangeRate_15(uint128) := ϕ(['globalExchangeRate_3'])
has variable
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
Internal call...
_updateGlobalExchangeRate
Function: _updateGlobalExchangeRate
ic
Internal cal param_cache
0
0
done.
globalExchangeRate_15(uint128) := ϕ(['globalExchangeRate_3'])
Function name: _redeemRewards
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
clearning node...
clearing ir...?
REF_60(DelegatedStaking.Validator) -> validators_14[validatorId_1]
has variable
clearing ir...?
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_60(DelegatedStaking.Validator)
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_60(DelegatedStaking.Validator) -> validators_14[validatorId_1]
Function name: _redeemRewards
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
validators
[i]Type for REF_60

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_60(DelegatedStaking.Validator) -> validators_14[validatorId_1]
XXXXX
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_60(DelegatedStaking.Validator)
Function name: _redeemRewards
asgn

Name: REF_60 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._updateValidator(DelegatedStaking.Validator)(v_1 (-> ['validators']))
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateValidator(DelegatedStaking.Validator)(v_1 (-> ['validators']))
Internal call...
_updateValidator
v
Function: _updateValidator
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
0
done.
clearning node...
clearing ir...?
REF_61(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
has variable
clearing ir...?
REF_62(DelegatedStaking.Staking) -> REF_61[msg.sender]
has variable
clearing ir...?
s_1 (-> ['v'])(DelegatedStaking.Staking) := REF_62(DelegatedStaking.Staking)
has variable
[i] s cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_61(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: _redeemRewards
MEMBER
v
stakings
_redeemRewards
v Fields:
^^^
[i]Type for REF_61

Name: v.stakings Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_62(DelegatedStaking.Staking) -> REF_61[msg.sender]
Function name: _redeemRewards
INDEX

Name: v.stakings Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _redeemRewards
not variable
REF_61
[i]Type for REF_62

Name: v.stakings Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_62(DelegatedStaking.Staking) -> REF_61[msg.sender]
XXXXX
s_1 (-> ['v'])(DelegatedStaking.Staking) := REF_62(DelegatedStaking.Staking)
Function name: _redeemRewards
asgn

Name: v.stakings Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for s

Name: s Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_63(uint128) -> s_1 (-> ['v']).shares
has variable
clearing ir...?
REF_64(uint128) -> v_1 (-> ['validators']).exchangeRate
has variable
clearing ir...?
TMP_172(uint128) = INTERNAL_CALL, DelegatedStaking._sharesToTokens(uint128,uint128)(REF_63,REF_64)
has variable
[i] TMP_172 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_65(uint128) -> s_1 (-> ['v']).staked
has variable
clearing ir...?
TMP_173(uint128) = TMP_172 (c)- REF_65
has variable
[i] TMP_173 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
rewards_1(uint128) := TMP_173(uint128)
has variable
[i] rewards cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_63(uint128) -> s_1 (-> ['v']).shares
Function name: _redeemRewards
MEMBER
s
shares
_redeemRewards
s Fields:
^^^
[i]Type for REF_63

Name: s.shares Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_64(uint128) -> v_1 (-> ['validators']).exchangeRate
Function name: _redeemRewards
MEMBER
v
exchangeRate
_redeemRewards
v Fields:
stakings
^^^
[i]Type for REF_64

Name: v.exchangeRate Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.exchangeRate Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: exchangeRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_172(uint128) = INTERNAL_CALL, DelegatedStaking._sharesToTokens(uint128,uint128)(REF_63,REF_64)
Function name: _redeemRewards
Internal call...
_sharesToTokens
REF_63
REF_64
Function: _sharesToTokens
ic
Internal cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _sharesToTokens
Function Visibility: internal
clearning node...
clearing ir...?
sharesN_1(uint128) := ϕ(['REF_145', 'REF_133', 'REF_6', 'REF_138', 'REF_63'])
has variable
[i] sharesN cleared

Name: sharesN Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
rate_1(uint128) := ϕ(['rateDifference_1', 'REF_64', 'TMP_286', 'REF_146', 'TMP_298'])
has variable
[i] rate cleared

Name: rate Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
divider_4(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
sharesN_1(uint128) := ϕ(['REF_145', 'REF_133', 'REF_6', 'REF_138', 'REF_63'])
Function name: _sharesToTokens
Phi
[i]Type for sharesN

Name: sharesN Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rate_1(uint128) := ϕ(['rateDifference_1', 'REF_64', 'TMP_286', 'REF_146', 'TMP_298'])
Function name: _sharesToTokens
Phi
[i]Type for rate

Name: rate Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
divider_4(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _sharesToTokens
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_94 = CONVERT sharesN_1 to uint256
has variable
[i] TMP_94 cleared

Name: TMP_94 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_95 = CONVERT rate_1 to uint256
has variable
[i] TMP_95 cleared

Name: TMP_95 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_96(uint256) = TMP_94 (c)* TMP_95
has variable
[i] TMP_96 cleared

Name: TMP_96 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_97(uint256) = TMP_96 (c)/ divider_4
has variable
[i] TMP_97 cleared

Name: TMP_97 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_98 = CONVERT TMP_97 to uint128
has variable
[i] TMP_98 cleared

Name: TMP_98 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
RETURN TMP_98
typecheckig node...
TMP_94 = CONVERT sharesN_1 to uint256
Function name: _sharesToTokens

Name: sharesN Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_94 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_94

Name: TMP_94 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_94 = CONVERT sharesN_1 to uint256
XXXXX
TMP_95 = CONVERT rate_1 to uint256
Function name: _sharesToTokens

Name: rate Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_95 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_95

Name: TMP_95 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
This IR caused addback:
TMP_95 = CONVERT rate_1 to uint256
XXXXX
TMP_96(uint256) = TMP_94 (c)* TMP_95
Function name: _sharesToTokens
testing mul...
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: -1
Final dest type: 112

Name: TMP_95 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_96 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_96

Name: TMP_96 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
This IR caused addback:
TMP_96(uint256) = TMP_94 (c)* TMP_95
XXXXX
TMP_97(uint256) = TMP_96 (c)/ divider_4
Function name: _sharesToTokens
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_97 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_97

Name: TMP_97 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
This IR caused addback:
TMP_97(uint256) = TMP_96 (c)/ divider_4
XXXXX
TMP_98 = CONVERT TMP_97 to uint128
Function name: _sharesToTokens

Name: TMP_97 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_98 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_98

Name: TMP_98 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
RETURN TMP_98
RETURN

Name: TMP_98 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
WORKLIST iteration 0 for function call "_sharesToTokens":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToTokens

Name: TMP_98 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
___
[i]Type for TMP_172

Name: TMP_172 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
REF_65(uint128) -> s_1 (-> ['v']).staked
Function name: _redeemRewards
MEMBER
s
staked
_redeemRewards
s Fields:
shares
^^^
[i]Type for REF_65

Name: s.staked Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_173(uint128) = TMP_172 (c)- REF_65
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_172 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: s.staked Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_172 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_173 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_173

Name: TMP_173 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
This IR caused addback:
TMP_173(uint128) = TMP_172 (c)- REF_65
XXXXX
rewards_1(uint128) := TMP_173(uint128)
Function name: _redeemRewards
asgn

Name: TMP_173 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: rewards Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for rewards

Name: rewards Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
clearning node...
clearing ir...?
REF_66(address) -> v_1 (-> ['validators'])._address
has variable
clearing ir...?
TMP_174(bool) = msg.sender == REF_66
has variable
[i] TMP_174 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_174
typecheckig node...
REF_66(address) -> v_1 (-> ['validators'])._address
Function name: _redeemRewards
MEMBER
v
_address
_redeemRewards
v Fields:
stakings
exchangeRate
^^^
[i]Type for REF_66

Name: v._address Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_174(bool) = msg.sender == REF_66
Function name: _redeemRewards
[i]Type for TMP_174

Name: TMP_174 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_174
Condition...
Conidtion: 
TMP_174
TMP_174
clearning node...
clearing ir...?
TMP_175(bool) = amount_1 == 0
has variable
[i] TMP_175 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_175
typecheckig node...
TMP_175(bool) = amount_1 == 0
Function name: _redeemRewards
[i]Type for TMP_175

Name: TMP_175 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_175
Condition...
Conidtion: 
TMP_175
TMP_175
clearning node...
clearing ir...?
TMP_185(bool) = amount_1 == 0
has variable
[i] TMP_185 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_185
typecheckig node...
TMP_185(bool) = amount_1 == 0
Function name: _redeemRewards
[i]Type for TMP_185

Name: TMP_185 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_185
Condition...
Conidtion: 
TMP_185
TMP_185
clearning node...
clearing ir...?
amount_3(uint128) := ϕ(['amount_1', 'amount_2'])
has variable
[i] amount cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
amount_3(uint128) := ϕ(['amount_1', 'amount_2'])
Function name: _redeemRewards
Phi
[i]Type for amount

Name: amount Function: _redeemRewards
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_67(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
has variable
clearing ir...?
TMP_176(uint128) = rewards_1 + REF_67
has variable
[i] TMP_176 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
amount_2(uint128) := TMP_176(uint128)
has variable
[i] amount cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_67(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
stakings
exchangeRate
_address
^^^
[i]Type for REF_67

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_176(uint128) = rewards_1 + REF_67
Function name: _redeemRewards

Name: TMP_176 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: rewards Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_176 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_176

Name: TMP_176 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
This IR caused addback:
TMP_176(uint128) = rewards_1 + REF_67
XXXXX
amount_2(uint128) := TMP_176(uint128)
Function name: _redeemRewards
asgn

Name: TMP_176 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: amount Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for amount

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
clearning node...
clearing ir...?
amount_5(uint128) := ϕ(['amount_1', 'amount_4'])
has variable
[i] amount cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
amount_5(uint128) := ϕ(['amount_1', 'amount_4'])
Function name: _redeemRewards
Phi
[i]Type for amount

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
clearning node...
clearing ir...?
amount_4(uint128) := rewards_1(uint128)
has variable
[i] amount cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
amount_4(uint128) := rewards_1(uint128)
Function name: _redeemRewards
asgn

Name: rewards Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: amount Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for amount

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
clearning node...
clearing ir...?
REF_68(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
has variable
clearing ir...?
TMP_177(uint128) = rewards_1 (c)+ REF_68
has variable
[i] TMP_177 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_178(bool) = TMP_177 >= amount_3
has variable
[i] TMP_178 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,Redeem amount > available)
typecheckig node...
REF_68(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
stakings
exchangeRate
_address
commissionAvailableToRedeem
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_68

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_177(uint128) = rewards_1 (c)+ REF_68
Function name: _redeemRewards

Name: TMP_177 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_177 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_177

Name: TMP_177 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_178(bool) = TMP_177 >= amount_3
Function name: _redeemRewards
testing gt...
lnorm: u rnorm: u
Finance type key: (12, 12)
Func: compare
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 112, Left type: 112
Left side: 12, Right side: 12, Checked Ratio: 12
True
Inconsistent updating of 12 by 112 and 112
Error with TMP_178 in function _redeemRewards
Error with: TMP_178 in function _redeemRewards
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fa332f713d0>]
[i]Type for TMP_178

Name: TMP_178 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,Redeem amount > available)
[i]Type for TMP_179

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_80(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
has variable
clearing ir...?
TMP_193(bool) = amount_3 < REF_80
has variable
[i] TMP_193 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_193
typecheckig node...
REF_80(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
stakings
exchangeRate
_address
commissionAvailableToRedeem
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_80

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_193(bool) = amount_3 < REF_80
Function name: _redeemRewards
testing lt...
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for TMP_193

Name: TMP_193 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: None
done.
CONDITION TMP_193
Condition...
Conidtion: 
TMP_193
TMP_193
clearning node...
clearing ir...?
TMP_186(bool) = rewards_1 >= amount_5
has variable
[i] TMP_186 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_187(None) = SOLIDITY_CALL require(bool,string)(TMP_186,Redeem amount > available)
typecheckig node...
TMP_186(bool) = rewards_1 >= amount_5
Function name: _redeemRewards
testing gt...
lnorm: u rnorm: u
Finance type key: (12, 12)
Func: compare
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: 112, Left type: 112
Left side: 12, Right side: 12, Checked Ratio: 12
True
Inconsistent updating of 12 by 112 and 112
Error with TMP_186 in function _redeemRewards
Error with: TMP_186 in function _redeemRewards
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fa332f713d0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fa332fc3f70>]
[i]Type for TMP_186

Name: TMP_186 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_187(None) = SOLIDITY_CALL require(bool,string)(TMP_186,Redeem amount > available)
[i]Type for TMP_187

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_81(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
has variable
clearing ir...?
TMP_194(uint128) = REF_81 (c)- amount_3
has variable
[i] TMP_194 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
commissionLeftOver_2(uint128) := TMP_194(uint128)
has variable
[i] commissionLeftOver cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_81(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
stakings
exchangeRate
_address
commissionAvailableToRedeem
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_81

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_194(uint128) = REF_81 (c)- amount_3
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: -1
Final dest type: 112

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_194 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_194

Name: TMP_194 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
commissionLeftOver_2(uint128) := TMP_194(uint128)
Function name: _redeemRewards
asgn

Name: TMP_194 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: commissionLeftOver Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for commissionLeftOver

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
clearning node...
clearing ir...?
commissionLeftOver_1(uint128) := 0(uint256)
has variable
[i] commissionLeftOver cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
commissionLeftOver_1(uint128) := 0(uint256)
Function name: _redeemRewards
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: commissionLeftOver Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for commissionLeftOver

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_75(uint128) -> v_1 (-> ['validators']).exchangeRate
has variable
clearing ir...?
TMP_188(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_5,REF_75)
has variable
[i] TMP_188 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
validatorSharesRemove_scope_0_1(uint128) := TMP_188(uint128)
has variable
[i] validatorSharesRemove_scope_0 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_75(uint128) -> v_1 (-> ['validators']).exchangeRate
Function name: _redeemRewards
MEMBER
v
exchangeRate
_redeemRewards
v Fields:
stakings
exchangeRate
_address
commissionAvailableToRedeem
^^^

Name: exchangeRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_75

Name: v.exchangeRate Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.exchangeRate Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: exchangeRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_188(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_5,REF_75)
Function name: _redeemRewards
Internal call...
_tokensToShares
amount
REF_75
Function: _tokensToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 112
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _tokensToShares
Function Visibility: internal
clearning node...
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
has variable
[i] rate cleared

Name: rate Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
Function name: _tokensToShares
Phi
[i]Type for amount

Name: amount Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
Function name: _tokensToShares
Phi
[i]Type for rate

Name: rate Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _tokensToShares
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99 = CONVERT amount_1 to uint256
has variable
[i] TMP_99 cleared

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_100(uint256) = TMP_99 (c)* divider_5
has variable
[i] TMP_100 cleared

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
clearing ir...?
TMP_101 = CONVERT rate_1 to uint256
has variable
[i] TMP_101 cleared

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
TMP_102(uint256) = TMP_100 (c)/ TMP_101
has variable
[i] TMP_102 cleared

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
clearing ir...?
TMP_103 = CONVERT TMP_102 to uint128
has variable
[i] TMP_103 cleared

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
clearing ir...?
RETURN TMP_103
typecheckig node...
TMP_99 = CONVERT amount_1 to uint256
Function name: _tokensToShares

Name: amount Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_99

Name: TMP_99 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_100(uint256) = TMP_99 (c)* divider_5
Function name: _tokensToShares
testing mul...
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_100

Name: TMP_100 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_101 = CONVERT rate_1 to uint256
Function name: _tokensToShares

Name: rate Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for TMP_101

Name: TMP_101 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(uint256) = TMP_100 (c)/ TMP_101
Function name: _tokensToShares
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_102

Name: TMP_102 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_103 = CONVERT TMP_102 to uint128
Function name: _tokensToShares

Name: TMP_102 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_103

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
RETURN TMP_103
RETURN

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
WORKLIST iteration 0 for function call "_tokensToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _tokensToShares

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
___
[i]Type for TMP_188

Name: TMP_188 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
validatorSharesRemove_scope_0_1(uint128) := TMP_188(uint128)
Function name: _redeemRewards
asgn

Name: TMP_188 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: validatorSharesRemove_scope_0 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for validatorSharesRemove_scope_0

Name: validatorSharesRemove_scope_0 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
clearning node...
clearing ir...?
commissionLeftOver_3(uint128) := ϕ(['commissionLeftOver_1', 'commissionLeftOver_2'])
has variable
[i] commissionLeftOver cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
commissionLeftOver_3(uint128) := ϕ(['commissionLeftOver_1', 'commissionLeftOver_2'])
Function name: _redeemRewards
Phi
[i]Type for commissionLeftOver

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_180(bool) = commissionLeftOver_3 == 0
has variable
[i] TMP_180 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_180
typecheckig node...
TMP_180(bool) = commissionLeftOver_3 == 0
Function name: _redeemRewards
[i]Type for TMP_180

Name: TMP_180 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_180
Condition...
Conidtion: 
TMP_180
TMP_180
clearning node...
clearing ir...?
REF_69(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
has variable
clearing ir...?
TMP_181(uint128) = amount_3 (c)- REF_69
has variable
[i] TMP_181 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_70(uint128) -> v_1 (-> ['validators']).exchangeRate
has variable
clearing ir...?
TMP_182(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(TMP_181,REF_70)
has variable
[i] TMP_182 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
validatorSharesRemove_1(uint128) := TMP_182(uint128)
has variable
[i] validatorSharesRemove cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_69(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
stakings
exchangeRate
_address
commissionAvailableToRedeem
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_69

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_181(uint128) = amount_3 (c)- REF_69
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_181 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_181

Name: TMP_181 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
REF_70(uint128) -> v_1 (-> ['validators']).exchangeRate
Function name: _redeemRewards
MEMBER
v
exchangeRate
_redeemRewards
v Fields:
stakings
exchangeRate
_address
commissionAvailableToRedeem
^^^

Name: exchangeRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_70

Name: v.exchangeRate Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.exchangeRate Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: exchangeRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_182(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(TMP_181,REF_70)
Function name: _redeemRewards
Internal call...
_tokensToShares
TMP_181
REF_70
Function: _tokensToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 112
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _tokensToShares
Function Visibility: internal
clearning node...
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
has variable
[i] rate cleared

Name: rate Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
Function name: _tokensToShares
Phi
[i]Type for amount

Name: amount Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
Function name: _tokensToShares
Phi
[i]Type for rate

Name: rate Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _tokensToShares
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99 = CONVERT amount_1 to uint256
has variable
[i] TMP_99 cleared

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_100(uint256) = TMP_99 (c)* divider_5
has variable
[i] TMP_100 cleared

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_101 = CONVERT rate_1 to uint256
has variable
[i] TMP_101 cleared

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_102(uint256) = TMP_100 (c)/ TMP_101
has variable
[i] TMP_102 cleared

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_103 = CONVERT TMP_102 to uint128
has variable
[i] TMP_103 cleared

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
RETURN TMP_103
typecheckig node...
TMP_99 = CONVERT amount_1 to uint256
Function name: _tokensToShares

Name: amount Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_99

Name: TMP_99 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_100(uint256) = TMP_99 (c)* divider_5
Function name: _tokensToShares
testing mul...
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_100

Name: TMP_100 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_101 = CONVERT rate_1 to uint256
Function name: _tokensToShares

Name: rate Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_101

Name: TMP_101 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(uint256) = TMP_100 (c)/ TMP_101
Function name: _tokensToShares
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_102

Name: TMP_102 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_103 = CONVERT TMP_102 to uint128
Function name: _tokensToShares

Name: TMP_102 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_103

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
RETURN TMP_103
RETURN

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
WORKLIST iteration 0 for function call "_tokensToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _tokensToShares

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
___
[i]Type for TMP_182

Name: TMP_182 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
validatorSharesRemove_1(uint128) := TMP_182(uint128)
Function name: _redeemRewards
asgn

Name: TMP_182 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: validatorSharesRemove Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for validatorSharesRemove

Name: validatorSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
clearning node...
clearing ir...?
REF_71(uint128) -> s_1 (-> ['v']).shares
has variable
clearing ir...?
s_2 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_1 (-> ['v'])"])
has variable
[i] s cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_71(-> s_2 (-> ['v'])) = REF_71 - validatorSharesRemove_1
has variable
clearing ir...?
v_8 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_2 (-> ['v'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_71(uint128) -> s_1 (-> ['v']).shares
Function name: _redeemRewards
MEMBER
s
shares
_redeemRewards
s Fields:
shares
staked
^^^

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_71

Name: s.shares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_2 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_1 (-> ['v'])"])
Function name: _redeemRewards
Phi
[i]Type for s

Name: s Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: shares
Finance Type: undef
done.
REF_71(-> s_2 (-> ['v'])) = REF_71 - validatorSharesRemove_1
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 112
Final dest type: 112

Name: REF_71 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: validatorSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: validatorSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_71 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for REF_71

Name: REF_71 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_71 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_8 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_2 (-> ['v'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_72(uint128) -> v_1 (-> ['validators']).totalShares
has variable
clearing ir...?
v_2 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_72(-> v_2 (-> ['validators'])) = REF_72 - validatorSharesRemove_1
has variable
clearing ir...?
validators_16(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_2 (-> ['validators'])"])
has variable
typecheckig node...
REF_72(uint128) -> v_1 (-> ['validators']).totalShares
Function name: _redeemRewards
MEMBER
v
totalShares
_redeemRewards
v Fields:
stakings
exchangeRate
_address
commissionAvailableToRedeem
^^^
[i]Type for REF_72

Name: v.totalShares Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_2 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares
Finance Type: undef
done.
REF_72(-> v_2 (-> ['validators'])) = REF_72 - validatorSharesRemove_1
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 112
Final dest type: 112

Name: REF_72 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: validatorSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: validatorSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_72 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for REF_72

Name: REF_72 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_72 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_72(-> v_2 (-> ['validators'])) = REF_72 - validatorSharesRemove_1
XXXXX
validators_16(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_2 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
clearing ir...?
v_3 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])", "v_2 (-> ['validators'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
v_3 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])", "v_2 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_76(uint128) -> s_1 (-> ['v']).shares
has variable
clearing ir...?
s_3 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_1 (-> ['v'])"])
has variable
[i] s cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_76(-> s_3 (-> ['v'])) = REF_76 - validatorSharesRemove_scope_0_1
has variable
clearing ir...?
v_9 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_3 (-> ['v'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_76(uint128) -> s_1 (-> ['v']).shares
Function name: _redeemRewards
MEMBER
s
shares
_redeemRewards
s Fields:
staked
shares
^^^

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_76

Name: s.shares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_3 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_1 (-> ['v'])"])
Function name: _redeemRewards
Phi
[i]Type for s

Name: s Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: shares
Finance Type: undef
done.
REF_76(-> s_3 (-> ['v'])) = REF_76 - validatorSharesRemove_scope_0_1
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 112
Final dest type: 112

Name: REF_76 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: validatorSharesRemove_scope_0 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: validatorSharesRemove_scope_0 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_76 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for REF_76

Name: REF_76 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_76 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_9 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_3 (-> ['v'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_77(uint128) -> v_1 (-> ['validators']).totalShares
has variable
clearing ir...?
v_5 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_77(-> v_5 (-> ['validators'])) = REF_77 - validatorSharesRemove_scope_0_1
has variable
clearing ir...?
validators_18(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_5 (-> ['validators'])"])
has variable
typecheckig node...
REF_77(uint128) -> v_1 (-> ['validators']).totalShares
Function name: _redeemRewards
MEMBER
v
totalShares
_redeemRewards
v Fields:
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_77

Name: v.totalShares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_5 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares
Finance Type: undef
done.
REF_77(-> v_5 (-> ['validators'])) = REF_77 - validatorSharesRemove_scope_0_1
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 112
Final dest type: 112

Name: REF_77 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: validatorSharesRemove_scope_0 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: validatorSharesRemove_scope_0 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_77 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for REF_77

Name: REF_77 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_77 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_18(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_5 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_73(uint128) -> v_3 (-> ['validators']).commissionAvailableToRedeem
has variable
clearing ir...?
TMP_183(uint128) = REF_73 (c)- commissionLeftOver_3
has variable
[i] TMP_183 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
Emit CommissionRewardRedeemed(validatorId_1,beneficiary_1,TMP_183)
typecheckig node...
REF_73(uint128) -> v_3 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
totalShares
^^^
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint128
uint128
Final Type: uint128
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: None
None
Final Type: None
[i]Type for REF_73

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_183(uint128) = REF_73 (c)- commissionLeftOver_3
Function name: _redeemRewards
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_183 Function: _redeemRewards
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_183

Name: TMP_183 Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
Emit CommissionRewardRedeemed(validatorId_1,beneficiary_1,TMP_183)
clearning node...
clearing ir...?
v_6 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_5 (-> ['validators'])", "v_4 (-> ['validators'])", "v_1 (-> ['validators'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
v_6 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_5 (-> ['validators'])", "v_4 (-> ['validators'])", "v_1 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: totalShares
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_74(uint128) -> v_3 (-> ['validators']).commissionAvailableToRedeem
has variable
clearing ir...?
v_4 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_3 (-> ['validators'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_74 (->v_4 (-> ['validators'])) := commissionLeftOver_3(uint128)
has variable
clearing ir...?
validators_17(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_4 (-> ['validators'])"])
has variable
typecheckig node...
REF_74(uint128) -> v_3 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
commissionAvailableToRedeem
totalShares
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_74

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_4 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_3 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionAvailableToRedeem, totalShares
Finance Type: undef
done.
REF_74 (->v_4 (-> ['validators'])) := commissionLeftOver_3(uint128)
Function name: _redeemRewards
asgn

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_74 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_74

Name: REF_74 Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_74 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_17(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_4 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._transferFromContract(address,uint128)(beneficiary_1,amount_5)
typecheckig node...
INTERNAL_CALL, DelegatedStaking._transferFromContract(address,uint128)(beneficiary_1,amount_5)
Internal call...
_transferFromContract
beneficiary
amount
Function: _transferFromContract
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: beneficiary
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 112
-100
added
xyz
Function name: _transferFromContract
Function Visibility: internal
clearning node...
clearing ir...?
to_1(address) := ϕ(['msg.sender', 'beneficiary_1'])
has variable
[i] to cleared

Name: to Function: _transferFromContract
Num: 
Den: 
Norm: u
LF: to
Fields: 
Finance Type: undef
clearing ir...?
amount_1(uint128) := ϕ(['toTransfer_3', 'amount_5', 'amount_1', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _transferFromContract
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CQT_2(IERC20Upgradeable) := ϕ(['CQT_0'])
has variable
typecheckig node...
to_1(address) := ϕ(['msg.sender', 'beneficiary_1'])
Function name: _transferFromContract
Phi
[i]Type for to

Name: to Function: _transferFromContract
Num: -1
Den: -1
Norm: u
LF: beneficiary
Fields: 
Finance Type: undef
done.
amount_1(uint128) := ϕ(['toTransfer_3', 'amount_5', 'amount_1', 'amount_1'])
Function name: _transferFromContract
Phi
[i]Type for amount

Name: amount Function: _transferFromContract
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
CQT_2(IERC20Upgradeable) := ϕ(['CQT_0'])
Function name: _transferFromContract
Phi
[i]Type for CQT

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['CQT_2', 'to_1', 'amount_1'] 
typecheckig node...
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['CQT_2', 'to_1', 'amount_1'] 
Library Call: safeTransfer
done.
WORKLIST iteration 0 for function call "_transferFromContract":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _transferFromContract
done.
clearning node...
clearing ir...?
REF_78(uint128) -> v_6 (-> ['validators']).disabledEpoch
has variable
clearing ir...?
TMP_190(bool) = REF_78 == 0
has variable
[i] TMP_190 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_190
typecheckig node...
REF_78(uint128) -> v_6 (-> ['validators']).disabledEpoch
Function name: _redeemRewards
MEMBER
v
disabledEpoch
_redeemRewards
v Fields:
commissionAvailableToRedeem
totalShares
^^^
[i]Type for REF_78

Name: v.disabledEpoch Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_190(bool) = REF_78 == 0
Function name: _redeemRewards
[i]Type for TMP_190

Name: TMP_190 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_190
Condition...
Conidtion: 
TMP_190
TMP_190
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_191(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_5,globalExchangeRate_20)
has variable
[i] TMP_191 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
globalSharesRemove_1(uint128) := TMP_191(uint128)
has variable
[i] globalSharesRemove cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_191(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_5,globalExchangeRate_20)
Function name: _redeemRewards
Internal call...
_tokensToShares
amount
globalExchangeRate
Function: _tokensToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 112
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 12
-100
added
xyz
Function name: _tokensToShares
Function Visibility: internal
clearning node...
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
has variable
[i] rate cleared

Name: rate Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
Function name: _tokensToShares
Phi
[i]Type for amount

Name: amount Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
Function name: _tokensToShares
Phi
[i]Type for rate

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _tokensToShares
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99 = CONVERT amount_1 to uint256
has variable
[i] TMP_99 cleared

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_100(uint256) = TMP_99 (c)* divider_5
has variable
[i] TMP_100 cleared

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_101 = CONVERT rate_1 to uint256
has variable
[i] TMP_101 cleared

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_102(uint256) = TMP_100 (c)/ TMP_101
has variable
[i] TMP_102 cleared

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_103 = CONVERT TMP_102 to uint128
has variable
[i] TMP_103 cleared

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
RETURN TMP_103
typecheckig node...
TMP_99 = CONVERT amount_1 to uint256
Function name: _tokensToShares

Name: amount Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_99

Name: TMP_99 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_100(uint256) = TMP_99 (c)* divider_5
Function name: _tokensToShares
testing mul...
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_100

Name: TMP_100 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_101 = CONVERT rate_1 to uint256
Function name: _tokensToShares

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_101

Name: TMP_101 Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_102(uint256) = TMP_100 (c)/ TMP_101
Function name: _tokensToShares
lnorm: u rnorm: u
Finance type key: (12, 12)
Error with TMP_102 in function _tokensToShares
Error with: TMP_102 in function _tokensToShares
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fa332f713d0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fa332fc3f70>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fa3362e7f40>]

Name: TMP_102 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_63 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_103 = CONVERT TMP_102 to uint128
Function name: _tokensToShares

Name: TMP_102 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_103

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_103
RETURN

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_tokensToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _tokensToShares

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_191

Name: TMP_191 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
globalSharesRemove_1(uint128) := TMP_191(uint128)
Function name: _redeemRewards
asgn

Name: TMP_191 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalSharesRemove Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for globalSharesRemove

Name: globalSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit RewardRedeemed(validatorId_1,beneficiary_1,amount_5)
typecheckig node...
Emit RewardRedeemed(validatorId_1,beneficiary_1,amount_5)
clearning node...
clearing ir...?
totalGlobalShares_20(uint128) = totalGlobalShares_19 - globalSharesRemove_1
has variable
typecheckig node...
totalGlobalShares_20(uint128) = totalGlobalShares_19 - globalSharesRemove_1
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalGlobalShares Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_79(uint128) -> v_6 (-> ['validators']).globalShares
has variable
clearing ir...?
v_7 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_6 (-> ['validators'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_79(-> v_7 (-> ['validators'])) = REF_79 - globalSharesRemove_1
has variable
clearing ir...?
validators_15(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_7 (-> ['validators'])"])
has variable
typecheckig node...
REF_79(uint128) -> v_6 (-> ['validators']).globalShares
Function name: _redeemRewards
MEMBER
v
globalShares
_redeemRewards
v Fields:
disabledEpoch
commissionAvailableToRedeem
totalShares
^^^
[i]Type for REF_79

Name: v.globalShares Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.globalShares Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_7 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_6 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, commissionAvailableToRedeem, totalShares
Finance Type: undef
done.
REF_79(-> v_7 (-> ['validators'])) = REF_79 - globalSharesRemove_1
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_79 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_79

Name: REF_79 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_79(-> v_7 (-> ['validators'])) = REF_79 - globalSharesRemove_1
XXXXX
validators_15(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_7 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_redeemRewards":
 New undefined nodes- 6
 Old undefined nodes- 0
typecheckig node...
validatorId_1(uint128) := ϕ(['validatorId_1', 'validatorId_1'])
Function name: _redeemRewards
Phi
[i]Type for validatorId

Name: validatorId Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
beneficiary_1(address) := ϕ(['beneficiary_1', 'beneficiary_1'])
Function name: _redeemRewards
Phi
[i]Type for beneficiary

Name: beneficiary Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: beneficiary
Fields: 
Finance Type: undef
done.
amount_1(uint128) := ϕ(['amount_1'])
Function name: _redeemRewards
Phi
[i]Type for amount

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
totalGlobalShares_12(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
Function name: _redeemRewards
Phi
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
globalExchangeRate_14(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
Function name: _redeemRewards
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
validators_13(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: _redeemRewards
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
TMP_167 = CONVERT 0 to address
Function name: _redeemRewards
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_167 Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_167

Name: TMP_167 Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_168(bool) = beneficiary_1 != TMP_167
Function name: _redeemRewards
[i]Type for TMP_168

Name: TMP_168 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_169(None) = SOLIDITY_CALL require(bool,string)(TMP_168,Invalid beneficiary)
[i]Type for TMP_169

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
Internal call...
_updateGlobalExchangeRate
Function: _updateGlobalExchangeRate
ic
Internal cal param_cache
0
0
done.
globalExchangeRate_15(uint128) := ϕ(['globalExchangeRate_3'])
Function name: _redeemRewards
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
typecheckig node...
REF_60(DelegatedStaking.Validator) -> validators_14[validatorId_1]
Function name: _redeemRewards
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
validators
[i]Type for REF_60

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_60(DelegatedStaking.Validator) -> validators_14[validatorId_1]
XXXXX
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_60(DelegatedStaking.Validator)
Function name: _redeemRewards
asgn

Name: REF_60 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateValidator(DelegatedStaking.Validator)(v_1 (-> ['validators']))
Internal call...
_updateValidator
v
Function: _updateValidator
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: [globalShares, stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares]
    fintype: -1
0
0
done.
typecheckig node...
REF_61(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: _redeemRewards
MEMBER
v
stakings
_redeemRewards
v Fields:
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_61

Name: v.stakings Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_62(DelegatedStaking.Staking) -> REF_61[msg.sender]
Function name: _redeemRewards
INDEX

Name: v.stakings Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _redeemRewards
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_62

Name: v.stakings Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_1 (-> ['v'])(DelegatedStaking.Staking) := REF_62(DelegatedStaking.Staking)
Function name: _redeemRewards
asgn

Name: v.stakings Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for s

Name: s Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
typecheckig node...
REF_63(uint128) -> s_1 (-> ['v']).shares
Function name: _redeemRewards
MEMBER
s
shares
_redeemRewards
s Fields:
staked
shares
^^^

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_63

Name: s.shares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_64(uint128) -> v_1 (-> ['validators']).exchangeRate
Function name: _redeemRewards
MEMBER
v
exchangeRate
_redeemRewards
v Fields:
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: exchangeRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_64

Name: v.exchangeRate Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.exchangeRate Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: exchangeRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_172(uint128) = INTERNAL_CALL, DelegatedStaking._sharesToTokens(uint128,uint128)(REF_63,REF_64)
Function name: _redeemRewards
Internal call...
_sharesToTokens
REF_63
REF_64
Function: _sharesToTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _sharesToTokens
Function Visibility: internal
clearning node...
clearing ir...?
sharesN_1(uint128) := ϕ(['REF_145', 'REF_133', 'REF_6', 'REF_138', 'REF_63'])
has variable
[i] sharesN cleared

Name: sharesN Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
rate_1(uint128) := ϕ(['rateDifference_1', 'REF_64', 'TMP_286', 'REF_146', 'TMP_298'])
has variable
[i] rate cleared

Name: rate Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
divider_4(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
sharesN_1(uint128) := ϕ(['REF_145', 'REF_133', 'REF_6', 'REF_138', 'REF_63'])
Function name: _sharesToTokens
Phi
[i]Type for sharesN

Name: sharesN Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rate_1(uint128) := ϕ(['rateDifference_1', 'REF_64', 'TMP_286', 'REF_146', 'TMP_298'])
Function name: _sharesToTokens
Phi
[i]Type for rate

Name: rate Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
divider_4(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _sharesToTokens
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_94 = CONVERT sharesN_1 to uint256
has variable
[i] TMP_94 cleared

Name: TMP_94 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_95 = CONVERT rate_1 to uint256
has variable
[i] TMP_95 cleared

Name: TMP_95 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_96(uint256) = TMP_94 (c)* TMP_95
has variable
[i] TMP_96 cleared

Name: TMP_96 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_97(uint256) = TMP_96 (c)/ divider_4
has variable
[i] TMP_97 cleared

Name: TMP_97 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_98 = CONVERT TMP_97 to uint128
has variable
[i] TMP_98 cleared

Name: TMP_98 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
RETURN TMP_98
typecheckig node...
TMP_94 = CONVERT sharesN_1 to uint256
Function name: _sharesToTokens

Name: sharesN Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_94 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_94

Name: TMP_94 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_95 = CONVERT rate_1 to uint256
Function name: _sharesToTokens

Name: rate Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_95 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_95

Name: TMP_95 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_96(uint256) = TMP_94 (c)* TMP_95
Function name: _sharesToTokens
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_95 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_96 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_96

Name: TMP_96 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_97(uint256) = TMP_96 (c)/ divider_4
Function name: _sharesToTokens
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_97 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_97

Name: TMP_97 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_98 = CONVERT TMP_97 to uint128
Function name: _sharesToTokens

Name: TMP_97 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_98 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_98

Name: TMP_98 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_98
RETURN

Name: TMP_98 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToTokens":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToTokens

Name: TMP_98 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_172

Name: TMP_172 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_65(uint128) -> s_1 (-> ['v']).staked
Function name: _redeemRewards
MEMBER
s
staked
_redeemRewards
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_65

Name: s.staked Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_173(uint128) = TMP_172 (c)- REF_65
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_172 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_173 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_173

Name: TMP_173 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rewards_1(uint128) := TMP_173(uint128)
Function name: _redeemRewards
asgn

Name: TMP_173 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: rewards Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewards

Name: rewards Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_66(address) -> v_1 (-> ['validators'])._address
Function name: _redeemRewards
MEMBER
v
_address
_redeemRewards
v Fields:
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_66

Name: v._address Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_174(bool) = msg.sender == REF_66
Function name: _redeemRewards
[i]Type for TMP_174

Name: TMP_174 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_174
Condition...
Conidtion: 
TMP_174
TMP_174
typecheckig node...
TMP_175(bool) = amount_1 == 0
Function name: _redeemRewards
[i]Type for TMP_175

Name: TMP_175 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_175
Condition...
Conidtion: 
TMP_175
TMP_175
typecheckig node...
TMP_185(bool) = amount_1 == 0
Function name: _redeemRewards
[i]Type for TMP_185

Name: TMP_185 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_185
Condition...
Conidtion: 
TMP_185
TMP_185
typecheckig node...
amount_3(uint128) := ϕ(['amount_1', 'amount_2'])
Function name: _redeemRewards
Phi
[i]Type for amount

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
REF_67(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_67

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_176(uint128) = rewards_1 + REF_67
Function name: _redeemRewards

Name: TMP_176 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_176 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_176

Name: TMP_176 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_2(uint128) := TMP_176(uint128)
Function name: _redeemRewards
asgn

Name: TMP_176 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amount

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
amount_5(uint128) := ϕ(['amount_1', 'amount_4'])
Function name: _redeemRewards
Phi
[i]Type for amount

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
amount_4(uint128) := rewards_1(uint128)
Function name: _redeemRewards
asgn

Name: rewards Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amount

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_68(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_68

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_177(uint128) = rewards_1 (c)+ REF_68
Function name: _redeemRewards

Name: TMP_177 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_177 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_177

Name: TMP_177 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_178(bool) = TMP_177 >= amount_3
Function name: _redeemRewards
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_178

Name: TMP_178 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,Redeem amount > available)
[i]Type for TMP_179

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_80(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_80

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_193(bool) = amount_3 < REF_80
Function name: _redeemRewards
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_193

Name: TMP_193 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_193
Condition...
Conidtion: 
TMP_193
TMP_193
typecheckig node...
TMP_186(bool) = rewards_1 >= amount_5
Function name: _redeemRewards
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_186

Name: TMP_186 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_187(None) = SOLIDITY_CALL require(bool,string)(TMP_186,Redeem amount > available)
[i]Type for TMP_187

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_81(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_81

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_194(uint128) = REF_81 (c)- amount_3
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_194 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_194

Name: TMP_194 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
commissionLeftOver_2(uint128) := TMP_194(uint128)
Function name: _redeemRewards
asgn

Name: TMP_194 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for commissionLeftOver

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
commissionLeftOver_1(uint128) := 0(uint256)
Function name: _redeemRewards
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for commissionLeftOver

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_75(uint128) -> v_1 (-> ['validators']).exchangeRate
Function name: _redeemRewards
MEMBER
v
exchangeRate
_redeemRewards
v Fields:
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: exchangeRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_75

Name: v.exchangeRate Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.exchangeRate Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: exchangeRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_188(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_5,REF_75)
Function name: _redeemRewards
Internal call...
_tokensToShares
amount
REF_75
Function: _tokensToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _tokensToShares
Function Visibility: internal
clearning node...
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
has variable
[i] rate cleared

Name: rate Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
Function name: _tokensToShares
Phi
[i]Type for amount

Name: amount Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
Function name: _tokensToShares
Phi
[i]Type for rate

Name: rate Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _tokensToShares
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99 = CONVERT amount_1 to uint256
has variable
[i] TMP_99 cleared

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_100(uint256) = TMP_99 (c)* divider_5
has variable
[i] TMP_100 cleared

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_101 = CONVERT rate_1 to uint256
has variable
[i] TMP_101 cleared

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
TMP_102(uint256) = TMP_100 (c)/ TMP_101
has variable
[i] TMP_102 cleared

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_103 = CONVERT TMP_102 to uint128
has variable
[i] TMP_103 cleared

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
RETURN TMP_103
typecheckig node...
TMP_99 = CONVERT amount_1 to uint256
Function name: _tokensToShares

Name: amount Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_99

Name: TMP_99 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_100(uint256) = TMP_99 (c)* divider_5
Function name: _tokensToShares
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_100

Name: TMP_100 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_101 = CONVERT rate_1 to uint256
Function name: _tokensToShares

Name: rate Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for TMP_101

Name: TMP_101 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(uint256) = TMP_100 (c)/ TMP_101
Function name: _tokensToShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_103 = CONVERT TMP_102 to uint128
Function name: _tokensToShares

Name: TMP_102 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_103
RETURN

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_tokensToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _tokensToShares

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_188

Name: TMP_188 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validatorSharesRemove_scope_0_1(uint128) := TMP_188(uint128)
Function name: _redeemRewards
asgn

Name: TMP_188 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorSharesRemove_scope_0 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for validatorSharesRemove_scope_0

Name: validatorSharesRemove_scope_0 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
commissionLeftOver_3(uint128) := ϕ(['commissionLeftOver_1', 'commissionLeftOver_2'])
Function name: _redeemRewards
Phi
[i]Type for commissionLeftOver

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_180(bool) = commissionLeftOver_3 == 0
Function name: _redeemRewards
[i]Type for TMP_180

Name: TMP_180 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_180
Condition...
Conidtion: 
TMP_180
TMP_180
typecheckig node...
REF_69(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_69

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_181(uint128) = amount_3 (c)- REF_69
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_181 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_181

Name: TMP_181 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_70(uint128) -> v_1 (-> ['validators']).exchangeRate
Function name: _redeemRewards
MEMBER
v
exchangeRate
_redeemRewards
v Fields:
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: exchangeRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_70

Name: v.exchangeRate Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.exchangeRate Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: exchangeRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_182(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(TMP_181,REF_70)
Function name: _redeemRewards
Internal call...
_tokensToShares
TMP_181
REF_70
Function: _tokensToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _tokensToShares
Function Visibility: internal
clearning node...
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
has variable
[i] rate cleared

Name: rate Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
Function name: _tokensToShares
Phi
[i]Type for amount

Name: amount Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
Function name: _tokensToShares
Phi
[i]Type for rate

Name: rate Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _tokensToShares
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99 = CONVERT amount_1 to uint256
has variable
[i] TMP_99 cleared

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_100(uint256) = TMP_99 (c)* divider_5
has variable
[i] TMP_100 cleared

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_101 = CONVERT rate_1 to uint256
has variable
[i] TMP_101 cleared

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_102(uint256) = TMP_100 (c)/ TMP_101
has variable
[i] TMP_102 cleared

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_103 = CONVERT TMP_102 to uint128
has variable
[i] TMP_103 cleared

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
RETURN TMP_103
typecheckig node...
TMP_99 = CONVERT amount_1 to uint256
Function name: _tokensToShares

Name: amount Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_99

Name: TMP_99 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_100(uint256) = TMP_99 (c)* divider_5
Function name: _tokensToShares
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_100

Name: TMP_100 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_101 = CONVERT rate_1 to uint256
Function name: _tokensToShares

Name: rate Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_101

Name: TMP_101 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(uint256) = TMP_100 (c)/ TMP_101
Function name: _tokensToShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_103 = CONVERT TMP_102 to uint128
Function name: _tokensToShares

Name: TMP_102 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_103
RETURN

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_tokensToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _tokensToShares

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_182

Name: TMP_182 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validatorSharesRemove_1(uint128) := TMP_182(uint128)
Function name: _redeemRewards
asgn

Name: TMP_182 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for validatorSharesRemove

Name: validatorSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_71(uint128) -> s_1 (-> ['v']).shares
Function name: _redeemRewards
MEMBER
s
shares
_redeemRewards
s Fields:
staked
shares
^^^

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_71

Name: s.shares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_2 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_1 (-> ['v'])"])
Function name: _redeemRewards
Phi
[i]Type for s

Name: s Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
REF_71(-> s_2 (-> ['v'])) = REF_71 - validatorSharesRemove_1
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_71 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_71 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_71

Name: REF_71 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_71 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_8 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_2 (-> ['v'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares
Finance Type: undef
done.
typecheckig node...
REF_72(uint128) -> v_1 (-> ['validators']).totalShares
Function name: _redeemRewards
MEMBER
v
totalShares
_redeemRewards
v Fields:
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_72

Name: v.totalShares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_2 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares
Finance Type: undef
done.
REF_72(-> v_2 (-> ['validators'])) = REF_72 - validatorSharesRemove_1
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: REF_72 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: validatorSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_72 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for REF_72

Name: REF_72 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_72 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_16(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_2 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
v_3 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])", "v_2 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares
Finance Type: undef
done.
typecheckig node...
REF_76(uint128) -> s_1 (-> ['v']).shares
Function name: _redeemRewards
MEMBER
s
shares
_redeemRewards
s Fields:
staked
shares
^^^

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_76

Name: s.shares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_3 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_1 (-> ['v'])"])
Function name: _redeemRewards
Phi
[i]Type for s

Name: s Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
REF_76(-> s_3 (-> ['v'])) = REF_76 - validatorSharesRemove_scope_0_1
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_76 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorSharesRemove_scope_0 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorSharesRemove_scope_0 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_76 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_76

Name: REF_76 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_76 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_9 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_3 (-> ['v'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares
Finance Type: undef
done.
typecheckig node...
REF_77(uint128) -> v_1 (-> ['validators']).totalShares
Function name: _redeemRewards
MEMBER
v
totalShares
_redeemRewards
v Fields:
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_77

Name: v.totalShares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_5 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares
Finance Type: undef
done.
REF_77(-> v_5 (-> ['validators'])) = REF_77 - validatorSharesRemove_scope_0_1
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_77 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorSharesRemove_scope_0 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorSharesRemove_scope_0 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_77

Name: REF_77 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_18(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_5 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
REF_73(uint128) -> v_3 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_73

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_183(uint128) = REF_73 (c)- commissionLeftOver_3
Function name: _redeemRewards
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_183 Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_183

Name: TMP_183 Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
Emit CommissionRewardRedeemed(validatorId_1,beneficiary_1,TMP_183)
typecheckig node...
v_6 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_5 (-> ['validators'])", "v_4 (-> ['validators'])", "v_1 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, globalShares, stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares
Finance Type: undef
done.
typecheckig node...
REF_74(uint128) -> v_3 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
disabledEpoch
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_74

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_4 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_3 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, globalShares, stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares
Finance Type: undef
done.
REF_74 (->v_4 (-> ['validators'])) := commissionLeftOver_3(uint128)
Function name: _redeemRewards
asgn

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_74 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_74

Name: REF_74 Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_74 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_17(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_4 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._transferFromContract(address,uint128)(beneficiary_1,amount_5)
Internal call...
_transferFromContract
beneficiary
amount
Function: _transferFromContract
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: beneficiary
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _transferFromContract
Function Visibility: internal
clearning node...
clearing ir...?
to_1(address) := ϕ(['msg.sender', 'beneficiary_1'])
has variable
[i] to cleared

Name: to Function: _transferFromContract
Num: 
Den: 
Norm: u
LF: beneficiary
Fields: 
Finance Type: undef
clearing ir...?
amount_1(uint128) := ϕ(['toTransfer_3', 'amount_5', 'amount_1', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _transferFromContract
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
CQT_2(IERC20Upgradeable) := ϕ(['CQT_0'])
has variable
typecheckig node...
to_1(address) := ϕ(['msg.sender', 'beneficiary_1'])
Function name: _transferFromContract
Phi
[i]Type for to

Name: to Function: _transferFromContract
Num: -1
Den: -1
Norm: u
LF: beneficiary
Fields: 
Finance Type: undef
done.
amount_1(uint128) := ϕ(['toTransfer_3', 'amount_5', 'amount_1', 'amount_1'])
Function name: _transferFromContract
Phi
[i]Type for amount

Name: amount Function: _transferFromContract
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CQT_2(IERC20Upgradeable) := ϕ(['CQT_0'])
Function name: _transferFromContract
Phi
[i]Type for CQT

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['CQT_2', 'to_1', 'amount_1'] 
typecheckig node...
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['CQT_2', 'to_1', 'amount_1'] 
Library Call: safeTransfer
done.
WORKLIST iteration 0 for function call "_transferFromContract":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _transferFromContract
done.
typecheckig node...
REF_78(uint128) -> v_6 (-> ['validators']).disabledEpoch
Function name: _redeemRewards
MEMBER
v
disabledEpoch
_redeemRewards
v Fields:
disabledEpoch
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_78

Name: v.disabledEpoch Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_190(bool) = REF_78 == 0
Function name: _redeemRewards
[i]Type for TMP_190

Name: TMP_190 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_190
Condition...
Conidtion: 
TMP_190
TMP_190
typecheckig node...
typecheckig node...
TMP_191(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_5,globalExchangeRate_20)
Function name: _redeemRewards
Internal call...
_tokensToShares
amount
globalExchangeRate
Function: _tokensToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 12
-100
added
xyz
Function name: _tokensToShares
Function Visibility: internal
clearning node...
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
has variable
[i] rate cleared

Name: rate Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
Function name: _tokensToShares
Phi
[i]Type for amount

Name: amount Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
Function name: _tokensToShares
Phi
[i]Type for rate

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _tokensToShares
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99 = CONVERT amount_1 to uint256
has variable
[i] TMP_99 cleared

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_100(uint256) = TMP_99 (c)* divider_5
has variable
[i] TMP_100 cleared

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_101 = CONVERT rate_1 to uint256
has variable
[i] TMP_101 cleared

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_102(uint256) = TMP_100 (c)/ TMP_101
has variable
[i] TMP_102 cleared

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_103 = CONVERT TMP_102 to uint128
has variable
[i] TMP_103 cleared

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
RETURN TMP_103
typecheckig node...
TMP_99 = CONVERT amount_1 to uint256
Function name: _tokensToShares

Name: amount Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_99

Name: TMP_99 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_100(uint256) = TMP_99 (c)* divider_5
Function name: _tokensToShares
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_100

Name: TMP_100 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_101 = CONVERT rate_1 to uint256
Function name: _tokensToShares

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_101

Name: TMP_101 Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_102(uint256) = TMP_100 (c)/ TMP_101
Function name: _tokensToShares
lnorm: u rnorm: u
Dest type: 12, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 12, Left type: -1
Final dest type: 112

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: PIC_70 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_103 = CONVERT TMP_102 to uint128
Function name: _tokensToShares

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
RETURN TMP_103
RETURN

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
WORKLIST iteration 0 for function call "_tokensToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _tokensToShares

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
___
[i]Type for TMP_191

Name: TMP_191 Function: _redeemRewards
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
globalSharesRemove_1(uint128) := TMP_191(uint128)
Function name: _redeemRewards
asgn

Name: TMP_191 Function: _redeemRewards
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: globalSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for globalSharesRemove

Name: globalSharesRemove Function: _redeemRewards
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
Emit RewardRedeemed(validatorId_1,beneficiary_1,amount_5)
typecheckig node...
totalGlobalShares_20(uint128) = totalGlobalShares_19 - globalSharesRemove_1
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: -1
Final dest type: 112

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalSharesRemove Function: _redeemRewards
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: globalSharesRemove Function: _redeemRewards
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: totalGlobalShares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: _redeemRewards
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
REF_79(uint128) -> v_6 (-> ['validators']).globalShares
Function name: _redeemRewards
MEMBER
v
globalShares
_redeemRewards
v Fields:
disabledEpoch
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: globalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_79

Name: v.globalShares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.globalShares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_7 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_6 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, globalShares, stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares
Finance Type: undef
done.
REF_79(-> v_7 (-> ['validators'])) = REF_79 - globalSharesRemove_1
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 112
Final dest type: 112

Name: REF_79 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: globalSharesRemove Function: _redeemRewards
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: globalSharesRemove Function: _redeemRewards
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_79 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for REF_79

Name: REF_79 Function: _redeemRewards
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_79 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_15(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_7 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
WORKLIST iteration 1 for function call "_redeemRewards":
 New undefined nodes- 1
 Old undefined nodes- 6
typecheckig node...
validatorId_1(uint128) := ϕ(['validatorId_1', 'validatorId_1'])
Function name: _redeemRewards
Phi
[i]Type for validatorId

Name: validatorId Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
beneficiary_1(address) := ϕ(['beneficiary_1', 'beneficiary_1'])
Function name: _redeemRewards
Phi
[i]Type for beneficiary

Name: beneficiary Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: beneficiary
Fields: 
Finance Type: undef
done.
amount_1(uint128) := ϕ(['amount_1'])
Function name: _redeemRewards
Phi
[i]Type for amount

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalGlobalShares_12(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
Function name: _redeemRewards
Phi
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: global
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
globalExchangeRate_14(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
Function name: _redeemRewards
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
validators_13(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: _redeemRewards
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
TMP_167 = CONVERT 0 to address
Function name: _redeemRewards
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_167 Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_167

Name: TMP_167 Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_168(bool) = beneficiary_1 != TMP_167
Function name: _redeemRewards
[i]Type for TMP_168

Name: TMP_168 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_169(None) = SOLIDITY_CALL require(bool,string)(TMP_168,Invalid beneficiary)
[i]Type for TMP_169

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
Internal call...
_updateGlobalExchangeRate
Function: _updateGlobalExchangeRate
ic
Internal cal param_cache
0
0
done.
globalExchangeRate_15(uint128) := ϕ(['globalExchangeRate_3'])
Function name: _redeemRewards
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
typecheckig node...
REF_60(DelegatedStaking.Validator) -> validators_14[validatorId_1]
Function name: _redeemRewards
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
validators
[i]Type for REF_60

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_60(DelegatedStaking.Validator) -> validators_14[validatorId_1]
XXXXX
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_60(DelegatedStaking.Validator)
Function name: _redeemRewards
asgn

Name: REF_60 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateValidator(DelegatedStaking.Validator)(v_1 (-> ['validators']))
Internal call...
_updateValidator
v
Function: _updateValidator
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: [disabledEpoch, globalShares, stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares]
    fintype: -1
0
0
done.
typecheckig node...
REF_61(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: _redeemRewards
MEMBER
v
stakings
_redeemRewards
v Fields:
disabledEpoch
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_61

Name: v.stakings Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_62(DelegatedStaking.Staking) -> REF_61[msg.sender]
Function name: _redeemRewards
INDEX

Name: v.stakings Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _redeemRewards
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_62

Name: v.stakings Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_1 (-> ['v'])(DelegatedStaking.Staking) := REF_62(DelegatedStaking.Staking)
Function name: _redeemRewards
asgn

Name: v.stakings Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for s

Name: s Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
typecheckig node...
REF_63(uint128) -> s_1 (-> ['v']).shares
Function name: _redeemRewards
MEMBER
s
shares
_redeemRewards
s Fields:
staked
shares
^^^

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_63

Name: s.shares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_64(uint128) -> v_1 (-> ['validators']).exchangeRate
Function name: _redeemRewards
MEMBER
v
exchangeRate
_redeemRewards
v Fields:
disabledEpoch
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: exchangeRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_64

Name: v.exchangeRate Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.exchangeRate Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: exchangeRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_172(uint128) = INTERNAL_CALL, DelegatedStaking._sharesToTokens(uint128,uint128)(REF_63,REF_64)
Function name: _redeemRewards
Internal call...
_sharesToTokens
REF_63
REF_64
Function: _sharesToTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _sharesToTokens
Function Visibility: internal
clearning node...
clearing ir...?
sharesN_1(uint128) := ϕ(['REF_145', 'REF_133', 'REF_6', 'REF_138', 'REF_63'])
has variable
[i] sharesN cleared

Name: sharesN Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
rate_1(uint128) := ϕ(['rateDifference_1', 'REF_64', 'TMP_286', 'REF_146', 'TMP_298'])
has variable
[i] rate cleared

Name: rate Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
divider_4(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
sharesN_1(uint128) := ϕ(['REF_145', 'REF_133', 'REF_6', 'REF_138', 'REF_63'])
Function name: _sharesToTokens
Phi
[i]Type for sharesN

Name: sharesN Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rate_1(uint128) := ϕ(['rateDifference_1', 'REF_64', 'TMP_286', 'REF_146', 'TMP_298'])
Function name: _sharesToTokens
Phi
[i]Type for rate

Name: rate Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
divider_4(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _sharesToTokens
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_94 = CONVERT sharesN_1 to uint256
has variable
[i] TMP_94 cleared

Name: TMP_94 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_95 = CONVERT rate_1 to uint256
has variable
[i] TMP_95 cleared

Name: TMP_95 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_96(uint256) = TMP_94 (c)* TMP_95
has variable
[i] TMP_96 cleared

Name: TMP_96 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_97(uint256) = TMP_96 (c)/ divider_4
has variable
[i] TMP_97 cleared

Name: TMP_97 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_98 = CONVERT TMP_97 to uint128
has variable
[i] TMP_98 cleared

Name: TMP_98 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
RETURN TMP_98
typecheckig node...
TMP_94 = CONVERT sharesN_1 to uint256
Function name: _sharesToTokens

Name: sharesN Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_94 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_94

Name: TMP_94 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_95 = CONVERT rate_1 to uint256
Function name: _sharesToTokens

Name: rate Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_95 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_95

Name: TMP_95 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_96(uint256) = TMP_94 (c)* TMP_95
Function name: _sharesToTokens
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_95 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_96 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_96

Name: TMP_96 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_97(uint256) = TMP_96 (c)/ divider_4
Function name: _sharesToTokens
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_97 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_97

Name: TMP_97 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_98 = CONVERT TMP_97 to uint128
Function name: _sharesToTokens

Name: TMP_97 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_98 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_98

Name: TMP_98 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_98
RETURN

Name: TMP_98 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_sharesToTokens":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToTokens

Name: TMP_98 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_172

Name: TMP_172 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_65(uint128) -> s_1 (-> ['v']).staked
Function name: _redeemRewards
MEMBER
s
staked
_redeemRewards
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_65

Name: s.staked Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_173(uint128) = TMP_172 (c)- REF_65
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_172 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_173 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_173

Name: TMP_173 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rewards_1(uint128) := TMP_173(uint128)
Function name: _redeemRewards
asgn

Name: TMP_173 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: rewards Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewards

Name: rewards Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_66(address) -> v_1 (-> ['validators'])._address
Function name: _redeemRewards
MEMBER
v
_address
_redeemRewards
v Fields:
disabledEpoch
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_66

Name: v._address Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_174(bool) = msg.sender == REF_66
Function name: _redeemRewards
[i]Type for TMP_174

Name: TMP_174 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_174
Condition...
Conidtion: 
TMP_174
TMP_174
typecheckig node...
TMP_175(bool) = amount_1 == 0
Function name: _redeemRewards
[i]Type for TMP_175

Name: TMP_175 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_175
Condition...
Conidtion: 
TMP_175
TMP_175
typecheckig node...
TMP_185(bool) = amount_1 == 0
Function name: _redeemRewards
[i]Type for TMP_185

Name: TMP_185 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_185
Condition...
Conidtion: 
TMP_185
TMP_185
typecheckig node...
amount_3(uint128) := ϕ(['amount_1', 'amount_2'])
Function name: _redeemRewards
Phi
[i]Type for amount

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_67(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
disabledEpoch
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_67

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_176(uint128) = rewards_1 + REF_67
Function name: _redeemRewards

Name: TMP_176 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_176 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_176

Name: TMP_176 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
amount_2(uint128) := TMP_176(uint128)
Function name: _redeemRewards
asgn

Name: TMP_176 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amount

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
amount_5(uint128) := ϕ(['amount_1', 'amount_4'])
Function name: _redeemRewards
Phi
[i]Type for amount

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
amount_4(uint128) := rewards_1(uint128)
Function name: _redeemRewards
asgn

Name: rewards Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for amount

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_68(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
disabledEpoch
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_68

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_177(uint128) = rewards_1 (c)+ REF_68
Function name: _redeemRewards

Name: TMP_177 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_177 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_177

Name: TMP_177 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_178(bool) = TMP_177 >= amount_3
Function name: _redeemRewards
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_178

Name: TMP_178 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_179(None) = SOLIDITY_CALL require(bool,string)(TMP_178,Redeem amount > available)
[i]Type for TMP_179

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_80(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
disabledEpoch
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_80

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_193(bool) = amount_3 < REF_80
Function name: _redeemRewards
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_193

Name: TMP_193 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_193
Condition...
Conidtion: 
TMP_193
TMP_193
typecheckig node...
TMP_186(bool) = rewards_1 >= amount_5
Function name: _redeemRewards
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_186

Name: TMP_186 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_187(None) = SOLIDITY_CALL require(bool,string)(TMP_186,Redeem amount > available)
[i]Type for TMP_187

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_81(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
disabledEpoch
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_81

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_194(uint128) = REF_81 (c)- amount_3
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_194 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_194

Name: TMP_194 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
commissionLeftOver_2(uint128) := TMP_194(uint128)
Function name: _redeemRewards
asgn

Name: TMP_194 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for commissionLeftOver

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
commissionLeftOver_1(uint128) := 0(uint256)
Function name: _redeemRewards
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for commissionLeftOver

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_75(uint128) -> v_1 (-> ['validators']).exchangeRate
Function name: _redeemRewards
MEMBER
v
exchangeRate
_redeemRewards
v Fields:
disabledEpoch
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: exchangeRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_75

Name: v.exchangeRate Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.exchangeRate Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: exchangeRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_188(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_5,REF_75)
Function name: _redeemRewards
Internal call...
_tokensToShares
amount
REF_75
Function: _tokensToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _tokensToShares
Function Visibility: internal
clearning node...
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
has variable
[i] rate cleared

Name: rate Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
Function name: _tokensToShares
Phi
[i]Type for amount

Name: amount Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
Function name: _tokensToShares
Phi
[i]Type for rate

Name: rate Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _tokensToShares
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99 = CONVERT amount_1 to uint256
has variable
[i] TMP_99 cleared

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_100(uint256) = TMP_99 (c)* divider_5
has variable
[i] TMP_100 cleared

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_101 = CONVERT rate_1 to uint256
has variable
[i] TMP_101 cleared

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
TMP_102(uint256) = TMP_100 (c)/ TMP_101
has variable
[i] TMP_102 cleared

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_103 = CONVERT TMP_102 to uint128
has variable
[i] TMP_103 cleared

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
RETURN TMP_103
typecheckig node...
TMP_99 = CONVERT amount_1 to uint256
Function name: _tokensToShares

Name: amount Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_99

Name: TMP_99 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_100(uint256) = TMP_99 (c)* divider_5
Function name: _tokensToShares
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_100

Name: TMP_100 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_101 = CONVERT rate_1 to uint256
Function name: _tokensToShares

Name: rate Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for TMP_101

Name: TMP_101 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(uint256) = TMP_100 (c)/ TMP_101
Function name: _tokensToShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_103 = CONVERT TMP_102 to uint128
Function name: _tokensToShares

Name: TMP_102 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_103

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_103
RETURN

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_tokensToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _tokensToShares

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_188

Name: TMP_188 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validatorSharesRemove_scope_0_1(uint128) := TMP_188(uint128)
Function name: _redeemRewards
asgn

Name: TMP_188 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorSharesRemove_scope_0 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for validatorSharesRemove_scope_0

Name: validatorSharesRemove_scope_0 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
commissionLeftOver_3(uint128) := ϕ(['commissionLeftOver_1', 'commissionLeftOver_2'])
Function name: _redeemRewards
Phi
[i]Type for commissionLeftOver

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_180(bool) = commissionLeftOver_3 == 0
Function name: _redeemRewards
[i]Type for TMP_180

Name: TMP_180 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_180
Condition...
Conidtion: 
TMP_180
TMP_180
typecheckig node...
REF_69(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
disabledEpoch
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_69

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_181(uint128) = amount_3 (c)- REF_69
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_181 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_181

Name: TMP_181 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_70(uint128) -> v_1 (-> ['validators']).exchangeRate
Function name: _redeemRewards
MEMBER
v
exchangeRate
_redeemRewards
v Fields:
disabledEpoch
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: exchangeRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_70

Name: v.exchangeRate Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.exchangeRate Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: exchangeRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_182(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(TMP_181,REF_70)
Function name: _redeemRewards
Internal call...
_tokensToShares
TMP_181
REF_70
Function: _tokensToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _tokensToShares
Function Visibility: internal
clearning node...
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
has variable
[i] rate cleared

Name: rate Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
Function name: _tokensToShares
Phi
[i]Type for amount

Name: amount Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
Function name: _tokensToShares
Phi
[i]Type for rate

Name: rate Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _tokensToShares
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99 = CONVERT amount_1 to uint256
has variable
[i] TMP_99 cleared

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_100(uint256) = TMP_99 (c)* divider_5
has variable
[i] TMP_100 cleared

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_101 = CONVERT rate_1 to uint256
has variable
[i] TMP_101 cleared

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_102(uint256) = TMP_100 (c)/ TMP_101
has variable
[i] TMP_102 cleared

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_103 = CONVERT TMP_102 to uint128
has variable
[i] TMP_103 cleared

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
RETURN TMP_103
typecheckig node...
TMP_99 = CONVERT amount_1 to uint256
Function name: _tokensToShares

Name: amount Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_99

Name: TMP_99 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_100(uint256) = TMP_99 (c)* divider_5
Function name: _tokensToShares
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_100

Name: TMP_100 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_101 = CONVERT rate_1 to uint256
Function name: _tokensToShares

Name: rate Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_101

Name: TMP_101 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(uint256) = TMP_100 (c)/ TMP_101
Function name: _tokensToShares
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_103 = CONVERT TMP_102 to uint128
Function name: _tokensToShares

Name: TMP_102 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_103
RETURN

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_tokensToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _tokensToShares

Name: TMP_103 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_182

Name: TMP_182 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validatorSharesRemove_1(uint128) := TMP_182(uint128)
Function name: _redeemRewards
asgn

Name: TMP_182 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for validatorSharesRemove

Name: validatorSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_71(uint128) -> s_1 (-> ['v']).shares
Function name: _redeemRewards
MEMBER
s
shares
_redeemRewards
s Fields:
staked
shares
^^^

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_71

Name: s.shares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_2 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_1 (-> ['v'])"])
Function name: _redeemRewards
Phi
[i]Type for s

Name: s Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
REF_71(-> s_2 (-> ['v'])) = REF_71 - validatorSharesRemove_1
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_71 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_71 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_71

Name: REF_71 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_71 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_8 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_2 (-> ['v'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, globalShares, stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares
Finance Type: undef
done.
typecheckig node...
REF_72(uint128) -> v_1 (-> ['validators']).totalShares
Function name: _redeemRewards
MEMBER
v
totalShares
_redeemRewards
v Fields:
disabledEpoch
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_72

Name: v.totalShares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_2 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, globalShares, stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares
Finance Type: undef
done.
REF_72(-> v_2 (-> ['validators'])) = REF_72 - validatorSharesRemove_1
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: REF_72 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: validatorSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorSharesRemove Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_72 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for REF_72

Name: REF_72 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_72 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_16(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_2 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
v_3 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])", "v_2 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, globalShares, stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares
Finance Type: undef
done.
typecheckig node...
REF_76(uint128) -> s_1 (-> ['v']).shares
Function name: _redeemRewards
MEMBER
s
shares
_redeemRewards
s Fields:
staked
shares
^^^

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_76

Name: s.shares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_3 (-> ['v'])(DelegatedStaking.Staking) := ϕ(["s_1 (-> ['v'])"])
Function name: _redeemRewards
Phi
[i]Type for s

Name: s Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
REF_76(-> s_3 (-> ['v'])) = REF_76 - validatorSharesRemove_scope_0_1
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_76 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorSharesRemove_scope_0 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorSharesRemove_scope_0 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_76 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_76

Name: REF_76 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_76 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_9 (-> ['v'])(DelegatedStaking.Validator) := ϕ(["s_3 (-> ['v'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, globalShares, stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares
Finance Type: undef
done.
typecheckig node...
REF_77(uint128) -> v_1 (-> ['validators']).totalShares
Function name: _redeemRewards
MEMBER
v
totalShares
_redeemRewards
v Fields:
disabledEpoch
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_77

Name: v.totalShares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_5 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, globalShares, stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares
Finance Type: undef
done.
REF_77(-> v_5 (-> ['validators'])) = REF_77 - validatorSharesRemove_scope_0_1
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_77 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorSharesRemove_scope_0 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorSharesRemove_scope_0 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_77

Name: REF_77 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_18(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_5 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
REF_73(uint128) -> v_3 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
disabledEpoch
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_73

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_183(uint128) = REF_73 (c)- commissionLeftOver_3
Function name: _redeemRewards
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_183 Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_183

Name: TMP_183 Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
Emit CommissionRewardRedeemed(validatorId_1,beneficiary_1,TMP_183)
typecheckig node...
v_6 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_5 (-> ['validators'])", "v_4 (-> ['validators'])", "v_1 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, globalShares, stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares
Finance Type: undef
done.
typecheckig node...
REF_74(uint128) -> v_3 (-> ['validators']).commissionAvailableToRedeem
Function name: _redeemRewards
MEMBER
v
commissionAvailableToRedeem
_redeemRewards
v Fields:
disabledEpoch
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_74

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_4 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_3 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, globalShares, stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares
Finance Type: undef
done.
REF_74 (->v_4 (-> ['validators'])) := commissionLeftOver_3(uint128)
Function name: _redeemRewards
asgn

Name: commissionLeftOver Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_74 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_74

Name: REF_74 Function: _redeemRewards
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_74 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_17(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_4 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._transferFromContract(address,uint128)(beneficiary_1,amount_5)
Internal call...
_transferFromContract
beneficiary
amount
Function: _transferFromContract
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: beneficiary
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _transferFromContract
Function Visibility: internal
clearning node...
clearing ir...?
to_1(address) := ϕ(['msg.sender', 'beneficiary_1'])
has variable
[i] to cleared

Name: to Function: _transferFromContract
Num: 
Den: 
Norm: u
LF: beneficiary
Fields: 
Finance Type: undef
clearing ir...?
amount_1(uint128) := ϕ(['toTransfer_3', 'amount_5', 'amount_1', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _transferFromContract
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CQT_2(IERC20Upgradeable) := ϕ(['CQT_0'])
has variable
typecheckig node...
to_1(address) := ϕ(['msg.sender', 'beneficiary_1'])
Function name: _transferFromContract
Phi
[i]Type for to

Name: to Function: _transferFromContract
Num: -1
Den: -1
Norm: u
LF: beneficiary
Fields: 
Finance Type: undef
done.
amount_1(uint128) := ϕ(['toTransfer_3', 'amount_5', 'amount_1', 'amount_1'])
Function name: _transferFromContract
Phi
[i]Type for amount

Name: amount Function: _transferFromContract
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CQT_2(IERC20Upgradeable) := ϕ(['CQT_0'])
Function name: _transferFromContract
Phi
[i]Type for CQT

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['CQT_2', 'to_1', 'amount_1'] 
typecheckig node...
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['CQT_2', 'to_1', 'amount_1'] 
Library Call: safeTransfer
done.
WORKLIST iteration 0 for function call "_transferFromContract":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _transferFromContract
done.
typecheckig node...
REF_78(uint128) -> v_6 (-> ['validators']).disabledEpoch
Function name: _redeemRewards
MEMBER
v
disabledEpoch
_redeemRewards
v Fields:
disabledEpoch
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_78

Name: v.disabledEpoch Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_190(bool) = REF_78 == 0
Function name: _redeemRewards
[i]Type for TMP_190

Name: TMP_190 Function: _redeemRewards
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_190
Condition...
Conidtion: 
TMP_190
TMP_190
typecheckig node...
typecheckig node...
TMP_191(uint128) = INTERNAL_CALL, DelegatedStaking._tokensToShares(uint128,uint128)(amount_5,globalExchangeRate_20)
Function name: _redeemRewards
Internal call...
_tokensToShares
amount
globalExchangeRate
Function: _tokensToShares
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 12
-100
added
xyz
Function name: _tokensToShares
Function Visibility: internal
clearning node...
clearing ir...?
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
has variable
[i] rate cleared

Name: rate Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
amount_1(uint128) := ϕ(['amount_1', 'amount_5', 'TMP_181', 'amount_1'])
Function name: _tokensToShares
Phi
[i]Type for amount

Name: amount Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rate_1(uint128) := ϕ(['globalExchangeRate_9', 'REF_35', 'REF_75', 'REF_70', 'globalExchangeRate_12', 'globalExchangeRate_20'])
Function name: _tokensToShares
Phi
[i]Type for rate

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
divider_5(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _tokensToShares
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99 = CONVERT amount_1 to uint256
has variable
[i] TMP_99 cleared

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_100(uint256) = TMP_99 (c)* divider_5
has variable
[i] TMP_100 cleared

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_101 = CONVERT rate_1 to uint256
has variable
[i] TMP_101 cleared

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_102(uint256) = TMP_100 (c)/ TMP_101
has variable
[i] TMP_102 cleared

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_103 = CONVERT TMP_102 to uint128
has variable
[i] TMP_103 cleared

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
RETURN TMP_103
typecheckig node...
TMP_99 = CONVERT amount_1 to uint256
Function name: _tokensToShares

Name: amount Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_99 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_99

Name: TMP_99 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_100(uint256) = TMP_99 (c)* divider_5
Function name: _tokensToShares
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_100

Name: TMP_100 Function: _tokensToShares
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_101 = CONVERT rate_1 to uint256
Function name: _tokensToShares

Name: rate Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_101 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_101

Name: TMP_101 Function: _tokensToShares
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_102(uint256) = TMP_100 (c)/ TMP_101
Function name: _tokensToShares
lnorm: u rnorm: u
Dest type: 12, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 12, Left type: -1
Final dest type: 112

Name: TMP_102 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: PIC_77 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_103 = CONVERT TMP_102 to uint128
Function name: _tokensToShares

Name: TMP_102 Function: _tokensToShares
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_103 Function: _tokensToShares
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
RETURN TMP_103
RETURN

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
WORKLIST iteration 0 for function call "_tokensToShares":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _tokensToShares

Name: TMP_103 Function: _tokensToShares
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
___
[i]Type for TMP_191

Name: TMP_191 Function: _redeemRewards
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
globalSharesRemove_1(uint128) := TMP_191(uint128)
Function name: _redeemRewards
asgn

Name: TMP_191 Function: _redeemRewards
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: globalSharesRemove Function: _redeemRewards
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for globalSharesRemove

Name: globalSharesRemove Function: _redeemRewards
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
Emit RewardRedeemed(validatorId_1,beneficiary_1,amount_5)
typecheckig node...
totalGlobalShares_20(uint128) = totalGlobalShares_19 - globalSharesRemove_1
Function name: _redeemRewards
lnorm: u rnorm: u
Finance type key: (12, 12)
Func: sub
Dest type: 12, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 112
Final dest type: 112

Name: totalGlobalShares Function: global
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: globalSharesRemove Function: _redeemRewards
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: totalGlobalShares Function: global
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: totalGlobalShares Function: _redeemRewards
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: _redeemRewards
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
REF_79(uint128) -> v_6 (-> ['validators']).globalShares
Function name: _redeemRewards
MEMBER
v
globalShares
_redeemRewards
v Fields:
disabledEpoch
globalShares
stakings
exchangeRate
_address
commissionAvailableToRedeem
totalShares
^^^

Name: globalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_79

Name: v.globalShares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.globalShares Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_7 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_6 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for v

Name: v Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, globalShares, stakings, exchangeRate, _address, commissionAvailableToRedeem, totalShares
Finance Type: undef
done.
REF_79(-> v_7 (-> ['validators'])) = REF_79 - globalSharesRemove_1
Function name: _redeemRewards
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 112
Final dest type: 112

Name: REF_79 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: globalSharesRemove Function: _redeemRewards
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: globalSharesRemove Function: _redeemRewards
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_79 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for REF_79

Name: REF_79 Function: _redeemRewards
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_79 Function: _redeemRewards
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_15(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_7 (-> ['validators'])"])
Function name: _redeemRewards
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
WORKLIST iteration 2 for function call "_redeemRewards":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: _redeemRewards
done.
This IR caused addback:
INTERNAL_CALL, DelegatedStaking._redeemRewards(uint128,address,uint128)(validatorId_1,beneficiary_1,amount_1)
XXXXX
WORKLIST iteration 0 for function call "redeemRewards":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: redeemRewards
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
unstakings
coolDownEnd
global
unstakings
amount
FIELDS:
unstakings Fields:
^^^
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
validators.unstakings
coolDownEnd
global
validators.unstakings
amount
FIELDS:
validators.unstakings Fields:
^^^
FIELDS:
validators Fields:
globalShares
delegated
exchangeRate
unstakings
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: addValidator
Function name: addValidator
Function Visibility (test): public
validator
Finding type for validator...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: validator Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
operator
Finding type for operator...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: operator Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
commissionRate
Finding type for commissionRate...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint128
uint128
Final Type: uint128

Name: commissionRate Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
divider_7(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
clearing ir...?
validatorsN_3(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
has variable
clearing ir...?
validators_19(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
has variable
typecheckig node...
divider_7(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: addValidator
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validatorsN_3(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
Function name: addValidator
Phi
[i]Type for validatorsN

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_19(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: addValidator
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
Internal cal param_cache
0
0
done.
clearning node...
clearing ir...?
TMP_199(bool) = commissionRate_1 < divider_8
has variable
[i] TMP_199 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_200(None) = SOLIDITY_CALL require(bool,string)(TMP_199,Rate must be less than 100%)
typecheckig node...
TMP_199(bool) = commissionRate_1 < divider_8
Function name: addValidator
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_199

Name: TMP_199 Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_200(None) = SOLIDITY_CALL require(bool,string)(TMP_199,Rate must be less than 100%)
[i]Type for TMP_200

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
N_1(uint128) := validatorsN_4(uint128)
has variable
[i] N cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
N_1(uint128) := validatorsN_4(uint128)
Function name: addValidator
asgn

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: N Function: addValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for N

Name: N Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_82(DelegatedStaking.Validator) -> validators_20[N_1]
has variable
clearing ir...?
REF_83(address) -> REF_82._address
has variable
clearing ir...?
validators_21(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_20'])
has variable
clearing ir...?
REF_83 (->validators_21) := validator_1(address)
has variable
typecheckig node...
REF_82(DelegatedStaking.Validator) -> validators_20[N_1]
Function name: addValidator
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
validators
[i]Type for REF_82

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_82(DelegatedStaking.Validator) -> validators_20[N_1]
XXXXX
REF_83(address) -> REF_82._address
Function name: addValidator
MEMBER
REF_82
_address
addValidator
REF_82 Fields:
^^^
[i]Type for REF_83

Name: REF_82._address Function: addValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_82._address Function: addValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_21(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_20'])
Function name: addValidator
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_83 (->validators_21) := validator_1(address)
Function name: addValidator
asgn

Name: validator Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: addValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_83

Name: REF_83 Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_84(DelegatedStaking.Validator) -> validators_21[N_1]
has variable
clearing ir...?
REF_85(address) -> REF_84.operator
has variable
clearing ir...?
validators_22(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_21'])
has variable
clearing ir...?
REF_85 (->validators_22) := operator_1(address)
has variable
typecheckig node...
REF_84(DelegatedStaking.Validator) -> validators_21[N_1]
Function name: addValidator
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_84

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_85(address) -> REF_84.operator
Function name: addValidator
MEMBER
validators
operator
global
validators Fields:
_address
globalShares
delegated
exchangeRate
unstakings
^^^
[i]Type for REF_85

Name: validators.operator Function: addValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validators.operator Function: addValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: operator Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_22(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_21'])
Function name: addValidator
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_85 (->validators_22) := operator_1(address)
Function name: addValidator
asgn

Name: operator Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_85 Function: addValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_85

Name: REF_85 Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_85 Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: operator Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_86(DelegatedStaking.Validator) -> validators_22[N_1]
has variable
clearing ir...?
REF_87(uint128) -> REF_86.commissionRate
has variable
clearing ir...?
validators_23(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_22'])
has variable
clearing ir...?
REF_87 (->validators_23) := commissionRate_1(uint128)
has variable
typecheckig node...
REF_86(DelegatedStaking.Validator) -> validators_22[N_1]
Function name: addValidator
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_86

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_87(uint128) -> REF_86.commissionRate
Function name: addValidator
MEMBER
validators
commissionRate
global
validators Fields:
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^
[i]Type for REF_87

Name: validators.commissionRate Function: addValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validators.commissionRate Function: addValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_23(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_22'])
Function name: addValidator
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_87 (->validators_23) := commissionRate_1(uint128)
Function name: addValidator
asgn

Name: commissionRate Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_87 Function: addValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_87

Name: REF_87 Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_87 Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit ValidatorAdded(N_1,validator_1,operator_1)
typecheckig node...
Emit ValidatorAdded(N_1,validator_1,operator_1)
clearning node...
clearing ir...?
validatorsN_5(uint128) = validatorsN_4 + 1
has variable
typecheckig node...
validatorsN_5(uint128) = validatorsN_4 + 1
Function name: addValidator
val: 1

Name: validatorsN Function: addValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: validatorsN Function: addValidator
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for validatorsN

Name: validatorsN Function: addValidator
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "addValidator":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
divider_7(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: addValidator
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validatorsN_3(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
Function name: addValidator
Phi
[i]Type for validatorsN

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
validators_19(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: addValidator
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
Internal cal param_cache
0
0
done.
typecheckig node...
TMP_199(bool) = commissionRate_1 < divider_8
Function name: addValidator
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_199

Name: TMP_199 Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_200(None) = SOLIDITY_CALL require(bool,string)(TMP_199,Rate must be less than 100%)
[i]Type for TMP_200

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
N_1(uint128) := validatorsN_4(uint128)
Function name: addValidator
asgn

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: N Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for N

Name: N Function: addValidator
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_82(DelegatedStaking.Validator) -> validators_20[N_1]
Function name: addValidator
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
validators
[i]Type for REF_82

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_82(DelegatedStaking.Validator) -> validators_20[N_1]
XXXXX
REF_83(address) -> REF_82._address
Function name: addValidator
MEMBER
REF_82
_address
addValidator
REF_82 Fields:
^^^
[i]Type for REF_83

Name: REF_82._address Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_82._address Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_21(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_20'])
Function name: addValidator
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_83 (->validators_21) := validator_1(address)
Function name: addValidator
asgn

Name: validator Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_83

Name: REF_83 Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_84(DelegatedStaking.Validator) -> validators_21[N_1]
Function name: addValidator
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_84

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_85(address) -> REF_84.operator
Function name: addValidator
MEMBER
validators
operator
global
validators Fields:
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^

Name: operator Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_85

Name: validators.operator Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validators.operator Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: operator Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_22(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_21'])
Function name: addValidator
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_85 (->validators_22) := operator_1(address)
Function name: addValidator
asgn

Name: operator Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_85 Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_85

Name: REF_85 Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_85 Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: operator Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_86(DelegatedStaking.Validator) -> validators_22[N_1]
Function name: addValidator
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_86

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_87(uint128) -> REF_86.commissionRate
Function name: addValidator
MEMBER
validators
commissionRate
global
validators Fields:
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_87

Name: validators.commissionRate Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validators.commissionRate Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_23(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_22'])
Function name: addValidator
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_87 (->validators_23) := commissionRate_1(uint128)
Function name: addValidator
asgn

Name: commissionRate Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_87 Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_87

Name: REF_87 Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_87 Function: addValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
Emit ValidatorAdded(N_1,validator_1,operator_1)
typecheckig node...
validatorsN_5(uint128) = validatorsN_4 + 1
Function name: addValidator
val: 1

Name: validatorsN Function: addValidator
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: validatorsN Function: addValidator
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for validatorsN

Name: validatorsN Function: addValidator
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "addValidator":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: addValidator
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
unstakings
coolDownEnd
global
unstakings
amount
FIELDS:
unstakings Fields:
^^^
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
validators.unstakings
coolDownEnd
global
validators.unstakings
amount
FIELDS:
validators.unstakings Fields:
^^^
FIELDS:
validators Fields:
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: disableValidator
Function name: disableValidator
Function Visibility (test): public
validatorId
Finding type for validatorId...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorId Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
endEpoch_12(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
has variable
clearing ir...?
totalGlobalShares_21(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
has variable
clearing ir...?
validators_24(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
has variable
typecheckig node...
endEpoch_12(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
Function name: disableValidator
Phi
[i]Type for endEpoch

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalGlobalShares_21(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
Function name: disableValidator
Phi
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_24(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: disableValidator
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_88(DelegatedStaking.Validator) -> validators_24[validatorId_1]
has variable
clearing ir...?
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_88(DelegatedStaking.Validator)
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_88(DelegatedStaking.Validator) -> validators_24[validatorId_1]
Function name: disableValidator
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_88

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_88(DelegatedStaking.Validator)
Function name: disableValidator
asgn

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef

Name: v Function: disableValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for v

Name: v Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_89(uint128) -> v_1 (-> ['validators']).disabledEpoch
has variable
clearing ir...?
TMP_203(bool) = REF_89 == 0
has variable
[i] TMP_203 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_204(None) = SOLIDITY_CALL require(bool,string)(TMP_203,Validator is already disabled)
typecheckig node...
REF_89(uint128) -> v_1 (-> ['validators']).disabledEpoch
Function name: disableValidator
MEMBER
v
disabledEpoch
disableValidator
v Fields:
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^
[i]Type for REF_89

Name: v.disabledEpoch Function: disableValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: disableValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_203(bool) = REF_89 == 0
Function name: disableValidator
[i]Type for TMP_203

Name: TMP_203 Function: disableValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_204(None) = SOLIDITY_CALL require(bool,string)(TMP_203,Validator is already disabled)
[i]Type for TMP_204

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_90(address) -> v_1 (-> ['validators'])._address
has variable
clearing ir...?
TMP_205(bool) = REF_90 == msg.sender
has variable
[i] TMP_205 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_206(address) = INTERNAL_CALL, OwnableUpgradeable.owner()()
has variable
[i] TMP_206 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_207(bool) = msg.sender == TMP_206
has variable
[i] TMP_207 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_208(bool) = TMP_205 || TMP_207
has variable
[i] TMP_208 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_209(None) = SOLIDITY_CALL require(bool,string)(TMP_208,Caller is not owner or validator)
typecheckig node...
REF_90(address) -> v_1 (-> ['validators'])._address
Function name: disableValidator
MEMBER
v
_address
disableValidator
v Fields:
disabledEpoch
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_90

Name: v._address Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_205(bool) = REF_90 == msg.sender
Function name: disableValidator
[i]Type for TMP_205

Name: TMP_205 Function: disableValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_206(address) = INTERNAL_CALL, OwnableUpgradeable.owner()()
Function name: disableValidator
Internal call...
owner
Function: owner
ic
Internal cal param_cache
0
0

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_206 Function: disableValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_207(bool) = msg.sender == TMP_206
Function name: disableValidator
[i]Type for TMP_207

Name: TMP_207 Function: disableValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_208(bool) = TMP_205 || TMP_207
Function name: disableValidator
[i]Type for TMP_208

Name: TMP_208 Function: disableValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_209(None) = SOLIDITY_CALL require(bool,string)(TMP_208,Caller is not owner or validator)
[i]Type for TMP_209

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
Internal call...
_updateGlobalExchangeRate
Function: _updateGlobalExchangeRate
ic
Internal cal param_cache
0
0
done.
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._updateValidator(DelegatedStaking.Validator)(v_1 (-> ['validators']))
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateValidator(DelegatedStaking.Validator)(v_1 (-> ['validators']))
Internal call...
_updateValidator
v
Function: _updateValidator
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: [disabledEpoch, commissionRate, operator, _address, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333b54fd0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333ae0490>, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333ae0610>, <slither.core.variables.structure_variable.StructureVariable object at 0x7fa333ae0a90>]
    fintype: -1
0
0
done.
clearning node...
clearing ir...?
TMP_213 = CONVERT block.number to uint128
has variable
[i] TMP_213 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_214(bool) = TMP_213 < endEpoch_15
has variable
[i] TMP_214 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_214
typecheckig node...
TMP_213 = CONVERT block.number to uint128
Function name: disableValidator
[i]Type for TMP_213

Name: TMP_213 Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
TMP_214(bool) = TMP_213 < endEpoch_15
Function name: disableValidator
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_214

Name: TMP_214 Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_214
Condition...
Conidtion: 
TMP_214
TMP_214
clearning node...
clearing ir...?
REF_92(uint128) -> v_1 (-> ['validators']).disabledEpoch
has variable
clearing ir...?
TMP_215 = CONVERT block.number to uint128
has variable
[i] TMP_215 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
v_3 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_92 (->v_3 (-> ['validators'])) := TMP_215(uint128)
has variable
clearing ir...?
validators_26(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_3 (-> ['validators'])"])
has variable
typecheckig node...
REF_92(uint128) -> v_1 (-> ['validators']).disabledEpoch
Function name: disableValidator
MEMBER
v
disabledEpoch
disableValidator
v Fields:
disabledEpoch
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_92

Name: v.disabledEpoch Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_215 = CONVERT block.number to uint128
Function name: disableValidator
[i]Type for TMP_215

Name: TMP_215 Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
v_3 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
Function name: disableValidator
Phi
[i]Type for v

Name: v Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_92 (->v_3 (-> ['validators'])) := TMP_215(uint128)
Function name: disableValidator
asgn

Name: TMP_215 Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef

Name: REF_92 Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_92

Name: REF_92 Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_92 Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_26(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_3 (-> ['validators'])"])
Function name: disableValidator
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_93(uint128) -> v_1 (-> ['validators']).disabledEpoch
has variable
clearing ir...?
v_2 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_93 (->v_2 (-> ['validators'])) := endEpoch_15(uint128)
has variable
clearing ir...?
validators_25(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_2 (-> ['validators'])"])
has variable
typecheckig node...
REF_93(uint128) -> v_1 (-> ['validators']).disabledEpoch
Function name: disableValidator
MEMBER
v
disabledEpoch
disableValidator
v Fields:
disabledEpoch
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_93

Name: v.disabledEpoch Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
v_2 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_1 (-> ['validators'])"])
Function name: disableValidator
Phi
[i]Type for v

Name: v Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_93 (->v_2 (-> ['validators'])) := endEpoch_15(uint128)
Function name: disableValidator
asgn

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_93 Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_93

Name: REF_93 Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_93 Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_25(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["v_2 (-> ['validators'])"])
Function name: disableValidator
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
clearing ir...?
v_4 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_2 (-> ['validators'])", "v_3 (-> ['validators'])"])
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
v_4 (-> ['validators'])(DelegatedStaking.Validator) := ϕ(["v_2 (-> ['validators'])", "v_3 (-> ['validators'])"])
Function name: disableValidator
Phi
[i]Type for v

Name: v Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_91(uint128) -> v_4 (-> ['validators']).globalShares
has variable
clearing ir...?
totalGlobalShares_25(uint128) = totalGlobalShares_24 - REF_91
has variable
typecheckig node...
REF_91(uint128) -> v_4 (-> ['validators']).globalShares
Function name: disableValidator
MEMBER
v
globalShares
disableValidator
v Fields:
disabledEpoch
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_91

Name: v.globalShares Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.globalShares Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalGlobalShares_25(uint128) = totalGlobalShares_24 - REF_91
Function name: disableValidator
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.globalShares Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.globalShares Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalGlobalShares Function: disableValidator
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: disableValidator
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit ValidatorDisabled(validatorId_1)
typecheckig node...
Emit ValidatorDisabled(validatorId_1)
WORKLIST iteration 0 for function call "disableValidator":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: disableValidator
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
unstakings
coolDownEnd
global
unstakings
amount
FIELDS:
unstakings Fields:
^^^
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
validators.unstakings
coolDownEnd
global
validators.unstakings
amount
FIELDS:
validators.unstakings Fields:
^^^
FIELDS:
validators Fields:
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: setAllocatedTokensPerEpoch
Function name: setAllocatedTokensPerEpoch
Function Visibility (test): public
amount
Finding type for amount...
uint128
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint128
uint128
Final Type: uint128

Name: amount Function: setAllocatedTokensPerEpoch
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
rewardsLocked_9(uint128) := ϕ(['rewardsLocked_5', 'rewardsLocked_3', 'rewardsLocked_0', 'rewardsLocked_10', 'rewardsLocked_6', 'rewardsLocked_8', 'rewardsLocked_2'])
has variable
clearing ir...?
endEpoch_16(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
has variable
typecheckig node...
rewardsLocked_9(uint128) := ϕ(['rewardsLocked_5', 'rewardsLocked_3', 'rewardsLocked_0', 'rewardsLocked_10', 'rewardsLocked_6', 'rewardsLocked_8', 'rewardsLocked_2'])
Function name: setAllocatedTokensPerEpoch
Phi
[i]Type for rewardsLocked

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_16(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
Function name: setAllocatedTokensPerEpoch
Phi
[i]Type for endEpoch

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
Internal cal param_cache
0
0
done.
clearning node...
clearing ir...?
TMP_216(bool) = amount_1 > 0
has variable
[i] TMP_216 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_217(None) = SOLIDITY_CALL require(bool,string)(TMP_216,Amount is 0)
typecheckig node...
TMP_216(bool) = amount_1 > 0
Function name: setAllocatedTokensPerEpoch
testing gt...
val: 0
val: 0
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_216

Name: TMP_216 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_217(None) = SOLIDITY_CALL require(bool,string)(TMP_216,Amount is 0)
[i]Type for TMP_217

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_218(bool) = endEpoch_17 != 0
has variable
[i] TMP_218 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_218
typecheckig node...
TMP_218(bool) = endEpoch_17 != 0
Function name: setAllocatedTokensPerEpoch
[i]Type for TMP_218

Name: TMP_218 Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_218
Condition...
Conidtion: 
TMP_218
TMP_218
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
Internal call...
_updateGlobalExchangeRate
Function: _updateGlobalExchangeRate
ic
Internal cal param_cache
0
0
done.
clearning node...
clearing ir...?
TMP_232 = CONVERT block.number to uint128
has variable
[i] TMP_232 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_233(bool) = endEpoch_18 > TMP_232
has variable
[i] TMP_233 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_233
typecheckig node...
TMP_232 = CONVERT block.number to uint128
Function name: setAllocatedTokensPerEpoch
[i]Type for TMP_232

Name: TMP_232 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
TMP_233(bool) = endEpoch_18 > TMP_232
Function name: setAllocatedTokensPerEpoch
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_232 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
True
[i]Type for TMP_233

Name: TMP_233 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_233
Condition...
Conidtion: 
TMP_233
TMP_233
clearning node...
clearing ir...?
TMP_234 = CONVERT block.number to uint128
has variable
[i] TMP_234 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_235(uint128) = endEpoch_18 (c)- TMP_234
has variable
[i] TMP_235 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
epochs_2(uint128) := TMP_235(uint128)
has variable
[i] epochs cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_234 = CONVERT block.number to uint128
Function name: setAllocatedTokensPerEpoch
[i]Type for TMP_234

Name: TMP_234 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
TMP_235(uint128) = endEpoch_18 (c)- TMP_234
Function name: setAllocatedTokensPerEpoch
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_234 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef

Name: TMP_234 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef

Name: TMP_235 Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_235

Name: TMP_235 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
epochs_2(uint128) := TMP_235(uint128)
Function name: setAllocatedTokensPerEpoch
asgn

Name: TMP_235 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef

Name: epochs Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for epochs

Name: epochs Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_227(uint128) = rewardsLocked_10 (c)% amount_1
has variable
[i] TMP_227 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
toTransfer_1(uint128) := TMP_227(uint128)
has variable
[i] toTransfer cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_227(uint128) = rewardsLocked_10 (c)% amount_1
Function name: setAllocatedTokensPerEpoch
[i]Type for TMP_227

Name: TMP_227 Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
toTransfer_1(uint128) := TMP_227(uint128)
Function name: setAllocatedTokensPerEpoch
asgn

Name: TMP_227 Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: toTransfer Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for toTransfer

Name: toTransfer Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
toTransfer_1(uint128) := TMP_227(uint128)
XXXXX
clearning node...
clearing ir...?
epochs_1(uint128) := 0(uint256)
has variable
[i] epochs cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
epochs_1(uint128) := 0(uint256)
Function name: setAllocatedTokensPerEpoch
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: epochs Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for epochs

Name: epochs Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
toTransfer_3(uint128) := ϕ(['toTransfer_2', 'toTransfer_0', 'toTransfer_1'])
has variable
[i] toTransfer cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
toTransfer_3(uint128) := ϕ(['toTransfer_2', 'toTransfer_0', 'toTransfer_1'])
Function name: setAllocatedTokensPerEpoch
Phi
[i]Type for toTransfer

Name: toTransfer Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
epochs_3(uint128) := ϕ(['epochs_1', 'epochs_2'])
has variable
[i] epochs cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
epochs_3(uint128) := ϕ(['epochs_1', 'epochs_2'])
Function name: setAllocatedTokensPerEpoch
Phi
[i]Type for epochs

Name: epochs Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
allocatedTokensPerEpoch_9(uint128) := amount_1(uint128)
has variable
typecheckig node...
allocatedTokensPerEpoch_9(uint128) := amount_1(uint128)
Function name: setAllocatedTokensPerEpoch
asgn

Name: amount Function: setAllocatedTokensPerEpoch
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: allocatedTokensPerEpoch Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for allocatedTokensPerEpoch

Name: allocatedTokensPerEpoch Function: setAllocatedTokensPerEpoch
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit EmissionRateChanged(amount_1)
typecheckig node...
Emit EmissionRateChanged(amount_1)
clearning node...
clearing ir...?
TMP_220(uint128) = allocatedTokensPerEpoch_8 (c)* epochs_3
has variable
[i] TMP_220 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
futureRewards_1(uint128) := TMP_220(uint128)
has variable
[i] futureRewards cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_220(uint128) = allocatedTokensPerEpoch_8 (c)* epochs_3
Function name: setAllocatedTokensPerEpoch
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: allocatedTokensPerEpoch Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_220 Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_220

Name: TMP_220 Function: setAllocatedTokensPerEpoch
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
futureRewards_1(uint128) := TMP_220(uint128)
Function name: setAllocatedTokensPerEpoch
asgn

Name: TMP_220 Function: setAllocatedTokensPerEpoch
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: futureRewards Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for futureRewards

Name: futureRewards Function: setAllocatedTokensPerEpoch
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_229(bool) = toTransfer_3 > 0
has variable
[i] TMP_229 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_229
typecheckig node...
TMP_229(bool) = toTransfer_3 > 0
Function name: setAllocatedTokensPerEpoch
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_229 Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_229

Name: TMP_229 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_229(bool) = toTransfer_3 > 0
XXXXX
CONDITION TMP_229
Condition...
Conidtion: 
TMP_229
TMP_229
clearning node...
typecheckig node...
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._transferFromContract(address,uint128)(msg.sender,toTransfer_3)
typecheckig node...
INTERNAL_CALL, DelegatedStaking._transferFromContract(address,uint128)(msg.sender,toTransfer_3)
Internal call...
_transferFromContract
msg.sender
toTransfer
Function: _transferFromContract
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _transferFromContract
Function Visibility: internal
clearning node...
clearing ir...?
to_1(address) := ϕ(['msg.sender', 'beneficiary_1'])
has variable
[i] to cleared

Name: to Function: _transferFromContract
Num: 
Den: 
Norm: u
LF: beneficiary
Fields: 
Finance Type: undef
clearing ir...?
amount_1(uint128) := ϕ(['toTransfer_3', 'amount_5', 'amount_1', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _transferFromContract
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CQT_2(IERC20Upgradeable) := ϕ(['CQT_0'])
has variable
typecheckig node...
to_1(address) := ϕ(['msg.sender', 'beneficiary_1'])
Function name: _transferFromContract
Phi
[i]Type for to

Name: to Function: _transferFromContract
Num: -1
Den: -1
Norm: u
LF: beneficiary
Fields: 
Finance Type: undef
done.
amount_1(uint128) := ϕ(['toTransfer_3', 'amount_5', 'amount_1', 'amount_1'])
Function name: _transferFromContract
Phi
[i]Type for amount

Name: amount Function: _transferFromContract
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CQT_2(IERC20Upgradeable) := ϕ(['CQT_0'])
Function name: _transferFromContract
Phi
[i]Type for CQT

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['CQT_2', 'to_1', 'amount_1'] 
typecheckig node...
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['CQT_2', 'to_1', 'amount_1'] 
Library Call: safeTransfer
done.
WORKLIST iteration 0 for function call "_transferFromContract":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _transferFromContract
done.
clearning node...
clearing ir...?
TMP_221(uint128) = futureRewards_1 (c)/ amount_1
has variable
[i] TMP_221 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
addEpochs_1(uint128) := TMP_221(uint128)
has variable
[i] addEpochs cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_221(uint128) = futureRewards_1 (c)/ amount_1
Function name: setAllocatedTokensPerEpoch
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_221 Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: PIC_85 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_221 Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_221

Name: TMP_221 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
addEpochs_1(uint128) := TMP_221(uint128)
Function name: setAllocatedTokensPerEpoch
asgn

Name: TMP_221 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: addEpochs Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for addEpochs

Name: addEpochs Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_222(uint128) = futureRewards_1 (c)% amount_1
has variable
[i] TMP_222 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
toTransfer_2(uint128) := TMP_222(uint128)
has variable
[i] toTransfer cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_222(uint128) = futureRewards_1 (c)% amount_1
Function name: setAllocatedTokensPerEpoch
[i]Type for TMP_222

Name: TMP_222 Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
toTransfer_2(uint128) := TMP_222(uint128)
Function name: setAllocatedTokensPerEpoch
asgn

Name: TMP_222 Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: toTransfer Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for toTransfer

Name: toTransfer Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
toTransfer_2(uint128) := TMP_222(uint128)
XXXXX
clearning node...
clearing ir...?
TMP_223(bool) = addEpochs_1 != 0
has variable
[i] TMP_223 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_224(None) = SOLIDITY_CALL require(bool,string)(TMP_223,This amount will end the program)
typecheckig node...
TMP_223(bool) = addEpochs_1 != 0
Function name: setAllocatedTokensPerEpoch
[i]Type for TMP_223

Name: TMP_223 Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_224(None) = SOLIDITY_CALL require(bool,string)(TMP_223,This amount will end the program)
[i]Type for TMP_224

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_225 = CONVERT block.number to uint128
has variable
[i] TMP_225 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_226(uint128) = TMP_225 + addEpochs_1
has variable
[i] TMP_226 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
endEpoch_19(uint128) := TMP_226(uint128)
has variable
typecheckig node...
TMP_225 = CONVERT block.number to uint128
Function name: setAllocatedTokensPerEpoch
[i]Type for TMP_225

Name: TMP_225 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
TMP_226(uint128) = TMP_225 + addEpochs_1
Function name: setAllocatedTokensPerEpoch

Name: TMP_226 Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: addEpochs Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_226 Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_226

Name: TMP_226 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_19(uint128) := TMP_226(uint128)
Function name: setAllocatedTokensPerEpoch
asgn

Name: TMP_226 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: endEpoch Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for endEpoch

Name: endEpoch Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "setAllocatedTokensPerEpoch":
 New undefined nodes- 3
 Old undefined nodes- 0
typecheckig node...
rewardsLocked_9(uint128) := ϕ(['rewardsLocked_5', 'rewardsLocked_3', 'rewardsLocked_0', 'rewardsLocked_10', 'rewardsLocked_6', 'rewardsLocked_8', 'rewardsLocked_2'])
Function name: setAllocatedTokensPerEpoch
Phi
[i]Type for rewardsLocked

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_16(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
Function name: setAllocatedTokensPerEpoch
Phi
[i]Type for endEpoch

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
Internal cal param_cache
0
0
done.
typecheckig node...
TMP_216(bool) = amount_1 > 0
Function name: setAllocatedTokensPerEpoch
testing gt...
val: 0
val: 0
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_216

Name: TMP_216 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_217(None) = SOLIDITY_CALL require(bool,string)(TMP_216,Amount is 0)
[i]Type for TMP_217

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_218(bool) = endEpoch_17 != 0
Function name: setAllocatedTokensPerEpoch
[i]Type for TMP_218

Name: TMP_218 Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_218
Condition...
Conidtion: 
TMP_218
TMP_218
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
Internal call...
_updateGlobalExchangeRate
Function: _updateGlobalExchangeRate
ic
Internal cal param_cache
0
0
done.
typecheckig node...
TMP_232 = CONVERT block.number to uint128
Function name: setAllocatedTokensPerEpoch
[i]Type for TMP_232

Name: TMP_232 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
TMP_233(bool) = endEpoch_18 > TMP_232
Function name: setAllocatedTokensPerEpoch
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_232 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
True
[i]Type for TMP_233

Name: TMP_233 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_233
Condition...
Conidtion: 
TMP_233
TMP_233
typecheckig node...
TMP_234 = CONVERT block.number to uint128
Function name: setAllocatedTokensPerEpoch
[i]Type for TMP_234

Name: TMP_234 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
TMP_235(uint128) = endEpoch_18 (c)- TMP_234
Function name: setAllocatedTokensPerEpoch
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_234 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef

Name: TMP_234 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef

Name: TMP_235 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: DelegatedStaking
Fields: 
Finance Type: undef
[i]Type for TMP_235

Name: TMP_235 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
epochs_2(uint128) := TMP_235(uint128)
Function name: setAllocatedTokensPerEpoch
asgn

Name: TMP_235 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: DelegatedStaking
Fields: 
Finance Type: undef

Name: epochs Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for epochs

Name: epochs Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_227(uint128) = rewardsLocked_10 (c)% amount_1
Function name: setAllocatedTokensPerEpoch
[i]Type for TMP_227

Name: TMP_227 Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
toTransfer_1(uint128) := TMP_227(uint128)
Function name: setAllocatedTokensPerEpoch
asgn

Name: TMP_227 Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: toTransfer Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for toTransfer

Name: toTransfer Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
toTransfer_1(uint128) := TMP_227(uint128)
XXXXX
typecheckig node...
epochs_1(uint128) := 0(uint256)
Function name: setAllocatedTokensPerEpoch
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: epochs Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for epochs

Name: epochs Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
toTransfer_3(uint128) := ϕ(['toTransfer_2', 'toTransfer_0', 'toTransfer_1'])
Function name: setAllocatedTokensPerEpoch
Phi
[i]Type for toTransfer

Name: toTransfer Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
epochs_3(uint128) := ϕ(['epochs_1', 'epochs_2'])
Function name: setAllocatedTokensPerEpoch
Phi
[i]Type for epochs

Name: epochs Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
allocatedTokensPerEpoch_9(uint128) := amount_1(uint128)
Function name: setAllocatedTokensPerEpoch
asgn

Name: amount Function: setAllocatedTokensPerEpoch
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: allocatedTokensPerEpoch Function: setAllocatedTokensPerEpoch
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for allocatedTokensPerEpoch

Name: allocatedTokensPerEpoch Function: setAllocatedTokensPerEpoch
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
Emit EmissionRateChanged(amount_1)
typecheckig node...
TMP_220(uint128) = allocatedTokensPerEpoch_8 (c)* epochs_3
Function name: setAllocatedTokensPerEpoch
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: allocatedTokensPerEpoch Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_220 Function: setAllocatedTokensPerEpoch
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_220

Name: TMP_220 Function: setAllocatedTokensPerEpoch
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
futureRewards_1(uint128) := TMP_220(uint128)
Function name: setAllocatedTokensPerEpoch
asgn

Name: TMP_220 Function: setAllocatedTokensPerEpoch
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: futureRewards Function: setAllocatedTokensPerEpoch
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for futureRewards

Name: futureRewards Function: setAllocatedTokensPerEpoch
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_229(bool) = toTransfer_3 > 0
Function name: setAllocatedTokensPerEpoch
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_229 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_229

Name: TMP_229 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_229(bool) = toTransfer_3 > 0
XXXXX
CONDITION TMP_229
Condition...
Conidtion: 
TMP_229
TMP_229
typecheckig node...
typecheckig node...
INTERNAL_CALL, DelegatedStaking._transferFromContract(address,uint128)(msg.sender,toTransfer_3)
Internal call...
_transferFromContract
msg.sender
toTransfer
Function: _transferFromContract
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
-100
added
xyz
Function name: _transferFromContract
Function Visibility: internal
clearning node...
clearing ir...?
to_1(address) := ϕ(['msg.sender', 'beneficiary_1'])
has variable
[i] to cleared

Name: to Function: _transferFromContract
Num: 
Den: 
Norm: u
LF: beneficiary
Fields: 
Finance Type: undef
clearing ir...?
amount_1(uint128) := ϕ(['toTransfer_3', 'amount_5', 'amount_1', 'amount_1'])
has variable
[i] amount cleared

Name: amount Function: _transferFromContract
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CQT_2(IERC20Upgradeable) := ϕ(['CQT_0'])
has variable
typecheckig node...
to_1(address) := ϕ(['msg.sender', 'beneficiary_1'])
Function name: _transferFromContract
Phi
[i]Type for to

Name: to Function: _transferFromContract
Num: -1
Den: -1
Norm: u
LF: beneficiary
Fields: 
Finance Type: undef
done.
amount_1(uint128) := ϕ(['toTransfer_3', 'amount_5', 'amount_1', 'amount_1'])
Function name: _transferFromContract
Phi
[i]Type for amount

Name: amount Function: _transferFromContract
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CQT_2(IERC20Upgradeable) := ϕ(['CQT_0'])
Function name: _transferFromContract
Phi
[i]Type for CQT

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['CQT_2', 'to_1', 'amount_1'] 
typecheckig node...
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['CQT_2', 'to_1', 'amount_1'] 
Library Call: safeTransfer
done.
WORKLIST iteration 0 for function call "_transferFromContract":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _transferFromContract
done.
typecheckig node...
TMP_221(uint128) = futureRewards_1 (c)/ amount_1
Function name: setAllocatedTokensPerEpoch
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_221 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: PIC_88 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_221 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_221

Name: TMP_221 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
addEpochs_1(uint128) := TMP_221(uint128)
Function name: setAllocatedTokensPerEpoch
asgn

Name: TMP_221 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: addEpochs Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for addEpochs

Name: addEpochs Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_222(uint128) = futureRewards_1 (c)% amount_1
Function name: setAllocatedTokensPerEpoch
[i]Type for TMP_222

Name: TMP_222 Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
toTransfer_2(uint128) := TMP_222(uint128)
Function name: setAllocatedTokensPerEpoch
asgn

Name: TMP_222 Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: toTransfer Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for toTransfer

Name: toTransfer Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
toTransfer_2(uint128) := TMP_222(uint128)
XXXXX
typecheckig node...
TMP_223(bool) = addEpochs_1 != 0
Function name: setAllocatedTokensPerEpoch
[i]Type for TMP_223

Name: TMP_223 Function: setAllocatedTokensPerEpoch
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_224(None) = SOLIDITY_CALL require(bool,string)(TMP_223,This amount will end the program)
[i]Type for TMP_224

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_225 = CONVERT block.number to uint128
Function name: setAllocatedTokensPerEpoch
[i]Type for TMP_225

Name: TMP_225 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
TMP_226(uint128) = TMP_225 + addEpochs_1
Function name: setAllocatedTokensPerEpoch

Name: TMP_226 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: addEpochs Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_226 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_226

Name: TMP_226 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_19(uint128) := TMP_226(uint128)
Function name: setAllocatedTokensPerEpoch
asgn

Name: TMP_226 Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: endEpoch Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for endEpoch

Name: endEpoch Function: setAllocatedTokensPerEpoch
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "setAllocatedTokensPerEpoch":
 New undefined nodes- 3
 Old undefined nodes- 3
Saving return values for: setAllocatedTokensPerEpoch
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
unstakings
coolDownEnd
global
unstakings
amount
FIELDS:
unstakings Fields:
^^^
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
validators.unstakings
coolDownEnd
global
validators.unstakings
amount
FIELDS:
validators.unstakings Fields:
^^^
FIELDS:
validators Fields:
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: setMaxCapMultiplier
Function name: setMaxCapMultiplier
Function Visibility (test): public
amount
Finding type for amount...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint128
uint128
Final Type: uint128

Name: amount Function: setMaxCapMultiplier
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
Internal cal param_cache
0
0
done.
clearning node...
clearing ir...?
TMP_236(bool) = amount_1 > 0
has variable
[i] TMP_236 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_237(None) = SOLIDITY_CALL require(bool,string)(TMP_236,Must be greater than 0)
typecheckig node...
TMP_236(bool) = amount_1 > 0
Function name: setMaxCapMultiplier
testing gt...
val: 0
val: 0
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_236

Name: TMP_236 Function: setMaxCapMultiplier
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_237(None) = SOLIDITY_CALL require(bool,string)(TMP_236,Must be greater than 0)
[i]Type for TMP_237

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
maxCapMultiplier_7(uint128) := amount_1(uint128)
has variable
typecheckig node...
maxCapMultiplier_7(uint128) := amount_1(uint128)
Function name: setMaxCapMultiplier
asgn

Name: amount Function: setMaxCapMultiplier
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxCapMultiplier Function: setMaxCapMultiplier
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for maxCapMultiplier

Name: maxCapMultiplier Function: setMaxCapMultiplier
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit MaxCapMultiplierChanged(amount_1)
typecheckig node...
Emit MaxCapMultiplierChanged(amount_1)
WORKLIST iteration 0 for function call "setMaxCapMultiplier":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: setMaxCapMultiplier
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
unstakings
coolDownEnd
global
unstakings
amount
FIELDS:
unstakings Fields:
^^^
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
validators.unstakings
coolDownEnd
global
validators.unstakings
amount
FIELDS:
validators.unstakings Fields:
^^^
FIELDS:
validators Fields:
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: setValidatorCommissionRate
Function name: setValidatorCommissionRate
Function Visibility (test): public
amount
Finding type for amount...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint128
uint128
Final Type: uint128

Name: amount Function: setValidatorCommissionRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
validatorId
Finding type for validatorId...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorId Function: setValidatorCommissionRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
divider_9(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
clearing ir...?
validators_27(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
has variable
typecheckig node...
divider_9(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: setValidatorCommissionRate
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_27(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: setValidatorCommissionRate
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
Internal cal param_cache
0
0
done.
clearning node...
clearing ir...?
TMP_240(bool) = amount_1 < divider_10
has variable
[i] TMP_240 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_241(None) = SOLIDITY_CALL require(bool,string)(TMP_240,Rate must be less than 100%)
typecheckig node...
TMP_240(bool) = amount_1 < divider_10
Function name: setValidatorCommissionRate
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_240

Name: TMP_240 Function: setValidatorCommissionRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_241(None) = SOLIDITY_CALL require(bool,string)(TMP_240,Rate must be less than 100%)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
Internal call...
_updateGlobalExchangeRate
Function: _updateGlobalExchangeRate
ic
Internal cal param_cache
0
0
done.
clearning node...
clearing ir...?
REF_94(DelegatedStaking.Validator) -> validators_29[validatorId_1]
has variable
clearing ir...?
INTERNAL_CALL, DelegatedStaking._updateValidator(DelegatedStaking.Validator)(REF_94)
typecheckig node...
REF_94(DelegatedStaking.Validator) -> validators_29[validatorId_1]
Function name: setValidatorCommissionRate
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
validators
[i]Type for REF_94

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_94(DelegatedStaking.Validator) -> validators_29[validatorId_1]
XXXXX
INTERNAL_CALL, DelegatedStaking._updateValidator(DelegatedStaking.Validator)(REF_94)
Internal call...
_updateValidator
REF_94
Function: _updateValidator
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
0
done.
clearning node...
clearing ir...?
REF_95(DelegatedStaking.Validator) -> validators_30[validatorId_1]
has variable
clearing ir...?
REF_96(uint128) -> REF_95.commissionRate
has variable
clearing ir...?
validators_31(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_30'])
has variable
clearing ir...?
REF_96 (->validators_31) := amount_1(uint128)
has variable
typecheckig node...
REF_95(DelegatedStaking.Validator) -> validators_30[validatorId_1]
Function name: setValidatorCommissionRate
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
validators
[i]Type for REF_95

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_95(DelegatedStaking.Validator) -> validators_30[validatorId_1]
XXXXX
REF_96(uint128) -> REF_95.commissionRate
Function name: setValidatorCommissionRate
MEMBER
REF_95
commissionRate
setValidatorCommissionRate
REF_95 Fields:
^^^
[i]Type for REF_96

Name: REF_95.commissionRate Function: setValidatorCommissionRate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_95.commissionRate Function: setValidatorCommissionRate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_31(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_30'])
Function name: setValidatorCommissionRate
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_96 (->validators_31) := amount_1(uint128)
Function name: setValidatorCommissionRate
asgn

Name: amount Function: setValidatorCommissionRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_96 Function: setValidatorCommissionRate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_96

Name: REF_96 Function: setValidatorCommissionRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_96 Function: setValidatorCommissionRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit ValidatorCommissionRateChanged(validatorId_1,amount_1)
typecheckig node...
Emit ValidatorCommissionRateChanged(validatorId_1,amount_1)
WORKLIST iteration 0 for function call "setValidatorCommissionRate":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
divider_9(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: setValidatorCommissionRate
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_27(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: setValidatorCommissionRate
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
Internal cal param_cache
0
0
done.
typecheckig node...
TMP_240(bool) = amount_1 < divider_10
Function name: setValidatorCommissionRate
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_240

Name: TMP_240 Function: setValidatorCommissionRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_241(None) = SOLIDITY_CALL require(bool,string)(TMP_240,Rate must be less than 100%)
[i]Type for TMP_241

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._updateGlobalExchangeRate()()
Internal call...
_updateGlobalExchangeRate
Function: _updateGlobalExchangeRate
ic
Internal cal param_cache
0
0
done.
typecheckig node...
REF_94(DelegatedStaking.Validator) -> validators_29[validatorId_1]
Function name: setValidatorCommissionRate
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
validators
[i]Type for REF_94

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_94(DelegatedStaking.Validator) -> validators_29[validatorId_1]
XXXXX
INTERNAL_CALL, DelegatedStaking._updateValidator(DelegatedStaking.Validator)(REF_94)
Internal call...
_updateValidator
REF_94
Function: _updateValidator
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
0
done.
typecheckig node...
REF_95(DelegatedStaking.Validator) -> validators_30[validatorId_1]
Function name: setValidatorCommissionRate
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
validators
[i]Type for REF_95

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_95(DelegatedStaking.Validator) -> validators_30[validatorId_1]
XXXXX
REF_96(uint128) -> REF_95.commissionRate
Function name: setValidatorCommissionRate
MEMBER
REF_95
commissionRate
setValidatorCommissionRate
REF_95 Fields:
^^^
[i]Type for REF_96

Name: REF_95.commissionRate Function: setValidatorCommissionRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_95.commissionRate Function: setValidatorCommissionRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_31(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_30'])
Function name: setValidatorCommissionRate
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_96 (->validators_31) := amount_1(uint128)
Function name: setValidatorCommissionRate
asgn

Name: amount Function: setValidatorCommissionRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_96 Function: setValidatorCommissionRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_96

Name: REF_96 Function: setValidatorCommissionRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_96 Function: setValidatorCommissionRate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
Emit ValidatorCommissionRateChanged(validatorId_1,amount_1)
WORKLIST iteration 1 for function call "setValidatorCommissionRate":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: setValidatorCommissionRate
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
unstakings
coolDownEnd
global
unstakings
amount
FIELDS:
unstakings Fields:
^^^
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
validators.unstakings
coolDownEnd
global
validators.unstakings
amount
FIELDS:
validators.unstakings Fields:
^^^
FIELDS:
validators Fields:
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: setValidatorMinStakedRequired
Function setValidatorMinStakedRequired not marked
Mark Iterations TRUE, proceeding anyway
Function name: setValidatorMinStakedRequired
Function Visibility (test): public
amount
Finding type for amount...
uint128
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
done.
clearning node...
clearing ir...?
validatorMinStakedRequired_7(uint128) := amount_1(uint128)
has variable
typecheckig node...
validatorMinStakedRequired_7(uint128) := amount_1(uint128)
Function name: setValidatorMinStakedRequired
asgn

Name: amount Function: setValidatorMinStakedRequired
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validatorMinStakedRequired Function: setValidatorMinStakedRequired
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for validatorMinStakedRequired

Name: validatorMinStakedRequired Function: setValidatorMinStakedRequired
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit ValidatorMinStakedRequiredChanged(amount_1)
typecheckig node...
Emit ValidatorMinStakedRequiredChanged(amount_1)
WORKLIST iteration 0 for function call "setValidatorMinStakedRequired":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
unstakings
coolDownEnd
global
unstakings
amount
FIELDS:
unstakings Fields:
^^^
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
validators.unstakings
coolDownEnd
global
validators.unstakings
amount
FIELDS:
validators.unstakings Fields:
^^^
FIELDS:
validators Fields:
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: redelegateUnstaked
Function name: redelegateUnstaked
Function Visibility (test): public
amount
Finding type for amount...
uint128
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint128
uint128
Final Type: uint128

Name: amount Function: redelegateUnstaked
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
oldValidatorId
Finding type for oldValidatorId...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint128
uint128
Final Type: uint128

Name: oldValidatorId Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
newValidatorId
Finding type for newValidatorId...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint128
uint128
Final Type: uint128

Name: newValidatorId Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
unstakingId
Finding type for unstakingId...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint128
uint128
Final Type: uint128

Name: unstakingId Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
validators_32(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
has variable
typecheckig node...
validators_32(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: redelegateUnstaked
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_97(DelegatedStaking.Validator) -> validators_32[oldValidatorId_1]
has variable
clearing ir...?
REF_98(uint128) -> REF_97.disabledEpoch
has variable
clearing ir...?
TMP_248(bool) = REF_98 != 0
has variable
[i] TMP_248 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_249(None) = SOLIDITY_CALL require(bool,string)(TMP_248,Validator is not disabled)
typecheckig node...
REF_97(DelegatedStaking.Validator) -> validators_32[oldValidatorId_1]
Function name: redelegateUnstaked
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_97

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_98(uint128) -> REF_97.disabledEpoch
Function name: redelegateUnstaked
MEMBER
validators
disabledEpoch
global
validators Fields:
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^
[i]Type for REF_98

Name: validators.disabledEpoch Function: redelegateUnstaked
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validators.disabledEpoch Function: redelegateUnstaked
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_248(bool) = REF_98 != 0
Function name: redelegateUnstaked
[i]Type for TMP_248

Name: TMP_248 Function: redelegateUnstaked
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_249(None) = SOLIDITY_CALL require(bool,string)(TMP_248,Validator is not disabled)
[i]Type for TMP_249

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_99(DelegatedStaking.Validator) -> validators_32[oldValidatorId_1]
has variable
clearing ir...?
REF_100(address) -> REF_99._address
has variable
clearing ir...?
TMP_250(bool) = REF_100 != msg.sender
has variable
[i] TMP_250 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_251(None) = SOLIDITY_CALL require(bool,string)(TMP_250,Validator cannot redelegate)
typecheckig node...
REF_99(DelegatedStaking.Validator) -> validators_32[oldValidatorId_1]
Function name: redelegateUnstaked
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings, disabledEpoch
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_99

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings, disabledEpoch
Finance Type: undef
done.
REF_100(address) -> REF_99._address
Function name: redelegateUnstaked
MEMBER
validators
_address
global
validators Fields:
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
disabledEpoch
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_100

Name: validators._address Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validators._address Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_250(bool) = REF_100 != msg.sender
Function name: redelegateUnstaked
[i]Type for TMP_250

Name: TMP_250 Function: redelegateUnstaked
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_251(None) = SOLIDITY_CALL require(bool,string)(TMP_250,Validator cannot redelegate)
[i]Type for TMP_251

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_101(DelegatedStaking.Validator) -> validators_32[oldValidatorId_1]
has variable
clearing ir...?
REF_102(mapping(address => DelegatedStaking.Unstaking[])) -> REF_101.unstakings
has variable
clearing ir...?
REF_103(DelegatedStaking.Unstaking[]) -> REF_102[msg.sender]
has variable
clearing ir...?
REF_104(DelegatedStaking.Unstaking) -> REF_103[unstakingId_1]
has variable
clearing ir...?
us_1 (-> ['validators'])(DelegatedStaking.Unstaking) := REF_104(DelegatedStaking.Unstaking)
has variable
[i] us cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_101(DelegatedStaking.Validator) -> validators_32[oldValidatorId_1]
Function name: redelegateUnstaked
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings, disabledEpoch
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_101

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings, disabledEpoch
Finance Type: undef
done.
REF_102(mapping(address => DelegatedStaking.Unstaking[])) -> REF_101.unstakings
Function name: redelegateUnstaked
MEMBER
validators
unstakings
global
validators Fields:
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
disabledEpoch
^^^

Name: unstakings Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_102

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: unstakings Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_103(DelegatedStaking.Unstaking[]) -> REF_102[msg.sender]
Function name: redelegateUnstaked
INDEX

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: redelegateUnstaked
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_103

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_104(DelegatedStaking.Unstaking) -> REF_103[unstakingId_1]
Function name: redelegateUnstaked
INDEX

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: redelegateUnstaked
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_104

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_1 (-> ['validators'])(DelegatedStaking.Unstaking) := REF_104(DelegatedStaking.Unstaking)
Function name: redelegateUnstaked
asgn

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us Function: redelegateUnstaked
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for us

Name: us Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_105(uint128) -> us_1 (-> ['validators']).amount
has variable
clearing ir...?
TMP_252(bool) = REF_105 >= amount_1
has variable
[i] TMP_252 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_253(None) = SOLIDITY_CALL require(bool,string)(TMP_252,Unstaking has less tokens)
typecheckig node...
REF_105(uint128) -> us_1 (-> ['validators']).amount
Function name: redelegateUnstaked
MEMBER
us
amount
redelegateUnstaked
us Fields:
^^^
[i]Type for REF_105

Name: us.amount Function: redelegateUnstaked
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: redelegateUnstaked
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_252(bool) = REF_105 >= amount_1
Function name: redelegateUnstaked
testing gt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: redelegateUnstaked
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_252 Function: redelegateUnstaked
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_252

Name: TMP_252 Function: redelegateUnstaked
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_252(bool) = REF_105 >= amount_1
XXXXX
TMP_253(None) = SOLIDITY_CALL require(bool,string)(TMP_252,Unstaking has less tokens)
[i]Type for TMP_253

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._stake(uint128,uint128,bool)(newValidatorId_1,amount_1,False)
typecheckig node...
INTERNAL_CALL, DelegatedStaking._stake(uint128,uint128,bool)(newValidatorId_1,amount_1,False)
Internal call...
_stake
newValidatorId
amount
False
Function: _stake
ic
val: False
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
0
done.
clearning node...
clearing ir...?
REF_106(uint128) -> us_1 (-> ['validators']).amount
has variable
clearing ir...?
us_2 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_1 (-> ['validators'])"])
has variable
[i] us cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_106(-> us_2 (-> ['validators'])) = REF_106 - amount_1
has variable
clearing ir...?
validators_33(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_2 (-> ['validators'])"])
has variable
typecheckig node...
REF_106(uint128) -> us_1 (-> ['validators']).amount
Function name: redelegateUnstaked
MEMBER
us
amount
redelegateUnstaked
us Fields:
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_106

Name: us.amount Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_2 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_1 (-> ['validators'])"])
Function name: redelegateUnstaked
Phi
[i]Type for us

Name: us Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: amount
Finance Type: undef
done.
REF_106(-> us_2 (-> ['validators'])) = REF_106 - amount_1
Function name: redelegateUnstaked
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_106 Function: redelegateUnstaked
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: redelegateUnstaked
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: redelegateUnstaked
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_106 Function: redelegateUnstaked
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_106

Name: REF_106 Function: redelegateUnstaked
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_106 Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_33(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_2 (-> ['validators'])"])
Function name: redelegateUnstaked
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_107(uint128) -> us_2 (-> ['validators']).amount
has variable
clearing ir...?
TMP_255(bool) = REF_107 == 0
has variable
[i] TMP_255 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_255
typecheckig node...
REF_107(uint128) -> us_2 (-> ['validators']).amount
Function name: redelegateUnstaked
MEMBER
us
amount
redelegateUnstaked
us Fields:
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_107

Name: us.amount Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_255(bool) = REF_107 == 0
Function name: redelegateUnstaked
[i]Type for TMP_255

Name: TMP_255 Function: redelegateUnstaked
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_255
Condition...
Conidtion: 
TMP_255
TMP_255
clearning node...
clearing ir...?
REF_108(uint128) -> us_2 (-> ['validators']).coolDownEnd
has variable
clearing ir...?
us_3 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_2 (-> ['validators'])"])
has variable
[i] us cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_108 (->us_3 (-> ['validators'])) := 0(uint256)
has variable
clearing ir...?
validators_34(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_3 (-> ['validators'])"])
has variable
typecheckig node...
REF_108(uint128) -> us_2 (-> ['validators']).coolDownEnd
Function name: redelegateUnstaked
MEMBER
us
coolDownEnd
redelegateUnstaked
us Fields:
amount
^^^
[i]Type for REF_108

Name: us.coolDownEnd Function: redelegateUnstaked
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.coolDownEnd Function: redelegateUnstaked
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_3 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_2 (-> ['validators'])"])
Function name: redelegateUnstaked
Phi
[i]Type for us

Name: us Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
done.
REF_108 (->us_3 (-> ['validators'])) := 0(uint256)
Function name: redelegateUnstaked
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_108 Function: redelegateUnstaked
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_108

Name: REF_108 Function: redelegateUnstaked
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_108 Function: redelegateUnstaked
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_34(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_3 (-> ['validators'])"])
Function name: redelegateUnstaked
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
Emit TransferredUnstake(oldValidatorId_1,newValidatorId_1,msg.sender,amount_1,unstakingId_1)
typecheckig node...
Emit TransferredUnstake(oldValidatorId_1,newValidatorId_1,msg.sender,amount_1,unstakingId_1)
WORKLIST iteration 0 for function call "redelegateUnstaked":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
validators_32(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: redelegateUnstaked
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
REF_97(DelegatedStaking.Validator) -> validators_32[oldValidatorId_1]
Function name: redelegateUnstaked
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_97

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_98(uint128) -> REF_97.disabledEpoch
Function name: redelegateUnstaked
MEMBER
validators
disabledEpoch
global
validators Fields:
disabledEpoch
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_98

Name: validators.disabledEpoch Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validators.disabledEpoch Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_248(bool) = REF_98 != 0
Function name: redelegateUnstaked
[i]Type for TMP_248

Name: TMP_248 Function: redelegateUnstaked
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_249(None) = SOLIDITY_CALL require(bool,string)(TMP_248,Validator is not disabled)
[i]Type for TMP_249

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_99(DelegatedStaking.Validator) -> validators_32[oldValidatorId_1]
Function name: redelegateUnstaked
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_99

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_100(address) -> REF_99._address
Function name: redelegateUnstaked
MEMBER
validators
_address
global
validators Fields:
disabledEpoch
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_100

Name: validators._address Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validators._address Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_250(bool) = REF_100 != msg.sender
Function name: redelegateUnstaked
[i]Type for TMP_250

Name: TMP_250 Function: redelegateUnstaked
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_251(None) = SOLIDITY_CALL require(bool,string)(TMP_250,Validator cannot redelegate)
[i]Type for TMP_251

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_101(DelegatedStaking.Validator) -> validators_32[oldValidatorId_1]
Function name: redelegateUnstaked
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_101

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_102(mapping(address => DelegatedStaking.Unstaking[])) -> REF_101.unstakings
Function name: redelegateUnstaked
MEMBER
validators
unstakings
global
validators Fields:
disabledEpoch
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^

Name: unstakings Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_102

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: unstakings Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_103(DelegatedStaking.Unstaking[]) -> REF_102[msg.sender]
Function name: redelegateUnstaked
INDEX

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: redelegateUnstaked
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_103

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_104(DelegatedStaking.Unstaking) -> REF_103[unstakingId_1]
Function name: redelegateUnstaked
INDEX

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: redelegateUnstaked
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_104

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_1 (-> ['validators'])(DelegatedStaking.Unstaking) := REF_104(DelegatedStaking.Unstaking)
Function name: redelegateUnstaked
asgn

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: amount
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for us

Name: us Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: amount
Finance Type: undef
done.
typecheckig node...
REF_105(uint128) -> us_1 (-> ['validators']).amount
Function name: redelegateUnstaked
MEMBER
us
amount
redelegateUnstaked
us Fields:
coolDownEnd
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_105

Name: us.amount Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_252(bool) = REF_105 >= amount_1
Function name: redelegateUnstaked
testing gt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[W] Initializing defined variable to constant
[i]Type for TMP_252

Name: TMP_252 Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_253(None) = SOLIDITY_CALL require(bool,string)(TMP_252,Unstaking has less tokens)
[i]Type for TMP_253

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._stake(uint128,uint128,bool)(newValidatorId_1,amount_1,False)
Internal call...
_stake
newValidatorId
amount
False
Function: _stake
ic
val: False
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
0
done.
typecheckig node...
REF_106(uint128) -> us_1 (-> ['validators']).amount
Function name: redelegateUnstaked
MEMBER
us
amount
redelegateUnstaked
us Fields:
coolDownEnd
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_106

Name: us.amount Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_2 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_1 (-> ['validators'])"])
Function name: redelegateUnstaked
Phi
[i]Type for us

Name: us Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
done.
REF_106(-> us_2 (-> ['validators'])) = REF_106 - amount_1
Function name: redelegateUnstaked
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_106 Function: redelegateUnstaked
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: redelegateUnstaked
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: redelegateUnstaked
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_106 Function: redelegateUnstaked
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_106

Name: REF_106 Function: redelegateUnstaked
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_106 Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_33(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_2 (-> ['validators'])"])
Function name: redelegateUnstaked
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
REF_107(uint128) -> us_2 (-> ['validators']).amount
Function name: redelegateUnstaked
MEMBER
us
amount
redelegateUnstaked
us Fields:
coolDownEnd
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_107

Name: us.amount Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_255(bool) = REF_107 == 0
Function name: redelegateUnstaked
[i]Type for TMP_255

Name: TMP_255 Function: redelegateUnstaked
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_255
Condition...
Conidtion: 
TMP_255
TMP_255
typecheckig node...
REF_108(uint128) -> us_2 (-> ['validators']).coolDownEnd
Function name: redelegateUnstaked
MEMBER
us
coolDownEnd
redelegateUnstaked
us Fields:
coolDownEnd
amount
^^^

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_108

Name: us.coolDownEnd Function: redelegateUnstaked
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: us.coolDownEnd Function: redelegateUnstaked
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
us_3 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_2 (-> ['validators'])"])
Function name: redelegateUnstaked
Phi
[i]Type for us

Name: us Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
done.
REF_108 (->us_3 (-> ['validators'])) := 0(uint256)
Function name: redelegateUnstaked
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_108 Function: redelegateUnstaked
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_108

Name: REF_108 Function: redelegateUnstaked
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_108 Function: redelegateUnstaked
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
validators_34(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_3 (-> ['validators'])"])
Function name: redelegateUnstaked
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
typecheckig node...
Emit TransferredUnstake(oldValidatorId_1,newValidatorId_1,msg.sender,amount_1,unstakingId_1)
WORKLIST iteration 1 for function call "redelegateUnstaked":
 New undefined nodes- 0
 Old undefined nodes- 1
typecheckig node...
validators_32(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: redelegateUnstaked
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
REF_97(DelegatedStaking.Validator) -> validators_32[oldValidatorId_1]
Function name: redelegateUnstaked
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_97

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_98(uint128) -> REF_97.disabledEpoch
Function name: redelegateUnstaked
MEMBER
validators
disabledEpoch
global
validators Fields:
disabledEpoch
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_98

Name: validators.disabledEpoch Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validators.disabledEpoch Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_248(bool) = REF_98 != 0
Function name: redelegateUnstaked
[i]Type for TMP_248

Name: TMP_248 Function: redelegateUnstaked
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_249(None) = SOLIDITY_CALL require(bool,string)(TMP_248,Validator is not disabled)
[i]Type for TMP_249

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_99(DelegatedStaking.Validator) -> validators_32[oldValidatorId_1]
Function name: redelegateUnstaked
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_99

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_100(address) -> REF_99._address
Function name: redelegateUnstaked
MEMBER
validators
_address
global
validators Fields:
disabledEpoch
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_100

Name: validators._address Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validators._address Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_250(bool) = REF_100 != msg.sender
Function name: redelegateUnstaked
[i]Type for TMP_250

Name: TMP_250 Function: redelegateUnstaked
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_251(None) = SOLIDITY_CALL require(bool,string)(TMP_250,Validator cannot redelegate)
[i]Type for TMP_251

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_101(DelegatedStaking.Validator) -> validators_32[oldValidatorId_1]
Function name: redelegateUnstaked
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_101

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_102(mapping(address => DelegatedStaking.Unstaking[])) -> REF_101.unstakings
Function name: redelegateUnstaked
MEMBER
validators
unstakings
global
validators Fields:
disabledEpoch
commissionRate
operator
_address
globalShares
delegated
exchangeRate
unstakings
^^^

Name: unstakings Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_102

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: unstakings Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_103(DelegatedStaking.Unstaking[]) -> REF_102[msg.sender]
Function name: redelegateUnstaked
INDEX

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: redelegateUnstaked
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_103

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_104(DelegatedStaking.Unstaking) -> REF_103[unstakingId_1]
Function name: redelegateUnstaked
INDEX

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: redelegateUnstaked
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_104

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_1 (-> ['validators'])(DelegatedStaking.Unstaking) := REF_104(DelegatedStaking.Unstaking)
Function name: redelegateUnstaked
asgn

Name: validators.unstakings Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for us

Name: us Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
done.
typecheckig node...
REF_105(uint128) -> us_1 (-> ['validators']).amount
Function name: redelegateUnstaked
MEMBER
us
amount
redelegateUnstaked
us Fields:
coolDownEnd
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_105

Name: us.amount Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_252(bool) = REF_105 >= amount_1
Function name: redelegateUnstaked
testing gt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_252

Name: TMP_252 Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_253(None) = SOLIDITY_CALL require(bool,string)(TMP_252,Unstaking has less tokens)
[i]Type for TMP_253

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._stake(uint128,uint128,bool)(newValidatorId_1,amount_1,False)
Internal call...
_stake
newValidatorId
amount
False
Function: _stake
ic
val: False
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
0
done.
typecheckig node...
REF_106(uint128) -> us_1 (-> ['validators']).amount
Function name: redelegateUnstaked
MEMBER
us
amount
redelegateUnstaked
us Fields:
coolDownEnd
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_106

Name: us.amount Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_2 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_1 (-> ['validators'])"])
Function name: redelegateUnstaked
Phi
[i]Type for us

Name: us Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
done.
REF_106(-> us_2 (-> ['validators'])) = REF_106 - amount_1
Function name: redelegateUnstaked
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_106 Function: redelegateUnstaked
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: redelegateUnstaked
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: redelegateUnstaked
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_106 Function: redelegateUnstaked
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_106

Name: REF_106 Function: redelegateUnstaked
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_106 Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_33(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_2 (-> ['validators'])"])
Function name: redelegateUnstaked
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
REF_107(uint128) -> us_2 (-> ['validators']).amount
Function name: redelegateUnstaked
MEMBER
us
amount
redelegateUnstaked
us Fields:
coolDownEnd
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_107

Name: us.amount Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_255(bool) = REF_107 == 0
Function name: redelegateUnstaked
[i]Type for TMP_255

Name: TMP_255 Function: redelegateUnstaked
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_255
Condition...
Conidtion: 
TMP_255
TMP_255
typecheckig node...
REF_108(uint128) -> us_2 (-> ['validators']).coolDownEnd
Function name: redelegateUnstaked
MEMBER
us
coolDownEnd
redelegateUnstaked
us Fields:
coolDownEnd
amount
^^^

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_108

Name: us.coolDownEnd Function: redelegateUnstaked
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: us.coolDownEnd Function: redelegateUnstaked
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
us_3 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_2 (-> ['validators'])"])
Function name: redelegateUnstaked
Phi
[i]Type for us

Name: us Function: redelegateUnstaked
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
done.
REF_108 (->us_3 (-> ['validators'])) := 0(uint256)
Function name: redelegateUnstaked
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_108 Function: redelegateUnstaked
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_108

Name: REF_108 Function: redelegateUnstaked
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_108 Function: redelegateUnstaked
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
validators_34(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_3 (-> ['validators'])"])
Function name: redelegateUnstaked
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: disabledEpoch, commissionRate, operator, _address, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
typecheckig node...
Emit TransferredUnstake(oldValidatorId_1,newValidatorId_1,msg.sender,amount_1,unstakingId_1)
WORKLIST iteration 2 for function call "redelegateUnstaked":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: redelegateUnstaked
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
unstakings
coolDownEnd
global
unstakings
amount
FIELDS:
unstakings Fields:
^^^
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
validators.unstakings
coolDownEnd
global
validators.unstakings
amount
FIELDS:
validators.unstakings Fields:
^^^
FIELDS:
validators Fields:
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: transferUnstakedOut
Function name: transferUnstakedOut
Function Visibility (test): public
amount
Finding type for amount...
uint128
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint128
uint128
Final Type: uint128

Name: amount Function: transferUnstakedOut
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
validatorId
Finding type for validatorId...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorId Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
unstakingId
Finding type for unstakingId...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint128
uint128
Final Type: uint128

Name: unstakingId Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
validators_35(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
has variable
typecheckig node...
validators_35(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: transferUnstakedOut
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_109(DelegatedStaking.Validator) -> validators_35[validatorId_1]
has variable
clearing ir...?
REF_110(mapping(address => DelegatedStaking.Unstaking[])) -> REF_109.unstakings
has variable
clearing ir...?
REF_111(DelegatedStaking.Unstaking[]) -> REF_110[msg.sender]
has variable
clearing ir...?
REF_112(DelegatedStaking.Unstaking) -> REF_111[unstakingId_1]
has variable
clearing ir...?
us_1 (-> ['validators'])(DelegatedStaking.Unstaking) := REF_112(DelegatedStaking.Unstaking)
has variable
[i] us cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_109(DelegatedStaking.Validator) -> validators_35[validatorId_1]
Function name: transferUnstakedOut
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_109

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_110(mapping(address => DelegatedStaking.Unstaking[])) -> REF_109.unstakings
Function name: transferUnstakedOut
MEMBER
validators
unstakings
global
validators Fields:
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: unstakings Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_110

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: unstakings Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_111(DelegatedStaking.Unstaking[]) -> REF_110[msg.sender]
Function name: transferUnstakedOut
INDEX

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: transferUnstakedOut
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_111

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_112(DelegatedStaking.Unstaking) -> REF_111[unstakingId_1]
Function name: transferUnstakedOut
INDEX

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: transferUnstakedOut
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_112

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_1 (-> ['validators'])(DelegatedStaking.Unstaking) := REF_112(DelegatedStaking.Unstaking)
Function name: transferUnstakedOut
asgn

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us Function: transferUnstakedOut
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for us

Name: us Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_257 = CONVERT block.number to uint128
has variable
[i] TMP_257 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_113(uint128) -> us_1 (-> ['validators']).coolDownEnd
has variable
clearing ir...?
TMP_258(bool) = TMP_257 > REF_113
has variable
[i] TMP_258 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_259(None) = SOLIDITY_CALL require(bool,string)(TMP_258,Cooldown period has not ended)
typecheckig node...
TMP_257 = CONVERT block.number to uint128
Function name: transferUnstakedOut
[i]Type for TMP_257

Name: TMP_257 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
REF_113(uint128) -> us_1 (-> ['validators']).coolDownEnd
Function name: transferUnstakedOut
MEMBER
us
coolDownEnd
transferUnstakedOut
us Fields:
^^^
[i]Type for REF_113

Name: us.coolDownEnd Function: transferUnstakedOut
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.coolDownEnd Function: transferUnstakedOut
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_258(bool) = TMP_257 > REF_113
Function name: transferUnstakedOut
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: us.coolDownEnd Function: transferUnstakedOut
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
False

Name: TMP_257 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef

Name: TMP_258 Function: transferUnstakedOut
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_258

Name: TMP_258 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_258(bool) = TMP_257 > REF_113
XXXXX
TMP_259(None) = SOLIDITY_CALL require(bool,string)(TMP_258,Cooldown period has not ended)
[i]Type for TMP_259

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_114(uint128) -> us_1 (-> ['validators']).amount
has variable
clearing ir...?
TMP_260(bool) = REF_114 >= amount_1
has variable
[i] TMP_260 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_261(None) = SOLIDITY_CALL require(bool,string)(TMP_260,Amount is too high)
typecheckig node...
REF_114(uint128) -> us_1 (-> ['validators']).amount
Function name: transferUnstakedOut
MEMBER
us
amount
transferUnstakedOut
us Fields:
coolDownEnd
^^^
[i]Type for REF_114

Name: us.amount Function: transferUnstakedOut
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: transferUnstakedOut
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_260(bool) = REF_114 >= amount_1
Function name: transferUnstakedOut
testing gt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: transferUnstakedOut
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_260 Function: transferUnstakedOut
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_260

Name: TMP_260 Function: transferUnstakedOut
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_260(bool) = REF_114 >= amount_1
XXXXX
TMP_261(None) = SOLIDITY_CALL require(bool,string)(TMP_260,Amount is too high)
[i]Type for TMP_261

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, DelegatedStaking._transferFromContract(address,uint128)(msg.sender,amount_1)
typecheckig node...
INTERNAL_CALL, DelegatedStaking._transferFromContract(address,uint128)(msg.sender,amount_1)
Internal call...
_transferFromContract
msg.sender
amount
Function: _transferFromContract
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
0
done.
clearning node...
clearing ir...?
REF_115(uint128) -> us_1 (-> ['validators']).amount
has variable
clearing ir...?
us_2 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_1 (-> ['validators'])"])
has variable
[i] us cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_115(-> us_2 (-> ['validators'])) = REF_115 - amount_1
has variable
clearing ir...?
validators_36(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_2 (-> ['validators'])"])
has variable
typecheckig node...
REF_115(uint128) -> us_1 (-> ['validators']).amount
Function name: transferUnstakedOut
MEMBER
us
amount
transferUnstakedOut
us Fields:
coolDownEnd
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_115

Name: us.amount Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_2 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_1 (-> ['validators'])"])
Function name: transferUnstakedOut
Phi
[i]Type for us

Name: us Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: amount
Finance Type: undef
done.
REF_115(-> us_2 (-> ['validators'])) = REF_115 - amount_1
Function name: transferUnstakedOut
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_115 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: transferUnstakedOut
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: transferUnstakedOut
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_115 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_115

Name: REF_115 Function: transferUnstakedOut
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_115 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_36(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_2 (-> ['validators'])"])
Function name: transferUnstakedOut
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_116(uint128) -> us_2 (-> ['validators']).amount
has variable
clearing ir...?
TMP_263(bool) = REF_116 == 0
has variable
[i] TMP_263 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_263
typecheckig node...
REF_116(uint128) -> us_2 (-> ['validators']).amount
Function name: transferUnstakedOut
MEMBER
us
amount
transferUnstakedOut
us Fields:
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_116

Name: us.amount Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_263(bool) = REF_116 == 0
Function name: transferUnstakedOut
[i]Type for TMP_263

Name: TMP_263 Function: transferUnstakedOut
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_263
Condition...
Conidtion: 
TMP_263
TMP_263
clearning node...
clearing ir...?
REF_117(uint128) -> us_2 (-> ['validators']).coolDownEnd
has variable
clearing ir...?
us_3 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_2 (-> ['validators'])"])
has variable
[i] us cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_117 (->us_3 (-> ['validators'])) := 0(uint256)
has variable
clearing ir...?
validators_37(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_3 (-> ['validators'])"])
has variable
typecheckig node...
REF_117(uint128) -> us_2 (-> ['validators']).coolDownEnd
Function name: transferUnstakedOut
MEMBER
us
coolDownEnd
transferUnstakedOut
us Fields:
amount
^^^
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint128
uint128
Final Type: uint128
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: None
None
Final Type: None
[i]Type for REF_117

Name: us.coolDownEnd Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.coolDownEnd Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_3 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_2 (-> ['validators'])"])
Function name: transferUnstakedOut
Phi
[i]Type for us

Name: us Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
done.
REF_117 (->us_3 (-> ['validators'])) := 0(uint256)
Function name: transferUnstakedOut
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_117 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_117

Name: REF_117 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_117 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_37(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_3 (-> ['validators'])"])
Function name: transferUnstakedOut
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
Emit UnstakeRedeemed(validatorId_1,msg.sender,amount_1)
typecheckig node...
Emit UnstakeRedeemed(validatorId_1,msg.sender,amount_1)
WORKLIST iteration 0 for function call "transferUnstakedOut":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
validators_35(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: transferUnstakedOut
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
REF_109(DelegatedStaking.Validator) -> validators_35[validatorId_1]
Function name: transferUnstakedOut
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_109

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_110(mapping(address => DelegatedStaking.Unstaking[])) -> REF_109.unstakings
Function name: transferUnstakedOut
MEMBER
validators
unstakings
global
validators Fields:
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: unstakings Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_110

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: unstakings Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_111(DelegatedStaking.Unstaking[]) -> REF_110[msg.sender]
Function name: transferUnstakedOut
INDEX

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: transferUnstakedOut
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_111

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_112(DelegatedStaking.Unstaking) -> REF_111[unstakingId_1]
Function name: transferUnstakedOut
INDEX

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: transferUnstakedOut
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_112

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_1 (-> ['validators'])(DelegatedStaking.Unstaking) := REF_112(DelegatedStaking.Unstaking)
Function name: transferUnstakedOut
asgn

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for us

Name: us Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
done.
typecheckig node...
TMP_257 = CONVERT block.number to uint128
Function name: transferUnstakedOut
[i]Type for TMP_257

Name: TMP_257 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
REF_113(uint128) -> us_1 (-> ['validators']).coolDownEnd
Function name: transferUnstakedOut
MEMBER
us
coolDownEnd
transferUnstakedOut
us Fields:
coolDownEnd
amount
^^^

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_113

Name: us.coolDownEnd Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.coolDownEnd Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_258(bool) = TMP_257 > REF_113
Function name: transferUnstakedOut
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: us.coolDownEnd Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_258

Name: TMP_258 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
TMP_259(None) = SOLIDITY_CALL require(bool,string)(TMP_258,Cooldown period has not ended)
[i]Type for TMP_259

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_114(uint128) -> us_1 (-> ['validators']).amount
Function name: transferUnstakedOut
MEMBER
us
amount
transferUnstakedOut
us Fields:
coolDownEnd
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_114

Name: us.amount Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_260(bool) = REF_114 >= amount_1
Function name: transferUnstakedOut
testing gt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[W] Initializing defined variable to constant
[i]Type for TMP_260

Name: TMP_260 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_261(None) = SOLIDITY_CALL require(bool,string)(TMP_260,Amount is too high)
[i]Type for TMP_261

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._transferFromContract(address,uint128)(msg.sender,amount_1)
Internal call...
_transferFromContract
msg.sender
amount
Function: _transferFromContract
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
0
done.
typecheckig node...
REF_115(uint128) -> us_1 (-> ['validators']).amount
Function name: transferUnstakedOut
MEMBER
us
amount
transferUnstakedOut
us Fields:
coolDownEnd
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_115

Name: us.amount Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_2 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_1 (-> ['validators'])"])
Function name: transferUnstakedOut
Phi
[i]Type for us

Name: us Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
done.
REF_115(-> us_2 (-> ['validators'])) = REF_115 - amount_1
Function name: transferUnstakedOut
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_115 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: transferUnstakedOut
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: transferUnstakedOut
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_115 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_115

Name: REF_115 Function: transferUnstakedOut
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_115 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_36(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_2 (-> ['validators'])"])
Function name: transferUnstakedOut
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
REF_116(uint128) -> us_2 (-> ['validators']).amount
Function name: transferUnstakedOut
MEMBER
us
amount
transferUnstakedOut
us Fields:
coolDownEnd
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_116

Name: us.amount Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_263(bool) = REF_116 == 0
Function name: transferUnstakedOut
[i]Type for TMP_263

Name: TMP_263 Function: transferUnstakedOut
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_263
Condition...
Conidtion: 
TMP_263
TMP_263
typecheckig node...
REF_117(uint128) -> us_2 (-> ['validators']).coolDownEnd
Function name: transferUnstakedOut
MEMBER
us
coolDownEnd
transferUnstakedOut
us Fields:
coolDownEnd
amount
^^^

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_117

Name: us.coolDownEnd Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.coolDownEnd Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_3 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_2 (-> ['validators'])"])
Function name: transferUnstakedOut
Phi
[i]Type for us

Name: us Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
done.
REF_117 (->us_3 (-> ['validators'])) := 0(uint256)
Function name: transferUnstakedOut
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_117 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_117

Name: REF_117 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_117 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_37(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_3 (-> ['validators'])"])
Function name: transferUnstakedOut
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
typecheckig node...
Emit UnstakeRedeemed(validatorId_1,msg.sender,amount_1)
WORKLIST iteration 1 for function call "transferUnstakedOut":
 New undefined nodes- 0
 Old undefined nodes- 2
typecheckig node...
validators_35(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: transferUnstakedOut
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
REF_109(DelegatedStaking.Validator) -> validators_35[validatorId_1]
Function name: transferUnstakedOut
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_109

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
REF_110(mapping(address => DelegatedStaking.Unstaking[])) -> REF_109.unstakings
Function name: transferUnstakedOut
MEMBER
validators
unstakings
global
validators Fields:
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: unstakings Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_110

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: unstakings Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_111(DelegatedStaking.Unstaking[]) -> REF_110[msg.sender]
Function name: transferUnstakedOut
INDEX

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: transferUnstakedOut
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_111

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_112(DelegatedStaking.Unstaking) -> REF_111[unstakingId_1]
Function name: transferUnstakedOut
INDEX

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: transferUnstakedOut
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_112

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_1 (-> ['validators'])(DelegatedStaking.Unstaking) := REF_112(DelegatedStaking.Unstaking)
Function name: transferUnstakedOut
asgn

Name: validators.unstakings Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for us

Name: us Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
done.
typecheckig node...
TMP_257 = CONVERT block.number to uint128
Function name: transferUnstakedOut
[i]Type for TMP_257

Name: TMP_257 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
REF_113(uint128) -> us_1 (-> ['validators']).coolDownEnd
Function name: transferUnstakedOut
MEMBER
us
coolDownEnd
transferUnstakedOut
us Fields:
coolDownEnd
amount
^^^

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_113

Name: us.coolDownEnd Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.coolDownEnd Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_258(bool) = TMP_257 > REF_113
Function name: transferUnstakedOut
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: us.coolDownEnd Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_258

Name: TMP_258 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: DelegatedStaking
Fields: 
Finance Type: undef
done.
TMP_259(None) = SOLIDITY_CALL require(bool,string)(TMP_258,Cooldown period has not ended)
[i]Type for TMP_259

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_114(uint128) -> us_1 (-> ['validators']).amount
Function name: transferUnstakedOut
MEMBER
us
amount
transferUnstakedOut
us Fields:
coolDownEnd
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_114

Name: us.amount Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_260(bool) = REF_114 >= amount_1
Function name: transferUnstakedOut
testing gt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_260

Name: TMP_260 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_261(None) = SOLIDITY_CALL require(bool,string)(TMP_260,Amount is too high)
[i]Type for TMP_261

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, DelegatedStaking._transferFromContract(address,uint128)(msg.sender,amount_1)
Internal call...
_transferFromContract
msg.sender
amount
Function: _transferFromContract
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
0
done.
typecheckig node...
REF_115(uint128) -> us_1 (-> ['validators']).amount
Function name: transferUnstakedOut
MEMBER
us
amount
transferUnstakedOut
us Fields:
coolDownEnd
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_115

Name: us.amount Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_2 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_1 (-> ['validators'])"])
Function name: transferUnstakedOut
Phi
[i]Type for us

Name: us Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
done.
REF_115(-> us_2 (-> ['validators'])) = REF_115 - amount_1
Function name: transferUnstakedOut
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_115 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: transferUnstakedOut
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: amount Function: transferUnstakedOut
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_115 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_115

Name: REF_115 Function: transferUnstakedOut
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_115 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_36(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_2 (-> ['validators'])"])
Function name: transferUnstakedOut
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
REF_116(uint128) -> us_2 (-> ['validators']).amount
Function name: transferUnstakedOut
MEMBER
us
amount
transferUnstakedOut
us Fields:
coolDownEnd
amount
^^^

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_116

Name: us.amount Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.amount Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_263(bool) = REF_116 == 0
Function name: transferUnstakedOut
[i]Type for TMP_263

Name: TMP_263 Function: transferUnstakedOut
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_263
Condition...
Conidtion: 
TMP_263
TMP_263
typecheckig node...
REF_117(uint128) -> us_2 (-> ['validators']).coolDownEnd
Function name: transferUnstakedOut
MEMBER
us
coolDownEnd
transferUnstakedOut
us Fields:
coolDownEnd
amount
^^^

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_117

Name: us.coolDownEnd Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: us.coolDownEnd Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
us_3 (-> ['validators'])(DelegatedStaking.Unstaking) := ϕ(["us_2 (-> ['validators'])"])
Function name: transferUnstakedOut
Phi
[i]Type for us

Name: us Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: coolDownEnd, amount
Finance Type: undef
done.
REF_117 (->us_3 (-> ['validators'])) := 0(uint256)
Function name: transferUnstakedOut
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_117 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_117

Name: REF_117 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_117 Function: transferUnstakedOut
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: coolDownEnd Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_37(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(["us_3 (-> ['validators'])"])
Function name: transferUnstakedOut
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
typecheckig node...
Emit UnstakeRedeemed(validatorId_1,msg.sender,amount_1)
WORKLIST iteration 2 for function call "transferUnstakedOut":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: transferUnstakedOut
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
unstakings
coolDownEnd
global
unstakings
amount
FIELDS:
unstakings Fields:
^^^
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
validators.unstakings
coolDownEnd
global
validators.unstakings
amount
FIELDS:
validators.unstakings Fields:
^^^
FIELDS:
validators Fields:
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: getValidatorsDetails
Function name: getValidatorsDetails
Function Visibility (test): public
-100
clearning node...
clearing ir...?
validatorsN_6(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
has variable
clearing ir...?
validators_38(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
has variable
typecheckig node...
validatorsN_6(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
Function name: getValidatorsDetails
Phi
[i]Type for validatorsN

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_38(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: getValidatorsDetails
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_266 = new uint128[](validatorsN_6)
clearing ir...?
commissionRates_1(uint128[]) := TMP_266(uint128)
has variable
[i] commissionRates cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_266 = new uint128[](validatorsN_6)
[i]Type for TMP_266

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
commissionRates_1(uint128[]) := TMP_266(uint128)
Function name: getValidatorsDetails
asgn

Name: TMP_266 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRates Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for commissionRates

Name: commissionRates Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
commissionRates_1(uint128[]) := TMP_266(uint128)
XXXXX
clearning node...
clearing ir...?
TMP_268 = new uint128[](validatorsN_6)
clearing ir...?
delegated_1(uint128[]) := TMP_268(uint128)
has variable
[i] delegated cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_268 = new uint128[](validatorsN_6)
[i]Type for TMP_268

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
delegated_1(uint128[]) := TMP_268(uint128)
Function name: getValidatorsDetails
asgn

Name: TMP_268 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for delegated

Name: delegated Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
delegated_1(uint128[]) := TMP_268(uint128)
XXXXX
clearning node...
clearing ir...?
i_1(uint128) := 0(uint256)
has variable
[i] i cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
i_1(uint128) := 0(uint256)
Function name: getValidatorsDetails
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for i

Name: i Function: getValidatorsDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
i_2(uint128) := ϕ(['i_1', 'i_3'])
has variable
[i] i cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_269(bool) = i_2 < validatorsN_6
has variable
[i] TMP_269 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_269
typecheckig node...
i_2(uint128) := ϕ(['i_1', 'i_3'])
Function name: getValidatorsDetails
Phi
[i]Type for i

Name: i Function: getValidatorsDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_269(bool) = i_2 < validatorsN_6
Function name: getValidatorsDetails
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_269

Name: TMP_269 Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_269
Condition...
Conidtion: 
TMP_269
TMP_269
clearning node...
clearing ir...?
REF_118(DelegatedStaking.Validator) -> validators_38[i_2]
has variable
clearing ir...?
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_118(DelegatedStaking.Validator)
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_118(DelegatedStaking.Validator) -> validators_38[i_2]
Function name: getValidatorsDetails
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_118

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_118(DelegatedStaking.Validator)
Function name: getValidatorsDetails
asgn

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef

Name: v Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for v

Name: v Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_119(uint128) -> commissionRates_1[i_2]
has variable
clearing ir...?
REF_120(uint128) -> v_1 (-> ['validators']).commissionRate
has variable
clearing ir...?
commissionRates_2(uint128[]) := ϕ(['commissionRates_1'])
has variable
[i] commissionRates cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_119 (->commissionRates_2) := REF_120(uint128)
has variable
typecheckig node...
REF_119(uint128) -> commissionRates_1[i_2]
Function name: getValidatorsDetails
INDEX

Name: commissionRates Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getValidatorsDetails
commissionRates
[i]Type for REF_119

Name: commissionRates Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_119(uint128) -> commissionRates_1[i_2]
XXXXX
REF_120(uint128) -> v_1 (-> ['validators']).commissionRate
Function name: getValidatorsDetails
MEMBER
v
commissionRate
getValidatorsDetails
v Fields:
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_120

Name: v.commissionRate Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionRate Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
commissionRates_2(uint128[]) := ϕ(['commissionRates_1'])
Function name: getValidatorsDetails
Phi
[i]Type for commissionRates

Name: commissionRates Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_119 (->commissionRates_2) := REF_120(uint128)
Function name: getValidatorsDetails
asgn

Name: v.commissionRate Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_119 Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_119

Name: REF_119 Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_121(uint128) -> delegated_1[i_2]
has variable
clearing ir...?
REF_122(uint128) -> v_1 (-> ['validators']).delegated
has variable
clearing ir...?
REF_123(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
has variable
clearing ir...?
REF_124(address) -> v_1 (-> ['validators'])._address
has variable
clearing ir...?
REF_125(DelegatedStaking.Staking) -> REF_123[REF_124]
has variable
clearing ir...?
REF_126(uint128) -> REF_125.staked
has variable
clearing ir...?
TMP_270(uint128) = REF_122 (c)- REF_126
has variable
[i] TMP_270 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
delegated_2(uint128[]) := ϕ(['delegated_1'])
has variable
[i] delegated cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_121 (->delegated_2) := TMP_270(uint128)
has variable
typecheckig node...
REF_121(uint128) -> delegated_1[i_2]
Function name: getValidatorsDetails
INDEX

Name: delegated Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getValidatorsDetails
delegated
[i]Type for REF_121

Name: delegated Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_121(uint128) -> delegated_1[i_2]
XXXXX
REF_122(uint128) -> v_1 (-> ['validators']).delegated
Function name: getValidatorsDetails
MEMBER
v
delegated
getValidatorsDetails
v Fields:
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_122

Name: v.delegated Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_123(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: getValidatorsDetails
MEMBER
v
stakings
getValidatorsDetails
v Fields:
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^
[i]Type for REF_123

Name: v.stakings Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_124(address) -> v_1 (-> ['validators'])._address
Function name: getValidatorsDetails
MEMBER
v
_address
getValidatorsDetails
v Fields:
stakings
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_124

Name: v._address Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_125(DelegatedStaking.Staking) -> REF_123[REF_124]
Function name: getValidatorsDetails
INDEX

Name: v.stakings Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getValidatorsDetails
REF_123
[i]Type for REF_125

Name: v.stakings Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_125(DelegatedStaking.Staking) -> REF_123[REF_124]
XXXXX
REF_126(uint128) -> REF_125.staked
Function name: getValidatorsDetails
MEMBER
v.stakings
staked
getValidatorsDetails
v.stakings Fields:
^^^
[i]Type for REF_126

Name: v.stakings.staked Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings.staked Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_270(uint128) = REF_122 (c)- REF_126
Function name: getValidatorsDetails
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: v.delegated Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings.staked Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_270 Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_270

Name: TMP_270 Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_270(uint128) = REF_122 (c)- REF_126
XXXXX
delegated_2(uint128[]) := ϕ(['delegated_1'])
Function name: getValidatorsDetails
Phi
[i]Type for delegated

Name: delegated Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_121 (->delegated_2) := TMP_270(uint128)
Function name: getValidatorsDetails
asgn

Name: TMP_270 Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_121 Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_121

Name: REF_121 Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN commissionRates_1,delegated_1
typecheckig node...
RETURN commissionRates_1,delegated_1
RETURN

Name: commissionRates Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
i_3(uint128) = i_2 (c)+ 1
has variable
[i] i cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
i_3(uint128) = i_2 (c)+ 1
Function name: getValidatorsDetails
val: 1

Name: i Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: getValidatorsDetails
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: getValidatorsDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "getValidatorsDetails":
 New undefined nodes- 4
 Old undefined nodes- 0
typecheckig node...
validatorsN_6(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
Function name: getValidatorsDetails
Phi
[i]Type for validatorsN

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_38(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: getValidatorsDetails
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
TMP_266 = new uint128[](validatorsN_6)
[i]Type for TMP_266

Name: TMP_266 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
commissionRates_1(uint128[]) := TMP_266(uint128)
Function name: getValidatorsDetails
asgn

Name: TMP_266 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRates Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for commissionRates

Name: commissionRates Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
commissionRates_1(uint128[]) := TMP_266(uint128)
XXXXX
typecheckig node...
TMP_268 = new uint128[](validatorsN_6)
[i]Type for TMP_268

Name: TMP_268 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
delegated_1(uint128[]) := TMP_268(uint128)
Function name: getValidatorsDetails
asgn

Name: TMP_268 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for delegated

Name: delegated Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
delegated_1(uint128[]) := TMP_268(uint128)
XXXXX
typecheckig node...
i_1(uint128) := 0(uint256)
Function name: getValidatorsDetails
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: getValidatorsDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for i

Name: i Function: getValidatorsDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
i_2(uint128) := ϕ(['i_1', 'i_3'])
Function name: getValidatorsDetails
Phi
[i]Type for i

Name: i Function: getValidatorsDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_269(bool) = i_2 < validatorsN_6
Function name: getValidatorsDetails
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_269

Name: TMP_269 Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_269
Condition...
Conidtion: 
TMP_269
TMP_269
typecheckig node...
REF_118(DelegatedStaking.Validator) -> validators_38[i_2]
Function name: getValidatorsDetails
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_118

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_118(DelegatedStaking.Validator)
Function name: getValidatorsDetails
asgn

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef

Name: v Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: stakings, commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings, staked
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for v

Name: v Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: stakings, commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings, staked
Finance Type: undef
done.
typecheckig node...
REF_119(uint128) -> commissionRates_1[i_2]
Function name: getValidatorsDetails
INDEX

Name: commissionRates Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getValidatorsDetails
commissionRates
[i]Type for REF_119

Name: commissionRates Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_119(uint128) -> commissionRates_1[i_2]
XXXXX
REF_120(uint128) -> v_1 (-> ['validators']).commissionRate
Function name: getValidatorsDetails
MEMBER
v
commissionRate
getValidatorsDetails
v Fields:
stakings
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
staked
^^^

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_120

Name: v.commissionRate Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionRate Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
commissionRates_2(uint128[]) := ϕ(['commissionRates_1'])
Function name: getValidatorsDetails
Phi
[i]Type for commissionRates

Name: commissionRates Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_119 (->commissionRates_2) := REF_120(uint128)
Function name: getValidatorsDetails
asgn

Name: v.commissionRate Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_119 Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_119

Name: REF_119 Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
REF_121(uint128) -> delegated_1[i_2]
Function name: getValidatorsDetails
INDEX

Name: delegated Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getValidatorsDetails
delegated
[i]Type for REF_121

Name: delegated Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_121(uint128) -> delegated_1[i_2]
XXXXX
REF_122(uint128) -> v_1 (-> ['validators']).delegated
Function name: getValidatorsDetails
MEMBER
v
delegated
getValidatorsDetails
v Fields:
stakings
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
staked
^^^

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_122

Name: v.delegated Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_123(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: getValidatorsDetails
MEMBER
v
stakings
getValidatorsDetails
v Fields:
stakings
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
staked
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_123

Name: v.stakings Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_124(address) -> v_1 (-> ['validators'])._address
Function name: getValidatorsDetails
MEMBER
v
_address
getValidatorsDetails
v Fields:
stakings
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
staked
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_124

Name: v._address Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_125(DelegatedStaking.Staking) -> REF_123[REF_124]
Function name: getValidatorsDetails
INDEX

Name: v.stakings Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getValidatorsDetails
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_125

Name: v.stakings Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_126(uint128) -> REF_125.staked
Function name: getValidatorsDetails
MEMBER
v.stakings
staked
getValidatorsDetails
v.stakings Fields:
^^^
[i]Type for REF_126

Name: v.stakings.staked Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings.staked Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_270(uint128) = REF_122 (c)- REF_126
Function name: getValidatorsDetails
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: v.delegated Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings.staked Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.delegated Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_270 Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_270

Name: TMP_270 Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_270(uint128) = REF_122 (c)- REF_126
XXXXX
delegated_2(uint128[]) := ϕ(['delegated_1'])
Function name: getValidatorsDetails
Phi
[i]Type for delegated

Name: delegated Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_121 (->delegated_2) := TMP_270(uint128)
Function name: getValidatorsDetails
asgn

Name: TMP_270 Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_121 Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_121

Name: REF_121 Function: getValidatorsDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
RETURN commissionRates_1,delegated_1
RETURN

Name: commissionRates Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
i_3(uint128) = i_2 (c)+ 1
Function name: getValidatorsDetails
val: 1

Name: i Function: getValidatorsDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: getValidatorsDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: getValidatorsDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "getValidatorsDetails":
 New undefined nodes- 4
 Old undefined nodes- 4
Saving return values for: getValidatorsDetails

Name: commissionRates Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___

Name: delegated Function: getValidatorsDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
unstakings
coolDownEnd
global
unstakings
amount
FIELDS:
unstakings Fields:
^^^
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
validators.unstakings
coolDownEnd
global
validators.unstakings
amount
FIELDS:
validators.unstakings Fields:
^^^
FIELDS:
validators Fields:
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: getDelegatorDetails
Function name: getDelegatorDetails
Function Visibility (test): public
delegator
Finding type for delegator...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: delegator Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
divider_11(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
clearing ir...?
allocatedTokensPerEpoch_10(uint128) := ϕ(['allocatedTokensPerEpoch_1', 'allocatedTokensPerEpoch_5', 'allocatedTokensPerEpoch_9', 'allocatedTokensPerEpoch_3', 'allocatedTokensPerEpoch_0'])
has variable
clearing ir...?
endEpoch_20(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
has variable
clearing ir...?
totalGlobalShares_26(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
has variable
clearing ir...?
lastUpdateEpoch_3(uint128) := ϕ(['lastUpdateEpoch_0', 'lastUpdateEpoch_2'])
has variable
clearing ir...?
globalExchangeRate_22(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
has variable
clearing ir...?
validatorsN_7(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
has variable
clearing ir...?
validators_39(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
has variable
typecheckig node...
divider_11(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: getDelegatorDetails
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
allocatedTokensPerEpoch_10(uint128) := ϕ(['allocatedTokensPerEpoch_1', 'allocatedTokensPerEpoch_5', 'allocatedTokensPerEpoch_9', 'allocatedTokensPerEpoch_3', 'allocatedTokensPerEpoch_0'])
Function name: getDelegatorDetails
Phi
[i]Type for allocatedTokensPerEpoch

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_20(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
Function name: getDelegatorDetails
Phi
[i]Type for endEpoch

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalGlobalShares_26(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
Function name: getDelegatorDetails
Phi
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastUpdateEpoch_3(uint128) := ϕ(['lastUpdateEpoch_0', 'lastUpdateEpoch_2'])
Function name: getDelegatorDetails
Phi
[i]Type for lastUpdateEpoch

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
globalExchangeRate_22(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
Function name: getDelegatorDetails
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
validatorsN_7(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
Function name: getDelegatorDetails
Phi
[i]Type for validatorsN

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_39(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: getDelegatorDetails
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_272 = new uint128[](validatorsN_7)
clearing ir...?
delegated_1(uint128[]) := TMP_272(uint128)
has variable
[i] delegated cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_272 = new uint128[](validatorsN_7)
[i]Type for TMP_272

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
delegated_1(uint128[]) := TMP_272(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_272 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for delegated

Name: delegated Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
delegated_1(uint128[]) := TMP_272(uint128)
XXXXX
clearning node...
clearing ir...?
TMP_274 = new uint128[](validatorsN_7)
clearing ir...?
rewardsAvailable_1(uint128[]) := TMP_274(uint128)
has variable
[i] rewardsAvailable cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_274 = new uint128[](validatorsN_7)
[i]Type for TMP_274

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rewardsAvailable_1(uint128[]) := TMP_274(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_274 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardsAvailable

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
rewardsAvailable_1(uint128[]) := TMP_274(uint128)
XXXXX
clearning node...
clearing ir...?
TMP_276 = new uint128[](validatorsN_7)
clearing ir...?
commissionRewards_1(uint128[]) := TMP_276(uint128)
has variable
[i] commissionRewards cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_276 = new uint128[](validatorsN_7)
[i]Type for TMP_276

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
commissionRewards_1(uint128[]) := TMP_276(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_276 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for commissionRewards

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
commissionRewards_1(uint128[]) := TMP_276(uint128)
XXXXX
clearning node...
clearing ir...?
TMP_306(bool) = block.number < endEpoch_20
has variable
[i] TMP_306 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_306
typecheckig node...
TMP_306(bool) = block.number < endEpoch_20
Function name: getDelegatorDetails
testing lt...
block.number
[i]Type for TMP_306

Name: TMP_306 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_306
Condition...
Conidtion: 
TMP_306
TMP_306
clearning node...
clearing ir...?
currentEpoch_2(uint256) := endEpoch_20(uint128)
has variable
[i] currentEpoch cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
currentEpoch_2(uint256) := endEpoch_20(uint128)
Function name: getDelegatorDetails
asgn

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentEpoch Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentEpoch

Name: currentEpoch Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
currentEpoch_1(uint256) := block.number(uint256)
has variable
[i] currentEpoch cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
currentEpoch_1(uint256) := block.number(uint256)
Function name: getDelegatorDetails
asgn
block.number

Name: currentEpoch Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
u
[i]Type for currentEpoch

Name: currentEpoch Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
currentEpoch_1(uint256) := block.number(uint256)
XXXXX
clearning node...
clearing ir...?
currentEpoch_3(uint256) := ϕ(['currentEpoch_1', 'currentEpoch_2'])
has variable
[i] currentEpoch cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
currentEpoch_3(uint256) := ϕ(['currentEpoch_1', 'currentEpoch_2'])
Function name: getDelegatorDetails
Phi
[i]Type for currentEpoch

Name: currentEpoch Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_277 = CONVERT allocatedTokensPerEpoch_10 to uint256
has variable
[i] TMP_277 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_278(uint256) = TMP_277 (c)* divider_11
has variable
[i] TMP_278 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_279(uint256) = TMP_278 (c)/ totalGlobalShares_26
has variable
[i] TMP_279 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_280(uint256) = currentEpoch_3 (c)- lastUpdateEpoch_3
has variable
[i] TMP_280 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_281(uint256) = TMP_279 (c)* TMP_280
has variable
[i] TMP_281 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_282 = CONVERT TMP_281 to uint128
has variable
[i] TMP_282 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_283(uint128) = TMP_282 (c)+ globalExchangeRate_22
has variable
[i] TMP_283 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
newGlobalExchangeRate_1(uint128) := TMP_283(uint128)
has variable
[i] newGlobalExchangeRate cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_277 = CONVERT allocatedTokensPerEpoch_10 to uint256
Function name: getDelegatorDetails

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_277 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_277

Name: TMP_277 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_278(uint256) = TMP_277 (c)* divider_11
Function name: getDelegatorDetails
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_278 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_278

Name: TMP_278 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_279(uint256) = TMP_278 (c)/ totalGlobalShares_26
Function name: getDelegatorDetails
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_279 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_279

Name: TMP_279 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_280(uint256) = currentEpoch_3 (c)- lastUpdateEpoch_3
Function name: getDelegatorDetails
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: currentEpoch Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_280 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_280

Name: TMP_280 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_280(uint256) = currentEpoch_3 (c)- lastUpdateEpoch_3
XXXXX
TMP_281(uint256) = TMP_279 (c)* TMP_280
Function name: getDelegatorDetails
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_280 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_281 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_281

Name: TMP_281 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_282 = CONVERT TMP_281 to uint128
Function name: getDelegatorDetails

Name: TMP_281 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_282 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_282

Name: TMP_282 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_283(uint128) = TMP_282 (c)+ globalExchangeRate_22
Function name: getDelegatorDetails

Name: TMP_283 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 18
Dest type: 12, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 12, Left type: -1
Final dest type: 112

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_283 Function: getDelegatorDetails
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_283

Name: TMP_283 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
newGlobalExchangeRate_1(uint128) := TMP_283(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_283 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: newGlobalExchangeRate Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
18
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for newGlobalExchangeRate

Name: newGlobalExchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
i_1(uint128) := 0(uint256)
has variable
[i] i cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
i_1(uint128) := 0(uint256)
Function name: getDelegatorDetails
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for i

Name: i Function: getDelegatorDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
delegated_2(uint128[]) := ϕ(['delegated_3', 'delegated_1'])
has variable
[i] delegated cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
i_2(uint128) := ϕ(['i_1', 'i_3'])
has variable
[i] i cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_284(bool) = i_2 < validatorsN_7
has variable
[i] TMP_284 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_284
typecheckig node...
delegated_2(uint128[]) := ϕ(['delegated_3', 'delegated_1'])
Function name: getDelegatorDetails
Phi
[i]Type for delegated

Name: delegated Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
i_2(uint128) := ϕ(['i_1', 'i_3'])
Function name: getDelegatorDetails
Phi
[i]Type for i

Name: i Function: getDelegatorDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_284(bool) = i_2 < validatorsN_7
Function name: getDelegatorDetails
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_284

Name: TMP_284 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_284
Condition...
Conidtion: 
TMP_284
TMP_284
clearning node...
clearing ir...?
REF_127(DelegatedStaking.Validator) -> validators_39[i_2]
has variable
clearing ir...?
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_127(DelegatedStaking.Validator)
has variable
[i] v cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_127(DelegatedStaking.Validator) -> validators_39[i_2]
Function name: getDelegatorDetails
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_127

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_127(DelegatedStaking.Validator)
Function name: getDelegatorDetails
asgn

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef

Name: v Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for v

Name: v Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_128(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
has variable
clearing ir...?
REF_129(DelegatedStaking.Staking) -> REF_128[delegator_1]
has variable
clearing ir...?
s_1 (-> ['v'])(DelegatedStaking.Staking) := REF_129(DelegatedStaking.Staking)
has variable
[i] s cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_128(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: getDelegatorDetails
MEMBER
v
stakings
getDelegatorDetails
v Fields:
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^
[i]Type for REF_128

Name: v.stakings Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_129(DelegatedStaking.Staking) -> REF_128[delegator_1]
Function name: getDelegatorDetails
INDEX

Name: v.stakings Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getDelegatorDetails
REF_128
[i]Type for REF_129

Name: v.stakings Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_129(DelegatedStaking.Staking) -> REF_128[delegator_1]
XXXXX
s_1 (-> ['v'])(DelegatedStaking.Staking) := REF_129(DelegatedStaking.Staking)
Function name: getDelegatorDetails
asgn

Name: v.stakings Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for s

Name: s Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
RETURN delegated_2,rewardsAvailable_1,commissionRewards_1
typecheckig node...
RETURN delegated_2,rewardsAvailable_1,commissionRewards_1
RETURN

Name: delegated Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
REF_130(uint128) -> delegated_2[i_2]
has variable
clearing ir...?
REF_131(uint128) -> s_1 (-> ['v']).staked
has variable
clearing ir...?
delegated_3(uint128[]) := ϕ(['delegated_2'])
has variable
[i] delegated cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_130 (->delegated_3) := REF_131(uint128)
has variable
typecheckig node...
REF_130(uint128) -> delegated_2[i_2]
Function name: getDelegatorDetails
INDEX

Name: delegated Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getDelegatorDetails
delegated
[i]Type for REF_130

Name: delegated Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_130(uint128) -> delegated_2[i_2]
XXXXX
REF_131(uint128) -> s_1 (-> ['v']).staked
Function name: getDelegatorDetails
MEMBER
s
staked
getDelegatorDetails
s Fields:
^^^
[i]Type for REF_131

Name: s.staked Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
delegated_3(uint128[]) := ϕ(['delegated_2'])
Function name: getDelegatorDetails
Phi
[i]Type for delegated

Name: delegated Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_130 (->delegated_3) := REF_131(uint128)
Function name: getDelegatorDetails
asgn

Name: s.staked Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_130 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_130

Name: REF_130 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_130 (->delegated_3) := REF_131(uint128)
XXXXX
clearning node...
clearing ir...?
REF_132(uint128) -> v_1 (-> ['validators']).disabledEpoch
has variable
clearing ir...?
TMP_285(bool) = REF_132 == 0
has variable
[i] TMP_285 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_285
typecheckig node...
REF_132(uint128) -> v_1 (-> ['validators']).disabledEpoch
Function name: getDelegatorDetails
MEMBER
v
disabledEpoch
getDelegatorDetails
v Fields:
stakings
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: disabledEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_132

Name: v.disabledEpoch Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_285(bool) = REF_132 == 0
Function name: getDelegatorDetails
[i]Type for TMP_285

Name: TMP_285 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_285
Condition...
Conidtion: 
TMP_285
TMP_285
clearning node...
clearing ir...?
REF_133(uint128) -> v_1 (-> ['validators']).globalShares
has variable
clearing ir...?
REF_134(uint128) -> v_1 (-> ['validators']).lastUpdateGlobalRate
has variable
clearing ir...?
TMP_286(uint128) = newGlobalExchangeRate_1 (c)- REF_134
has variable
[i] TMP_286 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_287(uint128) = INTERNAL_CALL, DelegatedStaking._sharesToTokens(uint128,uint128)(REF_133,TMP_286)
has variable
[i] TMP_287 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
newTokensGiven_1(uint128) := TMP_287(uint128)
has variable
[i] newTokensGiven cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_133(uint128) -> v_1 (-> ['validators']).globalShares
Function name: getDelegatorDetails
MEMBER
v
globalShares
getDelegatorDetails
v Fields:
stakings
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_133

Name: v.globalShares Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.globalShares Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_134(uint128) -> v_1 (-> ['validators']).lastUpdateGlobalRate
Function name: getDelegatorDetails
MEMBER
v
lastUpdateGlobalRate
getDelegatorDetails
v Fields:
stakings
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^
[i]Type for REF_134

Name: v.lastUpdateGlobalRate Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.lastUpdateGlobalRate Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastUpdateGlobalRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_286(uint128) = newGlobalExchangeRate_1 (c)- REF_134
Function name: getDelegatorDetails
lnorm: 18 rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: newGlobalExchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: v.lastUpdateGlobalRate Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newGlobalExchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_286 Function: getDelegatorDetails
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_286

Name: TMP_286 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
This IR caused addback:
TMP_286(uint128) = newGlobalExchangeRate_1 (c)- REF_134
XXXXX
TMP_287(uint128) = INTERNAL_CALL, DelegatedStaking._sharesToTokens(uint128,uint128)(REF_133,TMP_286)
Function name: getDelegatorDetails
Internal call...
_sharesToTokens
REF_133
TMP_286
Function: _sharesToTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 112
0
0

Name: TMP_98 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_287 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_287

Name: TMP_287 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
newTokensGiven_1(uint128) := TMP_287(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_287 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newTokensGiven Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for newTokensGiven

Name: newTokensGiven Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_144(uint128) -> rewardsAvailable_1[i_2]
has variable
clearing ir...?
REF_145(uint128) -> s_1 (-> ['v']).shares
has variable
clearing ir...?
REF_146(uint128) -> v_1 (-> ['validators']).exchangeRate
has variable
clearing ir...?
TMP_303(uint128) = INTERNAL_CALL, DelegatedStaking._sharesToTokens(uint128,uint128)(REF_145,REF_146)
has variable
[i] TMP_303 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_147(uint128) -> s_1 (-> ['v']).staked
has variable
clearing ir...?
TMP_304(uint128) = TMP_303 (c)- REF_147
has variable
[i] TMP_304 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
rewardsAvailable_3(uint128[]) := ϕ(['rewardsAvailable_1'])
has variable
[i] rewardsAvailable cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_144 (->rewardsAvailable_3) := TMP_304(uint128)
has variable
typecheckig node...
REF_144(uint128) -> rewardsAvailable_1[i_2]
Function name: getDelegatorDetails
INDEX

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getDelegatorDetails
rewardsAvailable
[i]Type for REF_144

Name: rewardsAvailable Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_144(uint128) -> rewardsAvailable_1[i_2]
XXXXX
REF_145(uint128) -> s_1 (-> ['v']).shares
Function name: getDelegatorDetails
MEMBER
s
shares
getDelegatorDetails
s Fields:
staked
^^^
[i]Type for REF_145

Name: s.shares Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_146(uint128) -> v_1 (-> ['validators']).exchangeRate
Function name: getDelegatorDetails
MEMBER
v
exchangeRate
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for REF_146

Name: v.exchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: v.exchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_303(uint128) = INTERNAL_CALL, DelegatedStaking._sharesToTokens(uint128,uint128)(REF_145,REF_146)
Function name: getDelegatorDetails
Internal call...
_sharesToTokens
REF_145
REF_146
Function: _sharesToTokens
ic
Internal cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 12
-100
added
xyz
Function name: _sharesToTokens
Function Visibility: internal
clearning node...
clearing ir...?
sharesN_1(uint128) := ϕ(['REF_145', 'REF_133', 'REF_6', 'REF_138', 'REF_63'])
has variable
[i] sharesN cleared

Name: sharesN Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
rate_1(uint128) := ϕ(['rateDifference_1', 'REF_64', 'TMP_286', 'REF_146', 'TMP_298'])
has variable
[i] rate cleared

Name: rate Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
divider_4(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
sharesN_1(uint128) := ϕ(['REF_145', 'REF_133', 'REF_6', 'REF_138', 'REF_63'])
Function name: _sharesToTokens
Phi
[i]Type for sharesN

Name: sharesN Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rate_1(uint128) := ϕ(['rateDifference_1', 'REF_64', 'TMP_286', 'REF_146', 'TMP_298'])
Function name: _sharesToTokens
Phi
[i]Type for rate

Name: rate Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
divider_4(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _sharesToTokens
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_94 = CONVERT sharesN_1 to uint256
has variable
[i] TMP_94 cleared

Name: TMP_94 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_95 = CONVERT rate_1 to uint256
has variable
[i] TMP_95 cleared

Name: TMP_95 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_96(uint256) = TMP_94 (c)* TMP_95
has variable
[i] TMP_96 cleared

Name: TMP_96 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_97(uint256) = TMP_96 (c)/ divider_4
has variable
[i] TMP_97 cleared

Name: TMP_97 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_98 = CONVERT TMP_97 to uint128
has variable
[i] TMP_98 cleared

Name: TMP_98 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
RETURN TMP_98
typecheckig node...
TMP_94 = CONVERT sharesN_1 to uint256
Function name: _sharesToTokens

Name: sharesN Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_94 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_94

Name: TMP_94 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_94 = CONVERT sharesN_1 to uint256
XXXXX
TMP_95 = CONVERT rate_1 to uint256
Function name: _sharesToTokens

Name: rate Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_95 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_95

Name: TMP_95 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_96(uint256) = TMP_94 (c)* TMP_95
Function name: _sharesToTokens
testing mul...
lnorm: u rnorm: u
Dest type: 12, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 12, Left type: -1
Final dest type: 112

Name: TMP_95 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_96 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_96

Name: TMP_96 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
This IR caused addback:
TMP_96(uint256) = TMP_94 (c)* TMP_95
XXXXX
TMP_97(uint256) = TMP_96 (c)/ divider_4
Function name: _sharesToTokens
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_97 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_96 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_97 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_97

Name: TMP_97 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_98 = CONVERT TMP_97 to uint128
Function name: _sharesToTokens

Name: TMP_97 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_98 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_98

Name: TMP_98 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
RETURN TMP_98
RETURN

Name: TMP_98 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
WORKLIST iteration 0 for function call "_sharesToTokens":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToTokens

Name: TMP_98 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
___
[i]Type for TMP_303

Name: TMP_303 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
REF_147(uint128) -> s_1 (-> ['v']).staked
Function name: getDelegatorDetails
MEMBER
s
staked
getDelegatorDetails
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_147

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_304(uint128) = TMP_303 (c)- REF_147
Function name: getDelegatorDetails
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_303 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_303 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_304 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_304

Name: TMP_304 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
rewardsAvailable_3(uint128[]) := ϕ(['rewardsAvailable_1'])
Function name: getDelegatorDetails
Phi
[i]Type for rewardsAvailable

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_144 (->rewardsAvailable_3) := TMP_304(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_304 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_144 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for REF_144

Name: REF_144 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
clearning node...
clearing ir...?
TMP_288 = CONVERT newTokensGiven_1 to uint256
has variable
[i] TMP_288 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_135(uint128) -> v_1 (-> ['validators']).commissionRate
has variable
clearing ir...?
TMP_289 = CONVERT REF_135 to uint256
has variable
[i] TMP_289 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_290(uint256) = TMP_288 (c)* TMP_289
has variable
[i] TMP_290 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_291(uint256) = TMP_290 (c)/ divider_12
has variable
[i] TMP_291 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_292 = CONVERT TMP_291 to uint128
has variable
[i] TMP_292 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
commissionPaid_1(uint128) := TMP_292(uint128)
has variable
[i] commissionPaid cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_288 = CONVERT newTokensGiven_1 to uint256
Function name: getDelegatorDetails

Name: newTokensGiven Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_288 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_288

Name: TMP_288 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_135(uint128) -> v_1 (-> ['validators']).commissionRate
Function name: getDelegatorDetails
MEMBER
v
commissionRate
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_135

Name: v.commissionRate Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionRate Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_289 = CONVERT REF_135 to uint256
Function name: getDelegatorDetails

Name: v.commissionRate Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_289 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_289

Name: TMP_289 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_290(uint256) = TMP_288 (c)* TMP_289
Function name: getDelegatorDetails
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_289 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_290 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_290

Name: TMP_290 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_291(uint256) = TMP_290 (c)/ divider_12
Function name: getDelegatorDetails
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_291 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_291

Name: TMP_291 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_292 = CONVERT TMP_291 to uint128
Function name: getDelegatorDetails

Name: TMP_291 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_292 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_292

Name: TMP_292 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
commissionPaid_1(uint128) := TMP_292(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_292 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionPaid Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for commissionPaid

Name: commissionPaid Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_148(address) -> v_1 (-> ['validators'])._address
has variable
clearing ir...?
TMP_305(bool) = delegator_1 == REF_148
has variable
[i] TMP_305 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_305
typecheckig node...
REF_148(address) -> v_1 (-> ['validators'])._address
Function name: getDelegatorDetails
MEMBER
v
_address
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_148

Name: v._address Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_305(bool) = delegator_1 == REF_148
Function name: getDelegatorDetails
[i]Type for TMP_305

Name: TMP_305 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_305
Condition...
Conidtion: 
TMP_305
TMP_305
clearning node...
clearing ir...?
TMP_293(uint128) = newTokensGiven_1 (c)- commissionPaid_1
has variable
[i] TMP_293 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_294 = CONVERT TMP_293 to uint256
has variable
[i] TMP_294 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_295(uint256) = TMP_294 (c)* divider_12
has variable
[i] TMP_295 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_136(uint128) -> v_1 (-> ['validators']).totalShares
has variable
clearing ir...?
TMP_296(uint256) = TMP_295 (c)/ REF_136
has variable
[i] TMP_296 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_297 = CONVERT TMP_296 to uint128
has variable
[i] TMP_297 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
rateIncrease_1(uint128) := TMP_297(uint128)
has variable
[i] rateIncrease cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_293(uint128) = newTokensGiven_1 (c)- commissionPaid_1
Function name: getDelegatorDetails
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: newTokensGiven Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionPaid Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionPaid Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_293 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_293

Name: TMP_293 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_294 = CONVERT TMP_293 to uint256
Function name: getDelegatorDetails

Name: TMP_293 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_294 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_294

Name: TMP_294 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_295(uint256) = TMP_294 (c)* divider_12
Function name: getDelegatorDetails
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_295 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_295

Name: TMP_295 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_136(uint128) -> v_1 (-> ['validators']).totalShares
Function name: getDelegatorDetails
MEMBER
v
totalShares
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^
[i]Type for REF_136

Name: v.totalShares Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_296(uint256) = TMP_295 (c)/ REF_136
Function name: getDelegatorDetails
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_296 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_295 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_296 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_296

Name: TMP_296 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_296(uint256) = TMP_295 (c)/ REF_136
XXXXX
TMP_297 = CONVERT TMP_296 to uint128
Function name: getDelegatorDetails

Name: TMP_296 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_297 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_297

Name: TMP_297 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rateIncrease_1(uint128) := TMP_297(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_297 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: rateIncrease Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rateIncrease

Name: rateIncrease Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_149(uint128) -> commissionRewards_1[i_2]
has variable
clearing ir...?
REF_150(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
has variable
clearing ir...?
commissionRewards_4(uint128[]) := ϕ(['commissionRewards_1'])
has variable
[i] commissionRewards cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_149 (->commissionRewards_4) := REF_150(uint128)
has variable
typecheckig node...
REF_149(uint128) -> commissionRewards_1[i_2]
Function name: getDelegatorDetails
INDEX

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getDelegatorDetails
commissionRewards
[i]Type for REF_149

Name: commissionRewards Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_149(uint128) -> commissionRewards_1[i_2]
XXXXX
REF_150(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: getDelegatorDetails
MEMBER
v
commissionAvailableToRedeem
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^
[i]Type for REF_150

Name: v.commissionAvailableToRedeem Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
commissionRewards_4(uint128[]) := ϕ(['commissionRewards_1'])
Function name: getDelegatorDetails
Phi
[i]Type for commissionRewards

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_149 (->commissionRewards_4) := REF_150(uint128)
Function name: getDelegatorDetails
asgn

Name: v.commissionAvailableToRedeem Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_149 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_149

Name: REF_149 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_149 (->commissionRewards_4) := REF_150(uint128)
XXXXX
clearning node...
clearing ir...?
commissionRewards_5(uint128[]) := ϕ(['commissionRewards_1', 'commissionRewards_4'])
has variable
[i] commissionRewards cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
commissionRewards_5(uint128[]) := ϕ(['commissionRewards_1', 'commissionRewards_4'])
Function name: getDelegatorDetails
Phi
[i]Type for commissionRewards

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_137(uint128) -> rewardsAvailable_1[i_2]
has variable
clearing ir...?
REF_138(uint128) -> s_1 (-> ['v']).shares
has variable
clearing ir...?
REF_139(uint128) -> v_1 (-> ['validators']).exchangeRate
has variable
clearing ir...?
TMP_298(uint128) = REF_139 (c)+ rateIncrease_1
has variable
[i] TMP_298 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_299(uint128) = INTERNAL_CALL, DelegatedStaking._sharesToTokens(uint128,uint128)(REF_138,TMP_298)
has variable
[i] TMP_299 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_140(uint128) -> s_1 (-> ['v']).staked
has variable
clearing ir...?
TMP_300(uint128) = TMP_299 (c)- REF_140
has variable
[i] TMP_300 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
rewardsAvailable_2(uint128[]) := ϕ(['rewardsAvailable_1'])
has variable
[i] rewardsAvailable cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_137 (->rewardsAvailable_2) := TMP_300(uint128)
has variable
typecheckig node...
REF_137(uint128) -> rewardsAvailable_1[i_2]
Function name: getDelegatorDetails
INDEX

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getDelegatorDetails
rewardsAvailable
[i]Type for REF_137

Name: rewardsAvailable Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_137(uint128) -> rewardsAvailable_1[i_2]
XXXXX
REF_138(uint128) -> s_1 (-> ['v']).shares
Function name: getDelegatorDetails
MEMBER
s
shares
getDelegatorDetails
s Fields:
staked
shares
^^^

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_138

Name: s.shares Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_139(uint128) -> v_1 (-> ['validators']).exchangeRate
Function name: getDelegatorDetails
MEMBER
v
exchangeRate
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for REF_139

Name: v.exchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: v.exchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_298(uint128) = REF_139 (c)+ rateIncrease_1
Function name: getDelegatorDetails

Name: TMP_298 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 18 rnorm: u
Dest type: 12, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 12
Final dest type: 112

Name: v.exchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_298 Function: getDelegatorDetails
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_298

Name: TMP_298 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_299(uint128) = INTERNAL_CALL, DelegatedStaking._sharesToTokens(uint128,uint128)(REF_138,TMP_298)
Function name: getDelegatorDetails
Internal call...
_sharesToTokens
REF_138
TMP_298
Function: _sharesToTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 112
0
0

Name: TMP_98 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_299 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_299

Name: TMP_299 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
REF_140(uint128) -> s_1 (-> ['v']).staked
Function name: getDelegatorDetails
MEMBER
s
staked
getDelegatorDetails
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_140

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_300(uint128) = TMP_299 (c)- REF_140
Function name: getDelegatorDetails
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_299 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_299 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_300 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_300

Name: TMP_300 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
rewardsAvailable_2(uint128[]) := ϕ(['rewardsAvailable_1'])
Function name: getDelegatorDetails
Phi
[i]Type for rewardsAvailable

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_137 (->rewardsAvailable_2) := TMP_300(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_300 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_137 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for REF_137

Name: REF_137 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
clearning node...
clearing ir...?
rewardsAvailable_4(uint128[]) := ϕ(['rewardsAvailable_3', 'rewardsAvailable_2'])
has variable
[i] rewardsAvailable cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
rewardsAvailable_4(uint128[]) := ϕ(['rewardsAvailable_3', 'rewardsAvailable_2'])
Function name: getDelegatorDetails
Phi
[i]Type for rewardsAvailable

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
i_3(uint128) = i_2 (c)+ 1
has variable
[i] i cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
i_3(uint128) = i_2 (c)+ 1
Function name: getDelegatorDetails
val: 1

Name: i Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: getDelegatorDetails
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: getDelegatorDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_141(address) -> v_1 (-> ['validators'])._address
has variable
clearing ir...?
TMP_301(bool) = delegator_1 == REF_141
has variable
[i] TMP_301 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
CONDITION TMP_301
typecheckig node...
REF_141(address) -> v_1 (-> ['validators'])._address
Function name: getDelegatorDetails
MEMBER
v
_address
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_141

Name: v._address Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_301(bool) = delegator_1 == REF_141
Function name: getDelegatorDetails
[i]Type for TMP_301

Name: TMP_301 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_301
Condition...
Conidtion: 
TMP_301
TMP_301
clearning node...
clearing ir...?
REF_142(uint128) -> commissionRewards_1[i_2]
has variable
clearing ir...?
REF_143(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
has variable
clearing ir...?
TMP_302(uint128) = REF_143 (c)+ commissionPaid_1
has variable
[i] TMP_302 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
commissionRewards_2(uint128[]) := ϕ(['commissionRewards_1'])
has variable
[i] commissionRewards cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
REF_142 (->commissionRewards_2) := TMP_302(uint128)
has variable
typecheckig node...
REF_142(uint128) -> commissionRewards_1[i_2]
Function name: getDelegatorDetails
INDEX

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getDelegatorDetails
commissionRewards
[i]Type for REF_142

Name: commissionRewards Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_142(uint128) -> commissionRewards_1[i_2]
XXXXX
REF_143(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: getDelegatorDetails
MEMBER
v
commissionAvailableToRedeem
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_143

Name: v.commissionAvailableToRedeem Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_302(uint128) = REF_143 (c)+ commissionPaid_1
Function name: getDelegatorDetails

Name: TMP_302 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: commissionPaid Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_302 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_302

Name: TMP_302 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
commissionRewards_2(uint128[]) := ϕ(['commissionRewards_1'])
Function name: getDelegatorDetails
Phi
[i]Type for commissionRewards

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_142 (->commissionRewards_2) := TMP_302(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_302 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_142 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_142

Name: REF_142 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
commissionRewards_3(uint128[]) := ϕ(['commissionRewards_1', 'commissionRewards_2'])
has variable
[i] commissionRewards cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
commissionRewards_3(uint128[]) := ϕ(['commissionRewards_1', 'commissionRewards_2'])
Function name: getDelegatorDetails
Phi
[i]Type for commissionRewards

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "getDelegatorDetails":
 New undefined nodes- 13
 Old undefined nodes- 0
typecheckig node...
divider_11(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: getDelegatorDetails
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
allocatedTokensPerEpoch_10(uint128) := ϕ(['allocatedTokensPerEpoch_1', 'allocatedTokensPerEpoch_5', 'allocatedTokensPerEpoch_9', 'allocatedTokensPerEpoch_3', 'allocatedTokensPerEpoch_0'])
Function name: getDelegatorDetails
Phi
[i]Type for allocatedTokensPerEpoch

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_20(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
Function name: getDelegatorDetails
Phi
[i]Type for endEpoch

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalGlobalShares_26(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
Function name: getDelegatorDetails
Phi
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastUpdateEpoch_3(uint128) := ϕ(['lastUpdateEpoch_0', 'lastUpdateEpoch_2'])
Function name: getDelegatorDetails
Phi
[i]Type for lastUpdateEpoch

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
globalExchangeRate_22(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
Function name: getDelegatorDetails
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
validatorsN_7(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
Function name: getDelegatorDetails
Phi
[i]Type for validatorsN

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_39(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: getDelegatorDetails
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
TMP_272 = new uint128[](validatorsN_7)
[i]Type for TMP_272

Name: TMP_272 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
delegated_1(uint128[]) := TMP_272(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_272 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for delegated

Name: delegated Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
delegated_1(uint128[]) := TMP_272(uint128)
XXXXX
typecheckig node...
TMP_274 = new uint128[](validatorsN_7)
[i]Type for TMP_274

Name: TMP_274 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rewardsAvailable_1(uint128[]) := TMP_274(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_274 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardsAvailable

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
rewardsAvailable_1(uint128[]) := TMP_274(uint128)
XXXXX
typecheckig node...
TMP_276 = new uint128[](validatorsN_7)
[i]Type for TMP_276

Name: TMP_276 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
commissionRewards_1(uint128[]) := TMP_276(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_276 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for commissionRewards

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
commissionRewards_1(uint128[]) := TMP_276(uint128)
XXXXX
typecheckig node...
TMP_306(bool) = block.number < endEpoch_20
Function name: getDelegatorDetails
testing lt...
block.number
[i]Type for TMP_306

Name: TMP_306 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_306
Condition...
Conidtion: 
TMP_306
TMP_306
typecheckig node...
currentEpoch_2(uint256) := endEpoch_20(uint128)
Function name: getDelegatorDetails
asgn

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentEpoch Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentEpoch

Name: currentEpoch Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
currentEpoch_1(uint256) := block.number(uint256)
Function name: getDelegatorDetails
asgn
block.number

Name: currentEpoch Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
u
[i]Type for currentEpoch

Name: currentEpoch Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
currentEpoch_1(uint256) := block.number(uint256)
XXXXX
typecheckig node...
currentEpoch_3(uint256) := ϕ(['currentEpoch_1', 'currentEpoch_2'])
Function name: getDelegatorDetails
Phi
[i]Type for currentEpoch

Name: currentEpoch Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_277 = CONVERT allocatedTokensPerEpoch_10 to uint256
Function name: getDelegatorDetails

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_277 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_277

Name: TMP_277 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_278(uint256) = TMP_277 (c)* divider_11
Function name: getDelegatorDetails
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_278 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_278

Name: TMP_278 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_279(uint256) = TMP_278 (c)/ totalGlobalShares_26
Function name: getDelegatorDetails
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_279 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_279

Name: TMP_279 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_280(uint256) = currentEpoch_3 (c)- lastUpdateEpoch_3
Function name: getDelegatorDetails
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: currentEpoch Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_280 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_280

Name: TMP_280 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_280(uint256) = currentEpoch_3 (c)- lastUpdateEpoch_3
XXXXX
TMP_281(uint256) = TMP_279 (c)* TMP_280
Function name: getDelegatorDetails
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_280 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_281 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_281

Name: TMP_281 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_282 = CONVERT TMP_281 to uint128
Function name: getDelegatorDetails

Name: TMP_281 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_282 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_282

Name: TMP_282 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_283(uint128) = TMP_282 (c)+ globalExchangeRate_22
Function name: getDelegatorDetails

Name: TMP_283 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
initlize checks
;;;
lnorm: u rnorm: 18
Dest type: 12, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 12, Left type: -1
Final dest type: 112

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_283 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_283

Name: TMP_283 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
newGlobalExchangeRate_1(uint128) := TMP_283(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_283 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: newGlobalExchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
18
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for newGlobalExchangeRate

Name: newGlobalExchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
typecheckig node...
typecheckig node...
i_1(uint128) := 0(uint256)
Function name: getDelegatorDetails
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: getDelegatorDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for i

Name: i Function: getDelegatorDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
delegated_2(uint128[]) := ϕ(['delegated_3', 'delegated_1'])
Function name: getDelegatorDetails
Phi
[i]Type for delegated

Name: delegated Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
i_2(uint128) := ϕ(['i_1', 'i_3'])
Function name: getDelegatorDetails
Phi
[i]Type for i

Name: i Function: getDelegatorDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_284(bool) = i_2 < validatorsN_7
Function name: getDelegatorDetails
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_284

Name: TMP_284 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_284
Condition...
Conidtion: 
TMP_284
TMP_284
typecheckig node...
REF_127(DelegatedStaking.Validator) -> validators_39[i_2]
Function name: getDelegatorDetails
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_127

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_127(DelegatedStaking.Validator)
Function name: getDelegatorDetails
asgn

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef

Name: v Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: stakings, lastUpdateGlobalRate, totalShares, commissionAvailableToRedeem, commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for v

Name: v Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: stakings, lastUpdateGlobalRate, totalShares, commissionAvailableToRedeem, commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
REF_128(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: getDelegatorDetails
MEMBER
v
stakings
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_128

Name: v.stakings Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_129(DelegatedStaking.Staking) -> REF_128[delegator_1]
Function name: getDelegatorDetails
INDEX

Name: v.stakings Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getDelegatorDetails
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_129

Name: v.stakings Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_1 (-> ['v'])(DelegatedStaking.Staking) := REF_129(DelegatedStaking.Staking)
Function name: getDelegatorDetails
asgn

Name: v.stakings Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for s

Name: s Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
typecheckig node...
typecheckig node...
RETURN delegated_2,rewardsAvailable_1,commissionRewards_1
RETURN

Name: delegated Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_130(uint128) -> delegated_2[i_2]
Function name: getDelegatorDetails
INDEX

Name: delegated Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getDelegatorDetails
delegated
[i]Type for REF_130

Name: delegated Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_130(uint128) -> delegated_2[i_2]
XXXXX
REF_131(uint128) -> s_1 (-> ['v']).staked
Function name: getDelegatorDetails
MEMBER
s
staked
getDelegatorDetails
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_131

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
delegated_3(uint128[]) := ϕ(['delegated_2'])
Function name: getDelegatorDetails
Phi
[i]Type for delegated

Name: delegated Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_130 (->delegated_3) := REF_131(uint128)
Function name: getDelegatorDetails
asgn

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_130 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_130

Name: REF_130 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_132(uint128) -> v_1 (-> ['validators']).disabledEpoch
Function name: getDelegatorDetails
MEMBER
v
disabledEpoch
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: disabledEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_132

Name: v.disabledEpoch Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_285(bool) = REF_132 == 0
Function name: getDelegatorDetails
[i]Type for TMP_285

Name: TMP_285 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_285
Condition...
Conidtion: 
TMP_285
TMP_285
typecheckig node...
REF_133(uint128) -> v_1 (-> ['validators']).globalShares
Function name: getDelegatorDetails
MEMBER
v
globalShares
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_133

Name: v.globalShares Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.globalShares Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_134(uint128) -> v_1 (-> ['validators']).lastUpdateGlobalRate
Function name: getDelegatorDetails
MEMBER
v
lastUpdateGlobalRate
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: lastUpdateGlobalRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_134

Name: v.lastUpdateGlobalRate Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.lastUpdateGlobalRate Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastUpdateGlobalRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_286(uint128) = newGlobalExchangeRate_1 (c)- REF_134
Function name: getDelegatorDetails
lnorm: 18 rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: newGlobalExchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: v.lastUpdateGlobalRate Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newGlobalExchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_286 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_286

Name: TMP_286 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_287(uint128) = INTERNAL_CALL, DelegatedStaking._sharesToTokens(uint128,uint128)(REF_133,TMP_286)
Function name: getDelegatorDetails
Internal call...
_sharesToTokens
REF_133
TMP_286
Function: _sharesToTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 112
0
0

Name: TMP_98 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_287 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_287

Name: TMP_287 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
newTokensGiven_1(uint128) := TMP_287(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_287 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: newTokensGiven Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for newTokensGiven

Name: newTokensGiven Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
REF_144(uint128) -> rewardsAvailable_1[i_2]
Function name: getDelegatorDetails
INDEX

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getDelegatorDetails
rewardsAvailable
[W] Initializing defined variable to constant
[i]Type for REF_144

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: None
done.
This IR caused addback:
REF_144(uint128) -> rewardsAvailable_1[i_2]
XXXXX
REF_145(uint128) -> s_1 (-> ['v']).shares
Function name: getDelegatorDetails
MEMBER
s
shares
getDelegatorDetails
s Fields:
staked
shares
^^^

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_145

Name: s.shares Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_146(uint128) -> v_1 (-> ['validators']).exchangeRate
Function name: getDelegatorDetails
MEMBER
v
exchangeRate
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for REF_146

Name: v.exchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: v.exchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_303(uint128) = INTERNAL_CALL, DelegatedStaking._sharesToTokens(uint128,uint128)(REF_145,REF_146)
Function name: getDelegatorDetails
Internal call...
_sharesToTokens
REF_145
REF_146
Function: _sharesToTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 12
-100
added
xyz
Function name: _sharesToTokens
Function Visibility: internal
clearning node...
clearing ir...?
sharesN_1(uint128) := ϕ(['REF_145', 'REF_133', 'REF_6', 'REF_138', 'REF_63'])
has variable
[i] sharesN cleared

Name: sharesN Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
rate_1(uint128) := ϕ(['rateDifference_1', 'REF_64', 'TMP_286', 'REF_146', 'TMP_298'])
has variable
[i] rate cleared

Name: rate Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
divider_4(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
sharesN_1(uint128) := ϕ(['REF_145', 'REF_133', 'REF_6', 'REF_138', 'REF_63'])
Function name: _sharesToTokens
Phi
[i]Type for sharesN

Name: sharesN Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rate_1(uint128) := ϕ(['rateDifference_1', 'REF_64', 'TMP_286', 'REF_146', 'TMP_298'])
Function name: _sharesToTokens
Phi
[i]Type for rate

Name: rate Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
divider_4(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _sharesToTokens
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_94 = CONVERT sharesN_1 to uint256
has variable
[i] TMP_94 cleared

Name: TMP_94 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_95 = CONVERT rate_1 to uint256
has variable
[i] TMP_95 cleared

Name: TMP_95 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
TMP_96(uint256) = TMP_94 (c)* TMP_95
has variable
[i] TMP_96 cleared

Name: TMP_96 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_97(uint256) = TMP_96 (c)/ divider_4
has variable
[i] TMP_97 cleared

Name: TMP_97 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_98 = CONVERT TMP_97 to uint128
has variable
[i] TMP_98 cleared

Name: TMP_98 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
RETURN TMP_98
typecheckig node...
TMP_94 = CONVERT sharesN_1 to uint256
Function name: _sharesToTokens

Name: sharesN Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_94 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_94

Name: TMP_94 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_95 = CONVERT rate_1 to uint256
Function name: _sharesToTokens

Name: rate Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_95 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for TMP_95

Name: TMP_95 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_96(uint256) = TMP_94 (c)* TMP_95
Function name: _sharesToTokens
testing mul...
lnorm: u rnorm: u
Dest type: 12, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 12, Left type: -1
Final dest type: 112

Name: TMP_95 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_96 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_96

Name: TMP_96 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_97(uint256) = TMP_96 (c)/ divider_4
Function name: _sharesToTokens
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_97 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_96 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_97 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_97

Name: TMP_97 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_98 = CONVERT TMP_97 to uint128
Function name: _sharesToTokens

Name: TMP_97 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_98 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_98

Name: TMP_98 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
RETURN TMP_98
RETURN

Name: TMP_98 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
WORKLIST iteration 0 for function call "_sharesToTokens":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToTokens

Name: TMP_98 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
___
[i]Type for TMP_303

Name: TMP_303 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
REF_147(uint128) -> s_1 (-> ['v']).staked
Function name: getDelegatorDetails
MEMBER
s
staked
getDelegatorDetails
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_147

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_304(uint128) = TMP_303 (c)- REF_147
Function name: getDelegatorDetails
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_303 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_303 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_304 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_304

Name: TMP_304 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
rewardsAvailable_3(uint128[]) := ϕ(['rewardsAvailable_1'])
Function name: getDelegatorDetails
Phi
[i]Type for rewardsAvailable

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_144 (->rewardsAvailable_3) := TMP_304(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_304 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_144 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: None
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for REF_144

Name: REF_144 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
TMP_288 = CONVERT newTokensGiven_1 to uint256
Function name: getDelegatorDetails

Name: newTokensGiven Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_288 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_288

Name: TMP_288 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
REF_135(uint128) -> v_1 (-> ['validators']).commissionRate
Function name: getDelegatorDetails
MEMBER
v
commissionRate
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_135

Name: v.commissionRate Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionRate Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_289 = CONVERT REF_135 to uint256
Function name: getDelegatorDetails

Name: v.commissionRate Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_289 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_289

Name: TMP_289 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_290(uint256) = TMP_288 (c)* TMP_289
Function name: getDelegatorDetails
testing mul...
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_288 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_290 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_290

Name: TMP_290 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_291(uint256) = TMP_290 (c)/ divider_12
Function name: getDelegatorDetails
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_291 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_290 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_291 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_291

Name: TMP_291 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_292 = CONVERT TMP_291 to uint128
Function name: getDelegatorDetails

Name: TMP_291 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_292 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_292

Name: TMP_292 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
commissionPaid_1(uint128) := TMP_292(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_292 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: commissionPaid Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for commissionPaid

Name: commissionPaid Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
REF_148(address) -> v_1 (-> ['validators'])._address
Function name: getDelegatorDetails
MEMBER
v
_address
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_148

Name: v._address Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_305(bool) = delegator_1 == REF_148
Function name: getDelegatorDetails
[i]Type for TMP_305

Name: TMP_305 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_305
Condition...
Conidtion: 
TMP_305
TMP_305
typecheckig node...
TMP_293(uint128) = newTokensGiven_1 (c)- commissionPaid_1
Function name: getDelegatorDetails
lnorm: u rnorm: u
Finance type key: (12, 12)
Func: sub
Dest type: 12, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 112
Final dest type: 112

Name: newTokensGiven Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: commissionPaid Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: newTokensGiven Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_293 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_293

Name: TMP_293 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_294 = CONVERT TMP_293 to uint256
Function name: getDelegatorDetails

Name: TMP_293 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_294 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_294

Name: TMP_294 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_295(uint256) = TMP_294 (c)* divider_12
Function name: getDelegatorDetails
testing mul...
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_294 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_295 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_295

Name: TMP_295 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
REF_136(uint128) -> v_1 (-> ['validators']).totalShares
Function name: getDelegatorDetails
MEMBER
v
totalShares
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_136

Name: v.totalShares Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_296(uint256) = TMP_295 (c)/ REF_136
Function name: getDelegatorDetails
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_296 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_295 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_296 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_296

Name: TMP_296 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_297 = CONVERT TMP_296 to uint128
Function name: getDelegatorDetails

Name: TMP_296 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_297 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_297

Name: TMP_297 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
rateIncrease_1(uint128) := TMP_297(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_297 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: rateIncrease Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for rateIncrease

Name: rateIncrease Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
REF_149(uint128) -> commissionRewards_1[i_2]
Function name: getDelegatorDetails
INDEX

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getDelegatorDetails
commissionRewards
[i]Type for REF_149

Name: commissionRewards Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_149(uint128) -> commissionRewards_1[i_2]
XXXXX
REF_150(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: getDelegatorDetails
MEMBER
v
commissionAvailableToRedeem
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_150

Name: v.commissionAvailableToRedeem Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
commissionRewards_4(uint128[]) := ϕ(['commissionRewards_1'])
Function name: getDelegatorDetails
Phi
[i]Type for commissionRewards

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_149 (->commissionRewards_4) := REF_150(uint128)
Function name: getDelegatorDetails
asgn

Name: v.commissionAvailableToRedeem Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_149 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_149

Name: REF_149 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
commissionRewards_5(uint128[]) := ϕ(['commissionRewards_1', 'commissionRewards_4'])
Function name: getDelegatorDetails
Phi
[i]Type for commissionRewards

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_137(uint128) -> rewardsAvailable_1[i_2]
Function name: getDelegatorDetails
INDEX

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getDelegatorDetails
rewardsAvailable
[W] Initializing defined variable to constant
[i]Type for REF_137

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: None
done.
This IR caused addback:
REF_137(uint128) -> rewardsAvailable_1[i_2]
XXXXX
REF_138(uint128) -> s_1 (-> ['v']).shares
Function name: getDelegatorDetails
MEMBER
s
shares
getDelegatorDetails
s Fields:
staked
shares
^^^

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_138

Name: s.shares Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_139(uint128) -> v_1 (-> ['validators']).exchangeRate
Function name: getDelegatorDetails
MEMBER
v
exchangeRate
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for REF_139

Name: v.exchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: v.exchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_298(uint128) = REF_139 (c)+ rateIncrease_1
Function name: getDelegatorDetails

Name: TMP_298 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
initlize checks
;;;
lnorm: 18 rnorm: u
Finance type key: (12, 12)
Func: add
Dest type: 12, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 12
Final dest type: 112

Name: v.exchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_298 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_298

Name: TMP_298 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_299(uint128) = INTERNAL_CALL, DelegatedStaking._sharesToTokens(uint128,uint128)(REF_138,TMP_298)
Function name: getDelegatorDetails
Internal call...
_sharesToTokens
REF_138
TMP_298
Function: _sharesToTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 112
0
0

Name: TMP_98 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_299 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_299

Name: TMP_299 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
REF_140(uint128) -> s_1 (-> ['v']).staked
Function name: getDelegatorDetails
MEMBER
s
staked
getDelegatorDetails
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_140

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_300(uint128) = TMP_299 (c)- REF_140
Function name: getDelegatorDetails
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_299 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_299 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_300 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_300

Name: TMP_300 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
rewardsAvailable_2(uint128[]) := ϕ(['rewardsAvailable_1'])
Function name: getDelegatorDetails
Phi
[i]Type for rewardsAvailable

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_137 (->rewardsAvailable_2) := TMP_300(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_300 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_137 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: None
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for REF_137

Name: REF_137 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
rewardsAvailable_4(uint128[]) := ϕ(['rewardsAvailable_3', 'rewardsAvailable_2'])
Function name: getDelegatorDetails
Phi
[i]Type for rewardsAvailable

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
i_3(uint128) = i_2 (c)+ 1
Function name: getDelegatorDetails
val: 1

Name: i Function: getDelegatorDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: getDelegatorDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: getDelegatorDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_141(address) -> v_1 (-> ['validators'])._address
Function name: getDelegatorDetails
MEMBER
v
_address
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_141

Name: v._address Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_301(bool) = delegator_1 == REF_141
Function name: getDelegatorDetails
[i]Type for TMP_301

Name: TMP_301 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_301
Condition...
Conidtion: 
TMP_301
TMP_301
typecheckig node...
REF_142(uint128) -> commissionRewards_1[i_2]
Function name: getDelegatorDetails
INDEX

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getDelegatorDetails
commissionRewards
[i]Type for REF_142

Name: commissionRewards Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_142(uint128) -> commissionRewards_1[i_2]
XXXXX
REF_143(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: getDelegatorDetails
MEMBER
v
commissionAvailableToRedeem
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_143

Name: v.commissionAvailableToRedeem Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_302(uint128) = REF_143 (c)+ commissionPaid_1
Function name: getDelegatorDetails

Name: TMP_302 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: -1
Final dest type: 112

Name: commissionPaid Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_302 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_302

Name: TMP_302 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
commissionRewards_2(uint128[]) := ϕ(['commissionRewards_1'])
Function name: getDelegatorDetails
Phi
[i]Type for commissionRewards

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_142 (->commissionRewards_2) := TMP_302(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_302 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_142 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for REF_142

Name: REF_142 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
commissionRewards_3(uint128[]) := ϕ(['commissionRewards_1', 'commissionRewards_2'])
Function name: getDelegatorDetails
Phi
[i]Type for commissionRewards

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "getDelegatorDetails":
 New undefined nodes- 10
 Old undefined nodes- 13
typecheckig node...
divider_11(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: getDelegatorDetails
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
allocatedTokensPerEpoch_10(uint128) := ϕ(['allocatedTokensPerEpoch_1', 'allocatedTokensPerEpoch_5', 'allocatedTokensPerEpoch_9', 'allocatedTokensPerEpoch_3', 'allocatedTokensPerEpoch_0'])
Function name: getDelegatorDetails
Phi
[i]Type for allocatedTokensPerEpoch

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_20(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
Function name: getDelegatorDetails
Phi
[i]Type for endEpoch

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalGlobalShares_26(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
Function name: getDelegatorDetails
Phi
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
lastUpdateEpoch_3(uint128) := ϕ(['lastUpdateEpoch_0', 'lastUpdateEpoch_2'])
Function name: getDelegatorDetails
Phi
[i]Type for lastUpdateEpoch

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
globalExchangeRate_22(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
Function name: getDelegatorDetails
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
validatorsN_7(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
Function name: getDelegatorDetails
Phi
[i]Type for validatorsN

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
validators_39(mapping(uint128 => DelegatedStaking.Validator)) := ϕ(['validators_11', 'validators_34', 'validators_23', 'validators_33', 'validators_0', 'validators_25', 'validators_31', 'validators_18', 'validators_4', 'validators_6', 'validators_37', 'validators_38', 'validators_36', 'validators_17', 'validators_42', 'validators_26', 'validators_12'])
Function name: getDelegatorDetails
Phi
[i]Type for validators

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
TMP_272 = new uint128[](validatorsN_7)
[i]Type for TMP_272

Name: TMP_272 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
delegated_1(uint128[]) := TMP_272(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_272 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delegated Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for delegated

Name: delegated Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
delegated_1(uint128[]) := TMP_272(uint128)
XXXXX
typecheckig node...
TMP_274 = new uint128[](validatorsN_7)
[i]Type for TMP_274

Name: TMP_274 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rewardsAvailable_1(uint128[]) := TMP_274(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_274 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for rewardsAvailable

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
rewardsAvailable_1(uint128[]) := TMP_274(uint128)
XXXXX
typecheckig node...
TMP_276 = new uint128[](validatorsN_7)
[i]Type for TMP_276

Name: TMP_276 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
commissionRewards_1(uint128[]) := TMP_276(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_276 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for commissionRewards

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
commissionRewards_1(uint128[]) := TMP_276(uint128)
XXXXX
typecheckig node...
TMP_306(bool) = block.number < endEpoch_20
Function name: getDelegatorDetails
testing lt...
block.number
[i]Type for TMP_306

Name: TMP_306 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_306
Condition...
Conidtion: 
TMP_306
TMP_306
typecheckig node...
currentEpoch_2(uint256) := endEpoch_20(uint128)
Function name: getDelegatorDetails
asgn

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentEpoch Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentEpoch

Name: currentEpoch Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
currentEpoch_1(uint256) := block.number(uint256)
Function name: getDelegatorDetails
asgn
block.number

Name: currentEpoch Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
u
[i]Type for currentEpoch

Name: currentEpoch Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
currentEpoch_1(uint256) := block.number(uint256)
XXXXX
typecheckig node...
currentEpoch_3(uint256) := ϕ(['currentEpoch_1', 'currentEpoch_2'])
Function name: getDelegatorDetails
Phi
[i]Type for currentEpoch

Name: currentEpoch Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_277 = CONVERT allocatedTokensPerEpoch_10 to uint256
Function name: getDelegatorDetails

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_277 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_277

Name: TMP_277 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_278(uint256) = TMP_277 (c)* divider_11
Function name: getDelegatorDetails
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_278 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_278

Name: TMP_278 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_279(uint256) = TMP_278 (c)/ totalGlobalShares_26
Function name: getDelegatorDetails
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_279 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_279

Name: TMP_279 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_280(uint256) = currentEpoch_3 (c)- lastUpdateEpoch_3
Function name: getDelegatorDetails
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: currentEpoch Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_280 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_280

Name: TMP_280 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_280(uint256) = currentEpoch_3 (c)- lastUpdateEpoch_3
XXXXX
TMP_281(uint256) = TMP_279 (c)* TMP_280
Function name: getDelegatorDetails
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_280 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_281 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_281

Name: TMP_281 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_282 = CONVERT TMP_281 to uint128
Function name: getDelegatorDetails

Name: TMP_281 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_282 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_282

Name: TMP_282 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_283(uint128) = TMP_282 (c)+ globalExchangeRate_22
Function name: getDelegatorDetails

Name: TMP_283 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
initlize checks
;;;
lnorm: u rnorm: 18
Dest type: 12, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 12, Left type: -1
Final dest type: 112

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_283 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_283

Name: TMP_283 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
newGlobalExchangeRate_1(uint128) := TMP_283(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_283 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: newGlobalExchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
18
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for newGlobalExchangeRate

Name: newGlobalExchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
typecheckig node...
typecheckig node...
i_1(uint128) := 0(uint256)
Function name: getDelegatorDetails
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: getDelegatorDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
0
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for i

Name: i Function: getDelegatorDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
delegated_2(uint128[]) := ϕ(['delegated_3', 'delegated_1'])
Function name: getDelegatorDetails
Phi
[i]Type for delegated

Name: delegated Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
i_2(uint128) := ϕ(['i_1', 'i_3'])
Function name: getDelegatorDetails
Phi
[i]Type for i

Name: i Function: getDelegatorDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_284(bool) = i_2 < validatorsN_7
Function name: getDelegatorDetails
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_284

Name: TMP_284 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_284
Condition...
Conidtion: 
TMP_284
TMP_284
typecheckig node...
REF_127(DelegatedStaking.Validator) -> validators_39[i_2]
Function name: getDelegatorDetails
INDEX

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_127

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
v_1 (-> ['validators'])(DelegatedStaking.Validator) := REF_127(DelegatedStaking.Validator)
Function name: getDelegatorDetails
asgn

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef

Name: v Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: stakings, lastUpdateGlobalRate, totalShares, commissionAvailableToRedeem, commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for v

Name: v Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: stakings, lastUpdateGlobalRate, totalShares, commissionAvailableToRedeem, commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
done.
typecheckig node...
REF_128(mapping(address => DelegatedStaking.Staking)) -> v_1 (-> ['validators']).stakings
Function name: getDelegatorDetails
MEMBER
v
stakings
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_128

Name: v.stakings Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.stakings Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: stakings Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_129(DelegatedStaking.Staking) -> REF_128[delegator_1]
Function name: getDelegatorDetails
INDEX

Name: v.stakings Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getDelegatorDetails
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_129

Name: v.stakings Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
s_1 (-> ['v'])(DelegatedStaking.Staking) := REF_129(DelegatedStaking.Staking)
Function name: getDelegatorDetails
asgn

Name: v.stakings Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for s

Name: s Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: staked, shares
Finance Type: undef
done.
typecheckig node...
typecheckig node...
RETURN delegated_2,rewardsAvailable_1,commissionRewards_1
RETURN

Name: delegated Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_130(uint128) -> delegated_2[i_2]
Function name: getDelegatorDetails
INDEX

Name: delegated Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getDelegatorDetails
delegated
[i]Type for REF_130

Name: delegated Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_130(uint128) -> delegated_2[i_2]
XXXXX
REF_131(uint128) -> s_1 (-> ['v']).staked
Function name: getDelegatorDetails
MEMBER
s
staked
getDelegatorDetails
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_131

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
delegated_3(uint128[]) := ϕ(['delegated_2'])
Function name: getDelegatorDetails
Phi
[i]Type for delegated

Name: delegated Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_130 (->delegated_3) := REF_131(uint128)
Function name: getDelegatorDetails
asgn

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_130 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_130

Name: REF_130 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_132(uint128) -> v_1 (-> ['validators']).disabledEpoch
Function name: getDelegatorDetails
MEMBER
v
disabledEpoch
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: disabledEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_132

Name: v.disabledEpoch Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.disabledEpoch Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: disabledEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_285(bool) = REF_132 == 0
Function name: getDelegatorDetails
[i]Type for TMP_285

Name: TMP_285 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_285
Condition...
Conidtion: 
TMP_285
TMP_285
typecheckig node...
REF_133(uint128) -> v_1 (-> ['validators']).globalShares
Function name: getDelegatorDetails
MEMBER
v
globalShares
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_133

Name: v.globalShares Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.globalShares Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: globalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_134(uint128) -> v_1 (-> ['validators']).lastUpdateGlobalRate
Function name: getDelegatorDetails
MEMBER
v
lastUpdateGlobalRate
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: lastUpdateGlobalRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_134

Name: v.lastUpdateGlobalRate Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.lastUpdateGlobalRate Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastUpdateGlobalRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_286(uint128) = newGlobalExchangeRate_1 (c)- REF_134
Function name: getDelegatorDetails
lnorm: 18 rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: newGlobalExchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: v.lastUpdateGlobalRate Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: newGlobalExchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_286 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_286

Name: TMP_286 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_287(uint128) = INTERNAL_CALL, DelegatedStaking._sharesToTokens(uint128,uint128)(REF_133,TMP_286)
Function name: getDelegatorDetails
Internal call...
_sharesToTokens
REF_133
TMP_286
Function: _sharesToTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 112
0
0

Name: TMP_98 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_287 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_287

Name: TMP_287 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
newTokensGiven_1(uint128) := TMP_287(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_287 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: newTokensGiven Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for newTokensGiven

Name: newTokensGiven Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
REF_144(uint128) -> rewardsAvailable_1[i_2]
Function name: getDelegatorDetails
INDEX

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getDelegatorDetails
rewardsAvailable
[W] Initializing defined variable to constant
[i]Type for REF_144

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: None
done.
This IR caused addback:
REF_144(uint128) -> rewardsAvailable_1[i_2]
XXXXX
REF_145(uint128) -> s_1 (-> ['v']).shares
Function name: getDelegatorDetails
MEMBER
s
shares
getDelegatorDetails
s Fields:
staked
shares
^^^

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_145

Name: s.shares Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_146(uint128) -> v_1 (-> ['validators']).exchangeRate
Function name: getDelegatorDetails
MEMBER
v
exchangeRate
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for REF_146

Name: v.exchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: v.exchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_303(uint128) = INTERNAL_CALL, DelegatedStaking._sharesToTokens(uint128,uint128)(REF_145,REF_146)
Function name: getDelegatorDetails
Internal call...
_sharesToTokens
REF_145
REF_146
Function: _sharesToTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 12
-100
added
xyz
Function name: _sharesToTokens
Function Visibility: internal
clearning node...
clearing ir...?
sharesN_1(uint128) := ϕ(['REF_145', 'REF_133', 'REF_6', 'REF_138', 'REF_63'])
has variable
[i] sharesN cleared

Name: sharesN Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
rate_1(uint128) := ϕ(['rateDifference_1', 'REF_64', 'TMP_286', 'REF_146', 'TMP_298'])
has variable
[i] rate cleared

Name: rate Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
divider_4(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
typecheckig node...
sharesN_1(uint128) := ϕ(['REF_145', 'REF_133', 'REF_6', 'REF_138', 'REF_63'])
Function name: _sharesToTokens
Phi
[i]Type for sharesN

Name: sharesN Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
rate_1(uint128) := ϕ(['rateDifference_1', 'REF_64', 'TMP_286', 'REF_146', 'TMP_298'])
Function name: _sharesToTokens
Phi
[i]Type for rate

Name: rate Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
divider_4(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: _sharesToTokens
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_94 = CONVERT sharesN_1 to uint256
has variable
[i] TMP_94 cleared

Name: TMP_94 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_95 = CONVERT rate_1 to uint256
has variable
[i] TMP_95 cleared

Name: TMP_95 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
clearing ir...?
TMP_96(uint256) = TMP_94 (c)* TMP_95
has variable
[i] TMP_96 cleared

Name: TMP_96 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_97(uint256) = TMP_96 (c)/ divider_4
has variable
[i] TMP_97 cleared

Name: TMP_97 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
TMP_98 = CONVERT TMP_97 to uint128
has variable
[i] TMP_98 cleared

Name: TMP_98 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
clearing ir...?
RETURN TMP_98
typecheckig node...
TMP_94 = CONVERT sharesN_1 to uint256
Function name: _sharesToTokens

Name: sharesN Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_94 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_94

Name: TMP_94 Function: _sharesToTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_95 = CONVERT rate_1 to uint256
Function name: _sharesToTokens

Name: rate Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_95 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for TMP_95

Name: TMP_95 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_96(uint256) = TMP_94 (c)* TMP_95
Function name: _sharesToTokens
testing mul...
lnorm: u rnorm: u
Dest type: 12, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 12, Left type: -1
Final dest type: 112

Name: TMP_95 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_96 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_96

Name: TMP_96 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_97(uint256) = TMP_96 (c)/ divider_4
Function name: _sharesToTokens
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_97 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_96 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_97 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_97

Name: TMP_97 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_98 = CONVERT TMP_97 to uint128
Function name: _sharesToTokens

Name: TMP_97 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_98 Function: _sharesToTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_98

Name: TMP_98 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
RETURN TMP_98
RETURN

Name: TMP_98 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
WORKLIST iteration 0 for function call "_sharesToTokens":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _sharesToTokens

Name: TMP_98 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
___
[i]Type for TMP_303

Name: TMP_303 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
REF_147(uint128) -> s_1 (-> ['v']).staked
Function name: getDelegatorDetails
MEMBER
s
staked
getDelegatorDetails
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_147

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_304(uint128) = TMP_303 (c)- REF_147
Function name: getDelegatorDetails
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_303 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_303 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_304 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_304

Name: TMP_304 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
rewardsAvailable_3(uint128[]) := ϕ(['rewardsAvailable_1'])
Function name: getDelegatorDetails
Phi
[i]Type for rewardsAvailable

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_144 (->rewardsAvailable_3) := TMP_304(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_304 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_144 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: None
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for REF_144

Name: REF_144 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
TMP_288 = CONVERT newTokensGiven_1 to uint256
Function name: getDelegatorDetails

Name: newTokensGiven Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_288 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_288

Name: TMP_288 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
REF_135(uint128) -> v_1 (-> ['validators']).commissionRate
Function name: getDelegatorDetails
MEMBER
v
commissionRate
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_135

Name: v.commissionRate Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionRate Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_289 = CONVERT REF_135 to uint256
Function name: getDelegatorDetails

Name: v.commissionRate Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_289 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_289

Name: TMP_289 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_290(uint256) = TMP_288 (c)* TMP_289
Function name: getDelegatorDetails
testing mul...
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_288 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_290 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_290

Name: TMP_290 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_291(uint256) = TMP_290 (c)/ divider_12
Function name: getDelegatorDetails
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_291 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_290 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_291 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_291

Name: TMP_291 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_292 = CONVERT TMP_291 to uint128
Function name: getDelegatorDetails

Name: TMP_291 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_292 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_292

Name: TMP_292 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
commissionPaid_1(uint128) := TMP_292(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_292 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: commissionPaid Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for commissionPaid

Name: commissionPaid Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
REF_148(address) -> v_1 (-> ['validators'])._address
Function name: getDelegatorDetails
MEMBER
v
_address
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_148

Name: v._address Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_305(bool) = delegator_1 == REF_148
Function name: getDelegatorDetails
[i]Type for TMP_305

Name: TMP_305 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_305
Condition...
Conidtion: 
TMP_305
TMP_305
typecheckig node...
TMP_293(uint128) = newTokensGiven_1 (c)- commissionPaid_1
Function name: getDelegatorDetails
lnorm: u rnorm: u
Finance type key: (12, 12)
Func: sub
Dest type: 12, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 112
Final dest type: 112

Name: newTokensGiven Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: commissionPaid Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: newTokensGiven Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_293 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_293

Name: TMP_293 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_294 = CONVERT TMP_293 to uint256
Function name: getDelegatorDetails

Name: TMP_293 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_294 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_294

Name: TMP_294 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_295(uint256) = TMP_294 (c)* divider_12
Function name: getDelegatorDetails
testing mul...
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_294 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_295 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_295

Name: TMP_295 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
REF_136(uint128) -> v_1 (-> ['validators']).totalShares
Function name: getDelegatorDetails
MEMBER
v
totalShares
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_136

Name: v.totalShares Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.totalShares Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalShares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_296(uint256) = TMP_295 (c)/ REF_136
Function name: getDelegatorDetails
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_296 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_295 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_296 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_296

Name: TMP_296 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_297 = CONVERT TMP_296 to uint128
Function name: getDelegatorDetails

Name: TMP_296 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_297 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_297

Name: TMP_297 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
rateIncrease_1(uint128) := TMP_297(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_297 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: rateIncrease Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for rateIncrease

Name: rateIncrease Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
REF_149(uint128) -> commissionRewards_1[i_2]
Function name: getDelegatorDetails
INDEX

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getDelegatorDetails
commissionRewards
[i]Type for REF_149

Name: commissionRewards Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_149(uint128) -> commissionRewards_1[i_2]
XXXXX
REF_150(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: getDelegatorDetails
MEMBER
v
commissionAvailableToRedeem
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_150

Name: v.commissionAvailableToRedeem Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
commissionRewards_4(uint128[]) := ϕ(['commissionRewards_1'])
Function name: getDelegatorDetails
Phi
[i]Type for commissionRewards

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_149 (->commissionRewards_4) := REF_150(uint128)
Function name: getDelegatorDetails
asgn

Name: v.commissionAvailableToRedeem Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_149 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
u
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_149

Name: REF_149 Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
commissionRewards_5(uint128[]) := ϕ(['commissionRewards_1', 'commissionRewards_4'])
Function name: getDelegatorDetails
Phi
[i]Type for commissionRewards

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_137(uint128) -> rewardsAvailable_1[i_2]
Function name: getDelegatorDetails
INDEX

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getDelegatorDetails
rewardsAvailable
[W] Initializing defined variable to constant
[i]Type for REF_137

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: None
done.
This IR caused addback:
REF_137(uint128) -> rewardsAvailable_1[i_2]
XXXXX
REF_138(uint128) -> s_1 (-> ['v']).shares
Function name: getDelegatorDetails
MEMBER
s
shares
getDelegatorDetails
s Fields:
staked
shares
^^^

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_138

Name: s.shares Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.shares Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shares Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_139(uint128) -> v_1 (-> ['validators']).exchangeRate
Function name: getDelegatorDetails
MEMBER
v
exchangeRate
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[i]Type for REF_139

Name: v.exchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: v.exchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: exchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_298(uint128) = REF_139 (c)+ rateIncrease_1
Function name: getDelegatorDetails

Name: TMP_298 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
initlize checks
;;;
lnorm: 18 rnorm: u
Finance type key: (12, 12)
Func: add
Dest type: 12, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: 12
Final dest type: 112

Name: v.exchangeRate Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_298 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_298

Name: TMP_298 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_299(uint128) = INTERNAL_CALL, DelegatedStaking._sharesToTokens(uint128,uint128)(REF_138,TMP_298)
Function name: getDelegatorDetails
Internal call...
_sharesToTokens
REF_138
TMP_298
Function: _sharesToTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [2]
    norm: 18
    link: None
    fields: []
    fintype: 112
0
0

Name: TMP_98 Function: _sharesToTokens
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_299 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_299

Name: TMP_299 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
REF_140(uint128) -> s_1 (-> ['v']).staked
Function name: getDelegatorDetails
MEMBER
s
staked
getDelegatorDetails
s Fields:
staked
shares
^^^

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_140

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: staked Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_300(uint128) = TMP_299 (c)- REF_140
Function name: getDelegatorDetails
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_299 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: s.staked Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_299 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_300 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_300

Name: TMP_300 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
rewardsAvailable_2(uint128[]) := ϕ(['rewardsAvailable_1'])
Function name: getDelegatorDetails
Phi
[i]Type for rewardsAvailable

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_137 (->rewardsAvailable_2) := TMP_300(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_300 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_137 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: None
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for REF_137

Name: REF_137 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
rewardsAvailable_4(uint128[]) := ϕ(['rewardsAvailable_3', 'rewardsAvailable_2'])
Function name: getDelegatorDetails
Phi
[i]Type for rewardsAvailable

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
i_3(uint128) = i_2 (c)+ 1
Function name: getDelegatorDetails
val: 1

Name: i Function: getDelegatorDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: getDelegatorDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: getDelegatorDetails
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_141(address) -> v_1 (-> ['validators'])._address
Function name: getDelegatorDetails
MEMBER
v
_address
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_141

Name: v._address Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v._address Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _address Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_301(bool) = delegator_1 == REF_141
Function name: getDelegatorDetails
[i]Type for TMP_301

Name: TMP_301 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_301
Condition...
Conidtion: 
TMP_301
TMP_301
typecheckig node...
REF_142(uint128) -> commissionRewards_1[i_2]
Function name: getDelegatorDetails
INDEX

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getDelegatorDetails
commissionRewards
[W] Initializing defined variable to constant
[i]Type for REF_142

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: None
done.
This IR caused addback:
REF_142(uint128) -> commissionRewards_1[i_2]
XXXXX
REF_143(uint128) -> v_1 (-> ['validators']).commissionAvailableToRedeem
Function name: getDelegatorDetails
MEMBER
v
commissionAvailableToRedeem
getDelegatorDetails
v Fields:
stakings
lastUpdateGlobalRate
totalShares
commissionAvailableToRedeem
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_143

Name: v.commissionAvailableToRedeem Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v.commissionAvailableToRedeem Function: getDelegatorDetails
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: commissionAvailableToRedeem Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_302(uint128) = REF_143 (c)+ commissionPaid_1
Function name: getDelegatorDetails

Name: TMP_302 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 112, Left type: -1
Final dest type: 112

Name: commissionPaid Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_302 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_302

Name: TMP_302 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
commissionRewards_2(uint128[]) := ϕ(['commissionRewards_1'])
Function name: getDelegatorDetails
Phi
[i]Type for commissionRewards

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_142 (->commissionRewards_2) := TMP_302(uint128)
Function name: getDelegatorDetails
asgn

Name: TMP_302 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: REF_142 Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: None
u
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for REF_142

Name: REF_142 Function: getDelegatorDetails
Num: 1
Den: 2
Norm: u
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
typecheckig node...
commissionRewards_3(uint128[]) := ϕ(['commissionRewards_1', 'commissionRewards_2'])
Function name: getDelegatorDetails
Phi
[i]Type for commissionRewards

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 2 for function call "getDelegatorDetails":
 New undefined nodes- 10
 Old undefined nodes- 10
Saving return values for: getDelegatorDetails

Name: delegated Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___

Name: rewardsAvailable Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___

Name: commissionRewards Function: getDelegatorDetails
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
unstakings
coolDownEnd
global
unstakings
amount
FIELDS:
unstakings Fields:
^^^
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
validators.unstakings
coolDownEnd
global
validators.unstakings
amount
FIELDS:
validators.unstakings Fields:
^^^
FIELDS:
validators Fields:
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: getMetadata
Function name: getMetadata
Function Visibility (test): public
-100
clearning node...
clearing ir...?
divider_15(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
has variable
clearing ir...?
maxCapMultiplier_8(uint128) := ϕ(['maxCapMultiplier_0', 'maxCapMultiplier_7', 'maxCapMultiplier_1', 'maxCapMultiplier_6', 'maxCapMultiplier_4'])
has variable
clearing ir...?
allocatedTokensPerEpoch_11(uint128) := ϕ(['allocatedTokensPerEpoch_1', 'allocatedTokensPerEpoch_5', 'allocatedTokensPerEpoch_9', 'allocatedTokensPerEpoch_3', 'allocatedTokensPerEpoch_0'])
has variable
clearing ir...?
endEpoch_21(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
has variable
clearing ir...?
totalGlobalShares_27(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
has variable
clearing ir...?
globalExchangeRate_23(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
has variable
clearing ir...?
validatorsN_11(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
has variable
typecheckig node...
divider_15(uint256) := ϕ(['divider_10', 'divider_8', 'divider_0', 'divider_14', 'divider_3'])
Function name: getMetadata
Phi
[i]Type for divider

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
maxCapMultiplier_8(uint128) := ϕ(['maxCapMultiplier_0', 'maxCapMultiplier_7', 'maxCapMultiplier_1', 'maxCapMultiplier_6', 'maxCapMultiplier_4'])
Function name: getMetadata
Phi
[i]Type for maxCapMultiplier

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
allocatedTokensPerEpoch_11(uint128) := ϕ(['allocatedTokensPerEpoch_1', 'allocatedTokensPerEpoch_5', 'allocatedTokensPerEpoch_9', 'allocatedTokensPerEpoch_3', 'allocatedTokensPerEpoch_0'])
Function name: getMetadata
Phi
[i]Type for allocatedTokensPerEpoch

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
endEpoch_21(uint128) := ϕ(['endEpoch_9', 'endEpoch_2', 'endEpoch_11', 'endEpoch_6', 'endEpoch_15', 'endEpoch_3', 'endEpoch_17', 'endEpoch_0', 'endEpoch_5'])
Function name: getMetadata
Phi
[i]Type for endEpoch

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalGlobalShares_27(uint128) := ϕ(['totalGlobalShares_9', 'totalGlobalShares_11', 'totalGlobalShares_0', 'totalGlobalShares_25', 'totalGlobalShares_18', 'totalGlobalShares_7'])
Function name: getMetadata
Phi
[i]Type for totalGlobalShares

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
globalExchangeRate_23(uint128) := ϕ(['globalExchangeRate_13', 'globalExchangeRate_1', 'globalExchangeRate_0', 'globalExchangeRate_5', 'globalExchangeRate_10', 'globalExchangeRate_12', 'globalExchangeRate_20', 'globalExchangeRate_3'])
Function name: getMetadata
Phi
[i]Type for globalExchangeRate

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
validatorsN_11(uint128) := ϕ(['validatorsN_0', 'validatorsN_10', 'validatorsN_5'])
Function name: getMetadata
Phi
[i]Type for validatorsN

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_307 = CONVERT totalGlobalShares_27 to uint256
has variable
[i] TMP_307 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_308 = CONVERT globalExchangeRate_23 to uint256
has variable
[i] TMP_308 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_309(uint256) = TMP_307 (c)* TMP_308
has variable
[i] TMP_309 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_310(uint256) = TMP_309 (c)/ divider_15
has variable
[i] TMP_310 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
TMP_311 = CONVERT TMP_310 to uint128
has variable
[i] TMP_311 cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
clearing ir...?
totalStaked_1(uint128) := TMP_311(uint128)
has variable
[i] totalStaked cleared

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_307 = CONVERT totalGlobalShares_27 to uint256
Function name: getMetadata

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_307 Function: getMetadata
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_307

Name: TMP_307 Function: getMetadata
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_308 = CONVERT globalExchangeRate_23 to uint256
Function name: getMetadata

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_308 Function: getMetadata
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_308

Name: TMP_308 Function: getMetadata
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
done.
TMP_309(uint256) = TMP_307 (c)* TMP_308
Function name: getMetadata
testing mul...
lnorm: u rnorm: 18
Dest type: 12, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: 12, Left type: -1
Final dest type: 112

Name: TMP_308 Function: getMetadata
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio

Name: TMP_309 Function: getMetadata
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_309

Name: TMP_309 Function: getMetadata
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_310(uint256) = TMP_309 (c)/ divider_15
Function name: getMetadata
lnorm: 18 rnorm: u
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Dest updated
Right type: -1, Left type: 112
Final dest type: 112

Name: TMP_310 Function: getMetadata
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_309 Function: getMetadata
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_310 Function: getMetadata
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
[i]Type for TMP_310

Name: TMP_310 Function: getMetadata
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
TMP_311 = CONVERT TMP_310 to uint128
Function name: getMetadata

Name: TMP_310 Function: getMetadata
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: TMP_311 Function: getMetadata
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_311

Name: TMP_311 Function: getMetadata
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
totalStaked_1(uint128) := TMP_311(uint128)
Function name: getMetadata
asgn

Name: TMP_311 Function: getMetadata
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: totalStaked Function: getMetadata
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
18
Finance type key: (12, -1)
Func: assign
Dest type: 112, Update_ratios: {10: -1, 12: False, 20: -1, 21: -1, 112: True}
Right type: -1, Left type: 112
Final dest type: 112
[i]Type for totalStaked

Name: totalStaked Function: getMetadata
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
done.
clearning node...
clearing ir...?
RETURN allocatedTokensPerEpoch_11,endEpoch_21,maxCapMultiplier_8,totalStaked_1,validatorsN_11
typecheckig node...
RETURN allocatedTokensPerEpoch_11,endEpoch_21,maxCapMultiplier_8,totalStaked_1,validatorsN_11
RETURN

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalStaked Function: getMetadata
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "getMetadata":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: getMetadata

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___

Name: totalStaked Function: getMetadata
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: updated simple fee ratio
___

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
unstakings
coolDownEnd
global
unstakings
amount
FIELDS:
unstakings Fields:
^^^
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
validators.unstakings
coolDownEnd
global
validators.unstakings
amount
FIELDS:
validators.unstakings Fields:
^^^
FIELDS:
validators Fields:
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: slitherConstructorConstantVariables
Function slitherConstructorConstantVariables not marked
Mark Iterations TRUE, proceeding anyway
Function name: slitherConstructorConstantVariables
Function Visibility (test): internal
State_var: allocatedTokensPerEpoch
Finding type for allocatedTokensPerEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: allocatedTokensPerEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: divider
Finding type for divider...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: divider Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: endEpoch
Finding type for endEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: endEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: globalExchangeRate
Finding type for globalExchangeRate...
uint128
Check copy_toekn_tuple
(1, 2, 18, None, 12)
----
Type: uint128
uint128
Final Type: uint128

Name: globalExchangeRate Function: global
Num: 1
Den: 2
Norm: 18
LF: None
Fields: 
Finance Type: simple fee ratio
[*]Type fetched successfully
State_var: maxCapMultiplier
Finding type for maxCapMultiplier...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: maxCapMultiplier Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalGlobalShares
Finding type for totalGlobalShares...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: totalGlobalShares Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorsN
Finding type for validatorsN...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorsN Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
uint8
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint8
uint8
Final Type: uint8

Name: _initialized Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: rewardsLocked
Finding type for rewardsLocked...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: rewardsLocked Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorMinStakedRequired
Finding type for validatorMinStakedRequired...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorMinStakedRequired Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validators
Finding type for validators...
mapping(uint128 => DelegatedStaking.Validator)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint128 => DelegatedStaking.Validator)
mapping(uint128 => DelegatedStaking.Validator)
DelegatedStaking.Validator
Final Type: DelegatedStaking.Validator
global
validators
_address
global
validators
operator
global
validators
commissionRate
global
validators
disabledEpoch
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
globalShares
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
lastUpdateGlobalRate
global
validators
totalShares
global
validators
delegated
Check copy_toekn_tuple
([-1], [-1], ['u'], None, -1)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
exchangeRate
Check copy_toekn_tuple
([1], [2], [18], None, 12)
----
Type: uint128
uint128
Final Type: uint128
Type: uint128
uint128
Final Type: uint128
global
validators
commissionAvailableToRedeem
global
validators
stakings
global
validators
unstakings
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
unstakings
coolDownEnd
global
unstakings
amount
FIELDS:
unstakings Fields:
^^^
Type: mapping(address => DelegatedStaking.Unstaking[])
mapping(address => DelegatedStaking.Unstaking[])
DelegatedStaking.Unstaking[]
DelegatedStaking.Unstaking
Final Type: DelegatedStaking.Unstaking
global
validators.unstakings
coolDownEnd
global
validators.unstakings
amount
FIELDS:
validators.unstakings Fields:
^^^
FIELDS:
validators Fields:
commissionRate
operator
_address
disabledEpoch
globalShares
delegated
exchangeRate
unstakings
^^^

Name: validators Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: commissionRate, operator, _address, disabledEpoch, globalShares, delegated, exchangeRate, unstakings
Finance Type: undef
[*]Type fetched successfully
State_var: CQT
Finding type for CQT...
IERC20Upgradeable
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IERC20Upgradeable
IERC20Upgradeable
Final Type: IERC20Upgradeable
 NO FIELDS

Name: CQT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: delegatorCoolDown
Finding type for delegatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: delegatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: validatorCoolDown
Finding type for validatorCoolDown...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: validatorCoolDown Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastUpdateEpoch
Finding type for lastUpdateEpoch...
uint128
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint128
uint128
Final Type: uint128

Name: lastUpdateEpoch Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Errors: [<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fa332f713d0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fa332fc3f70>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7fa3362e7f40>]
Seen contract: {'DelegatedStaking': True} Contract name out: OwnableUpgradeable
[x] OwnableUpgradeable not run
Seen contract: {'DelegatedStaking': True, 'OwnableUpgradeable': True} Contract name out: Initializable
[x] Initializable not run
Seen contract: {'DelegatedStaking': True, 'OwnableUpgradeable': True, 'Initializable': True} Contract name out: IERC20Upgradeable
[x] IERC20Upgradeable not run
Seen contract: {'DelegatedStaking': True, 'OwnableUpgradeable': True, 'Initializable': True, 'IERC20Upgradeable': True} Contract name out: IERC20PermitUpgradeable
[x] IERC20PermitUpgradeable not run
Seen contract: {'DelegatedStaking': True, 'OwnableUpgradeable': True, 'Initializable': True, 'IERC20Upgradeable': True, 'IERC20PermitUpgradeable': True} Contract name out: SafeERC20Upgradeable
[x] SafeERC20Upgradeable not run
Seen contract: {'DelegatedStaking': True, 'OwnableUpgradeable': True, 'Initializable': True, 'IERC20Upgradeable': True, 'IERC20PermitUpgradeable': True, 'SafeERC20Upgradeable': True} Contract name out: AddressUpgradeable
[x] AddressUpgradeable not run
Seen contract: {'DelegatedStaking': True, 'OwnableUpgradeable': True, 'Initializable': True, 'IERC20Upgradeable': True, 'IERC20PermitUpgradeable': True, 'SafeERC20Upgradeable': True, 'AddressUpgradeable': True} Contract name out: ContextUpgradeable
[x] ContextUpgradeable not run
Function count: 70
