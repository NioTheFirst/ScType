/// <reference types="node" />
import { ContractFunction, ContractInput } from './contract';
/**
 * Encode the input data with the provided types.
 *
 * @param {(ContractInput | string)[]} input
 * @param {unknown[]} values
 * @return {Buffer}
 */
export declare const encode: (input: Array<ContractInput | string>, values: unknown[]) => Uint8Array;
/**
 * Encode the input data with the provided types, and prepend the function identifier.
 *
 * @param {ContractFunction} contractFunction
 * @param {unknown[]} values
 * @return {Buffer}
 */
export declare const encodeWithIdentifier: (contractFunction: ContractFunction, values: unknown[]) => Uint8Array;
export declare const decode: <T extends unknown[]>(input: Array<ContractInput | string>, buffer: Buffer) => T;
