VaderReserve
Babylonian
BitMath
FixedPoint
FullMath
ILiquidityBasedTWAP
IVaderReserve
Ownable
IERC20
SafeERC20
Address
Context
ProtocolConstants
contract name: VaderReserve
WARNING!!!!
VaderReserve_types.txt
Finance File not Found
"VaderReserve_types.txt" opened successfully.
[*c], VaderReserve

constructor

grant

[xf], initialize



[sef], LBT, previousPrices, 1, {c, 1, -1, 0}

{c, 1, -1, 0}
['c', '1', '-1', '0']
[sef], LBT, getUSDVPrice, 1, {c, 1, -1, 8}

{c, 1, -1, 8}
['c', '1', '-1', '8']
[sef], LBT, getVaderPrice, 1, {c, 2, -1, 18}

{c, 2, -1, 18}
['c', '2', '-1', '18']
[sef], VADER, balanceOf, 1, {c, 2, -1, 18}

{c, 2, -1, 18}
['c', '2', '-1', '18']


[t], global, _ZERO_ADDRESS

[t], global, _owner

[t], global, lbt, -1, -1, 0, LBT

[t], global, router, -1, -1, 0, ROUTER

[t], global, vader, -1, -1, 0, VADER

[t], global, _GRANT_DELAY

[t], global, lastGrant

[t], global, _MAX_BASIS_POINTS

[t], global, _MAX_GRANT_BASIS_POINTS

[t], global, _ONE_YEAR



[t], reimburseImpermanentLoss, recipient, -1, -1, 0, RECIPIENT

[t], reimburseImpermanentLoss, amount, -1, -1, -404

[t], constructor, _vader, -1, -1, 0, VADER

[*] VaderReserve run
Checking... constructor Visibility: public
[o] Marked
Checking... reserve Visibility: public
[x] No Binary
Checking... grant Visibility: external
[o] Marked
Checking... initialize Visibility: external
[o] Marked
Checking... reimburseImpermanentLoss Visibility: external
[o] Marked
Checking... _min Visibility: private
[x] Not visible 
Checking... slitherConstructorConstantVariables Visibility: internal
[x] Not visible 
State_var: lbt
Finding type for lbt...
ILiquidityBasedTWAP
State_var: router
Finding type for router...
address
State_var: vader
Finding type for vader...
IERC20
State_var: _GRANT_DELAY
Finding type for _GRANT_DELAY...
uint256
State_var: lastGrant
Finding type for lastGrant...
uint256
State_var: _MAX_BASIS_POINTS
Finding type for _MAX_BASIS_POINTS...
uint256
State_var: _MAX_GRANT_BASIS_POINTS
Finding type for _MAX_GRANT_BASIS_POINTS...
uint256
State_var: _owner
Finding type for _owner...
address
State_var: _ONE_YEAR
Finding type for _ONE_YEAR...
uint256
State_var: _ZERO_ADDRESS
Finding type for _ZERO_ADDRESS...
address
contract name: Babylonian
WARNING!!!!
Babylonian_types.txt
Finance File not Found
Type File not found.
[x] Babylonian not run
contract name: BitMath
WARNING!!!!
BitMath_types.txt
Finance File not Found
Type File not found.
[x] BitMath not run
contract name: FixedPoint
WARNING!!!!
FixedPoint_types.txt
Finance File not Found
Type File not found.
[x] FixedPoint not run
contract name: FullMath
WARNING!!!!
FullMath_types.txt
Finance File not Found
Type File not found.
[x] FullMath not run
contract name: ILiquidityBasedTWAP
WARNING!!!!
ILiquidityBasedTWAP_types.txt
Finance File not Found
Type File not found.
[x] ILiquidityBasedTWAP not run
contract name: IVaderReserve
WARNING!!!!
IVaderReserve_types.txt
Finance File not Found
Type File not found.
[x] IVaderReserve not run
contract name: Ownable
WARNING!!!!
Ownable_types.txt
Finance File not Found
Type File not found.
[x] Ownable not run
contract name: IERC20
WARNING!!!!
IERC20_types.txt
Finance File not Found
Type File not found.
[x] IERC20 not run
contract name: SafeERC20
WARNING!!!!
SafeERC20_types.txt
Finance File not Found
Type File not found.
[x] SafeERC20 not run
contract name: Address
WARNING!!!!
Address_types.txt
Finance File not Found
Type File not found.
[x] Address not run
contract name: Context
WARNING!!!!
Context_types.txt
Finance File not Found
Type File not found.
[x] Context not run
contract name: ProtocolConstants
WARNING!!!!
ProtocolConstants_types.txt
Finance File not Found
Type File not found.
[x] ProtocolConstants not run
Seen contract: {} Contract name out: VaderReserve
[*] VaderReserve run
Reading Function: constructor
Function name: constructor
Function Visibility (test): public
_vader
Finding type for _vader...
IERC20
Check copy_toekn_tuple
(-1, -1, 0, 'VADER')
----
Type: IERC20
IERC20
Final Type: IERC20
 NO FIELDS

Name: _vader Function: constructor
Num: -1
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADER
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADER
    fields: []
    fintype: -1
clearning node...
clearing ir...?
_ZERO_ADDRESS_1(address) := ϕ(['_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
has variable
typecheckig node...
_ZERO_ADDRESS_1(address) := ϕ(['_ZERO_ADDRESS_0', '_ZERO_ADDRESS_3'])
Function name: constructor
Phi
[i]Type for _ZERO_ADDRESS

Name: _ZERO_ADDRESS Function: global
Num: -1
Den: -1
Norm: u
LF: _ZERO_ADDRESS
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_11 = CONVERT _ZERO_ADDRESS_1 to IERC20
has variable
[i] TMP_11 cleared
clearing ir...?
TMP_12(bool) = _vader_1 != TMP_11
has variable
[i] TMP_12 cleared
clearing ir...?
TMP_13(None) = SOLIDITY_CALL require(bool,string)(TMP_12,VaderReserve::constructor: Incorrect Arguments)
typecheckig node...
TMP_11 = CONVERT _ZERO_ADDRESS_1 to IERC20
Function name: constructor

Name: _ZERO_ADDRESS Function: global
Num: -1
Den: -1
Norm: u
LF: _ZERO_ADDRESS
Fields: 
Finance Type: undef

Name: TMP_11 Function: constructor
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_11

Name: TMP_11 Function: constructor
Num: -1
Den: -1
Norm: u
LF: _ZERO_ADDRESS
Fields: 
Finance Type: undef
done.
TMP_12(bool) = _vader_1 != TMP_11
Function name: constructor
[i]Type for TMP_12

Name: TMP_12 Function: constructor
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_13(None) = SOLIDITY_CALL require(bool,string)(TMP_12,VaderReserve::constructor: Incorrect Arguments)
[i]Type for TMP_13

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
vader_1(IERC20) := _vader_1(IERC20)
has variable
typecheckig node...
vader_1(IERC20) := _vader_1(IERC20)
Function name: constructor
asgn

Name: _vader Function: constructor
Num: -1
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef

Name: vader Function: constructor
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for vader

Name: vader Function: constructor
Num: -1
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "constructor":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: constructor
State_var: lbt
Finding type for lbt...
ILiquidityBasedTWAP
Check copy_toekn_tuple
(-1, -1, 0, 'LBT')
----
Type: ILiquidityBasedTWAP
ILiquidityBasedTWAP
Final Type: ILiquidityBasedTWAP
 NO FIELDS

Name: lbt Function: global
Num: -1
Den: -1
Norm: 0
LF: LBT
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: router
Finding type for router...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ROUTER')
----
Type: address
address
Final Type: address

Name: router Function: global
Num: -1
Den: -1
Norm: 0
LF: ROUTER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vader
Finding type for vader...
IERC20
Check copy_toekn_tuple
(-1, -1, 0, 'VADER')
----
Type: IERC20
IERC20
Final Type: IERC20
 NO FIELDS

Name: vader Function: global
Num: -1
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _GRANT_DELAY
Finding type for _GRANT_DELAY...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _GRANT_DELAY Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: lastGrant
Finding type for lastGrant...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: lastGrant Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _MAX_BASIS_POINTS
Finding type for _MAX_BASIS_POINTS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256