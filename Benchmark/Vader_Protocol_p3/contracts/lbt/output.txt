LiquidityBasedTWAP
Babylonian
BitMath
FixedPoint
FullMath
UniswapV2OracleLibrary
IBasePoolV2
IVaderPoolV2
IAggregatorV3
IUniswapV2ERC20
IUniswapV2Pair
ILiquidityBasedTWAP
Ownable
IERC20
IERC20Metadata
IERC721
Context
IERC165
contract name: LiquidityBasedTWAP
WARNING!!!!
LiquidityBasedTWAP_types.txt
Finance File not Found
"LiquidityBasedTWAP_types.txt" opened successfully.
[*c], LiquidityBasedTWAP

[t], global, previousPrices, 1, -1, 0

[t], global, totalLiquidityWeight, 1, -1, 0

[t], global, twapData, -1, -1, 0, EXCHANGEPAIR

[t*], global, twapData, lastMeasurement

[t*], global, twapData, updatePeriod

[t*], global, twapData, pastLiquidityEvaluation

[t*], global, twapData, nativeTokenPriceAverage, 1, -1, -404

[t*], global, twapData, nativeTokenPriceCumulative, 1, -1, -404

[t*], global, twapData, foreignUnit, -1, -1, -404

[t*], global, twapData, foreignAsset, -1, -1, 0, FOREIGNASSET

[t], global, vaderPairs, -1, -1, 0, VADERPAIR

[t], global, usdvPairs, -1, -1, 0, USDVPAIR

[t], global, vader, 2, -1, 0, VADER

[t], global, oracles, -1, -1, 0, ORACLE

[t], global, _owner, -1, -1, 0, OWNER

[t], global, vaderPool, -1, -1, 0, VADERPOOL

[t], global, maxUpdateWindow, -1, -1, 0

[sef], FixedPoint, decode144, 1, {t, [1], [-1], 1}

{t, [1], [-1], 1}
['t', '[1]', '[-1]', '1']
[sef], VADERPOOL, getReserves, 2, {c, 1, -1, 0}, {c, 2, -1, 0}

{c, 1, -1, 0}
['c', '1', '-1', '0']
{c, 2, -1, 0}
['c', '2', '-1', '0']
[sef], VADERPOOL, cumulativePrices, 3, {c, 1, -1, 0}, }, {c, -1, -1, 0}, {c, -1, -1, 0}

{c, 1, -1, 0}
['c', '1', '-1', '0']
}, {c
['', '{c']
-1
['-1']
[sef], VADERPAIR, token0, 1, {c, -1, -1, 0, TOK0}

{c, -1, -1, 0, TOK0}
['c', '-1', '-1', '0', 'TOK0']
[sef], VADERPAIR, token1, 1, {c, -1, -1, 0, TOK1}

{c, -1, -1, 0, TOK1}
['c', '-1', '-1', '0', 'TOK1']
[sef], VADERPAIR, getReserves, 3, , , 


['']

['']

['']
[sef], VADERPAIR, price0CumulativeLast

[sef], VADERPAIR, price1CumulativeLast

[sef], TOK0, decimals

[sef], TOK1, decimals

[sef], ORACLE, latestRoundData, 5, {c, -1, -1, 0}, {c, 2, -1, 0}, {c, -1, -1, 0}, {c, -1, -1, 0}, {c, -1, -1, 0}

{c, -1, -1, 0}
['c', '-1', '-1', '0']
{c, 2, -1, 0}
['c', '2', '-1', '0']
{c, -1, -1, 0}
['c', '-1', '-1', '0']
{c, -1, -1, 0}
['c', '-1', '-1', '0']
{c, -1, -1, 0}
['c', '-1', '-1', '0']
[sef], ORACLE, decimals

[sef], ASSET, decimals

[sef], UniswapV2OracleLibrary, currentCumulativePrices, 3, , , 


['']

['']

['']
[t], constructor, _vader, -1, -1, 0, VADER

[t], constructor, _vaderPool

[t], getChainlinkPrice, asset, -1, -1, 0, ASSET

[t], setupVader, pair, -1, -1, 0, VADERPAIR

[t], setupVader, oracle, -1, -1, 0, ORACLE

[t], setupVader, updatePeriod

[t], setupVader, vaderPrice

[t], addVaderPair, pair

[t], addVaderPair, oracle

[t], addVaderPair, updatePeriod

[t], setupUSDV, foreignAsset, -1, -1, 0, ASSET

[t], setupUSDV, oracle, 1, -1, 0, ORACLE

[t], setupUSDV, updatePeriod

[t], setupUSDV, usdvPrice

[t], addUSDVPair, foreignAsset

[t], addUSDVPair, oracle

[t], addUSDVPair, updatePeriod

[*] LiquidityBasedTWAP run
Checking... constructor Visibility: public
[o] Marked
Checking... getStaleVaderPrice Visibility: external
[o] Marked
Checking... getStaleUSDVPrice Visibility: external
[o] Marked
Checking... getChainlinkPrice Visibility: public
[o] Marked
Checking... getVaderPrice Visibility: external
[x] No Binary
Checking... syncVaderPrice Visibility: public
[o] Marked
Checking... _updateVaderPrice Visibility: internal
[x] Not visible 
Checking... _calculateVaderPrice Visibility: internal
[x] Not visible 
Checking... setupVader Visibility: external
[o] Marked
Checking... addVaderPair Visibility: external
[o] Marked
Checking... _addVaderPair Visibility: internal
[x] Not visible 
Checking... getUSDVPrice Visibility: external
[o] Marked
Checking... syncUSDVPrice Visibility: public
[o] Marked
Checking... _updateUSDVPrice Visibility: internal
[x] Not visible 
Checking... _calculateUSDVPrice Visibility: internal
[x] Not visible 
Checking... setupUSDV Visibility: external
[o] Marked
Checking... addUSDVPair Visibility: external
[o] Marked
Checking... _addUSDVPair Visibility: internal
[x] Not visible 
State_var: oracles
Finding type for oracles...
mapping(address => IAggregatorV3)
State_var: previousPrices
Finding type for previousPrices...
uint256[2]
State_var: vaderPool
Finding type for vaderPool...
IVaderPoolV2
State_var: maxUpdateWindow
Finding type for maxUpdateWindow...
uint256
State_var: totalLiquidityWeight
Finding type for totalLiquidityWeight...
uint256[2]
State_var: twapData
Finding type for twapData...
mapping(address => ILiquidityBasedTWAP.ExchangePair)
State_var: vader
Finding type for vader...
address
State_var: vaderPairs
Finding type for vaderPairs...
IUniswapV2Pair[]
State_var: _owner
Finding type for _owner...
address
State_var: usdvPairs
Finding type for usdvPairs...
IERC20[]
contract name: Babylonian
WARNING!!!!
Babylonian_types.txt
Finance File not Found
Type File not found.
[x] Babylonian not run
contract name: BitMath
WARNING!!!!
BitMath_types.txt
Finance File not Found
Type File not found.
[x] BitMath not run
contract name: FixedPoint
WARNING!!!!
FixedPoint_types.txt
Finance File not Found
Type File not found.
[x] FixedPoint not run
contract name: FullMath
WARNING!!!!
FullMath_types.txt
Finance File not Found
Type File not found.
[x] FullMath not run
contract name: UniswapV2OracleLibrary
WARNING!!!!
UniswapV2OracleLibrary_types.txt
Finance File not Found
Type File not found.
[x] UniswapV2OracleLibrary not run
contract name: IBasePoolV2
WARNING!!!!
IBasePoolV2_types.txt
Finance File not Found
Type File not found.
[x] IBasePoolV2 not run
contract name: IVaderPoolV2
WARNING!!!!
IVaderPoolV2_types.txt
Finance File not Found
Type File not found.
[x] IVaderPoolV2 not run
contract name: IAggregatorV3
WARNING!!!!
IAggregatorV3_types.txt
Finance File not Found
Type File not found.
[x] IAggregatorV3 not run
contract name: IUniswapV2ERC20
WARNING!!!!
IUniswapV2ERC20_types.txt
Finance File not Found
Type File not found.
[x] IUniswapV2ERC20 not run
contract name: IUniswapV2Pair
WARNING!!!!
IUniswapV2Pair_types.txt
Finance File not Found
Type File not found.
[x] IUniswapV2Pair not run
contract name: ILiquidityBasedTWAP
WARNING!!!!
ILiquidityBasedTWAP_types.txt
Finance File not Found
Type File not found.
[x] ILiquidityBasedTWAP not run
contract name: Ownable
WARNING!!!!
Ownable_types.txt
Finance File not Found
Type File not found.
[x] Ownable not run
contract name: IERC20
WARNING!!!!
IERC20_types.txt
Finance File not Found
Type File not found.
[x] IERC20 not run
contract name: IERC20Metadata
WARNING!!!!
IERC20Metadata_types.txt
Finance File not Found
Type File not found.
[x] IERC20Metadata not run
contract name: IERC721
WARNING!!!!
IERC721_types.txt
Finance File not Found
Type File not found.
[x] IERC721 not run
contract name: Context
WARNING!!!!
Context_types.txt
Finance File not Found
Type File not found.
[x] Context not run
contract name: IERC165
WARNING!!!!
IERC165_types.txt
Finance File not Found
Type File not found.
[x] IERC165 not run
Seen contract: {} Contract name out: LiquidityBasedTWAP
[*] LiquidityBasedTWAP run
Reading Function: constructor
Function name: constructor
Function Visibility (test): public
_vader
Finding type for _vader...
address
Check copy_toekn_tuple
(-1, -1, 0, 'VADER')
----
Type: address
address
Final Type: address

Name: _vader Function: constructor
Num: -1
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
_vaderPool
Finding type for _vaderPool...
IVaderPoolV2
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IVaderPoolV2
IVaderPoolV2
Final Type: IVaderPoolV2
 NO FIELDS

Name: _vaderPool Function: constructor
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADER
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADER
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_11 = CONVERT 0 to address
has variable
[i] TMP_11 cleared
clearing ir...?
TMP_12(bool) = _vader_1 != TMP_11
has variable
[i] TMP_12 cleared
clearing ir...?
TMP_13 = CONVERT 0 to address
has variable
[i] TMP_13 cleared
clearing ir...?
TMP_14 = CONVERT TMP_13 to IVaderPoolV2
has variable
[i] TMP_14 cleared
clearing ir...?
TMP_15(bool) = _vaderPool_1 != TMP_14
has variable
[i] TMP_15 cleared
clearing ir...?
TMP_16(bool) = TMP_12 && TMP_15
has variable
[i] TMP_16 cleared
clearing ir...?
TMP_17(None) = SOLIDITY_CALL require(bool,string)(TMP_16,LBTWAP::construction: Zero Address)
typecheckig node...
TMP_11 = CONVERT 0 to address
Function name: constructor
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_11 Function: constructor
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_11

Name: TMP_11 Function: constructor
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_12(bool) = _vader_1 != TMP_11
Function name: constructor
[i]Type for TMP_12

Name: TMP_12 Function: constructor
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_13 = CONVERT 0 to address
Function name: constructor
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_13 Function: constructor
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_13

Name: TMP_13 Function: constructor
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_14 = CONVERT TMP_13 to IVaderPoolV2
Function name: constructor

Name: TMP_13 Function: constructor
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_14 Function: constructor
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_14

Name: TMP_14 Function: constructor
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_15(bool) = _vaderPool_1 != TMP_14
Function name: constructor
[i]Type for TMP_15

Name: TMP_15 Function: constructor
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_16(bool) = TMP_12 && TMP_15
Function name: constructor
[i]Type for TMP_16

Name: TMP_16 Function: constructor
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_17(None) = SOLIDITY_CALL require(bool,string)(TMP_16,LBTWAP::construction: Zero Address)
[i]Type for TMP_17

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
vader_1(address) := _vader_1(address)
has variable
typecheckig node...
vader_1(address) := _vader_1(address)
Function name: constructor
asgn

Name: _vader Function: constructor
Num: -1
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef

Name: vader Function: constructor
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for vader

Name: vader Function: constructor
Num: -1
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
vaderPool_1(IVaderPoolV2) := _vaderPool_1(IVaderPoolV2)
has variable
typecheckig node...
vaderPool_1(IVaderPoolV2) := _vaderPool_1(IVaderPoolV2)
Function name: constructor
asgn

Name: _vaderPool Function: constructor
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: vaderPool Function: constructor
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for vaderPool

Name: vaderPool Function: constructor
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "constructor":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: constructor
State_var: oracles
Finding type for oracles...
mapping(address => IAggregatorV3)
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: mapping(address => IAggregatorV3)
mapping(address => IAggregatorV3)
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: previousPrices
Finding type for previousPrices...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPool
Finding type for vaderPool...
IVaderPoolV2
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPOOL')
----
Type: IVaderPoolV2
IVaderPoolV2
Final Type: IVaderPoolV2
 NO FIELDS

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxUpdateWindow
Finding type for maxUpdateWindow...
uint256
Check copy_toekn_tuple
(-1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalLiquidityWeight
Finding type for totalLiquidityWeight...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: twapData
Finding type for twapData...
mapping(address => ILiquidityBasedTWAP.ExchangePair)
Check copy_toekn_tuple
(-1, -1, 0, 'EXCHANGEPAIR')
----
Type: mapping(address => ILiquidityBasedTWAP.ExchangePair)
mapping(address => ILiquidityBasedTWAP.ExchangePair)
ILiquidityBasedTWAP.ExchangePair
Final Type: ILiquidityBasedTWAP.ExchangePair
global
twapData
nativeTokenPriceCumulative
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
nativeTokenPriceAverage
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
None
nativeTokenPriceAverage
_x
FIELDS:
nativeTokenPriceAverage Fields:
^^^
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
twapData.nativeTokenPriceAverage
_x
FIELDS:
twapData.nativeTokenPriceAverage Fields:
^^^
global
twapData
lastMeasurement
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
updatePeriod
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
pastLiquidityEvaluation
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
foreignAsset
Check copy_toekn_tuple
([-1], [-1], [0], 'FOREIGNASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
twapData
foreignUnit
Check copy_toekn_tuple
([-1], [-1], [-404], None)
----
Type: uint96
uint96
Final Type: uint96
Type: uint96
uint96
Final Type: uint96
FIELDS:
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
[*]Type fetched successfully
State_var: vader
Finding type for vader...
address
Check copy_toekn_tuple
(2, -1, 0, 'VADER')
----
Type: address
address
Final Type: address

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPairs
Finding type for vaderPairs...
IUniswapV2Pair[]
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPAIR')
----
Type: IUniswapV2Pair[]
IUniswapV2Pair[]
IUniswapV2Pair
Final Type: IUniswapV2Pair
 NO FIELDS

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 0, 'OWNER')
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: usdvPairs
Finding type for usdvPairs...
IERC20[]
Check copy_toekn_tuple
(-1, -1, 0, 'USDVPAIR')
----
Type: IERC20[]
IERC20[]
IERC20
Final Type: IERC20
 NO FIELDS

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: getStaleVaderPrice
Function name: getStaleVaderPrice
Function Visibility (test): external
-100
Add new
clearning node...
clearing ir...?
vaderPairs_1(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
has variable
clearing ir...?
totalLiquidityWeight_1(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
twapData_1(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
has variable
typecheckig node...
vaderPairs_1(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: getStaleVaderPrice
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_1(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: getStaleVaderPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_1(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: getStaleVaderPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_0 -> LENGTH vaderPairs_1
clearing ir...?
totalPairs_1(uint256) := REF_0(uint256)
has variable
[i] totalPairs cleared
typecheckig node...
REF_0 -> LENGTH vaderPairs_1
[i]Type for REF_0

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalPairs_1(uint256) := REF_0(uint256)
Function name: getStaleVaderPrice
asgn

Name: REF_0 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalPairs Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalPairs

Name: totalPairs Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalPairs_1(uint256) := REF_0(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_19 = new uint256[](totalPairs_1)
clearing ir...?
pastLiquidityWeights_1(uint256[]) := TMP_19(uint256)
has variable
[i] pastLiquidityWeights cleared
typecheckig node...
TMP_19 = new uint256[](totalPairs_1)
[i]Type for TMP_19

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_1(uint256[]) := TMP_19(uint256)
Function name: getStaleVaderPrice
asgn

Name: TMP_19 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityWeights Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pastLiquidityWeights_1(uint256[]) := TMP_19(uint256)
XXXXX
clearning node...
clearing ir...?
REF_1(ILiquidityBasedTWAP.Paths) -> Paths.VADER
has variable
clearing ir...?
TMP_20 = CONVERT REF_1 to uint256
has variable
[i] TMP_20 cleared
clearing ir...?
REF_2(uint256) -> totalLiquidityWeight_1[TMP_20]
has variable
clearing ir...?
pastTotalLiquidityWeight_1(uint256) := REF_2(uint256)
has variable
[i] pastTotalLiquidityWeight cleared
typecheckig node...
REF_1(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: getStaleVaderPrice
MEMBER
Paths
Paths
VADER
global
Paths Fields:
^^^
[i]Type for REF_1

Name: Paths.VADER Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_20 = CONVERT REF_1 to uint256
Function name: getStaleVaderPrice

Name: Paths.VADER Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_20 Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_20

Name: TMP_20 Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_20 = CONVERT REF_1 to uint256
XXXXX
REF_2(uint256) -> totalLiquidityWeight_1[TMP_20]
Function name: getStaleVaderPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_2

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pastTotalLiquidityWeight_1(uint256) := REF_2(uint256)
Function name: getStaleVaderPrice
asgn

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: pastTotalLiquidityWeight Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastTotalLiquidityWeight

Name: pastTotalLiquidityWeight Function: getStaleVaderPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
i_1(uint256) := ϕ(['i_0', 'i_2'])
has variable
[i] i cleared
clearing ir...?
TMP_21(bool) = i_1 < totalPairs_1
has variable
[i] TMP_21 cleared
clearing ir...?
CONDITION TMP_21
typecheckig node...
i_1(uint256) := ϕ(['i_0', 'i_2'])
Function name: getStaleVaderPrice
Phi
[i]Type for i

Name: i Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_21(bool) = i_1 < totalPairs_1
Function name: getStaleVaderPrice
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalPairs Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_21 Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_21

Name: TMP_21 Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_21(bool) = i_1 < totalPairs_1
XXXXX
CONDITION TMP_21
Condition...
Conidtion: 
TMP_21
TMP_21
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_3(uint256) -> pastLiquidityWeights_1[i_1]
has variable
clearing ir...?
REF_4(IUniswapV2Pair) -> vaderPairs_1[i_1]
has variable
clearing ir...?
TMP_22 = CONVERT REF_4 to address
has variable
[i] TMP_22 cleared
clearing ir...?
REF_5(ILiquidityBasedTWAP.ExchangePair) -> twapData_1[TMP_22]
has variable
clearing ir...?
REF_6(uint256) -> REF_5.pastLiquidityEvaluation
has variable
clearing ir...?
pastLiquidityWeights_2(uint256[]) := ϕ(['pastLiquidityWeights_1'])
has variable
[i] pastLiquidityWeights cleared
clearing ir...?
REF_3 (->pastLiquidityWeights_2) := REF_6(uint256)
has variable
typecheckig node...
REF_3(uint256) -> pastLiquidityWeights_1[i_1]
Function name: getStaleVaderPrice
INDEX

Name: pastLiquidityWeights Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getStaleVaderPrice
pastLiquidityWeights
[i]Type for REF_3

Name: pastLiquidityWeights Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_3(uint256) -> pastLiquidityWeights_1[i_1]
XXXXX
REF_4(IUniswapV2Pair) -> vaderPairs_1[i_1]
Function name: getStaleVaderPrice
INDEX

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_4

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
TMP_22 = CONVERT REF_4 to address
Function name: getStaleVaderPrice

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: TMP_22 Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_22

Name: TMP_22 Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_5(ILiquidityBasedTWAP.ExchangePair) -> twapData_1[TMP_22]
Function name: getStaleVaderPrice
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_5

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_6(uint256) -> REF_5.pastLiquidityEvaluation
Function name: getStaleVaderPrice
MEMBER
twapData
pastLiquidityEvaluation
global
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_6

Name: twapData.pastLiquidityEvaluation Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: twapData.pastLiquidityEvaluation Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_2(uint256[]) := ϕ(['pastLiquidityWeights_1'])
Function name: getStaleVaderPrice
Phi
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_3 (->pastLiquidityWeights_2) := REF_6(uint256)
Function name: getStaleVaderPrice
asgn

Name: twapData.pastLiquidityEvaluation Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_3 Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_3

Name: REF_3 Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
i_2(uint256) = i_1 (c)+ 1
has variable
[i] i cleared
typecheckig node...
i_2(uint256) = i_1 (c)+ 1
Function name: getStaleVaderPrice
val: 1

Name: i Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: getStaleVaderPrice
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
i_2(uint256) = i_1 (c)+ 1
XXXXX
clearning node...
clearing ir...?
TMP_23(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._calculateVaderPrice(uint256[],uint256)(pastLiquidityWeights_1,pastTotalLiquidityWeight_1)
has variable
[i] TMP_23 cleared
clearing ir...?
RETURN TMP_23
typecheckig node...
TMP_23(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._calculateVaderPrice(uint256[],uint256)(pastLiquidityWeights_1,pastTotalLiquidityWeight_1)
Function name: getStaleVaderPrice
Internal call...
_calculateVaderPrice
pastLiquidityWeights
pastTotalLiquidityWeight
Function: _calculateVaderPrice
ic
Internal cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[], [], 'u', None, [], -1]
[[1], [-1], 0, None, [], -1]
added
xyz
Function name: _calculateVaderPrice
Function Visibility: internal
clearning node...
clearing ir...?
liquidityWeights_1(uint256[]) := ϕ(['pastLiquidityWeights_1 (-> [])', 'pastLiquidityWeights_1'])
has variable
[i] liquidityWeights cleared
clearing ir...?
totalVaderLiquidityWeight_1(uint256) := ϕ(['pastTotalLiquidityWeight_1', 'pastTotalLiquidityWeight_1'])
has variable
[i] totalVaderLiquidityWeight cleared
clearing ir...?
vaderPairs_4(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
has variable
clearing ir...?
twapData_6(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
has variable
typecheckig node...
liquidityWeights_1(uint256[]) := ϕ(['pastLiquidityWeights_1 (-> [])', 'pastLiquidityWeights_1'])
Function name: _calculateVaderPrice
Phi
[i]Type for liquidityWeights

Name: liquidityWeights Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalVaderLiquidityWeight_1(uint256) := ϕ(['pastTotalLiquidityWeight_1', 'pastTotalLiquidityWeight_1'])
Function name: _calculateVaderPrice
Phi
[i]Type for totalVaderLiquidityWeight

Name: totalVaderLiquidityWeight Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_4(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: _calculateVaderPrice
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
twapData_6(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: _calculateVaderPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_39 -> LENGTH vaderPairs_4
clearing ir...?
totalPairs_1(uint256) := REF_39(uint256)
has variable
[i] totalPairs cleared
typecheckig node...
REF_39 -> LENGTH vaderPairs_4
[i]Type for REF_39

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalPairs_1(uint256) := REF_39(uint256)
Function name: _calculateVaderPrice
asgn

Name: REF_39 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalPairs Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalPairs

Name: totalPairs Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalPairs_1(uint256) := REF_39(uint256)
XXXXX
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
totalUSD_1(uint256) := ϕ(['totalUSD_0', 'totalUSD_2'])
has variable
[i] totalUSD cleared
clearing ir...?
totalVader_1(uint256) := ϕ(['totalVader_0', 'totalVader_2'])
has variable
[i] totalVader cleared
clearing ir...?
i_1(uint256) := ϕ(['i_2', 'i_0'])
has variable
[i] i cleared
clearing ir...?
TMP_57(bool) = i_1 < totalPairs_1
has variable
[i] TMP_57 cleared
clearing ir...?
CONDITION TMP_57
typecheckig node...
totalUSD_1(uint256) := ϕ(['totalUSD_0', 'totalUSD_2'])
Function name: _calculateVaderPrice
Phi
[i]Type for totalUSD

Name: totalUSD Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalVader_1(uint256) := ϕ(['totalVader_0', 'totalVader_2'])
Function name: _calculateVaderPrice
Phi
[i]Type for totalVader

Name: totalVader Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
i_1(uint256) := ϕ(['i_2', 'i_0'])
Function name: _calculateVaderPrice
Phi
[i]Type for i

Name: i Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_57(bool) = i_1 < totalPairs_1
Function name: _calculateVaderPrice
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalPairs Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_57 Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_57

Name: TMP_57 Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_57(bool) = i_1 < totalPairs_1
XXXXX
CONDITION TMP_57
Condition...
Conidtion: 
TMP_57
TMP_57
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_40(IUniswapV2Pair) -> vaderPairs_4[i_1]
has variable
clearing ir...?
pair_1(IUniswapV2Pair) := REF_40(IUniswapV2Pair)
has variable
[i] pair cleared
typecheckig node...
REF_40(IUniswapV2Pair) -> vaderPairs_4[i_1]
Function name: _calculateVaderPrice
INDEX

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_40

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
pair_1(IUniswapV2Pair) := REF_40(IUniswapV2Pair)
Function name: _calculateVaderPrice
asgn

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: pair Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pair

Name: pair Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_58 = CONVERT pair_1 to address
has variable
[i] TMP_58 cleared
clearing ir...?
REF_41(ILiquidityBasedTWAP.ExchangePair) -> twapData_6[TMP_58]
has variable
clearing ir...?
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_41(ILiquidityBasedTWAP.ExchangePair)
has variable
[i] pairData cleared
typecheckig node...
TMP_58 = CONVERT pair_1 to address
Function name: _calculateVaderPrice

Name: pair Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: TMP_58 Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_58

Name: TMP_58 Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_41(ILiquidityBasedTWAP.ExchangePair) -> twapData_6[TMP_58]
Function name: _calculateVaderPrice
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_41

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_41(ILiquidityBasedTWAP.ExchangePair)
Function name: _calculateVaderPrice
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_42(address) -> pairData_1 (-> ['twapData']).foreignAsset
has variable
clearing ir...?
TMP_59(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(REF_42)
has variable
[i] TMP_59 cleared
clearing ir...?
foreignPrice_1(uint256) := TMP_59(uint256)
has variable
[i] foreignPrice cleared
typecheckig node...
REF_42(address) -> pairData_1 (-> ['twapData']).foreignAsset
Function name: _calculateVaderPrice
MEMBER
pairData
foreignAsset
_calculateVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
[i]Type for REF_42

Name: pairData.foreignAsset Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: pairData.foreignAsset Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
done.
TMP_59(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(REF_42)
Function name: _calculateVaderPrice
Internal call...
getChainlinkPrice
REF_42
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
added
xyz
Function name: getChainlinkPrice
Function Visibility: public
clearning node...
clearing ir...?
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
has variable
[i] asset cleared
clearing ir...?
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
has variable
typecheckig node...
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
Function name: getChainlinkPrice
Phi
[i]Type for asset

Name: asset Function: getChainlinkPrice
Num: -1
Den: -1
Norm: u
LF: FOREIGNASSET
Fields: 
Finance Type: undef
done.
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
Function name: getChainlinkPrice
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_14(IAggregatorV3) -> oracles_1[asset_1]
has variable
clearing ir...?
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
has variable
[i] oracle cleared
typecheckig node...
REF_14(IAggregatorV3) -> oracles_1[asset_1]
Function name: getChainlinkPrice
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_14

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
Function name: getChainlinkPrice
asgn

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: oracle Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for oracle

Name: oracle Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
has variable
clearing ir...?
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
has variable
[i] roundID cleared
clearing ir...?
price_1(int256)= UNPACK TUPLE_0 index: 1 
has variable
[i] price cleared
clearing ir...?
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
has variable
[i] answeredInRound cleared
typecheckig node...
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
Function name: getChainlinkPrice
High Call: latestRoundData
func name:latestRoundData
other func name:latestRoundData
TUPLE_0
hlc contract name: ORACLE func_name: latestRoundData
('c', [-1], [-1], 0, None)
('c', [2], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
wfc len: 5
COPIED
[i]Type for TUPLE_0

Name: TUPLE_0 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for roundID

Name: roundID Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
price_1(int256)= UNPACK TUPLE_0 index: 1 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: int256
int256
Final Type: int256
[i]Type for price

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 4
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for answeredInRound

Name: answeredInRound Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_30(bool) = answeredInRound_1 >= roundID_1
has variable
[i] TMP_30 cleared
clearing ir...?
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
typecheckig node...
TMP_30(bool) = answeredInRound_1 >= roundID_1
Function name: getChainlinkPrice
testing gt...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_30

Name: TMP_30 Function: getChainlinkPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_32(bool) = price_1 > 0
has variable
[i] TMP_32 cleared
clearing ir...?
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
typecheckig node...
TMP_32(bool) = price_1 > 0
Function name: getChainlinkPrice
testing gt...
val: 0
val: 0
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_32

Name: TMP_32 Function: getChainlinkPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_34 = CONVERT price_1 to uint256
has variable
[i] TMP_34 cleared
clearing ir...?
RETURN TMP_34
typecheckig node...
TMP_34 = CONVERT price_1 to uint256
Function name: getChainlinkPrice

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_34 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_34

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_34
RETURN

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "getChainlinkPrice":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: getChainlinkPrice

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_59

Name: TMP_59 Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
foreignPrice_1(uint256) := TMP_59(uint256)
Function name: _calculateVaderPrice
asgn

Name: TMP_59 Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: foreignPrice Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignPrice

Name: foreignPrice Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_43(uint256) -> liquidityWeights_1[i_1]
has variable
clearing ir...?
TMP_60(uint256) = foreignPrice_1 (c)* REF_43
has variable
[i] TMP_60 cleared
clearing ir...?
TMP_61(uint256) = TMP_60 (c)/ totalVaderLiquidityWeight_1
has variable
[i] TMP_61 cleared
clearing ir...?
totalUSD_2(uint256) = totalUSD_1 (c)+ TMP_61
has variable
[i] totalUSD cleared
typecheckig node...
REF_43(uint256) -> liquidityWeights_1[i_1]
Function name: _calculateVaderPrice
INDEX

Name: liquidityWeights Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _calculateVaderPrice
liquidityWeights
[i]Type for REF_43

Name: liquidityWeights Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_43(uint256) -> liquidityWeights_1[i_1]
XXXXX
TMP_60(uint256) = foreignPrice_1 (c)* REF_43
Function name: _calculateVaderPrice
testing mul...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: foreignPrice Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_60 Function: _calculateVaderPrice
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_60

Name: TMP_60 Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_61(uint256) = TMP_60 (c)/ totalVaderLiquidityWeight_1
Function name: _calculateVaderPrice
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_61 Function: _calculateVaderPrice
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: PIC_3 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_61 Function: _calculateVaderPrice
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_61

Name: TMP_61 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalUSD_2(uint256) = totalUSD_1 (c)+ TMP_61
Function name: _calculateVaderPrice

Name: totalUSD Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_61 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: totalUSD Function: _calculateVaderPrice
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for totalUSD

Name: totalUSD Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalUSD_2(uint256) = totalUSD_1 (c)+ TMP_61
XXXXX
clearning node...
clearing ir...?
REF_44(FixedPoint.uq112x112) -> pairData_1 (-> ['twapData']).nativeTokenPriceAverage
has variable
clearing ir...?
REF_46(uint96) -> pairData_1 (-> ['twapData']).foreignUnit
has variable
clearing ir...?
TMP_62(FixedPoint.uq144x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.mul(FixedPoint.uq112x112,uint256), arguments:['REF_44', 'REF_46'] 
has variable
[i] TMP_62 cleared
clearing ir...?
TMP_63(uint144) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.decode144(FixedPoint.uq144x112), arguments:['TMP_62'] 
has variable
[i] TMP_63 cleared
clearing ir...?
REF_48(uint256) -> liquidityWeights_1[i_1]
has variable
clearing ir...?
TMP_64(uint144) = TMP_63 (c)* REF_48
has variable
[i] TMP_64 cleared
clearing ir...?
TMP_65(uint144) = TMP_64 (c)/ totalVaderLiquidityWeight_1
has variable
[i] TMP_65 cleared
clearing ir...?
totalVader_2(uint256) = totalVader_1 (c)+ TMP_65
has variable
[i] totalVader cleared
typecheckig node...
REF_44(FixedPoint.uq112x112) -> pairData_1 (-> ['twapData']).nativeTokenPriceAverage
Function name: _calculateVaderPrice
MEMBER
pairData
nativeTokenPriceAverage
_calculateVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_44

Name: pairData.nativeTokenPriceAverage Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceAverage Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
REF_46(uint96) -> pairData_1 (-> ['twapData']).foreignUnit
Function name: _calculateVaderPrice
MEMBER
pairData
foreignUnit
_calculateVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_46

Name: pairData.foreignUnit Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.foreignUnit Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_62(FixedPoint.uq144x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.mul(FixedPoint.uq112x112,uint256), arguments:['REF_44', 'REF_46'] 
Function name: _calculateVaderPrice
Library Call: mul
testing mul...
lnorm: -404 rnorm: -404
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: pairData.nativeTokenPriceAverage Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: TMP_62 Function: _calculateVaderPrice
Num: 
Den: 
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
TMP_63(uint144) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.decode144(FixedPoint.uq144x112), arguments:['TMP_62'] 
Function name: _calculateVaderPrice
Library Call: decode144
hlc contract name: FixedPoint func_name: decode144
('t', [1], [-1], 1, None)
TMP_62
wfc len: 1
Check copy_toekn_tuple
([1], [-1, -1], -808, None, -1)
----
Type: uint144
uint144
Final Type: uint144
COPIED
[i]Type for TMP_63

Name: TMP_63 Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
REF_48(uint256) -> liquidityWeights_1[i_1]
Function name: _calculateVaderPrice
INDEX

Name: liquidityWeights Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _calculateVaderPrice
liquidityWeights
[i]Type for REF_48

Name: liquidityWeights Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_48(uint256) -> liquidityWeights_1[i_1]
XXXXX
TMP_64(uint144) = TMP_63 (c)* REF_48
Function name: _calculateVaderPrice
testing mul...
lnorm: -808 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_63 Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef

Name: TMP_64 Function: _calculateVaderPrice
Num: 
Den: 
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_64

Name: TMP_64 Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
TMP_65(uint144) = TMP_64 (c)/ totalVaderLiquidityWeight_1
Function name: _calculateVaderPrice
lnorm: -808 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_65 Function: _calculateVaderPrice
Num: 
Den: 
Norm: -808
LF: None
Fields: 
Finance Type: undef

Name: PIC_4 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_65 Function: _calculateVaderPrice
Num: 
Den: 
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
totalVader_2(uint256) = totalVader_1 (c)+ TMP_65
Function name: _calculateVaderPrice

Name: totalVader Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -808
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_65 Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef

Name: totalVader Function: _calculateVaderPrice
Num: 
Den: 
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for totalVader

Name: totalVader Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalVader_2(uint256) = totalVader_1 (c)+ TMP_65
XXXXX
clearning node...
clearing ir...?
i_2(uint256) = i_1 (c)+ 1
has variable
[i] i cleared
typecheckig node...
i_2(uint256) = i_1 (c)+ 1
Function name: _calculateVaderPrice
val: 1

Name: i Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: _calculateVaderPrice
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
i_2(uint256) = i_1 (c)+ 1
XXXXX
clearning node...
clearing ir...?
TMP_66(uint256) = totalUSD_1 (c)* 1000000000000000000
has variable
[i] TMP_66 cleared
clearing ir...?
TMP_67(uint256) = TMP_66 (c)/ totalVader_1
has variable
[i] TMP_67 cleared
clearing ir...?
RETURN TMP_67
typecheckig node...
TMP_66(uint256) = totalUSD_1 (c)* 1000000000000000000
Function name: _calculateVaderPrice
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: 0 rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalUSD Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_66 Function: _calculateVaderPrice
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_66

Name: TMP_66 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
TMP_67(uint256) = TMP_66 (c)/ totalVader_1
Function name: _calculateVaderPrice
lnorm: 18 rnorm: -808
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_67 Function: _calculateVaderPrice
Num: 
Den: 
Norm: 826
LF: None
Fields: 
Finance Type: undef

Name: TMP_66 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_67 Function: _calculateVaderPrice
Num: 
Den: 
Norm: 826
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_67

Name: TMP_67 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_67
RETURN

Name: TMP_67 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_calculateVaderPrice":
 New undefined nodes- 5
 Old undefined nodes- 0
typecheckig node...
liquidityWeights_1(uint256[]) := ϕ(['pastLiquidityWeights_1 (-> [])', 'pastLiquidityWeights_1'])
Function name: _calculateVaderPrice
Phi
[i]Type for liquidityWeights

Name: liquidityWeights Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalVaderLiquidityWeight_1(uint256) := ϕ(['pastTotalLiquidityWeight_1', 'pastTotalLiquidityWeight_1'])
Function name: _calculateVaderPrice
Phi
[i]Type for totalVaderLiquidityWeight

Name: totalVaderLiquidityWeight Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_4(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: _calculateVaderPrice
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
twapData_6(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: _calculateVaderPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
REF_39 -> LENGTH vaderPairs_4
[i]Type for REF_39

Name: REF_39 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalPairs_1(uint256) := REF_39(uint256)
Function name: _calculateVaderPrice
asgn

Name: REF_39 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalPairs Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalPairs

Name: totalPairs Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalPairs_1(uint256) := REF_39(uint256)
XXXXX
typecheckig node...
typecheckig node...
typecheckig node...
totalUSD_1(uint256) := ϕ(['totalUSD_0', 'totalUSD_2'])
Function name: _calculateVaderPrice
Phi
[i]Type for totalUSD

Name: totalUSD Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalVader_1(uint256) := ϕ(['totalVader_0', 'totalVader_2'])
Function name: _calculateVaderPrice
Phi
[i]Type for totalVader

Name: totalVader Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
i_1(uint256) := ϕ(['i_2', 'i_0'])
Function name: _calculateVaderPrice
Phi
[i]Type for i

Name: i Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_57(bool) = i_1 < totalPairs_1
Function name: _calculateVaderPrice
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: i Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_57 Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_57

Name: TMP_57 Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_57(bool) = i_1 < totalPairs_1
XXXXX
CONDITION TMP_57
Condition...
Conidtion: 
TMP_57
TMP_57
typecheckig node...
typecheckig node...
REF_40(IUniswapV2Pair) -> vaderPairs_4[i_1]
Function name: _calculateVaderPrice
INDEX

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_40

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
pair_1(IUniswapV2Pair) := REF_40(IUniswapV2Pair)
Function name: _calculateVaderPrice
asgn

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: pair Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pair

Name: pair Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_58 = CONVERT pair_1 to address
Function name: _calculateVaderPrice

Name: pair Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: TMP_58 Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_58

Name: TMP_58 Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_41(ILiquidityBasedTWAP.ExchangePair) -> twapData_6[TMP_58]
Function name: _calculateVaderPrice
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_41

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_41(ILiquidityBasedTWAP.ExchangePair)
Function name: _calculateVaderPrice
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_42(address) -> pairData_1 (-> ['twapData']).foreignAsset
Function name: _calculateVaderPrice
MEMBER
pairData
foreignAsset
_calculateVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
[i]Type for REF_42

Name: pairData.foreignAsset Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: pairData.foreignAsset Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
done.
TMP_59(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(REF_42)
Function name: _calculateVaderPrice
Internal call...
getChainlinkPrice
REF_42
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
0

Name: PIC_2 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_59 Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_59

Name: TMP_59 Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
foreignPrice_1(uint256) := TMP_59(uint256)
Function name: _calculateVaderPrice
asgn

Name: TMP_59 Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: foreignPrice Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignPrice

Name: foreignPrice Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_43(uint256) -> liquidityWeights_1[i_1]
Function name: _calculateVaderPrice
INDEX

Name: liquidityWeights Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _calculateVaderPrice
liquidityWeights
[i]Type for REF_43

Name: liquidityWeights Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_43(uint256) -> liquidityWeights_1[i_1]
XXXXX
TMP_60(uint256) = foreignPrice_1 (c)* REF_43
Function name: _calculateVaderPrice
testing mul...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: foreignPrice Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_60 Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_60

Name: TMP_60 Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_61(uint256) = TMP_60 (c)/ totalVaderLiquidityWeight_1
Function name: _calculateVaderPrice
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_61 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: PIC_5 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_61 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_61

Name: TMP_61 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalUSD_2(uint256) = totalUSD_1 (c)+ TMP_61
Function name: _calculateVaderPrice

Name: totalUSD Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalUSD Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: totalUSD Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for totalUSD

Name: totalUSD Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_44(FixedPoint.uq112x112) -> pairData_1 (-> ['twapData']).nativeTokenPriceAverage
Function name: _calculateVaderPrice
MEMBER
pairData
nativeTokenPriceAverage
_calculateVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_44

Name: pairData.nativeTokenPriceAverage Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceAverage Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
REF_46(uint96) -> pairData_1 (-> ['twapData']).foreignUnit
Function name: _calculateVaderPrice
MEMBER
pairData
foreignUnit
_calculateVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_46

Name: pairData.foreignUnit Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.foreignUnit Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_62(FixedPoint.uq144x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.mul(FixedPoint.uq112x112,uint256), arguments:['REF_44', 'REF_46'] 
Function name: _calculateVaderPrice
Library Call: mul
testing mul...
lnorm: -404 rnorm: -404
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: pairData.nativeTokenPriceAverage Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: TMP_62 Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
TMP_63(uint144) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.decode144(FixedPoint.uq144x112), arguments:['TMP_62'] 
Function name: _calculateVaderPrice
Library Call: decode144
hlc contract name: FixedPoint func_name: decode144
('t', [1], [-1], 1, None)
TMP_62
wfc len: 1
Check copy_toekn_tuple
([1], [-1, -1], -808, None, -1)
----
Type: uint144
uint144
Final Type: uint144
COPIED
[i]Type for TMP_63

Name: TMP_63 Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
REF_48(uint256) -> liquidityWeights_1[i_1]
Function name: _calculateVaderPrice
INDEX

Name: liquidityWeights Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _calculateVaderPrice
liquidityWeights
[i]Type for REF_48

Name: liquidityWeights Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_48(uint256) -> liquidityWeights_1[i_1]
XXXXX
TMP_64(uint144) = TMP_63 (c)* REF_48
Function name: _calculateVaderPrice
testing mul...
lnorm: -808 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_63 Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef

Name: TMP_64 Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_64

Name: TMP_64 Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
TMP_65(uint144) = TMP_64 (c)/ totalVaderLiquidityWeight_1
Function name: _calculateVaderPrice
lnorm: -808 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_65 Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef

Name: PIC_6 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_65 Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
totalVader_2(uint256) = totalVader_1 (c)+ TMP_65
Function name: _calculateVaderPrice

Name: totalVader Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: -808 rnorm: -808
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_65 Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef

Name: totalVader Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for totalVader

Name: totalVader Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
i_2(uint256) = i_1 (c)+ 1
Function name: _calculateVaderPrice
val: 1

Name: i Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_66(uint256) = totalUSD_1 (c)* 1000000000000000000
has variable
[i] TMP_66 cleared
clearing ir...?
TMP_67(uint256) = TMP_66 (c)/ totalVader_1
has variable
[i] TMP_67 cleared
clearing ir...?
RETURN TMP_67
typecheckig node...
TMP_66(uint256) = totalUSD_1 (c)* 1000000000000000000
Function name: _calculateVaderPrice
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: 0 rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalUSD Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_66 Function: _calculateVaderPrice
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_66

Name: TMP_66 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
TMP_67(uint256) = TMP_66 (c)/ totalVader_1
Function name: _calculateVaderPrice
lnorm: 18 rnorm: -808
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_67 Function: _calculateVaderPrice
Num: 
Den: 
Norm: 826
LF: None
Fields: 
Finance Type: undef

Name: TMP_66 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_67 Function: _calculateVaderPrice
Num: 
Den: 
Norm: 826
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_67

Name: TMP_67 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_67
RETURN

Name: TMP_67 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "_calculateVaderPrice":
 New undefined nodes- 4
 Old undefined nodes- 5
typecheckig node...
liquidityWeights_1(uint256[]) := ϕ(['pastLiquidityWeights_1 (-> [])', 'pastLiquidityWeights_1'])
Function name: _calculateVaderPrice
Phi
[i]Type for liquidityWeights

Name: liquidityWeights Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalVaderLiquidityWeight_1(uint256) := ϕ(['pastTotalLiquidityWeight_1', 'pastTotalLiquidityWeight_1'])
Function name: _calculateVaderPrice
Phi
[i]Type for totalVaderLiquidityWeight

Name: totalVaderLiquidityWeight Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_4(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: _calculateVaderPrice
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
twapData_6(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: _calculateVaderPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
REF_39 -> LENGTH vaderPairs_4
[i]Type for REF_39

Name: REF_39 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalPairs_1(uint256) := REF_39(uint256)
Function name: _calculateVaderPrice
asgn

Name: REF_39 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalPairs Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalPairs

Name: totalPairs Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalPairs_1(uint256) := REF_39(uint256)
XXXXX
typecheckig node...
typecheckig node...
typecheckig node...
totalUSD_1(uint256) := ϕ(['totalUSD_0', 'totalUSD_2'])
Function name: _calculateVaderPrice
Phi
[i]Type for totalUSD

Name: totalUSD Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalVader_1(uint256) := ϕ(['totalVader_0', 'totalVader_2'])
Function name: _calculateVaderPrice
Phi
[i]Type for totalVader

Name: totalVader Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
i_1(uint256) := ϕ(['i_2', 'i_0'])
Function name: _calculateVaderPrice
Phi
[i]Type for i

Name: i Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_57(bool) = i_1 < totalPairs_1
Function name: _calculateVaderPrice
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: i Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_57 Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_57

Name: TMP_57 Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_57(bool) = i_1 < totalPairs_1
XXXXX
CONDITION TMP_57
Condition...
Conidtion: 
TMP_57
TMP_57
typecheckig node...
typecheckig node...
REF_40(IUniswapV2Pair) -> vaderPairs_4[i_1]
Function name: _calculateVaderPrice
INDEX

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_40

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
pair_1(IUniswapV2Pair) := REF_40(IUniswapV2Pair)
Function name: _calculateVaderPrice
asgn

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: pair Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pair

Name: pair Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_58 = CONVERT pair_1 to address
Function name: _calculateVaderPrice

Name: pair Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: TMP_58 Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_58

Name: TMP_58 Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_41(ILiquidityBasedTWAP.ExchangePair) -> twapData_6[TMP_58]
Function name: _calculateVaderPrice
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_41

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_41(ILiquidityBasedTWAP.ExchangePair)
Function name: _calculateVaderPrice
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_42(address) -> pairData_1 (-> ['twapData']).foreignAsset
Function name: _calculateVaderPrice
MEMBER
pairData
foreignAsset
_calculateVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
[i]Type for REF_42

Name: pairData.foreignAsset Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: pairData.foreignAsset Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
done.
TMP_59(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(REF_42)
Function name: _calculateVaderPrice
Internal call...
getChainlinkPrice
REF_42
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
0

Name: PIC_2 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_59 Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_59

Name: TMP_59 Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
foreignPrice_1(uint256) := TMP_59(uint256)
Function name: _calculateVaderPrice
asgn

Name: TMP_59 Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: foreignPrice Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignPrice

Name: foreignPrice Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_43(uint256) -> liquidityWeights_1[i_1]
Function name: _calculateVaderPrice
INDEX

Name: liquidityWeights Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _calculateVaderPrice
liquidityWeights
[i]Type for REF_43

Name: liquidityWeights Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_43(uint256) -> liquidityWeights_1[i_1]
XXXXX
TMP_60(uint256) = foreignPrice_1 (c)* REF_43
Function name: _calculateVaderPrice
testing mul...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: foreignPrice Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_60 Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_60

Name: TMP_60 Function: _calculateVaderPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_61(uint256) = TMP_60 (c)/ totalVaderLiquidityWeight_1
Function name: _calculateVaderPrice
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_61 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: PIC_7 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_61 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_61

Name: TMP_61 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalUSD_2(uint256) = totalUSD_1 (c)+ TMP_61
Function name: _calculateVaderPrice

Name: totalUSD Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalUSD Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: totalUSD Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for totalUSD

Name: totalUSD Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_44(FixedPoint.uq112x112) -> pairData_1 (-> ['twapData']).nativeTokenPriceAverage
Function name: _calculateVaderPrice
MEMBER
pairData
nativeTokenPriceAverage
_calculateVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_44

Name: pairData.nativeTokenPriceAverage Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceAverage Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
REF_46(uint96) -> pairData_1 (-> ['twapData']).foreignUnit
Function name: _calculateVaderPrice
MEMBER
pairData
foreignUnit
_calculateVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_46

Name: pairData.foreignUnit Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.foreignUnit Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_62(FixedPoint.uq144x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.mul(FixedPoint.uq112x112,uint256), arguments:['REF_44', 'REF_46'] 
Function name: _calculateVaderPrice
Library Call: mul
testing mul...
lnorm: -404 rnorm: -404
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: pairData.nativeTokenPriceAverage Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: TMP_62 Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
TMP_63(uint144) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.decode144(FixedPoint.uq144x112), arguments:['TMP_62'] 
Function name: _calculateVaderPrice
Library Call: decode144
hlc contract name: FixedPoint func_name: decode144
('t', [1], [-1], 1, None)
TMP_62
wfc len: 1
Check copy_toekn_tuple
([1], [-1, -1], -808, None, -1)
----
Type: uint144
uint144
Final Type: uint144
COPIED
[i]Type for TMP_63

Name: TMP_63 Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
REF_48(uint256) -> liquidityWeights_1[i_1]
Function name: _calculateVaderPrice
INDEX

Name: liquidityWeights Function: _calculateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _calculateVaderPrice
liquidityWeights
[i]Type for REF_48

Name: liquidityWeights Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_48(uint256) -> liquidityWeights_1[i_1]
XXXXX
TMP_64(uint144) = TMP_63 (c)* REF_48
Function name: _calculateVaderPrice
testing mul...
lnorm: -808 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_63 Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef

Name: TMP_64 Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_64

Name: TMP_64 Function: _calculateVaderPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
TMP_65(uint144) = TMP_64 (c)/ totalVaderLiquidityWeight_1
Function name: _calculateVaderPrice
lnorm: -808 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_65 Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef

Name: PIC_8 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_65 Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
totalVader_2(uint256) = totalVader_1 (c)+ TMP_65
Function name: _calculateVaderPrice

Name: totalVader Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: -808 rnorm: -808
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_65 Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef

Name: totalVader Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for totalVader

Name: totalVader Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
i_2(uint256) = i_1 (c)+ 1
Function name: _calculateVaderPrice
val: 1

Name: i Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: _calculateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_66(uint256) = totalUSD_1 (c)* 1000000000000000000
has variable
[i] TMP_66 cleared
clearing ir...?
TMP_67(uint256) = TMP_66 (c)/ totalVader_1
has variable
[i] TMP_67 cleared
clearing ir...?
RETURN TMP_67
typecheckig node...
TMP_66(uint256) = totalUSD_1 (c)* 1000000000000000000
Function name: _calculateVaderPrice
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: 0 rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalUSD Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_66 Function: _calculateVaderPrice
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_66

Name: TMP_66 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
TMP_67(uint256) = TMP_66 (c)/ totalVader_1
Function name: _calculateVaderPrice
lnorm: 18 rnorm: -808
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_67 Function: _calculateVaderPrice
Num: 
Den: 
Norm: 826
LF: None
Fields: 
Finance Type: undef

Name: TMP_66 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_67 Function: _calculateVaderPrice
Num: 
Den: 
Norm: 826
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_67

Name: TMP_67 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_67
RETURN

Name: TMP_67 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 2 for function call "_calculateVaderPrice":
 New undefined nodes- 4
 Old undefined nodes- 4
Saving return values for: _calculateVaderPrice

Name: TMP_67 Function: _calculateVaderPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_23

Name: TMP_23 Function: getStaleVaderPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_23(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._calculateVaderPrice(uint256[],uint256)(pastLiquidityWeights_1,pastTotalLiquidityWeight_1)
XXXXX
RETURN TMP_23
RETURN

Name: TMP_23 Function: getStaleVaderPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "getStaleVaderPrice":
 New undefined nodes- 6
 Old undefined nodes- 0
typecheckig node...
vaderPairs_1(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: getStaleVaderPrice
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_1(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: getStaleVaderPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_1(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: getStaleVaderPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_0 -> LENGTH vaderPairs_1
[i]Type for REF_0

Name: REF_0 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalPairs_1(uint256) := REF_0(uint256)
Function name: getStaleVaderPrice
asgn

Name: REF_0 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalPairs Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalPairs

Name: totalPairs Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalPairs_1(uint256) := REF_0(uint256)
XXXXX
typecheckig node...
TMP_19 = new uint256[](totalPairs_1)
[i]Type for TMP_19

Name: TMP_19 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_1(uint256[]) := TMP_19(uint256)
Function name: getStaleVaderPrice
asgn

Name: TMP_19 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityWeights Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pastLiquidityWeights_1(uint256[]) := TMP_19(uint256)
XXXXX
typecheckig node...
REF_1(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: getStaleVaderPrice
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_1

Name: Paths.VADER Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_20 = CONVERT REF_1 to uint256
Function name: getStaleVaderPrice

Name: Paths.VADER Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_20 Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_20

Name: TMP_20 Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_2(uint256) -> totalLiquidityWeight_1[TMP_20]
Function name: getStaleVaderPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_2

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pastTotalLiquidityWeight_1(uint256) := REF_2(uint256)
Function name: getStaleVaderPrice
asgn

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: pastTotalLiquidityWeight Function: getStaleVaderPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastTotalLiquidityWeight

Name: pastTotalLiquidityWeight Function: getStaleVaderPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
i_1(uint256) := ϕ(['i_0', 'i_2'])
Function name: getStaleVaderPrice
Phi
[i]Type for i

Name: i Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_21(bool) = i_1 < totalPairs_1
Function name: getStaleVaderPrice
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: i Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_21 Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_21

Name: TMP_21 Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_21(bool) = i_1 < totalPairs_1
XXXXX
CONDITION TMP_21
Condition...
Conidtion: 
TMP_21
TMP_21
typecheckig node...
typecheckig node...
REF_3(uint256) -> pastLiquidityWeights_1[i_1]
Function name: getStaleVaderPrice
INDEX

Name: pastLiquidityWeights Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getStaleVaderPrice
pastLiquidityWeights
[i]Type for REF_3

Name: pastLiquidityWeights Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_3(uint256) -> pastLiquidityWeights_1[i_1]
XXXXX
REF_4(IUniswapV2Pair) -> vaderPairs_1[i_1]
Function name: getStaleVaderPrice
INDEX

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_4

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
TMP_22 = CONVERT REF_4 to address
Function name: getStaleVaderPrice

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: TMP_22 Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_22

Name: TMP_22 Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_5(ILiquidityBasedTWAP.ExchangePair) -> twapData_1[TMP_22]
Function name: getStaleVaderPrice
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_5

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_6(uint256) -> REF_5.pastLiquidityEvaluation
Function name: getStaleVaderPrice
MEMBER
twapData
pastLiquidityEvaluation
global
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_6

Name: twapData.pastLiquidityEvaluation Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: twapData.pastLiquidityEvaluation Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_2(uint256[]) := ϕ(['pastLiquidityWeights_1'])
Function name: getStaleVaderPrice
Phi
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_3 (->pastLiquidityWeights_2) := REF_6(uint256)
Function name: getStaleVaderPrice
asgn

Name: twapData.pastLiquidityEvaluation Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_3 Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_3

Name: REF_3 Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
i_2(uint256) = i_1 (c)+ 1
Function name: getStaleVaderPrice
val: 1

Name: i Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_23(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._calculateVaderPrice(uint256[],uint256)(pastLiquidityWeights_1,pastTotalLiquidityWeight_1)
Function name: getStaleVaderPrice
Internal call...
_calculateVaderPrice
pastLiquidityWeights
pastTotalLiquidityWeight
Function: _calculateVaderPrice
ic
Internal cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[], [], 'u', None, [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
Its the same:
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[], [], 'u', None, [], -1]
[[1], [-1], 0, None, [], -1]
0

Name: PIC_9 Function: None
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef

Name: TMP_23 Function: getStaleVaderPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_23

Name: TMP_23 Function: getStaleVaderPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_23
RETURN

Name: TMP_23 Function: getStaleVaderPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "getStaleVaderPrice":
 New undefined nodes- 4
 Old undefined nodes- 6
typecheckig node...
vaderPairs_1(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: getStaleVaderPrice
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_1(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: getStaleVaderPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_1(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: getStaleVaderPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_0 -> LENGTH vaderPairs_1
[i]Type for REF_0

Name: REF_0 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalPairs_1(uint256) := REF_0(uint256)
Function name: getStaleVaderPrice
asgn

Name: REF_0 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalPairs Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalPairs

Name: totalPairs Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalPairs_1(uint256) := REF_0(uint256)
XXXXX
typecheckig node...
TMP_19 = new uint256[](totalPairs_1)
[i]Type for TMP_19

Name: TMP_19 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_1(uint256[]) := TMP_19(uint256)
Function name: getStaleVaderPrice
asgn

Name: TMP_19 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityWeights Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pastLiquidityWeights_1(uint256[]) := TMP_19(uint256)
XXXXX
typecheckig node...
REF_1(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: getStaleVaderPrice
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_1

Name: Paths.VADER Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_20 = CONVERT REF_1 to uint256
Function name: getStaleVaderPrice

Name: Paths.VADER Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_20 Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_20

Name: TMP_20 Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_2(uint256) -> totalLiquidityWeight_1[TMP_20]
Function name: getStaleVaderPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_2

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pastTotalLiquidityWeight_1(uint256) := REF_2(uint256)
Function name: getStaleVaderPrice
asgn

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: pastTotalLiquidityWeight Function: getStaleVaderPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastTotalLiquidityWeight

Name: pastTotalLiquidityWeight Function: getStaleVaderPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
i_1(uint256) := ϕ(['i_0', 'i_2'])
Function name: getStaleVaderPrice
Phi
[i]Type for i

Name: i Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_21(bool) = i_1 < totalPairs_1
Function name: getStaleVaderPrice
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: i Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_21 Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_21

Name: TMP_21 Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_21(bool) = i_1 < totalPairs_1
XXXXX
CONDITION TMP_21
Condition...
Conidtion: 
TMP_21
TMP_21
typecheckig node...
typecheckig node...
REF_3(uint256) -> pastLiquidityWeights_1[i_1]
Function name: getStaleVaderPrice
INDEX

Name: pastLiquidityWeights Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getStaleVaderPrice
pastLiquidityWeights
[i]Type for REF_3

Name: pastLiquidityWeights Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_3(uint256) -> pastLiquidityWeights_1[i_1]
XXXXX
REF_4(IUniswapV2Pair) -> vaderPairs_1[i_1]
Function name: getStaleVaderPrice
INDEX

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_4

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
TMP_22 = CONVERT REF_4 to address
Function name: getStaleVaderPrice

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: TMP_22 Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_22

Name: TMP_22 Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_5(ILiquidityBasedTWAP.ExchangePair) -> twapData_1[TMP_22]
Function name: getStaleVaderPrice
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_5

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_6(uint256) -> REF_5.pastLiquidityEvaluation
Function name: getStaleVaderPrice
MEMBER
twapData
pastLiquidityEvaluation
global
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_6

Name: twapData.pastLiquidityEvaluation Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: twapData.pastLiquidityEvaluation Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_2(uint256[]) := ϕ(['pastLiquidityWeights_1'])
Function name: getStaleVaderPrice
Phi
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: getStaleVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_3 (->pastLiquidityWeights_2) := REF_6(uint256)
Function name: getStaleVaderPrice
asgn

Name: twapData.pastLiquidityEvaluation Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_3 Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_3

Name: REF_3 Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
i_2(uint256) = i_1 (c)+ 1
Function name: getStaleVaderPrice
val: 1

Name: i Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: getStaleVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_23(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._calculateVaderPrice(uint256[],uint256)(pastLiquidityWeights_1,pastTotalLiquidityWeight_1)
Function name: getStaleVaderPrice
Internal call...
_calculateVaderPrice
pastLiquidityWeights
pastTotalLiquidityWeight
Function: _calculateVaderPrice
ic
Internal cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[], [], 'u', None, [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
Its the same:
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[], [], 'u', None, [], -1]
[[1], [-1], 0, None, [], -1]
0

Name: PIC_9 Function: None
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef

Name: TMP_23 Function: getStaleVaderPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_23

Name: TMP_23 Function: getStaleVaderPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_23
RETURN

Name: TMP_23 Function: getStaleVaderPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 2 for function call "getStaleVaderPrice":
 New undefined nodes- 4
 Old undefined nodes- 4
Saving return values for: getStaleVaderPrice

Name: TMP_23 Function: getStaleVaderPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
___
State_var: oracles
Finding type for oracles...
mapping(address => IAggregatorV3)
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: mapping(address => IAggregatorV3)
mapping(address => IAggregatorV3)
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: previousPrices
Finding type for previousPrices...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPool
Finding type for vaderPool...
IVaderPoolV2
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPOOL')
----
Type: IVaderPoolV2
IVaderPoolV2
Final Type: IVaderPoolV2
 NO FIELDS

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxUpdateWindow
Finding type for maxUpdateWindow...
uint256
Check copy_toekn_tuple
(-1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalLiquidityWeight
Finding type for totalLiquidityWeight...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: twapData
Finding type for twapData...
mapping(address => ILiquidityBasedTWAP.ExchangePair)
Check copy_toekn_tuple
(-1, -1, 0, 'EXCHANGEPAIR')
----
Type: mapping(address => ILiquidityBasedTWAP.ExchangePair)
mapping(address => ILiquidityBasedTWAP.ExchangePair)
ILiquidityBasedTWAP.ExchangePair
Final Type: ILiquidityBasedTWAP.ExchangePair
global
twapData
nativeTokenPriceCumulative
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
nativeTokenPriceAverage
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
nativeTokenPriceAverage
_x
FIELDS:
nativeTokenPriceAverage Fields:
^^^
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
twapData.nativeTokenPriceAverage
_x
FIELDS:
twapData.nativeTokenPriceAverage Fields:
^^^
global
twapData
lastMeasurement
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
updatePeriod
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
pastLiquidityEvaluation
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
foreignAsset
Check copy_toekn_tuple
([-1], [-1], [0], 'FOREIGNASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
twapData
foreignUnit
Check copy_toekn_tuple
([-1], [-1], [-404], None)
----
Type: uint96
uint96
Final Type: uint96
Type: uint96
uint96
Final Type: uint96
FIELDS:
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
[*]Type fetched successfully
State_var: vader
Finding type for vader...
address
Check copy_toekn_tuple
(2, -1, 0, 'VADER')
----
Type: address
address
Final Type: address

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPairs
Finding type for vaderPairs...
IUniswapV2Pair[]
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPAIR')
----
Type: IUniswapV2Pair[]
IUniswapV2Pair[]
IUniswapV2Pair
Final Type: IUniswapV2Pair
 NO FIELDS

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 0, 'OWNER')
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: usdvPairs
Finding type for usdvPairs...
IERC20[]
Check copy_toekn_tuple
(-1, -1, 0, 'USDVPAIR')
----
Type: IERC20[]
IERC20[]
IERC20
Final Type: IERC20
 NO FIELDS

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: getStaleUSDVPrice
Function name: getStaleUSDVPrice
Function Visibility (test): external
-100
Add new
clearning node...
clearing ir...?
usdvPairs_1(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
has variable
clearing ir...?
totalLiquidityWeight_2(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
twapData_2(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
has variable
typecheckig node...
usdvPairs_1(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
Function name: getStaleUSDVPrice
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_2(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: getStaleUSDVPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_2(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: getStaleUSDVPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_7 -> LENGTH usdvPairs_1
clearing ir...?
totalPairs_1(uint256) := REF_7(uint256)
has variable
[i] totalPairs cleared
typecheckig node...
REF_7 -> LENGTH usdvPairs_1
[i]Type for REF_7

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalPairs_1(uint256) := REF_7(uint256)
Function name: getStaleUSDVPrice
asgn

Name: REF_7 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalPairs Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalPairs

Name: totalPairs Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalPairs_1(uint256) := REF_7(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_25 = new uint256[](totalPairs_1)
clearing ir...?
pastLiquidityWeights_1(uint256[]) := TMP_25(uint256)
has variable
[i] pastLiquidityWeights cleared
typecheckig node...
TMP_25 = new uint256[](totalPairs_1)
[i]Type for TMP_25

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_1(uint256[]) := TMP_25(uint256)
Function name: getStaleUSDVPrice
asgn

Name: TMP_25 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityWeights Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pastLiquidityWeights_1(uint256[]) := TMP_25(uint256)
XXXXX
clearning node...
clearing ir...?
REF_8(ILiquidityBasedTWAP.Paths) -> Paths.USDV
has variable
clearing ir...?
TMP_26 = CONVERT REF_8 to uint256
has variable
[i] TMP_26 cleared
clearing ir...?
REF_9(uint256) -> totalLiquidityWeight_2[TMP_26]
has variable
clearing ir...?
pastTotalLiquidityWeight_1(uint256) := REF_9(uint256)
has variable
[i] pastTotalLiquidityWeight cleared
typecheckig node...
REF_8(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: getStaleUSDVPrice
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
^^^
[i]Type for REF_8

Name: Paths.USDV Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_26 = CONVERT REF_8 to uint256
Function name: getStaleUSDVPrice

Name: Paths.USDV Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_26 Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_26

Name: TMP_26 Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_26 = CONVERT REF_8 to uint256
XXXXX
REF_9(uint256) -> totalLiquidityWeight_2[TMP_26]
Function name: getStaleUSDVPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_9

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pastTotalLiquidityWeight_1(uint256) := REF_9(uint256)
Function name: getStaleUSDVPrice
asgn

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: pastTotalLiquidityWeight Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastTotalLiquidityWeight

Name: pastTotalLiquidityWeight Function: getStaleUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
i_1(uint256) := ϕ(['i_0', 'i_2'])
has variable
[i] i cleared
clearing ir...?
TMP_27(bool) = i_1 < totalPairs_1
has variable
[i] TMP_27 cleared
clearing ir...?
CONDITION TMP_27
typecheckig node...
i_1(uint256) := ϕ(['i_0', 'i_2'])
Function name: getStaleUSDVPrice
Phi
[i]Type for i

Name: i Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_27(bool) = i_1 < totalPairs_1
Function name: getStaleUSDVPrice
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalPairs Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_27 Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_27

Name: TMP_27 Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_27(bool) = i_1 < totalPairs_1
XXXXX
CONDITION TMP_27
Condition...
Conidtion: 
TMP_27
TMP_27
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_10(uint256) -> pastLiquidityWeights_1[i_1]
has variable
clearing ir...?
REF_11(IERC20) -> usdvPairs_1[i_1]
has variable
clearing ir...?
TMP_28 = CONVERT REF_11 to address
has variable
[i] TMP_28 cleared
clearing ir...?
REF_12(ILiquidityBasedTWAP.ExchangePair) -> twapData_2[TMP_28]
has variable
clearing ir...?
REF_13(uint256) -> REF_12.pastLiquidityEvaluation
has variable
clearing ir...?
pastLiquidityWeights_2(uint256[]) := ϕ(['pastLiquidityWeights_1'])
has variable
[i] pastLiquidityWeights cleared
clearing ir...?
REF_10 (->pastLiquidityWeights_2) := REF_13(uint256)
has variable
typecheckig node...
REF_10(uint256) -> pastLiquidityWeights_1[i_1]
Function name: getStaleUSDVPrice
INDEX

Name: pastLiquidityWeights Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getStaleUSDVPrice
pastLiquidityWeights
[i]Type for REF_10

Name: pastLiquidityWeights Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_10(uint256) -> pastLiquidityWeights_1[i_1]
XXXXX
REF_11(IERC20) -> usdvPairs_1[i_1]
Function name: getStaleUSDVPrice
INDEX

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_11

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
TMP_28 = CONVERT REF_11 to address
Function name: getStaleUSDVPrice

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: TMP_28 Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_28

Name: TMP_28 Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_12(ILiquidityBasedTWAP.ExchangePair) -> twapData_2[TMP_28]
Function name: getStaleUSDVPrice
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_12

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_13(uint256) -> REF_12.pastLiquidityEvaluation
Function name: getStaleUSDVPrice
MEMBER
twapData
pastLiquidityEvaluation
global
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: twapData.pastLiquidityEvaluation Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: twapData.pastLiquidityEvaluation Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_2(uint256[]) := ϕ(['pastLiquidityWeights_1'])
Function name: getStaleUSDVPrice
Phi
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_10 (->pastLiquidityWeights_2) := REF_13(uint256)
Function name: getStaleUSDVPrice
asgn

Name: twapData.pastLiquidityEvaluation Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_10 Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_10

Name: REF_10 Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_29(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._calculateUSDVPrice(uint256[],uint256)(pastLiquidityWeights_1,pastTotalLiquidityWeight_1)
has variable
[i] TMP_29 cleared
clearing ir...?
RETURN TMP_29
typecheckig node...
TMP_29(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._calculateUSDVPrice(uint256[],uint256)(pastLiquidityWeights_1,pastTotalLiquidityWeight_1)
Function name: getStaleUSDVPrice
Internal call...
_calculateUSDVPrice
pastLiquidityWeights
pastTotalLiquidityWeight
Function: _calculateUSDVPrice
ic
Internal cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[], [], 'u', None, [], -1]
[[1], [-1], 0, None, [], -1]
added
xyz
Function name: _calculateUSDVPrice
Function Visibility: internal
clearning node...
clearing ir...?
liquidityWeights_1(uint256[]) := ϕ(['pastLiquidityWeights_1', 'pastLiquidityWeights_1 (-> [])'])
has variable
[i] liquidityWeights cleared
clearing ir...?
totalUSDVLiquidityWeight_1(uint256) := ϕ(['pastTotalLiquidityWeight_1', 'pastTotalLiquidityWeight_1'])
has variable
[i] totalUSDVLiquidityWeight cleared
clearing ir...?
usdvPairs_4(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
has variable
clearing ir...?
twapData_20(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
has variable
typecheckig node...
liquidityWeights_1(uint256[]) := ϕ(['pastLiquidityWeights_1', 'pastLiquidityWeights_1 (-> [])'])
Function name: _calculateUSDVPrice
Phi
[i]Type for liquidityWeights

Name: liquidityWeights Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalUSDVLiquidityWeight_1(uint256) := ϕ(['pastTotalLiquidityWeight_1', 'pastTotalLiquidityWeight_1'])
Function name: _calculateUSDVPrice
Phi
[i]Type for totalUSDVLiquidityWeight

Name: totalUSDVLiquidityWeight Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
usdvPairs_4(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
Function name: _calculateUSDVPrice
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
twapData_20(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: _calculateUSDVPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_102 -> LENGTH usdvPairs_4
clearing ir...?
totalPairs_1(uint256) := REF_102(uint256)
has variable
[i] totalPairs cleared
typecheckig node...
REF_102 -> LENGTH usdvPairs_4
[i]Type for REF_102

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalPairs_1(uint256) := REF_102(uint256)
Function name: _calculateUSDVPrice
asgn

Name: REF_102 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalPairs Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalPairs

Name: totalPairs Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalPairs_1(uint256) := REF_102(uint256)
XXXXX
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
totalUSD_1(uint256) := ϕ(['totalUSD_0', 'totalUSD_2'])
has variable
[i] totalUSD cleared
clearing ir...?
totalUSDV_1(uint256) := ϕ(['totalUSDV_0', 'totalUSDV_2'])
has variable
[i] totalUSDV cleared
clearing ir...?
i_1(uint256) := ϕ(['i_2', 'i_0'])
has variable
[i] i cleared
clearing ir...?
TMP_131(bool) = i_1 < totalPairs_1
has variable
[i] TMP_131 cleared
clearing ir...?
CONDITION TMP_131
typecheckig node...
totalUSD_1(uint256) := ϕ(['totalUSD_0', 'totalUSD_2'])
Function name: _calculateUSDVPrice
Phi
[i]Type for totalUSD

Name: totalUSD Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalUSDV_1(uint256) := ϕ(['totalUSDV_0', 'totalUSDV_2'])
Function name: _calculateUSDVPrice
Phi
[i]Type for totalUSDV

Name: totalUSDV Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
i_1(uint256) := ϕ(['i_2', 'i_0'])
Function name: _calculateUSDVPrice
Phi
[i]Type for i

Name: i Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_131(bool) = i_1 < totalPairs_1
Function name: _calculateUSDVPrice
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalPairs Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_131 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_131

Name: TMP_131 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_131(bool) = i_1 < totalPairs_1
XXXXX
CONDITION TMP_131
Condition...
Conidtion: 
TMP_131
TMP_131
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_103(IERC20) -> usdvPairs_4[i_1]
has variable
clearing ir...?
foreignAsset_1(IERC20) := REF_103(IERC20)
has variable
[i] foreignAsset cleared
typecheckig node...
REF_103(IERC20) -> usdvPairs_4[i_1]
Function name: _calculateUSDVPrice
INDEX

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_103

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
foreignAsset_1(IERC20) := REF_103(IERC20)
Function name: _calculateUSDVPrice
asgn

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: foreignAsset Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_132 = CONVERT foreignAsset_1 to address
has variable
[i] TMP_132 cleared
clearing ir...?
REF_104(ILiquidityBasedTWAP.ExchangePair) -> twapData_20[TMP_132]
has variable
clearing ir...?
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_104(ILiquidityBasedTWAP.ExchangePair)
has variable
[i] pairData cleared
typecheckig node...
TMP_132 = CONVERT foreignAsset_1 to address
Function name: _calculateUSDVPrice

Name: foreignAsset Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: TMP_132 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_132

Name: TMP_132 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_104(ILiquidityBasedTWAP.ExchangePair) -> twapData_20[TMP_132]
Function name: _calculateUSDVPrice
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_104

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_104(ILiquidityBasedTWAP.ExchangePair)
Function name: _calculateUSDVPrice
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_133 = CONVERT foreignAsset_1 to address
has variable
[i] TMP_133 cleared
clearing ir...?
TMP_134(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(TMP_133)
has variable
[i] TMP_134 cleared
clearing ir...?
foreignPrice_1(uint256) := TMP_134(uint256)
has variable
[i] foreignPrice cleared
typecheckig node...
TMP_133 = CONVERT foreignAsset_1 to address
Function name: _calculateUSDVPrice

Name: foreignAsset Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: TMP_133 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_133

Name: TMP_133 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
TMP_134(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(TMP_133)
Function name: _calculateUSDVPrice
Internal call...
getChainlinkPrice
TMP_133
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: USDVPAIR
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
0

Name: PIC_2 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_134 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_134

Name: TMP_134 Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
foreignPrice_1(uint256) := TMP_134(uint256)
Function name: _calculateUSDVPrice
asgn

Name: TMP_134 Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: foreignPrice Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignPrice

Name: foreignPrice Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_105(uint256) -> liquidityWeights_1[i_1]
has variable
clearing ir...?
TMP_135(uint256) = foreignPrice_1 (c)* REF_105
has variable
[i] TMP_135 cleared
clearing ir...?
TMP_136(uint256) = TMP_135 (c)/ totalUSDVLiquidityWeight_1
has variable
[i] TMP_136 cleared
clearing ir...?
totalUSD_2(uint256) = totalUSD_1 (c)+ TMP_136
has variable
[i] totalUSD cleared
typecheckig node...
REF_105(uint256) -> liquidityWeights_1[i_1]
Function name: _calculateUSDVPrice
INDEX

Name: liquidityWeights Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _calculateUSDVPrice
liquidityWeights
[i]Type for REF_105

Name: liquidityWeights Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_105(uint256) -> liquidityWeights_1[i_1]
XXXXX
TMP_135(uint256) = foreignPrice_1 (c)* REF_105
Function name: _calculateUSDVPrice
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: foreignPrice Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_135 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_135

Name: TMP_135 Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_136(uint256) = TMP_135 (c)/ totalUSDVLiquidityWeight_1
Function name: _calculateUSDVPrice
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_136 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_11 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_136 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_136

Name: TMP_136 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalUSD_2(uint256) = totalUSD_1 (c)+ TMP_136
Function name: _calculateUSDVPrice

Name: totalUSD Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_136 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalUSD Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for totalUSD

Name: totalUSD Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalUSD_2(uint256) = totalUSD_1 (c)+ TMP_136
XXXXX
clearning node...
clearing ir...?
REF_106(FixedPoint.uq112x112) -> pairData_1 (-> ['twapData']).nativeTokenPriceAverage
has variable
clearing ir...?
REF_108(uint96) -> pairData_1 (-> ['twapData']).foreignUnit
has variable
clearing ir...?
TMP_137(FixedPoint.uq144x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.mul(FixedPoint.uq112x112,uint256), arguments:['REF_106', 'REF_108'] 
has variable
[i] TMP_137 cleared
clearing ir...?
TMP_138(uint144) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.decode144(FixedPoint.uq144x112), arguments:['TMP_137'] 
has variable
[i] TMP_138 cleared
clearing ir...?
REF_110(uint256) -> liquidityWeights_1[i_1]
has variable
clearing ir...?
TMP_139(uint144) = TMP_138 (c)* REF_110
has variable
[i] TMP_139 cleared
clearing ir...?
TMP_140(uint144) = TMP_139 (c)/ totalUSDVLiquidityWeight_1
has variable
[i] TMP_140 cleared
clearing ir...?
totalUSDV_2(uint256) = totalUSDV_1 (c)+ TMP_140
has variable
[i] totalUSDV cleared
typecheckig node...
REF_106(FixedPoint.uq112x112) -> pairData_1 (-> ['twapData']).nativeTokenPriceAverage
Function name: _calculateUSDVPrice
MEMBER
pairData
nativeTokenPriceAverage
_calculateUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_106

Name: pairData.nativeTokenPriceAverage Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceAverage Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
REF_108(uint96) -> pairData_1 (-> ['twapData']).foreignUnit
Function name: _calculateUSDVPrice
MEMBER
pairData
foreignUnit
_calculateUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_108

Name: pairData.foreignUnit Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.foreignUnit Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_137(FixedPoint.uq144x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.mul(FixedPoint.uq112x112,uint256), arguments:['REF_106', 'REF_108'] 
Function name: _calculateUSDVPrice
Library Call: mul
testing mul...
lnorm: -404 rnorm: -404
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: pairData.nativeTokenPriceAverage Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: TMP_137 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_137

Name: TMP_137 Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
TMP_138(uint144) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.decode144(FixedPoint.uq144x112), arguments:['TMP_137'] 
Function name: _calculateUSDVPrice
Library Call: decode144
hlc contract name: FixedPoint func_name: decode144
('t', [1], [-1], 1, None)
TMP_137
wfc len: 1
Check copy_toekn_tuple
([1], [-1, -1], -808, None, -1)
----
Type: uint144
uint144
Final Type: uint144
COPIED
[i]Type for TMP_138

Name: TMP_138 Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
REF_110(uint256) -> liquidityWeights_1[i_1]
Function name: _calculateUSDVPrice
INDEX

Name: liquidityWeights Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _calculateUSDVPrice
liquidityWeights
[i]Type for REF_110

Name: liquidityWeights Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_110(uint256) -> liquidityWeights_1[i_1]
XXXXX
TMP_139(uint144) = TMP_138 (c)* REF_110
Function name: _calculateUSDVPrice
testing mul...
lnorm: -808 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_138 Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef

Name: TMP_139 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_139

Name: TMP_139 Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
TMP_140(uint144) = TMP_139 (c)/ totalUSDVLiquidityWeight_1
Function name: _calculateUSDVPrice
lnorm: -808 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_140 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: -808
LF: None
Fields: 
Finance Type: undef

Name: PIC_12 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_140 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_140

Name: TMP_140 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
totalUSDV_2(uint256) = totalUSDV_1 (c)+ TMP_140
Function name: _calculateUSDVPrice

Name: totalUSDV Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: -808
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_140 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef

Name: totalUSDV Function: _calculateUSDVPrice
Num: 
Den: 
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for totalUSDV

Name: totalUSDV Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalUSDV_2(uint256) = totalUSDV_1 (c)+ TMP_140
XXXXX
clearning node...
clearing ir...?
i_2(uint256) = i_1 (c)+ 1
has variable
[i] i cleared
typecheckig node...
i_2(uint256) = i_1 (c)+ 1
Function name: _calculateUSDVPrice
val: 1

Name: i Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: _calculateUSDVPrice
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
i_2(uint256) = i_1 (c)+ 1
XXXXX
clearning node...
clearing ir...?
TMP_141(uint256) = totalUSD_1 (c)* 1000000000000000000
has variable
[i] TMP_141 cleared
clearing ir...?
TMP_142(uint256) = TMP_141 (c)/ totalUSDV_1
has variable
[i] TMP_142 cleared
clearing ir...?
RETURN TMP_142
typecheckig node...
TMP_141(uint256) = totalUSD_1 (c)* 1000000000000000000
Function name: _calculateUSDVPrice
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalUSD Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_141 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_141

Name: TMP_141 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
TMP_142(uint256) = TMP_141 (c)/ totalUSDV_1
Function name: _calculateUSDVPrice
lnorm: 18 rnorm: -808
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_142 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: 826
LF: None
Fields: 
Finance Type: undef

Name: TMP_141 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_142 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: 826
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_142

Name: TMP_142 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_142
RETURN

Name: TMP_142 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_calculateUSDVPrice":
 New undefined nodes- 5
 Old undefined nodes- 0
typecheckig node...
liquidityWeights_1(uint256[]) := ϕ(['pastLiquidityWeights_1', 'pastLiquidityWeights_1 (-> [])'])
Function name: _calculateUSDVPrice
Phi
[i]Type for liquidityWeights

Name: liquidityWeights Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalUSDVLiquidityWeight_1(uint256) := ϕ(['pastTotalLiquidityWeight_1', 'pastTotalLiquidityWeight_1'])
Function name: _calculateUSDVPrice
Phi
[i]Type for totalUSDVLiquidityWeight

Name: totalUSDVLiquidityWeight Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
usdvPairs_4(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
Function name: _calculateUSDVPrice
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
twapData_20(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: _calculateUSDVPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
REF_102 -> LENGTH usdvPairs_4
[i]Type for REF_102

Name: REF_102 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalPairs_1(uint256) := REF_102(uint256)
Function name: _calculateUSDVPrice
asgn

Name: REF_102 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalPairs Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalPairs

Name: totalPairs Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalPairs_1(uint256) := REF_102(uint256)
XXXXX
typecheckig node...
typecheckig node...
typecheckig node...
totalUSD_1(uint256) := ϕ(['totalUSD_0', 'totalUSD_2'])
Function name: _calculateUSDVPrice
Phi
[i]Type for totalUSD

Name: totalUSD Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalUSDV_1(uint256) := ϕ(['totalUSDV_0', 'totalUSDV_2'])
Function name: _calculateUSDVPrice
Phi
[i]Type for totalUSDV

Name: totalUSDV Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
i_1(uint256) := ϕ(['i_2', 'i_0'])
Function name: _calculateUSDVPrice
Phi
[i]Type for i

Name: i Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_131(bool) = i_1 < totalPairs_1
Function name: _calculateUSDVPrice
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: i Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_131 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_131

Name: TMP_131 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_131(bool) = i_1 < totalPairs_1
XXXXX
CONDITION TMP_131
Condition...
Conidtion: 
TMP_131
TMP_131
typecheckig node...
typecheckig node...
REF_103(IERC20) -> usdvPairs_4[i_1]
Function name: _calculateUSDVPrice
INDEX

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_103

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
foreignAsset_1(IERC20) := REF_103(IERC20)
Function name: _calculateUSDVPrice
asgn

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: foreignAsset Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_132 = CONVERT foreignAsset_1 to address
Function name: _calculateUSDVPrice

Name: foreignAsset Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: TMP_132 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_132

Name: TMP_132 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_104(ILiquidityBasedTWAP.ExchangePair) -> twapData_20[TMP_132]
Function name: _calculateUSDVPrice
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_104

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_104(ILiquidityBasedTWAP.ExchangePair)
Function name: _calculateUSDVPrice
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
TMP_133 = CONVERT foreignAsset_1 to address
Function name: _calculateUSDVPrice

Name: foreignAsset Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: TMP_133 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_133

Name: TMP_133 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
TMP_134(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(TMP_133)
Function name: _calculateUSDVPrice
Internal call...
getChainlinkPrice
TMP_133
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: USDVPAIR
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
0

Name: PIC_2 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_134 Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_134

Name: TMP_134 Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
foreignPrice_1(uint256) := TMP_134(uint256)
Function name: _calculateUSDVPrice
asgn

Name: TMP_134 Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: foreignPrice Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignPrice

Name: foreignPrice Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_105(uint256) -> liquidityWeights_1[i_1]
Function name: _calculateUSDVPrice
INDEX

Name: liquidityWeights Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _calculateUSDVPrice
liquidityWeights
[i]Type for REF_105

Name: liquidityWeights Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_105(uint256) -> liquidityWeights_1[i_1]
XXXXX
TMP_135(uint256) = foreignPrice_1 (c)* REF_105
Function name: _calculateUSDVPrice
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: foreignPrice Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_135 Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_135

Name: TMP_135 Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_136(uint256) = TMP_135 (c)/ totalUSDVLiquidityWeight_1
Function name: _calculateUSDVPrice
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_136 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_13 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_136 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_136

Name: TMP_136 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalUSD_2(uint256) = totalUSD_1 (c)+ TMP_136
Function name: _calculateUSDVPrice

Name: totalUSD Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalUSD Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalUSD Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for totalUSD

Name: totalUSD Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_106(FixedPoint.uq112x112) -> pairData_1 (-> ['twapData']).nativeTokenPriceAverage
Function name: _calculateUSDVPrice
MEMBER
pairData
nativeTokenPriceAverage
_calculateUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_106

Name: pairData.nativeTokenPriceAverage Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceAverage Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
REF_108(uint96) -> pairData_1 (-> ['twapData']).foreignUnit
Function name: _calculateUSDVPrice
MEMBER
pairData
foreignUnit
_calculateUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_108

Name: pairData.foreignUnit Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.foreignUnit Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_137(FixedPoint.uq144x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.mul(FixedPoint.uq112x112,uint256), arguments:['REF_106', 'REF_108'] 
Function name: _calculateUSDVPrice
Library Call: mul
testing mul...
lnorm: -404 rnorm: -404
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: pairData.nativeTokenPriceAverage Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: TMP_137 Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_137

Name: TMP_137 Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
TMP_138(uint144) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.decode144(FixedPoint.uq144x112), arguments:['TMP_137'] 
Function name: _calculateUSDVPrice
Library Call: decode144
hlc contract name: FixedPoint func_name: decode144
('t', [1], [-1], 1, None)
TMP_137
wfc len: 1
Check copy_toekn_tuple
([1], [-1, -1], -808, None, -1)
----
Type: uint144
uint144
Final Type: uint144
COPIED
[i]Type for TMP_138

Name: TMP_138 Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
REF_110(uint256) -> liquidityWeights_1[i_1]
Function name: _calculateUSDVPrice
INDEX

Name: liquidityWeights Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _calculateUSDVPrice
liquidityWeights
[i]Type for REF_110

Name: liquidityWeights Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_110(uint256) -> liquidityWeights_1[i_1]
XXXXX
TMP_139(uint144) = TMP_138 (c)* REF_110
Function name: _calculateUSDVPrice
testing mul...
lnorm: -808 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_138 Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef

Name: TMP_139 Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_139

Name: TMP_139 Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
TMP_140(uint144) = TMP_139 (c)/ totalUSDVLiquidityWeight_1
Function name: _calculateUSDVPrice
lnorm: -808 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_140 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef

Name: PIC_14 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_140 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_140

Name: TMP_140 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
totalUSDV_2(uint256) = totalUSDV_1 (c)+ TMP_140
Function name: _calculateUSDVPrice

Name: totalUSDV Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: -808 rnorm: -808
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_140 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef

Name: totalUSDV Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for totalUSDV

Name: totalUSDV Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
i_2(uint256) = i_1 (c)+ 1
Function name: _calculateUSDVPrice
val: 1

Name: i Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_141(uint256) = totalUSD_1 (c)* 1000000000000000000
has variable
[i] TMP_141 cleared
clearing ir...?
TMP_142(uint256) = TMP_141 (c)/ totalUSDV_1
has variable
[i] TMP_142 cleared
clearing ir...?
RETURN TMP_142
typecheckig node...
TMP_141(uint256) = totalUSD_1 (c)* 1000000000000000000
Function name: _calculateUSDVPrice
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalUSD Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_141 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_141

Name: TMP_141 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
TMP_142(uint256) = TMP_141 (c)/ totalUSDV_1
Function name: _calculateUSDVPrice
lnorm: 18 rnorm: -808
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_142 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: 826
LF: None
Fields: 
Finance Type: undef

Name: TMP_141 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_142 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: 826
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_142

Name: TMP_142 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_142
RETURN

Name: TMP_142 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "_calculateUSDVPrice":
 New undefined nodes- 4
 Old undefined nodes- 5
typecheckig node...
liquidityWeights_1(uint256[]) := ϕ(['pastLiquidityWeights_1', 'pastLiquidityWeights_1 (-> [])'])
Function name: _calculateUSDVPrice
Phi
[i]Type for liquidityWeights

Name: liquidityWeights Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalUSDVLiquidityWeight_1(uint256) := ϕ(['pastTotalLiquidityWeight_1', 'pastTotalLiquidityWeight_1'])
Function name: _calculateUSDVPrice
Phi
[i]Type for totalUSDVLiquidityWeight

Name: totalUSDVLiquidityWeight Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
usdvPairs_4(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
Function name: _calculateUSDVPrice
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
twapData_20(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: _calculateUSDVPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
REF_102 -> LENGTH usdvPairs_4
[i]Type for REF_102

Name: REF_102 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalPairs_1(uint256) := REF_102(uint256)
Function name: _calculateUSDVPrice
asgn

Name: REF_102 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalPairs Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalPairs

Name: totalPairs Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalPairs_1(uint256) := REF_102(uint256)
XXXXX
typecheckig node...
typecheckig node...
typecheckig node...
totalUSD_1(uint256) := ϕ(['totalUSD_0', 'totalUSD_2'])
Function name: _calculateUSDVPrice
Phi
[i]Type for totalUSD

Name: totalUSD Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalUSDV_1(uint256) := ϕ(['totalUSDV_0', 'totalUSDV_2'])
Function name: _calculateUSDVPrice
Phi
[i]Type for totalUSDV

Name: totalUSDV Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
i_1(uint256) := ϕ(['i_2', 'i_0'])
Function name: _calculateUSDVPrice
Phi
[i]Type for i

Name: i Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_131(bool) = i_1 < totalPairs_1
Function name: _calculateUSDVPrice
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: i Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_131 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_131

Name: TMP_131 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_131(bool) = i_1 < totalPairs_1
XXXXX
CONDITION TMP_131
Condition...
Conidtion: 
TMP_131
TMP_131
typecheckig node...
typecheckig node...
REF_103(IERC20) -> usdvPairs_4[i_1]
Function name: _calculateUSDVPrice
INDEX

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_103

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
foreignAsset_1(IERC20) := REF_103(IERC20)
Function name: _calculateUSDVPrice
asgn

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: foreignAsset Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_132 = CONVERT foreignAsset_1 to address
Function name: _calculateUSDVPrice

Name: foreignAsset Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: TMP_132 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_132

Name: TMP_132 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_104(ILiquidityBasedTWAP.ExchangePair) -> twapData_20[TMP_132]
Function name: _calculateUSDVPrice
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_104

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_104(ILiquidityBasedTWAP.ExchangePair)
Function name: _calculateUSDVPrice
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
TMP_133 = CONVERT foreignAsset_1 to address
Function name: _calculateUSDVPrice

Name: foreignAsset Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: TMP_133 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_133

Name: TMP_133 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
TMP_134(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(TMP_133)
Function name: _calculateUSDVPrice
Internal call...
getChainlinkPrice
TMP_133
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: USDVPAIR
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
0

Name: PIC_2 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_134 Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_134

Name: TMP_134 Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
foreignPrice_1(uint256) := TMP_134(uint256)
Function name: _calculateUSDVPrice
asgn

Name: TMP_134 Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: foreignPrice Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignPrice

Name: foreignPrice Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_105(uint256) -> liquidityWeights_1[i_1]
Function name: _calculateUSDVPrice
INDEX

Name: liquidityWeights Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _calculateUSDVPrice
liquidityWeights
[i]Type for REF_105

Name: liquidityWeights Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_105(uint256) -> liquidityWeights_1[i_1]
XXXXX
TMP_135(uint256) = foreignPrice_1 (c)* REF_105
Function name: _calculateUSDVPrice
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: foreignPrice Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_135 Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_135

Name: TMP_135 Function: _calculateUSDVPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_136(uint256) = TMP_135 (c)/ totalUSDVLiquidityWeight_1
Function name: _calculateUSDVPrice
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_136 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: PIC_15 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_136 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_136

Name: TMP_136 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalUSD_2(uint256) = totalUSD_1 (c)+ TMP_136
Function name: _calculateUSDVPrice

Name: totalUSD Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalUSD Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalUSD Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for totalUSD

Name: totalUSD Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_106(FixedPoint.uq112x112) -> pairData_1 (-> ['twapData']).nativeTokenPriceAverage
Function name: _calculateUSDVPrice
MEMBER
pairData
nativeTokenPriceAverage
_calculateUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_106

Name: pairData.nativeTokenPriceAverage Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceAverage Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
REF_108(uint96) -> pairData_1 (-> ['twapData']).foreignUnit
Function name: _calculateUSDVPrice
MEMBER
pairData
foreignUnit
_calculateUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_108

Name: pairData.foreignUnit Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.foreignUnit Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_137(FixedPoint.uq144x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.mul(FixedPoint.uq112x112,uint256), arguments:['REF_106', 'REF_108'] 
Function name: _calculateUSDVPrice
Library Call: mul
testing mul...
lnorm: -404 rnorm: -404
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: pairData.nativeTokenPriceAverage Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: TMP_137 Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_137

Name: TMP_137 Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
TMP_138(uint144) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.decode144(FixedPoint.uq144x112), arguments:['TMP_137'] 
Function name: _calculateUSDVPrice
Library Call: decode144
hlc contract name: FixedPoint func_name: decode144
('t', [1], [-1], 1, None)
TMP_137
wfc len: 1
Check copy_toekn_tuple
([1], [-1, -1], -808, None, -1)
----
Type: uint144
uint144
Final Type: uint144
COPIED
[i]Type for TMP_138

Name: TMP_138 Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
REF_110(uint256) -> liquidityWeights_1[i_1]
Function name: _calculateUSDVPrice
INDEX

Name: liquidityWeights Function: _calculateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: _calculateUSDVPrice
liquidityWeights
[i]Type for REF_110

Name: liquidityWeights Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_110(uint256) -> liquidityWeights_1[i_1]
XXXXX
TMP_139(uint144) = TMP_138 (c)* REF_110
Function name: _calculateUSDVPrice
testing mul...
lnorm: -808 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_138 Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef

Name: TMP_139 Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_139

Name: TMP_139 Function: _calculateUSDVPrice
Num: 1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
TMP_140(uint144) = TMP_139 (c)/ totalUSDVLiquidityWeight_1
Function name: _calculateUSDVPrice
lnorm: -808 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_140 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef

Name: PIC_16 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_140 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_140

Name: TMP_140 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
totalUSDV_2(uint256) = totalUSDV_1 (c)+ TMP_140
Function name: _calculateUSDVPrice

Name: totalUSDV Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: -808 rnorm: -808
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_140 Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef

Name: totalUSDV Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
[i]Type for totalUSDV

Name: totalUSDV Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: -808
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
i_2(uint256) = i_1 (c)+ 1
Function name: _calculateUSDVPrice
val: 1

Name: i Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: _calculateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_141(uint256) = totalUSD_1 (c)* 1000000000000000000
has variable
[i] TMP_141 cleared
clearing ir...?
TMP_142(uint256) = TMP_141 (c)/ totalUSDV_1
has variable
[i] TMP_142 cleared
clearing ir...?
RETURN TMP_142
typecheckig node...
TMP_141(uint256) = totalUSD_1 (c)* 1000000000000000000
Function name: _calculateUSDVPrice
testing mul...
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalUSD Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_141 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: 18
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_141

Name: TMP_141 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: 18
LF: None
Fields: 
Finance Type: undef
done.
TMP_142(uint256) = TMP_141 (c)/ totalUSDV_1
Function name: _calculateUSDVPrice
lnorm: 18 rnorm: -808
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_142 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: 826
LF: None
Fields: 
Finance Type: undef

Name: TMP_141 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: 18
LF: None
Fields: 
Finance Type: undef

Name: TMP_142 Function: _calculateUSDVPrice
Num: 
Den: 
Norm: 826
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_142

Name: TMP_142 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_142
RETURN

Name: TMP_142 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 2 for function call "_calculateUSDVPrice":
 New undefined nodes- 4
 Old undefined nodes- 4
Saving return values for: _calculateUSDVPrice

Name: TMP_142 Function: _calculateUSDVPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_29

Name: TMP_29 Function: getStaleUSDVPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_29(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._calculateUSDVPrice(uint256[],uint256)(pastLiquidityWeights_1,pastTotalLiquidityWeight_1)
XXXXX
RETURN TMP_29
RETURN

Name: TMP_29 Function: getStaleUSDVPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
i_2(uint256) = i_1 (c)+ 1
has variable
[i] i cleared
typecheckig node...
i_2(uint256) = i_1 (c)+ 1
Function name: getStaleUSDVPrice
val: 1

Name: i Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: getStaleUSDVPrice
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
i_2(uint256) = i_1 (c)+ 1
XXXXX
WORKLIST iteration 0 for function call "getStaleUSDVPrice":
 New undefined nodes- 6
 Old undefined nodes- 0
typecheckig node...
usdvPairs_1(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
Function name: getStaleUSDVPrice
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_2(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: getStaleUSDVPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_2(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: getStaleUSDVPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_7 -> LENGTH usdvPairs_1
[i]Type for REF_7

Name: REF_7 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalPairs_1(uint256) := REF_7(uint256)
Function name: getStaleUSDVPrice
asgn

Name: REF_7 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalPairs Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalPairs

Name: totalPairs Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalPairs_1(uint256) := REF_7(uint256)
XXXXX
typecheckig node...
TMP_25 = new uint256[](totalPairs_1)
[i]Type for TMP_25

Name: TMP_25 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_1(uint256[]) := TMP_25(uint256)
Function name: getStaleUSDVPrice
asgn

Name: TMP_25 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityWeights Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pastLiquidityWeights_1(uint256[]) := TMP_25(uint256)
XXXXX
typecheckig node...
REF_8(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: getStaleUSDVPrice
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: Paths.USDV Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_26 = CONVERT REF_8 to uint256
Function name: getStaleUSDVPrice

Name: Paths.USDV Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_26 Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_26

Name: TMP_26 Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_9(uint256) -> totalLiquidityWeight_2[TMP_26]
Function name: getStaleUSDVPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_9

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pastTotalLiquidityWeight_1(uint256) := REF_9(uint256)
Function name: getStaleUSDVPrice
asgn

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: pastTotalLiquidityWeight Function: getStaleUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastTotalLiquidityWeight

Name: pastTotalLiquidityWeight Function: getStaleUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
i_1(uint256) := ϕ(['i_0', 'i_2'])
Function name: getStaleUSDVPrice
Phi
[i]Type for i

Name: i Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_27(bool) = i_1 < totalPairs_1
Function name: getStaleUSDVPrice
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: i Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_27 Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_27

Name: TMP_27 Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_27(bool) = i_1 < totalPairs_1
XXXXX
CONDITION TMP_27
Condition...
Conidtion: 
TMP_27
TMP_27
typecheckig node...
typecheckig node...
REF_10(uint256) -> pastLiquidityWeights_1[i_1]
Function name: getStaleUSDVPrice
INDEX

Name: pastLiquidityWeights Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getStaleUSDVPrice
pastLiquidityWeights
[i]Type for REF_10

Name: pastLiquidityWeights Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_10(uint256) -> pastLiquidityWeights_1[i_1]
XXXXX
REF_11(IERC20) -> usdvPairs_1[i_1]
Function name: getStaleUSDVPrice
INDEX

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_11

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
TMP_28 = CONVERT REF_11 to address
Function name: getStaleUSDVPrice

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: TMP_28 Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_28

Name: TMP_28 Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_12(ILiquidityBasedTWAP.ExchangePair) -> twapData_2[TMP_28]
Function name: getStaleUSDVPrice
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_12

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_13(uint256) -> REF_12.pastLiquidityEvaluation
Function name: getStaleUSDVPrice
MEMBER
twapData
pastLiquidityEvaluation
global
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: twapData.pastLiquidityEvaluation Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: twapData.pastLiquidityEvaluation Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_2(uint256[]) := ϕ(['pastLiquidityWeights_1'])
Function name: getStaleUSDVPrice
Phi
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_10 (->pastLiquidityWeights_2) := REF_13(uint256)
Function name: getStaleUSDVPrice
asgn

Name: twapData.pastLiquidityEvaluation Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_10 Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_10

Name: REF_10 Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_29(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._calculateUSDVPrice(uint256[],uint256)(pastLiquidityWeights_1,pastTotalLiquidityWeight_1)
Function name: getStaleUSDVPrice
Internal call...
_calculateUSDVPrice
pastLiquidityWeights
pastTotalLiquidityWeight
Function: _calculateUSDVPrice
ic
Internal cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[], [], 'u', None, [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
Its the same:
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[], [], 'u', None, [], -1]
[[1], [-1], 0, None, [], -1]
0

Name: PIC_17 Function: None
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef

Name: TMP_29 Function: getStaleUSDVPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_29

Name: TMP_29 Function: getStaleUSDVPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_29
RETURN

Name: TMP_29 Function: getStaleUSDVPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
typecheckig node...
i_2(uint256) = i_1 (c)+ 1
Function name: getStaleUSDVPrice
val: 1

Name: i Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "getStaleUSDVPrice":
 New undefined nodes- 4
 Old undefined nodes- 6
typecheckig node...
usdvPairs_1(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
Function name: getStaleUSDVPrice
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_2(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: getStaleUSDVPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_2(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: getStaleUSDVPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_7 -> LENGTH usdvPairs_1
[i]Type for REF_7

Name: REF_7 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalPairs_1(uint256) := REF_7(uint256)
Function name: getStaleUSDVPrice
asgn

Name: REF_7 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalPairs Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalPairs

Name: totalPairs Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalPairs_1(uint256) := REF_7(uint256)
XXXXX
typecheckig node...
TMP_25 = new uint256[](totalPairs_1)
[i]Type for TMP_25

Name: TMP_25 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_1(uint256[]) := TMP_25(uint256)
Function name: getStaleUSDVPrice
asgn

Name: TMP_25 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityWeights Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pastLiquidityWeights_1(uint256[]) := TMP_25(uint256)
XXXXX
typecheckig node...
REF_8(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: getStaleUSDVPrice
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: Paths.USDV Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_26 = CONVERT REF_8 to uint256
Function name: getStaleUSDVPrice

Name: Paths.USDV Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_26 Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_26

Name: TMP_26 Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_9(uint256) -> totalLiquidityWeight_2[TMP_26]
Function name: getStaleUSDVPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_9

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pastTotalLiquidityWeight_1(uint256) := REF_9(uint256)
Function name: getStaleUSDVPrice
asgn

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: pastTotalLiquidityWeight Function: getStaleUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastTotalLiquidityWeight

Name: pastTotalLiquidityWeight Function: getStaleUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
i_1(uint256) := ϕ(['i_0', 'i_2'])
Function name: getStaleUSDVPrice
Phi
[i]Type for i

Name: i Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_27(bool) = i_1 < totalPairs_1
Function name: getStaleUSDVPrice
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: i Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_27 Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_27

Name: TMP_27 Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_27(bool) = i_1 < totalPairs_1
XXXXX
CONDITION TMP_27
Condition...
Conidtion: 
TMP_27
TMP_27
typecheckig node...
typecheckig node...
REF_10(uint256) -> pastLiquidityWeights_1[i_1]
Function name: getStaleUSDVPrice
INDEX

Name: pastLiquidityWeights Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: getStaleUSDVPrice
pastLiquidityWeights
[i]Type for REF_10

Name: pastLiquidityWeights Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_10(uint256) -> pastLiquidityWeights_1[i_1]
XXXXX
REF_11(IERC20) -> usdvPairs_1[i_1]
Function name: getStaleUSDVPrice
INDEX

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_11

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
TMP_28 = CONVERT REF_11 to address
Function name: getStaleUSDVPrice

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: TMP_28 Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_28

Name: TMP_28 Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_12(ILiquidityBasedTWAP.ExchangePair) -> twapData_2[TMP_28]
Function name: getStaleUSDVPrice
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_12

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_13(uint256) -> REF_12.pastLiquidityEvaluation
Function name: getStaleUSDVPrice
MEMBER
twapData
pastLiquidityEvaluation
global
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: twapData.pastLiquidityEvaluation Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: twapData.pastLiquidityEvaluation Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_2(uint256[]) := ϕ(['pastLiquidityWeights_1'])
Function name: getStaleUSDVPrice
Phi
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: getStaleUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_10 (->pastLiquidityWeights_2) := REF_13(uint256)
Function name: getStaleUSDVPrice
asgn

Name: twapData.pastLiquidityEvaluation Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_10 Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_10

Name: REF_10 Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_29(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._calculateUSDVPrice(uint256[],uint256)(pastLiquidityWeights_1,pastTotalLiquidityWeight_1)
Function name: getStaleUSDVPrice
Internal call...
_calculateUSDVPrice
pastLiquidityWeights
pastTotalLiquidityWeight
Function: _calculateUSDVPrice
ic
Internal cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[], [], 'u', None, [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
Its the same:
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[], [], 'u', None, [], -1]
[[1], [-1], 0, None, [], -1]
0

Name: PIC_17 Function: None
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef

Name: TMP_29 Function: getStaleUSDVPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_29

Name: TMP_29 Function: getStaleUSDVPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_29
RETURN

Name: TMP_29 Function: getStaleUSDVPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
typecheckig node...
i_2(uint256) = i_1 (c)+ 1
Function name: getStaleUSDVPrice
val: 1

Name: i Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: getStaleUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 2 for function call "getStaleUSDVPrice":
 New undefined nodes- 4
 Old undefined nodes- 4
Saving return values for: getStaleUSDVPrice

Name: TMP_29 Function: getStaleUSDVPrice
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef
___
State_var: oracles
Finding type for oracles...
mapping(address => IAggregatorV3)
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: mapping(address => IAggregatorV3)
mapping(address => IAggregatorV3)
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: previousPrices
Finding type for previousPrices...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPool
Finding type for vaderPool...
IVaderPoolV2
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPOOL')
----
Type: IVaderPoolV2
IVaderPoolV2
Final Type: IVaderPoolV2
 NO FIELDS

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxUpdateWindow
Finding type for maxUpdateWindow...
uint256
Check copy_toekn_tuple
(-1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalLiquidityWeight
Finding type for totalLiquidityWeight...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: twapData
Finding type for twapData...
mapping(address => ILiquidityBasedTWAP.ExchangePair)
Check copy_toekn_tuple
(-1, -1, 0, 'EXCHANGEPAIR')
----
Type: mapping(address => ILiquidityBasedTWAP.ExchangePair)
mapping(address => ILiquidityBasedTWAP.ExchangePair)
ILiquidityBasedTWAP.ExchangePair
Final Type: ILiquidityBasedTWAP.ExchangePair
global
twapData
nativeTokenPriceCumulative
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
nativeTokenPriceAverage
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
nativeTokenPriceAverage
_x
FIELDS:
nativeTokenPriceAverage Fields:
^^^
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
twapData.nativeTokenPriceAverage
_x
FIELDS:
twapData.nativeTokenPriceAverage Fields:
^^^
global
twapData
lastMeasurement
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
updatePeriod
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
pastLiquidityEvaluation
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
foreignAsset
Check copy_toekn_tuple
([-1], [-1], [0], 'FOREIGNASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
twapData
foreignUnit
Check copy_toekn_tuple
([-1], [-1], [-404], None)
----
Type: uint96
uint96
Final Type: uint96
Type: uint96
uint96
Final Type: uint96
FIELDS:
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
[*]Type fetched successfully
State_var: vader
Finding type for vader...
address
Check copy_toekn_tuple
(2, -1, 0, 'VADER')
----
Type: address
address
Final Type: address

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPairs
Finding type for vaderPairs...
IUniswapV2Pair[]
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPAIR')
----
Type: IUniswapV2Pair[]
IUniswapV2Pair[]
IUniswapV2Pair
Final Type: IUniswapV2Pair
 NO FIELDS

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 0, 'OWNER')
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: usdvPairs
Finding type for usdvPairs...
IERC20[]
Check copy_toekn_tuple
(-1, -1, 0, 'USDVPAIR')
----
Type: IERC20[]
IERC20[]
IERC20
Final Type: IERC20
 NO FIELDS

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: getChainlinkPrice
Function name: getChainlinkPrice
Function Visibility (test): public
asset
Finding type for asset...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ASSET')
----
Type: address
address
Final Type: address

Name: asset Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: ASSET
Fields: 
Finance Type: undef
[*]Type fetched successfully
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
0
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: ASSET
    fields: []
    fintype: -1
clearning node...
clearing ir...?
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
has variable
[i] asset cleared
clearing ir...?
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
has variable
typecheckig node...
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
Function name: getChainlinkPrice
Phi
[i]Type for asset

Name: asset Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: ASSET
Fields: 
Finance Type: undef
done.
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
Function name: getChainlinkPrice
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_14(IAggregatorV3) -> oracles_1[asset_1]
has variable
clearing ir...?
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
has variable
[i] oracle cleared
typecheckig node...
REF_14(IAggregatorV3) -> oracles_1[asset_1]
Function name: getChainlinkPrice
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_14

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
Function name: getChainlinkPrice
asgn

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: oracle Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for oracle

Name: oracle Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
has variable
clearing ir...?
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
has variable
[i] roundID cleared
clearing ir...?
price_1(int256)= UNPACK TUPLE_0 index: 1 
has variable
[i] price cleared
clearing ir...?
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
has variable
[i] answeredInRound cleared
typecheckig node...
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
Function name: getChainlinkPrice
High Call: latestRoundData
func name:latestRoundData
other func name:latestRoundData
TUPLE_0
hlc contract name: ORACLE func_name: latestRoundData
('c', [-1], [-1], 0, None)
('c', [2], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
wfc len: 5
COPIED
[i]Type for TUPLE_0

Name: TUPLE_0 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for roundID

Name: roundID Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
price_1(int256)= UNPACK TUPLE_0 index: 1 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: int256
int256
Final Type: int256
[i]Type for price

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 4
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for answeredInRound

Name: answeredInRound Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_30(bool) = answeredInRound_1 >= roundID_1
has variable
[i] TMP_30 cleared
clearing ir...?
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
typecheckig node...
TMP_30(bool) = answeredInRound_1 >= roundID_1
Function name: getChainlinkPrice
testing gt...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_30

Name: TMP_30 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_32(bool) = price_1 > 0
has variable
[i] TMP_32 cleared
clearing ir...?
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
typecheckig node...
TMP_32(bool) = price_1 > 0
Function name: getChainlinkPrice
testing gt...
val: 0
val: 0
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_32

Name: TMP_32 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_34 = CONVERT price_1 to uint256
has variable
[i] TMP_34 cleared
clearing ir...?
RETURN TMP_34
typecheckig node...
TMP_34 = CONVERT price_1 to uint256
Function name: getChainlinkPrice

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_34 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_34

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_34
RETURN

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "getChainlinkPrice":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: getChainlinkPrice

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
State_var: oracles
Finding type for oracles...
mapping(address => IAggregatorV3)
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: mapping(address => IAggregatorV3)
mapping(address => IAggregatorV3)
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: previousPrices
Finding type for previousPrices...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPool
Finding type for vaderPool...
IVaderPoolV2
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPOOL')
----
Type: IVaderPoolV2
IVaderPoolV2
Final Type: IVaderPoolV2
 NO FIELDS

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxUpdateWindow
Finding type for maxUpdateWindow...
uint256
Check copy_toekn_tuple
(-1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalLiquidityWeight
Finding type for totalLiquidityWeight...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: twapData
Finding type for twapData...
mapping(address => ILiquidityBasedTWAP.ExchangePair)
Check copy_toekn_tuple
(-1, -1, 0, 'EXCHANGEPAIR')
----
Type: mapping(address => ILiquidityBasedTWAP.ExchangePair)
mapping(address => ILiquidityBasedTWAP.ExchangePair)
ILiquidityBasedTWAP.ExchangePair
Final Type: ILiquidityBasedTWAP.ExchangePair
global
twapData
nativeTokenPriceCumulative
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
nativeTokenPriceAverage
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
nativeTokenPriceAverage
_x
FIELDS:
nativeTokenPriceAverage Fields:
^^^
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
twapData.nativeTokenPriceAverage
_x
FIELDS:
twapData.nativeTokenPriceAverage Fields:
^^^
global
twapData
lastMeasurement
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
updatePeriod
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
pastLiquidityEvaluation
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
foreignAsset
Check copy_toekn_tuple
([-1], [-1], [0], 'FOREIGNASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
twapData
foreignUnit
Check copy_toekn_tuple
([-1], [-1], [-404], None)
----
Type: uint96
uint96
Final Type: uint96
Type: uint96
uint96
Final Type: uint96
FIELDS:
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
[*]Type fetched successfully
State_var: vader
Finding type for vader...
address
Check copy_toekn_tuple
(2, -1, 0, 'VADER')
----
Type: address
address
Final Type: address

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPairs
Finding type for vaderPairs...
IUniswapV2Pair[]
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPAIR')
----
Type: IUniswapV2Pair[]
IUniswapV2Pair[]
IUniswapV2Pair
Final Type: IUniswapV2Pair
 NO FIELDS

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 0, 'OWNER')
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: usdvPairs
Finding type for usdvPairs...
IERC20[]
Check copy_toekn_tuple
(-1, -1, 0, 'USDVPAIR')
----
Type: IERC20[]
IERC20[]
IERC20
Final Type: IERC20
 NO FIELDS

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: getVaderPrice
Function getVaderPrice not marked
Mark Iterations TRUE, proceeding anyway
Function name: getVaderPrice
Function Visibility (test): external
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_1(uint256[],uint256) = INTERNAL_CALL, LiquidityBasedTWAP.syncVaderPrice()()
has variable
clearing ir...?
pastLiquidityWeights_1 (-> [])(uint256[])= UNPACK TUPLE_1 index: 0 
has variable
[i] pastLiquidityWeights cleared
clearing ir...?
pastTotalLiquidityWeight_1(uint256)= UNPACK TUPLE_1 index: 1 
has variable
[i] pastTotalLiquidityWeight cleared
typecheckig node...
TUPLE_1(uint256[],uint256) = INTERNAL_CALL, LiquidityBasedTWAP.syncVaderPrice()()
Function name: getVaderPrice
Internal call...
syncVaderPrice
Function: syncVaderPrice
ic
[i]Type for TUPLE_1

Name: TUPLE_1 Function: getVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_1 (-> [])(uint256[])= UNPACK TUPLE_1 index: 0 
Function name: getVaderPrice
Reading tuple TUPLE_1 index 0
Finding type for pastLiquidityWeights...
uint256[]
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: getVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastTotalLiquidityWeight_1(uint256)= UNPACK TUPLE_1 index: 1 
Function name: getVaderPrice
Reading tuple TUPLE_1 index 1
Finding type for pastTotalLiquidityWeight...
uint256
[i]Type for pastTotalLiquidityWeight

Name: pastTotalLiquidityWeight Function: getVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_35(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._calculateVaderPrice(uint256[],uint256)(pastLiquidityWeights_1 (-> []),pastTotalLiquidityWeight_1)
has variable
[i] TMP_35 cleared
clearing ir...?
RETURN TMP_35
typecheckig node...
TMP_35(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._calculateVaderPrice(uint256[],uint256)(pastLiquidityWeights_1 (-> []),pastTotalLiquidityWeight_1)
Function name: getVaderPrice
Internal call...
_calculateVaderPrice
pastLiquidityWeights
pastTotalLiquidityWeight
Function: _calculateVaderPrice
ic
[i]Type for TMP_35

Name: TMP_35 Function: getVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_35
RETURN

Name: TMP_35 Function: getVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "getVaderPrice":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: oracles
Finding type for oracles...
mapping(address => IAggregatorV3)
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: mapping(address => IAggregatorV3)
mapping(address => IAggregatorV3)
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: previousPrices
Finding type for previousPrices...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPool
Finding type for vaderPool...
IVaderPoolV2
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPOOL')
----
Type: IVaderPoolV2
IVaderPoolV2
Final Type: IVaderPoolV2
 NO FIELDS

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxUpdateWindow
Finding type for maxUpdateWindow...
uint256
Check copy_toekn_tuple
(-1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalLiquidityWeight
Finding type for totalLiquidityWeight...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: twapData
Finding type for twapData...
mapping(address => ILiquidityBasedTWAP.ExchangePair)
Check copy_toekn_tuple
(-1, -1, 0, 'EXCHANGEPAIR')
----
Type: mapping(address => ILiquidityBasedTWAP.ExchangePair)
mapping(address => ILiquidityBasedTWAP.ExchangePair)
ILiquidityBasedTWAP.ExchangePair
Final Type: ILiquidityBasedTWAP.ExchangePair
global
twapData
nativeTokenPriceCumulative
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
nativeTokenPriceAverage
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
nativeTokenPriceAverage
_x
FIELDS:
nativeTokenPriceAverage Fields:
^^^
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
twapData.nativeTokenPriceAverage
_x
FIELDS:
twapData.nativeTokenPriceAverage Fields:
^^^
global
twapData
lastMeasurement
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
updatePeriod
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
pastLiquidityEvaluation
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
foreignAsset
Check copy_toekn_tuple
([-1], [-1], [0], 'FOREIGNASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
twapData
foreignUnit
Check copy_toekn_tuple
([-1], [-1], [-404], None)
----
Type: uint96
uint96
Final Type: uint96
Type: uint96
uint96
Final Type: uint96
FIELDS:
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
[*]Type fetched successfully
State_var: vader
Finding type for vader...
address
Check copy_toekn_tuple
(2, -1, 0, 'VADER')
----
Type: address
address
Final Type: address

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPairs
Finding type for vaderPairs...
IUniswapV2Pair[]
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPAIR')
----
Type: IUniswapV2Pair[]
IUniswapV2Pair[]
IUniswapV2Pair
Final Type: IUniswapV2Pair
 NO FIELDS

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 0, 'OWNER')
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: usdvPairs
Finding type for usdvPairs...
IERC20[]
Check copy_toekn_tuple
(-1, -1, 0, 'USDVPAIR')
----
Type: IERC20[]
IERC20[]
IERC20
Final Type: IERC20
 NO FIELDS

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: syncVaderPrice
Function name: syncVaderPrice
Function Visibility (test): public
-100
Add new
clearning node...
clearing ir...?
vaderPairs_2(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
has variable
clearing ir...?
totalLiquidityWeight_3(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
twapData_3(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
has variable
typecheckig node...
vaderPairs_2(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: syncVaderPrice
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_3(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: syncVaderPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_3(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: syncVaderPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_16 -> LENGTH vaderPairs_2
clearing ir...?
totalPairs_1(uint256) := REF_16(uint256)
has variable
[i] totalPairs cleared
typecheckig node...
REF_16 -> LENGTH vaderPairs_2
[i]Type for REF_16

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalPairs_1(uint256) := REF_16(uint256)
Function name: syncVaderPrice
asgn

Name: REF_16 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalPairs Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalPairs

Name: totalPairs Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalPairs_1(uint256) := REF_16(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_37 = new uint256[](totalPairs_1)
clearing ir...?
pastLiquidityWeights_1(uint256[]) := TMP_37(uint256)
has variable
[i] pastLiquidityWeights cleared
typecheckig node...
TMP_37 = new uint256[](totalPairs_1)
[i]Type for TMP_37

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_1(uint256[]) := TMP_37(uint256)
Function name: syncVaderPrice
asgn

Name: TMP_37 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityWeights Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pastLiquidityWeights_1(uint256[]) := TMP_37(uint256)
XXXXX
clearning node...
clearing ir...?
REF_17(ILiquidityBasedTWAP.Paths) -> Paths.VADER
has variable
clearing ir...?
TMP_38 = CONVERT REF_17 to uint256
has variable
[i] TMP_38 cleared
clearing ir...?
REF_18(uint256) -> totalLiquidityWeight_3[TMP_38]
has variable
clearing ir...?
pastTotalLiquidityWeight_1(uint256) := REF_18(uint256)
has variable
[i] pastTotalLiquidityWeight cleared
typecheckig node...
REF_17(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: syncVaderPrice
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_17

Name: Paths.VADER Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_38 = CONVERT REF_17 to uint256
Function name: syncVaderPrice

Name: Paths.VADER Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_38 Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_38

Name: TMP_38 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_18(uint256) -> totalLiquidityWeight_3[TMP_38]
Function name: syncVaderPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_18

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pastTotalLiquidityWeight_1(uint256) := REF_18(uint256)
Function name: syncVaderPrice
asgn

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: pastTotalLiquidityWeight Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastTotalLiquidityWeight

Name: pastTotalLiquidityWeight Function: syncVaderPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_totalLiquidityWeight_1(uint256) := ϕ(['_totalLiquidityWeight_2', '_totalLiquidityWeight_0'])
has variable
[i] _totalLiquidityWeight cleared
clearing ir...?
i_1(uint256) := ϕ(['i_0', 'i_2'])
has variable
[i] i cleared
clearing ir...?
TMP_39(bool) = i_1 < totalPairs_1
has variable
[i] TMP_39 cleared
clearing ir...?
CONDITION TMP_39
typecheckig node...
_totalLiquidityWeight_1(uint256) := ϕ(['_totalLiquidityWeight_2', '_totalLiquidityWeight_0'])
Function name: syncVaderPrice
Phi
[i]Type for _totalLiquidityWeight

Name: _totalLiquidityWeight Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
i_1(uint256) := ϕ(['i_0', 'i_2'])
Function name: syncVaderPrice
Phi
[i]Type for i

Name: i Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_39(bool) = i_1 < totalPairs_1
Function name: syncVaderPrice
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalPairs Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_39 Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_39

Name: TMP_39 Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_39(bool) = i_1 < totalPairs_1
XXXXX
CONDITION TMP_39
Condition...
Conidtion: 
TMP_39
TMP_39
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_19(IUniswapV2Pair) -> vaderPairs_2[i_1]
has variable
clearing ir...?
pair_1(IUniswapV2Pair) := REF_19(IUniswapV2Pair)
has variable
[i] pair cleared
typecheckig node...
REF_19(IUniswapV2Pair) -> vaderPairs_2[i_1]
Function name: syncVaderPrice
INDEX

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_19

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
pair_1(IUniswapV2Pair) := REF_19(IUniswapV2Pair)
Function name: syncVaderPrice
asgn

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: pair Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pair

Name: pair Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_26(ILiquidityBasedTWAP.Paths) -> Paths.VADER
has variable
clearing ir...?
TMP_44 = CONVERT REF_26 to uint256
has variable
[i] TMP_44 cleared
clearing ir...?
REF_27(uint256) -> totalLiquidityWeight_3[TMP_44]
has variable
clearing ir...?
totalLiquidityWeight_4(uint256[2]) := ϕ(['totalLiquidityWeight_3'])
has variable
clearing ir...?
REF_27 (->totalLiquidityWeight_4) := _totalLiquidityWeight_1(uint256)
has variable
typecheckig node...
REF_26(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: syncVaderPrice
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_26

Name: Paths.VADER Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_44 = CONVERT REF_26 to uint256
Function name: syncVaderPrice

Name: Paths.VADER Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_44 Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_44

Name: TMP_44 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_27(uint256) -> totalLiquidityWeight_3[TMP_44]
Function name: syncVaderPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_27

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_4(uint256[2]) := ϕ(['totalLiquidityWeight_3'])
Function name: syncVaderPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_27 (->totalLiquidityWeight_4) := _totalLiquidityWeight_1(uint256)
Function name: syncVaderPrice
asgn

Name: _totalLiquidityWeight Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_27 Function: syncVaderPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_27

Name: REF_27 Function: syncVaderPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_27 (->totalLiquidityWeight_4) := _totalLiquidityWeight_1(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_40 = CONVERT pair_1 to address
has variable
[i] TMP_40 cleared
clearing ir...?
REF_20(ILiquidityBasedTWAP.ExchangePair) -> twapData_3[TMP_40]
has variable
clearing ir...?
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_20(ILiquidityBasedTWAP.ExchangePair)
has variable
[i] pairData cleared
typecheckig node...
TMP_40 = CONVERT pair_1 to address
Function name: syncVaderPrice

Name: pair Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: TMP_40 Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_40

Name: TMP_40 Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_20(ILiquidityBasedTWAP.ExchangePair) -> twapData_3[TMP_40]
Function name: syncVaderPrice
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_20

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_20(ILiquidityBasedTWAP.ExchangePair)
Function name: syncVaderPrice
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_21(uint256) -> pairData_1 (-> ['twapData']).lastMeasurement
has variable
clearing ir...?
TMP_41(uint256) = block.timestamp (c)- REF_21
has variable
[i] TMP_41 cleared
clearing ir...?
timeElapsed_1(uint256) := TMP_41(uint256)
has variable
[i] timeElapsed cleared
typecheckig node...
REF_21(uint256) -> pairData_1 (-> ['twapData']).lastMeasurement
Function name: syncVaderPrice
MEMBER
pairData
lastMeasurement
syncVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_21

Name: pairData.lastMeasurement Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_41(uint256) = block.timestamp (c)- REF_21
Function name: syncVaderPrice
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_20 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_41 Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_41

Name: TMP_41 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
timeElapsed_1(uint256) := TMP_41(uint256)
Function name: syncVaderPrice
asgn

Name: TMP_41 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: timeElapsed Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for timeElapsed

Name: timeElapsed Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_22(uint256) -> pairData_1 (-> ['twapData']).updatePeriod
has variable
clearing ir...?
TMP_42(bool) = timeElapsed_1 < REF_22
has variable
[i] TMP_42 cleared
clearing ir...?
CONDITION TMP_42
typecheckig node...
REF_22(uint256) -> pairData_1 (-> ['twapData']).updatePeriod
Function name: syncVaderPrice
MEMBER
pairData
updatePeriod
syncVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_22

Name: pairData.updatePeriod Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_42(bool) = timeElapsed_1 < REF_22
Function name: syncVaderPrice
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_42

Name: TMP_42 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_42
Condition...
Conidtion: 
TMP_42
TMP_42
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_23(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
has variable
clearing ir...?
pastLiquidityEvaluation_1(uint256) := REF_23(uint256)
has variable
[i] pastLiquidityEvaluation cleared
typecheckig node...
REF_23(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
Function name: syncVaderPrice
MEMBER
pairData
pastLiquidityEvaluation
syncVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_23

Name: pairData.pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityEvaluation_1(uint256) := REF_23(uint256)
Function name: syncVaderPrice
asgn

Name: pairData.pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityEvaluation

Name: pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_43(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._updateVaderPrice(IUniswapV2Pair,ILiquidityBasedTWAP.ExchangePair,uint256)(pair_1,pairData_1 (-> ['twapData']),timeElapsed_1)
has variable
[i] TMP_43 cleared
clearing ir...?
currentLiquidityEvaluation_1(uint256) := TMP_43(uint256)
has variable
[i] currentLiquidityEvaluation cleared
typecheckig node...
TMP_43(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._updateVaderPrice(IUniswapV2Pair,ILiquidityBasedTWAP.ExchangePair,uint256)(pair_1,pairData_1 (-> ['twapData']),timeElapsed_1)
Function name: syncVaderPrice
Internal call...
_updateVaderPrice
pair
pairData
timeElapsed
Function: _updateVaderPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADERPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADERPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 0, 'VADERPAIR', [], -1]
[[-1], [-1], 0, 'EXCHANGEPAIR', [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _updateVaderPrice
Function Visibility: internal
clearning node...
clearing ir...?
pair_1(IUniswapV2Pair) := ϕ(['pair_1'])
has variable
[i] pair cleared
clearing ir...?
pairData_1 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
timeElapsed_1(uint256) := ϕ(['timeElapsed_1'])
has variable
[i] timeElapsed cleared
clearing ir...?
vader_2(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_0'])
has variable
clearing ir...?
previousPrices_1(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
typecheckig node...
pair_1(IUniswapV2Pair) := ϕ(['pair_1'])
Function name: _updateVaderPrice
Phi
[i]Type for pair

Name: pair Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
pairData_1 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: _updateVaderPrice
Phi
[i]Type for pairData

Name: pairData Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
timeElapsed_1(uint256) := ϕ(['timeElapsed_1'])
Function name: _updateVaderPrice
Phi
[i]Type for timeElapsed

Name: timeElapsed Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vader_2(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_0'])
Function name: _updateVaderPrice
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
previousPrices_1(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _updateVaderPrice
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_45(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
has variable
[i] TMP_45 cleared
clearing ir...?
vader_3(address) := ϕ(['vader_2', 'vader_8', 'vader_10', 'vader_3', 'vader_1'])
has variable
clearing ir...?
previousPrices_2(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_1', 'previousPrices_4'])
has variable
clearing ir...?
TMP_46(bool) = TMP_45 == vader_3
has variable
[i] TMP_46 cleared
clearing ir...?
isFirst_1(bool) := TMP_46(bool)
has variable
[i] isFirst cleared
typecheckig node...
TMP_45(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _updateVaderPrice
High Call: token0
func name:token0
other func name:token0
TMP_45
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_45

Name: TMP_45 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_3(address) := ϕ(['vader_2', 'vader_8', 'vader_10', 'vader_3', 'vader_1'])
Function name: _updateVaderPrice
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
previousPrices_2(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_1', 'previousPrices_4'])
Function name: _updateVaderPrice
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_46(bool) = TMP_45 == vader_3
Function name: _updateVaderPrice
[i]Type for TMP_46

Name: TMP_46 Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
isFirst_1(bool) := TMP_46(bool)
Function name: _updateVaderPrice
asgn

Name: TMP_46 Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: isFirst Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for isFirst

Name: isFirst Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
isFirst_1(bool) := TMP_46(bool)
XXXXX
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_2(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:getReserves, arguments:[]  
has variable
clearing ir...?
previousPrices_3(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_2'])
has variable
clearing ir...?
reserve0_1(uint256)= UNPACK TUPLE_2 index: 0 
has variable
[i] reserve0 cleared
clearing ir...?
reserve1_1(uint256)= UNPACK TUPLE_2 index: 1 
has variable
[i] reserve1 cleared
typecheckig node...
TUPLE_2(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:getReserves, arguments:[]  
Function name: _updateVaderPrice
High Call: getReserves
func name:getReserves
other func name:getReserves
TUPLE_2
hlc contract name: VADERPAIR func_name: getReserves
('c', [-1], [-1], 'u', None)
('c', [-1], [-1], 'u', None)
('c', [-1], [-1], 'u', None)
wfc len: 3
COPIED
[i]Type for TUPLE_2

Name: TUPLE_2 Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_3(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_2'])
Function name: _updateVaderPrice
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserve0_1(uint256)= UNPACK TUPLE_2 index: 0 
Function name: _updateVaderPrice
Reading tuple TUPLE_2 index 0
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserve0

Name: reserve0 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserve1_1(uint256)= UNPACK TUPLE_2 index: 1 
Function name: _updateVaderPrice
Reading tuple TUPLE_2 index 1
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserve1

Name: reserve1 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
CONDITION isFirst_1
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
clearning node...
clearing ir...?
reserveNative_2(uint256) := reserve0_1(uint256)
has variable
[i] reserveNative cleared
clearing ir...?
reserveForeign_2(uint256) := reserve1_1(uint256)
has variable
[i] reserveForeign cleared
typecheckig node...
reserveNative_2(uint256) := reserve0_1(uint256)
Function name: _updateVaderPrice
asgn

Name: reserve0 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveNative Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveNative

Name: reserveNative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_2(uint256) := reserve1_1(uint256)
Function name: _updateVaderPrice
asgn

Name: reserve1 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveForeign Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveForeign

Name: reserveForeign Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
reserveNative_1(uint256) := reserve1_1(uint256)
has variable
[i] reserveNative cleared
clearing ir...?
reserveForeign_1(uint256) := reserve0_1(uint256)
has variable
[i] reserveForeign cleared
typecheckig node...
reserveNative_1(uint256) := reserve1_1(uint256)
Function name: _updateVaderPrice
asgn

Name: reserve1 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveNative Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveNative

Name: reserveNative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_1(uint256) := reserve0_1(uint256)
Function name: _updateVaderPrice
asgn

Name: reserve0 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveForeign Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveForeign

Name: reserveForeign Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
reserveNative_3(uint256) := ϕ(['reserveNative_1', 'reserveNative_2'])
has variable
[i] reserveNative cleared
clearing ir...?
reserveForeign_3(uint256) := ϕ(['reserveForeign_1', 'reserveForeign_2'])
has variable
[i] reserveForeign cleared
typecheckig node...
reserveNative_3(uint256) := ϕ(['reserveNative_1', 'reserveNative_2'])
Function name: _updateVaderPrice
Phi
[i]Type for reserveNative

Name: reserveNative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_3(uint256) := ϕ(['reserveForeign_1', 'reserveForeign_2'])
Function name: _updateVaderPrice
Phi
[i]Type for reserveForeign

Name: reserveForeign Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_47 = CONVERT pair_1 to address
has variable
[i] TMP_47 cleared
clearing ir...?
TUPLE_3(uint256,uint256,uint32) = LIBRARY_CALL, dest:UniswapV2OracleLibrary, function:UniswapV2OracleLibrary.currentCumulativePrices(address), arguments:['TMP_47'] 
has variable
clearing ir...?
price0Cumulative_1(uint256)= UNPACK TUPLE_3 index: 0 
has variable
[i] price0Cumulative cleared
clearing ir...?
price1Cumulative_1(uint256)= UNPACK TUPLE_3 index: 1 
has variable
[i] price1Cumulative cleared
clearing ir...?
currentMeasurement_1(uint256)= UNPACK TUPLE_3 index: 2 
has variable
[i] currentMeasurement cleared
typecheckig node...
TMP_47 = CONVERT pair_1 to address
Function name: _updateVaderPrice

Name: pair Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: TMP_47 Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_47

Name: TMP_47 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
TUPLE_3(uint256,uint256,uint32) = LIBRARY_CALL, dest:UniswapV2OracleLibrary, function:UniswapV2OracleLibrary.currentCumulativePrices(address), arguments:['TMP_47'] 
Function name: _updateVaderPrice
Library Call: currentCumulativePrices
hlc contract name: UniswapV2OracleLibrary func_name: currentCumulativePrices
('c', [-1], [-1], 'u', None)
TMP_47
('c', [-1], [-1], 'u', None)
TMP_47
('c', [-1], [-1], 'u', None)
TMP_47
wfc len: 3
COPIED
[i]Type for TUPLE_3

Name: TUPLE_3 Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
price0Cumulative_1(uint256)= UNPACK TUPLE_3 index: 0 
Function name: _updateVaderPrice
Reading tuple TUPLE_3 index 0
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for price0Cumulative

Name: price0Cumulative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
price1Cumulative_1(uint256)= UNPACK TUPLE_3 index: 1 
Function name: _updateVaderPrice
Reading tuple TUPLE_3 index 1
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for price1Cumulative

Name: price1Cumulative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
currentMeasurement_1(uint256)= UNPACK TUPLE_3 index: 2 
Function name: _updateVaderPrice
Reading tuple TUPLE_3 index 2
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for currentMeasurement

Name: currentMeasurement Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
CONDITION isFirst_1
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
clearning node...
clearing ir...?
nativeTokenPriceCumulative_2(uint256) := price0Cumulative_1(uint256)
has variable
[i] nativeTokenPriceCumulative cleared
typecheckig node...
nativeTokenPriceCumulative_2(uint256) := price0Cumulative_1(uint256)
Function name: _updateVaderPrice
asgn

Name: price0Cumulative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for nativeTokenPriceCumulative

Name: nativeTokenPriceCumulative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
nativeTokenPriceCumulative_3(uint256) := ϕ(['nativeTokenPriceCumulative_1', 'nativeTokenPriceCumulative_2'])
has variable
[i] nativeTokenPriceCumulative cleared
typecheckig node...
nativeTokenPriceCumulative_3(uint256) := ϕ(['nativeTokenPriceCumulative_1', 'nativeTokenPriceCumulative_2'])
Function name: _updateVaderPrice
Phi
[i]Type for nativeTokenPriceCumulative

Name: nativeTokenPriceCumulative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_31(FixedPoint.uq112x112) -> pairData_1 (-> []).nativeTokenPriceAverage
has variable
clearing ir...?
REF_33(uint256) -> pairData_1 (-> []).nativeTokenPriceCumulative
has variable
clearing ir...?
TMP_48(uint256) = nativeTokenPriceCumulative_3 - REF_33
has variable
[i] TMP_48 cleared
clearing ir...?
TMP_49(uint256) = TMP_48 / timeElapsed_1
has variable
[i] TMP_49 cleared
clearing ir...?
TMP_50 = CONVERT TMP_49 to uint224
has variable
[i] TMP_50 cleared
clearing ir...?
TMP_51 = new uq112x112(TMP_50)
clearing ir...?
pairData_2 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(['pairData_1 (-> [])'])
has variable
[i] pairData cleared
clearing ir...?
REF_31 (->pairData_2 (-> [])) := TMP_51(FixedPoint.uq112x112)
has variable
typecheckig node...
REF_31(FixedPoint.uq112x112) -> pairData_1 (-> []).nativeTokenPriceAverage
Function name: _updateVaderPrice
MEMBER
pairData
nativeTokenPriceAverage
_updateVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_31

Name: pairData.nativeTokenPriceAverage Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceAverage Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceAverage Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_33(uint256) -> pairData_1 (-> []).nativeTokenPriceCumulative
Function name: _updateVaderPrice
MEMBER
pairData
nativeTokenPriceCumulative
_updateVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_33

Name: pairData.nativeTokenPriceCumulative Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_48(uint256) = nativeTokenPriceCumulative_3 - REF_33
Function name: _updateVaderPrice
lnorm: u rnorm: -404
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: nativeTokenPriceCumulative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: TMP_48 Function: _updateVaderPrice
Num: 
Den: 
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_48

Name: TMP_48 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_49(uint256) = TMP_48 / timeElapsed_1
Function name: _updateVaderPrice
lnorm: -404 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_49 Function: _updateVaderPrice
Num: 
Den: 
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: TMP_48 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: TMP_49 Function: _updateVaderPrice
Num: 
Den: 
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_49

Name: TMP_49 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_50 = CONVERT TMP_49 to uint224
Function name: _updateVaderPrice

Name: TMP_49 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: TMP_50 Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_50

Name: TMP_50 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_51 = new uq112x112(TMP_50)
[i]Type for TMP_51

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_2 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(['pairData_1 (-> [])'])
Function name: _updateVaderPrice
Phi
[i]Type for pairData

Name: pairData Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_31 (->pairData_2 (-> [])) := TMP_51(FixedPoint.uq112x112)
Function name: _updateVaderPrice
asgn

Name: TMP_51 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_31 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_31

Name: REF_31 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: REF_31 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_31 (->pairData_2 (-> [])) := TMP_51(FixedPoint.uq112x112)
XXXXX
clearning node...
clearing ir...?
nativeTokenPriceCumulative_1(uint256) := price1Cumulative_1(uint256)
has variable
[i] nativeTokenPriceCumulative cleared
typecheckig node...
nativeTokenPriceCumulative_1(uint256) := price1Cumulative_1(uint256)
Function name: _updateVaderPrice
asgn

Name: price1Cumulative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for nativeTokenPriceCumulative

Name: nativeTokenPriceCumulative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_34(uint256) -> pairData_2 (-> []).nativeTokenPriceCumulative
has variable
clearing ir...?
pairData_3 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(['pairData_2 (-> [])'])
has variable
[i] pairData cleared
clearing ir...?
REF_34 (->pairData_3 (-> [])) := nativeTokenPriceCumulative_3(uint256)
has variable
typecheckig node...
REF_34(uint256) -> pairData_2 (-> []).nativeTokenPriceCumulative
Function name: _updateVaderPrice
MEMBER
pairData
nativeTokenPriceCumulative
_updateVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_34

Name: pairData.nativeTokenPriceCumulative Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_3 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(['pairData_2 (-> [])'])
Function name: _updateVaderPrice
Phi
[i]Type for pairData

Name: pairData Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_34 (->pairData_3 (-> [])) := nativeTokenPriceCumulative_3(uint256)
Function name: _updateVaderPrice
asgn

Name: nativeTokenPriceCumulative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_34 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_34

Name: REF_34 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: REF_34 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_35(uint256) -> pairData_3 (-> []).lastMeasurement
has variable
clearing ir...?
pairData_4 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(['pairData_3 (-> [])'])
has variable
[i] pairData cleared
clearing ir...?
REF_35 (->pairData_4 (-> [])) := currentMeasurement_1(uint256)
has variable
typecheckig node...
REF_35(uint256) -> pairData_3 (-> []).lastMeasurement
Function name: _updateVaderPrice
MEMBER
pairData
lastMeasurement
_updateVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_35

Name: pairData.lastMeasurement Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_4 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(['pairData_3 (-> [])'])
Function name: _updateVaderPrice
Phi
[i]Type for pairData

Name: pairData Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_35 (->pairData_4 (-> [])) := currentMeasurement_1(uint256)
Function name: _updateVaderPrice
asgn

Name: currentMeasurement Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_35 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_35

Name: REF_35 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_35 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_36(ILiquidityBasedTWAP.Paths) -> Paths.VADER
has variable
clearing ir...?
TMP_52 = CONVERT REF_36 to uint256
has variable
[i] TMP_52 cleared
clearing ir...?
REF_37(uint256) -> previousPrices_3[TMP_52]
has variable
clearing ir...?
TMP_53(uint256) = reserveNative_3 (c)* REF_37
has variable
[i] TMP_53 cleared
clearing ir...?
REF_38(address) -> pairData_4 (-> []).foreignAsset
has variable
clearing ir...?
TMP_54(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(REF_38)
has variable
[i] TMP_54 cleared
clearing ir...?
TMP_55(uint256) = reserveForeign_3 (c)* TMP_54
has variable
[i] TMP_55 cleared
clearing ir...?
TMP_56(uint256) = TMP_53 (c)+ TMP_55
has variable
[i] TMP_56 cleared
clearing ir...?
currentLiquidityEvaluation_1(uint256) := TMP_56(uint256)
has variable
[i] currentLiquidityEvaluation cleared
typecheckig node...
REF_36(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: _updateVaderPrice
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_36

Name: Paths.VADER Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_52 = CONVERT REF_36 to uint256
Function name: _updateVaderPrice

Name: Paths.VADER Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_52 Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_52

Name: TMP_52 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_37(uint256) -> previousPrices_3[TMP_52]
Function name: _updateVaderPrice
INDEX

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_37

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_53(uint256) = reserveNative_3 (c)* REF_37
Function name: _updateVaderPrice
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_53 Function: _updateVaderPrice
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_53

Name: TMP_53 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_38(address) -> pairData_4 (-> []).foreignAsset
Function name: _updateVaderPrice
MEMBER
pairData
foreignAsset
_updateVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
[i]Type for REF_38

Name: pairData.foreignAsset Function: _updateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: pairData.foreignAsset Function: _updateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
done.
TMP_54(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(REF_38)
Function name: _updateVaderPrice
Internal call...
getChainlinkPrice
REF_38
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
0

Name: PIC_2 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_54 Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_54

Name: TMP_54 Function: _updateVaderPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_55(uint256) = reserveForeign_3 (c)* TMP_54
Function name: _updateVaderPrice
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_54 Function: _updateVaderPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_55 Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_55

Name: TMP_55 Function: _updateVaderPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_56(uint256) = TMP_53 (c)+ TMP_55
Function name: _updateVaderPrice

Name: TMP_56 Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
Error with TMP_56 in function _updateVaderPrice
Error with: TMP_56 in function _updateVaderPrice
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f5145e0>]
[i]Type for TMP_56

Name: TMP_56 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
currentLiquidityEvaluation_1(uint256) := TMP_56(uint256)
Function name: _updateVaderPrice
asgn

Name: TMP_56 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidityEvaluation Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidityEvaluation

Name: currentLiquidityEvaluation Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_updateVaderPrice":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
pair_1(IUniswapV2Pair) := ϕ(['pair_1'])
Function name: _updateVaderPrice
Phi
[i]Type for pair

Name: pair Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
pairData_1 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: _updateVaderPrice
Phi
[i]Type for pairData

Name: pairData Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
timeElapsed_1(uint256) := ϕ(['timeElapsed_1'])
Function name: _updateVaderPrice
Phi
[i]Type for timeElapsed

Name: timeElapsed Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vader_2(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_0'])
Function name: _updateVaderPrice
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
previousPrices_1(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _updateVaderPrice
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_45(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _updateVaderPrice
High Call: token0
func name:token0
other func name:token0
TMP_45
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_45

Name: TMP_45 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_3(address) := ϕ(['vader_2', 'vader_8', 'vader_10', 'vader_3', 'vader_1'])
Function name: _updateVaderPrice
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
previousPrices_2(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_1', 'previousPrices_4'])
Function name: _updateVaderPrice
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_46(bool) = TMP_45 == vader_3
Function name: _updateVaderPrice
[i]Type for TMP_46

Name: TMP_46 Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
isFirst_1(bool) := TMP_46(bool)
Function name: _updateVaderPrice
asgn

Name: TMP_46 Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: isFirst Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for isFirst

Name: isFirst Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
isFirst_1(bool) := TMP_46(bool)
XXXXX
typecheckig node...
typecheckig node...
typecheckig node...
TUPLE_2(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:getReserves, arguments:[]  
Function name: _updateVaderPrice
High Call: getReserves
func name:getReserves
other func name:getReserves
TUPLE_2
hlc contract name: VADERPAIR func_name: getReserves
('c', [-1], [-1], 'u', None)
('c', [-1], [-1], 'u', None)
('c', [-1], [-1], 'u', None)
wfc len: 3
COPIED
[i]Type for TUPLE_2

Name: TUPLE_2 Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_3(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_2'])
Function name: _updateVaderPrice
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserve0_1(uint256)= UNPACK TUPLE_2 index: 0 
Function name: _updateVaderPrice
Reading tuple TUPLE_2 index 0
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserve0

Name: reserve0 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserve1_1(uint256)= UNPACK TUPLE_2 index: 1 
Function name: _updateVaderPrice
Reading tuple TUPLE_2 index 1
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserve1

Name: reserve1 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
typecheckig node...
reserveNative_2(uint256) := reserve0_1(uint256)
Function name: _updateVaderPrice
asgn

Name: reserve0 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveNative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveNative

Name: reserveNative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_2(uint256) := reserve1_1(uint256)
Function name: _updateVaderPrice
asgn

Name: reserve1 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveForeign Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveForeign

Name: reserveForeign Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
reserveNative_1(uint256) := reserve1_1(uint256)
Function name: _updateVaderPrice
asgn

Name: reserve1 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveNative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveNative

Name: reserveNative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_1(uint256) := reserve0_1(uint256)
Function name: _updateVaderPrice
asgn

Name: reserve0 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveForeign Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveForeign

Name: reserveForeign Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
reserveNative_3(uint256) := ϕ(['reserveNative_1', 'reserveNative_2'])
Function name: _updateVaderPrice
Phi
[i]Type for reserveNative

Name: reserveNative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_3(uint256) := ϕ(['reserveForeign_1', 'reserveForeign_2'])
Function name: _updateVaderPrice
Phi
[i]Type for reserveForeign

Name: reserveForeign Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
typecheckig node...
TMP_47 = CONVERT pair_1 to address
Function name: _updateVaderPrice

Name: pair Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: TMP_47 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_47

Name: TMP_47 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
TUPLE_3(uint256,uint256,uint32) = LIBRARY_CALL, dest:UniswapV2OracleLibrary, function:UniswapV2OracleLibrary.currentCumulativePrices(address), arguments:['TMP_47'] 
Function name: _updateVaderPrice
Library Call: currentCumulativePrices
hlc contract name: UniswapV2OracleLibrary func_name: currentCumulativePrices
('c', [-1], [-1], 'u', None)
TMP_47
('c', [-1], [-1], 'u', None)
TMP_47
('c', [-1], [-1], 'u', None)
TMP_47
wfc len: 3
COPIED
[i]Type for TUPLE_3

Name: TUPLE_3 Function: _updateVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
price0Cumulative_1(uint256)= UNPACK TUPLE_3 index: 0 
Function name: _updateVaderPrice
Reading tuple TUPLE_3 index 0
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for price0Cumulative

Name: price0Cumulative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
price1Cumulative_1(uint256)= UNPACK TUPLE_3 index: 1 
Function name: _updateVaderPrice
Reading tuple TUPLE_3 index 1
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for price1Cumulative

Name: price1Cumulative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
currentMeasurement_1(uint256)= UNPACK TUPLE_3 index: 2 
Function name: _updateVaderPrice
Reading tuple TUPLE_3 index 2
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for currentMeasurement

Name: currentMeasurement Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
typecheckig node...
nativeTokenPriceCumulative_2(uint256) := price0Cumulative_1(uint256)
Function name: _updateVaderPrice
asgn

Name: price0Cumulative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for nativeTokenPriceCumulative

Name: nativeTokenPriceCumulative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
nativeTokenPriceCumulative_3(uint256) := ϕ(['nativeTokenPriceCumulative_1', 'nativeTokenPriceCumulative_2'])
Function name: _updateVaderPrice
Phi
[i]Type for nativeTokenPriceCumulative

Name: nativeTokenPriceCumulative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_31(FixedPoint.uq112x112) -> pairData_1 (-> []).nativeTokenPriceAverage
Function name: _updateVaderPrice
MEMBER
[W] Initializing defined variable to constant
pairData
nativeTokenPriceAverage
_updateVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_31

Name: pairData.nativeTokenPriceAverage Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceAverage Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
REF_33(uint256) -> pairData_1 (-> []).nativeTokenPriceCumulative
Function name: _updateVaderPrice
MEMBER
pairData
nativeTokenPriceCumulative
_updateVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_33

Name: pairData.nativeTokenPriceCumulative Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_48(uint256) = nativeTokenPriceCumulative_3 - REF_33
Function name: _updateVaderPrice
lnorm: u rnorm: -404
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: nativeTokenPriceCumulative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: TMP_48 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_48

Name: TMP_48 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_49(uint256) = TMP_48 / timeElapsed_1
Function name: _updateVaderPrice
lnorm: -404 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_49 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: TMP_48 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: TMP_49 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_49

Name: TMP_49 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_50 = CONVERT TMP_49 to uint224
Function name: _updateVaderPrice

Name: TMP_49 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: TMP_50 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_50

Name: TMP_50 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_51 = new uq112x112(TMP_50)
[i]Type for TMP_51

Name: TMP_51 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_2 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(['pairData_1 (-> [])'])
Function name: _updateVaderPrice
Phi
[i]Type for pairData

Name: pairData Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_31 (->pairData_2 (-> [])) := TMP_51(FixedPoint.uq112x112)
Function name: _updateVaderPrice
asgn

Name: TMP_51 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_31 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_31

Name: REF_31 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: REF_31 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_31 (->pairData_2 (-> [])) := TMP_51(FixedPoint.uq112x112)
XXXXX
typecheckig node...
nativeTokenPriceCumulative_1(uint256) := price1Cumulative_1(uint256)
Function name: _updateVaderPrice
asgn

Name: price1Cumulative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for nativeTokenPriceCumulative

Name: nativeTokenPriceCumulative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_34(uint256) -> pairData_2 (-> []).nativeTokenPriceCumulative
Function name: _updateVaderPrice
MEMBER
[W] Initializing defined variable to constant
pairData
nativeTokenPriceCumulative
_updateVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_34

Name: pairData.nativeTokenPriceCumulative Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
pairData_3 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(['pairData_2 (-> [])'])
Function name: _updateVaderPrice
Phi
[i]Type for pairData

Name: pairData Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_34 (->pairData_3 (-> [])) := nativeTokenPriceCumulative_3(uint256)
Function name: _updateVaderPrice
asgn

Name: nativeTokenPriceCumulative Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_34 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_34

Name: REF_34 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: REF_34 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_35(uint256) -> pairData_3 (-> []).lastMeasurement
Function name: _updateVaderPrice
MEMBER
pairData
lastMeasurement
_updateVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_35

Name: pairData.lastMeasurement Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_4 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(['pairData_3 (-> [])'])
Function name: _updateVaderPrice
Phi
[i]Type for pairData

Name: pairData Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_35 (->pairData_4 (-> [])) := currentMeasurement_1(uint256)
Function name: _updateVaderPrice
asgn

Name: currentMeasurement Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_35 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_35

Name: REF_35 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_35 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_36(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: _updateVaderPrice
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_36

Name: Paths.VADER Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_52 = CONVERT REF_36 to uint256
Function name: _updateVaderPrice

Name: Paths.VADER Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_52 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_52

Name: TMP_52 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_37(uint256) -> previousPrices_3[TMP_52]
Function name: _updateVaderPrice
INDEX

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_37

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_53(uint256) = reserveNative_3 (c)* REF_37
Function name: _updateVaderPrice
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_53 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_53

Name: TMP_53 Function: _updateVaderPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_38(address) -> pairData_4 (-> []).foreignAsset
Function name: _updateVaderPrice
MEMBER
pairData
foreignAsset
_updateVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
[i]Type for REF_38

Name: pairData.foreignAsset Function: _updateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: pairData.foreignAsset Function: _updateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
done.
TMP_54(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(REF_38)
Function name: _updateVaderPrice
Internal call...
getChainlinkPrice
REF_38
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
0

Name: PIC_2 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_54 Function: _updateVaderPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_54

Name: TMP_54 Function: _updateVaderPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_55(uint256) = reserveForeign_3 (c)* TMP_54
Function name: _updateVaderPrice
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_54 Function: _updateVaderPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_55 Function: _updateVaderPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_55

Name: TMP_55 Function: _updateVaderPrice
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_56(uint256) = TMP_53 (c)+ TMP_55
Function name: _updateVaderPrice

Name: TMP_56 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_56

Name: TMP_56 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
currentLiquidityEvaluation_1(uint256) := TMP_56(uint256)
Function name: _updateVaderPrice
asgn

Name: TMP_56 Function: _updateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidityEvaluation Function: _updateVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidityEvaluation

Name: currentLiquidityEvaluation Function: _updateVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "_updateVaderPrice":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: _updateVaderPrice

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_43

Name: TMP_43 Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_43(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._updateVaderPrice(IUniswapV2Pair,ILiquidityBasedTWAP.ExchangePair,uint256)(pair_1,pairData_1 (-> ['twapData']),timeElapsed_1)
XXXXX
currentLiquidityEvaluation_1(uint256) := TMP_43(uint256)
Function name: syncVaderPrice
asgn

Name: TMP_43 Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidityEvaluation Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidityEvaluation

Name: currentLiquidityEvaluation Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
currentLiquidityEvaluation_1(uint256) := TMP_43(uint256)
XXXXX
clearning node...
clearing ir...?
REF_24(uint256) -> pastLiquidityWeights_1[i_1]
has variable
clearing ir...?
pastLiquidityWeights_2(uint256[]) := ϕ(['pastLiquidityWeights_1'])
has variable
[i] pastLiquidityWeights cleared
clearing ir...?
REF_24 (->pastLiquidityWeights_2) := pastLiquidityEvaluation_1(uint256)
has variable
typecheckig node...
REF_24(uint256) -> pastLiquidityWeights_1[i_1]
Function name: syncVaderPrice
INDEX

Name: pastLiquidityWeights Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: syncVaderPrice
pastLiquidityWeights
[i]Type for REF_24

Name: pastLiquidityWeights Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_24(uint256) -> pastLiquidityWeights_1[i_1]
XXXXX
pastLiquidityWeights_2(uint256[]) := ϕ(['pastLiquidityWeights_1'])
Function name: syncVaderPrice
Phi
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_24 (->pastLiquidityWeights_2) := pastLiquidityEvaluation_1(uint256)
Function name: syncVaderPrice
asgn

Name: pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_24 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_24

Name: REF_24 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_25(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
has variable
clearing ir...?
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_25 (->pairData_2 (-> ['twapData'])) := currentLiquidityEvaluation_1(uint256)
has variable
clearing ir...?
twapData_5(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
has variable
typecheckig node...
REF_25(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
Function name: syncVaderPrice
MEMBER
pairData
pastLiquidityEvaluation
syncVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_25

Name: pairData.pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: syncVaderPrice
Phi
[i]Type for pairData

Name: pairData Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_25 (->pairData_2 (-> ['twapData'])) := currentLiquidityEvaluation_1(uint256)
Function name: syncVaderPrice
asgn

Name: currentLiquidityEvaluation Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_25 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_25

Name: REF_25 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_25 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_25 (->pairData_2 (-> ['twapData'])) := currentLiquidityEvaluation_1(uint256)
XXXXX
twapData_5(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: syncVaderPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
_totalLiquidityWeight_2(uint256) = _totalLiquidityWeight_1 (c)+ currentLiquidityEvaluation_1
has variable
[i] _totalLiquidityWeight cleared
typecheckig node...
_totalLiquidityWeight_2(uint256) = _totalLiquidityWeight_1 (c)+ currentLiquidityEvaluation_1
Function name: syncVaderPrice

Name: _totalLiquidityWeight Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: currentLiquidityEvaluation Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _totalLiquidityWeight Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for _totalLiquidityWeight

Name: _totalLiquidityWeight Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_totalLiquidityWeight_2(uint256) = _totalLiquidityWeight_1 (c)+ currentLiquidityEvaluation_1
XXXXX
clearning node...
clearing ir...?
i_2(uint256) = i_1 (c)+ 1
has variable
[i] i cleared
typecheckig node...
i_2(uint256) = i_1 (c)+ 1
Function name: syncVaderPrice
val: 1

Name: i Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: syncVaderPrice
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
i_2(uint256) = i_1 (c)+ 1
XXXXX
WORKLIST iteration 0 for function call "syncVaderPrice":
 New undefined nodes- 9
 Old undefined nodes- 0
typecheckig node...
vaderPairs_2(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: syncVaderPrice
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_3(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: syncVaderPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_3(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: syncVaderPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
REF_16 -> LENGTH vaderPairs_2
[i]Type for REF_16

Name: REF_16 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalPairs_1(uint256) := REF_16(uint256)
Function name: syncVaderPrice
asgn

Name: REF_16 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalPairs Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalPairs

Name: totalPairs Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalPairs_1(uint256) := REF_16(uint256)
XXXXX
typecheckig node...
TMP_37 = new uint256[](totalPairs_1)
[i]Type for TMP_37

Name: TMP_37 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_1(uint256[]) := TMP_37(uint256)
Function name: syncVaderPrice
asgn

Name: TMP_37 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityWeights Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pastLiquidityWeights_1(uint256[]) := TMP_37(uint256)
XXXXX
typecheckig node...
REF_17(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: syncVaderPrice
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_17

Name: Paths.VADER Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_38 = CONVERT REF_17 to uint256
Function name: syncVaderPrice

Name: Paths.VADER Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_38 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_38

Name: TMP_38 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_18(uint256) -> totalLiquidityWeight_3[TMP_38]
Function name: syncVaderPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_18

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pastTotalLiquidityWeight_1(uint256) := REF_18(uint256)
Function name: syncVaderPrice
asgn

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: pastTotalLiquidityWeight Function: syncVaderPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastTotalLiquidityWeight

Name: pastTotalLiquidityWeight Function: syncVaderPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
_totalLiquidityWeight_1(uint256) := ϕ(['_totalLiquidityWeight_2', '_totalLiquidityWeight_0'])
Function name: syncVaderPrice
Phi
[i]Type for _totalLiquidityWeight

Name: _totalLiquidityWeight Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
i_1(uint256) := ϕ(['i_0', 'i_2'])
Function name: syncVaderPrice
Phi
[i]Type for i

Name: i Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_39(bool) = i_1 < totalPairs_1
Function name: syncVaderPrice
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: i Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_39 Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_39

Name: TMP_39 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_39(bool) = i_1 < totalPairs_1
XXXXX
CONDITION TMP_39
Condition...
Conidtion: 
TMP_39
TMP_39
typecheckig node...
typecheckig node...
REF_19(IUniswapV2Pair) -> vaderPairs_2[i_1]
Function name: syncVaderPrice
INDEX

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_19

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
pair_1(IUniswapV2Pair) := REF_19(IUniswapV2Pair)
Function name: syncVaderPrice
asgn

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: pair Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pair

Name: pair Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_26(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: syncVaderPrice
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_26

Name: Paths.VADER Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_44 = CONVERT REF_26 to uint256
Function name: syncVaderPrice

Name: Paths.VADER Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_44 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_44

Name: TMP_44 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_27(uint256) -> totalLiquidityWeight_3[TMP_44]
Function name: syncVaderPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_27

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_4(uint256[2]) := ϕ(['totalLiquidityWeight_3'])
Function name: syncVaderPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_27 (->totalLiquidityWeight_4) := _totalLiquidityWeight_1(uint256)
Function name: syncVaderPrice
asgn

Name: _totalLiquidityWeight Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_27 Function: syncVaderPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_27

Name: REF_27 Function: syncVaderPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_27 (->totalLiquidityWeight_4) := _totalLiquidityWeight_1(uint256)
XXXXX
typecheckig node...
TMP_40 = CONVERT pair_1 to address
Function name: syncVaderPrice

Name: pair Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: TMP_40 Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_40

Name: TMP_40 Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_20(ILiquidityBasedTWAP.ExchangePair) -> twapData_3[TMP_40]
Function name: syncVaderPrice
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_20

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_20(ILiquidityBasedTWAP.ExchangePair)
Function name: syncVaderPrice
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_21(uint256) -> pairData_1 (-> ['twapData']).lastMeasurement
Function name: syncVaderPrice
MEMBER
pairData
lastMeasurement
syncVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_21

Name: pairData.lastMeasurement Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_41(uint256) = block.timestamp (c)- REF_21
Function name: syncVaderPrice
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_22 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_41 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_41

Name: TMP_41 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
timeElapsed_1(uint256) := TMP_41(uint256)
Function name: syncVaderPrice
asgn

Name: TMP_41 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: timeElapsed Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for timeElapsed

Name: timeElapsed Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_22(uint256) -> pairData_1 (-> ['twapData']).updatePeriod
Function name: syncVaderPrice
MEMBER
pairData
updatePeriod
syncVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_22

Name: pairData.updatePeriod Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_42(bool) = timeElapsed_1 < REF_22
Function name: syncVaderPrice
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_42

Name: TMP_42 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_42
Condition...
Conidtion: 
TMP_42
TMP_42
typecheckig node...
typecheckig node...
typecheckig node...
REF_23(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
Function name: syncVaderPrice
MEMBER
pairData
pastLiquidityEvaluation
syncVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_23

Name: pairData.pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityEvaluation_1(uint256) := REF_23(uint256)
Function name: syncVaderPrice
asgn

Name: pairData.pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityEvaluation

Name: pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_43(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._updateVaderPrice(IUniswapV2Pair,ILiquidityBasedTWAP.ExchangePair,uint256)(pair_1,pairData_1 (-> ['twapData']),timeElapsed_1)
Function name: syncVaderPrice
Internal call...
_updateVaderPrice
pair
pairData
timeElapsed
Function: _updateVaderPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADERPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADERPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'VADERPAIR', [], -1]
cur_param: [[-1], [-1], 0, 'EXCHANGEPAIR', [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADERPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'VADERPAIR', [], -1]
[[-1], [-1], 0, 'EXCHANGEPAIR', [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>], -1]
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_21 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_43 Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_43

Name: TMP_43 Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
currentLiquidityEvaluation_1(uint256) := TMP_43(uint256)
Function name: syncVaderPrice
asgn

Name: TMP_43 Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidityEvaluation Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidityEvaluation

Name: currentLiquidityEvaluation Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
currentLiquidityEvaluation_1(uint256) := TMP_43(uint256)
XXXXX
typecheckig node...
REF_24(uint256) -> pastLiquidityWeights_1[i_1]
Function name: syncVaderPrice
INDEX

Name: pastLiquidityWeights Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: syncVaderPrice
pastLiquidityWeights
[i]Type for REF_24

Name: pastLiquidityWeights Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_24(uint256) -> pastLiquidityWeights_1[i_1]
XXXXX
pastLiquidityWeights_2(uint256[]) := ϕ(['pastLiquidityWeights_1'])
Function name: syncVaderPrice
Phi
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_24 (->pastLiquidityWeights_2) := pastLiquidityEvaluation_1(uint256)
Function name: syncVaderPrice
asgn

Name: pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_24 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_24

Name: REF_24 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_25(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
Function name: syncVaderPrice
MEMBER
pairData
pastLiquidityEvaluation
syncVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_25

Name: pairData.pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: syncVaderPrice
Phi
[i]Type for pairData

Name: pairData Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_25 (->pairData_2 (-> ['twapData'])) := currentLiquidityEvaluation_1(uint256)
Function name: syncVaderPrice
asgn

Name: currentLiquidityEvaluation Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_25 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_25

Name: REF_25 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_25 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_25 (->pairData_2 (-> ['twapData'])) := currentLiquidityEvaluation_1(uint256)
XXXXX
twapData_5(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: syncVaderPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
_totalLiquidityWeight_2(uint256) = _totalLiquidityWeight_1 (c)+ currentLiquidityEvaluation_1
Function name: syncVaderPrice

Name: _totalLiquidityWeight Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: currentLiquidityEvaluation Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _totalLiquidityWeight Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for _totalLiquidityWeight

Name: _totalLiquidityWeight Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_totalLiquidityWeight_2(uint256) = _totalLiquidityWeight_1 (c)+ currentLiquidityEvaluation_1
XXXXX
typecheckig node...
i_2(uint256) = i_1 (c)+ 1
Function name: syncVaderPrice
val: 1

Name: i Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "syncVaderPrice":
 New undefined nodes- 8
 Old undefined nodes- 9
typecheckig node...
vaderPairs_2(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: syncVaderPrice
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_3(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: syncVaderPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_3(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: syncVaderPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
REF_16 -> LENGTH vaderPairs_2
[i]Type for REF_16

Name: REF_16 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalPairs_1(uint256) := REF_16(uint256)
Function name: syncVaderPrice
asgn

Name: REF_16 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalPairs Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalPairs

Name: totalPairs Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalPairs_1(uint256) := REF_16(uint256)
XXXXX
typecheckig node...
TMP_37 = new uint256[](totalPairs_1)
[i]Type for TMP_37

Name: TMP_37 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_1(uint256[]) := TMP_37(uint256)
Function name: syncVaderPrice
asgn

Name: TMP_37 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityWeights Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pastLiquidityWeights_1(uint256[]) := TMP_37(uint256)
XXXXX
typecheckig node...
REF_17(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: syncVaderPrice
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_17

Name: Paths.VADER Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_38 = CONVERT REF_17 to uint256
Function name: syncVaderPrice

Name: Paths.VADER Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_38 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_38

Name: TMP_38 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_18(uint256) -> totalLiquidityWeight_3[TMP_38]
Function name: syncVaderPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_18

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pastTotalLiquidityWeight_1(uint256) := REF_18(uint256)
Function name: syncVaderPrice
asgn

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: pastTotalLiquidityWeight Function: syncVaderPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastTotalLiquidityWeight

Name: pastTotalLiquidityWeight Function: syncVaderPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
_totalLiquidityWeight_1(uint256) := ϕ(['_totalLiquidityWeight_2', '_totalLiquidityWeight_0'])
Function name: syncVaderPrice
Phi
[i]Type for _totalLiquidityWeight

Name: _totalLiquidityWeight Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
i_1(uint256) := ϕ(['i_0', 'i_2'])
Function name: syncVaderPrice
Phi
[i]Type for i

Name: i Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_39(bool) = i_1 < totalPairs_1
Function name: syncVaderPrice
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: i Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_39 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_39

Name: TMP_39 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_39(bool) = i_1 < totalPairs_1
XXXXX
CONDITION TMP_39
Condition...
Conidtion: 
TMP_39
TMP_39
typecheckig node...
typecheckig node...
REF_19(IUniswapV2Pair) -> vaderPairs_2[i_1]
Function name: syncVaderPrice
INDEX

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_19

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
pair_1(IUniswapV2Pair) := REF_19(IUniswapV2Pair)
Function name: syncVaderPrice
asgn

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: pair Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pair

Name: pair Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_26(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: syncVaderPrice
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_26

Name: Paths.VADER Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_44 = CONVERT REF_26 to uint256
Function name: syncVaderPrice

Name: Paths.VADER Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_44 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_44

Name: TMP_44 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_27(uint256) -> totalLiquidityWeight_3[TMP_44]
Function name: syncVaderPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_27

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_4(uint256[2]) := ϕ(['totalLiquidityWeight_3'])
Function name: syncVaderPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_27 (->totalLiquidityWeight_4) := _totalLiquidityWeight_1(uint256)
Function name: syncVaderPrice
asgn

Name: _totalLiquidityWeight Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_27 Function: syncVaderPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_27

Name: REF_27 Function: syncVaderPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_27 (->totalLiquidityWeight_4) := _totalLiquidityWeight_1(uint256)
XXXXX
typecheckig node...
TMP_40 = CONVERT pair_1 to address
Function name: syncVaderPrice

Name: pair Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: TMP_40 Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_40

Name: TMP_40 Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_20(ILiquidityBasedTWAP.ExchangePair) -> twapData_3[TMP_40]
Function name: syncVaderPrice
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_20

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_20(ILiquidityBasedTWAP.ExchangePair)
Function name: syncVaderPrice
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_21(uint256) -> pairData_1 (-> ['twapData']).lastMeasurement
Function name: syncVaderPrice
MEMBER
pairData
lastMeasurement
syncVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_21

Name: pairData.lastMeasurement Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_41(uint256) = block.timestamp (c)- REF_21
Function name: syncVaderPrice
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_23 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_41 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_41

Name: TMP_41 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
timeElapsed_1(uint256) := TMP_41(uint256)
Function name: syncVaderPrice
asgn

Name: TMP_41 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: timeElapsed Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for timeElapsed

Name: timeElapsed Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_22(uint256) -> pairData_1 (-> ['twapData']).updatePeriod
Function name: syncVaderPrice
MEMBER
pairData
updatePeriod
syncVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_22

Name: pairData.updatePeriod Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_42(bool) = timeElapsed_1 < REF_22
Function name: syncVaderPrice
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_42

Name: TMP_42 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_42
Condition...
Conidtion: 
TMP_42
TMP_42
typecheckig node...
typecheckig node...
typecheckig node...
REF_23(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
Function name: syncVaderPrice
MEMBER
pairData
pastLiquidityEvaluation
syncVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_23

Name: pairData.pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityEvaluation_1(uint256) := REF_23(uint256)
Function name: syncVaderPrice
asgn

Name: pairData.pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityEvaluation

Name: pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_43(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._updateVaderPrice(IUniswapV2Pair,ILiquidityBasedTWAP.ExchangePair,uint256)(pair_1,pairData_1 (-> ['twapData']),timeElapsed_1)
Function name: syncVaderPrice
Internal call...
_updateVaderPrice
pair
pairData
timeElapsed
Function: _updateVaderPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADERPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADERPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'VADERPAIR', [], -1]
cur_param: [[-1], [-1], 0, 'EXCHANGEPAIR', [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADERPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'VADERPAIR', [], -1]
[[-1], [-1], 0, 'EXCHANGEPAIR', [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>], -1]
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_21 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_43 Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_43

Name: TMP_43 Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
currentLiquidityEvaluation_1(uint256) := TMP_43(uint256)
Function name: syncVaderPrice
asgn

Name: TMP_43 Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidityEvaluation Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidityEvaluation

Name: currentLiquidityEvaluation Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
currentLiquidityEvaluation_1(uint256) := TMP_43(uint256)
XXXXX
typecheckig node...
REF_24(uint256) -> pastLiquidityWeights_1[i_1]
Function name: syncVaderPrice
INDEX

Name: pastLiquidityWeights Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: syncVaderPrice
pastLiquidityWeights
[i]Type for REF_24

Name: pastLiquidityWeights Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_24(uint256) -> pastLiquidityWeights_1[i_1]
XXXXX
pastLiquidityWeights_2(uint256[]) := ϕ(['pastLiquidityWeights_1'])
Function name: syncVaderPrice
Phi
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_24 (->pastLiquidityWeights_2) := pastLiquidityEvaluation_1(uint256)
Function name: syncVaderPrice
asgn

Name: pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_24 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_24

Name: REF_24 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_25(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
Function name: syncVaderPrice
MEMBER
pairData
pastLiquidityEvaluation
syncVaderPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_25

Name: pairData.pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: syncVaderPrice
Phi
[i]Type for pairData

Name: pairData Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_25 (->pairData_2 (-> ['twapData'])) := currentLiquidityEvaluation_1(uint256)
Function name: syncVaderPrice
asgn

Name: currentLiquidityEvaluation Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_25 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_25

Name: REF_25 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_25 Function: syncVaderPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_25 (->pairData_2 (-> ['twapData'])) := currentLiquidityEvaluation_1(uint256)
XXXXX
twapData_5(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: syncVaderPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
_totalLiquidityWeight_2(uint256) = _totalLiquidityWeight_1 (c)+ currentLiquidityEvaluation_1
Function name: syncVaderPrice

Name: _totalLiquidityWeight Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: currentLiquidityEvaluation Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _totalLiquidityWeight Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for _totalLiquidityWeight

Name: _totalLiquidityWeight Function: syncVaderPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_totalLiquidityWeight_2(uint256) = _totalLiquidityWeight_1 (c)+ currentLiquidityEvaluation_1
XXXXX
typecheckig node...
i_2(uint256) = i_1 (c)+ 1
Function name: syncVaderPrice
val: 1

Name: i Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: syncVaderPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 2 for function call "syncVaderPrice":
 New undefined nodes- 8
 Old undefined nodes- 8
Saving return values for: syncVaderPrice

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
State_var: oracles
Finding type for oracles...
mapping(address => IAggregatorV3)
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: mapping(address => IAggregatorV3)
mapping(address => IAggregatorV3)
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: previousPrices
Finding type for previousPrices...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPool
Finding type for vaderPool...
IVaderPoolV2
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPOOL')
----
Type: IVaderPoolV2
IVaderPoolV2
Final Type: IVaderPoolV2
 NO FIELDS

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxUpdateWindow
Finding type for maxUpdateWindow...
uint256
Check copy_toekn_tuple
(-1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalLiquidityWeight
Finding type for totalLiquidityWeight...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: twapData
Finding type for twapData...
mapping(address => ILiquidityBasedTWAP.ExchangePair)
Check copy_toekn_tuple
(-1, -1, 0, 'EXCHANGEPAIR')
----
Type: mapping(address => ILiquidityBasedTWAP.ExchangePair)
mapping(address => ILiquidityBasedTWAP.ExchangePair)
ILiquidityBasedTWAP.ExchangePair
Final Type: ILiquidityBasedTWAP.ExchangePair
global
twapData
nativeTokenPriceCumulative
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
nativeTokenPriceAverage
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
nativeTokenPriceAverage
_x
FIELDS:
nativeTokenPriceAverage Fields:
^^^
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
twapData.nativeTokenPriceAverage
_x
FIELDS:
twapData.nativeTokenPriceAverage Fields:
^^^
global
twapData
lastMeasurement
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
updatePeriod
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
pastLiquidityEvaluation
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
foreignAsset
Check copy_toekn_tuple
([-1], [-1], [0], 'FOREIGNASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
twapData
foreignUnit
Check copy_toekn_tuple
([-1], [-1], [-404], None)
----
Type: uint96
uint96
Final Type: uint96
Type: uint96
uint96
Final Type: uint96
FIELDS:
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
[*]Type fetched successfully
State_var: vader
Finding type for vader...
address
Check copy_toekn_tuple
(2, -1, 0, 'VADER')
----
Type: address
address
Final Type: address

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPairs
Finding type for vaderPairs...
IUniswapV2Pair[]
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPAIR')
----
Type: IUniswapV2Pair[]
IUniswapV2Pair[]
IUniswapV2Pair
Final Type: IUniswapV2Pair
 NO FIELDS

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 0, 'OWNER')
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: usdvPairs
Finding type for usdvPairs...
IERC20[]
Check copy_toekn_tuple
(-1, -1, 0, 'USDVPAIR')
----
Type: IERC20[]
IERC20[]
IERC20
Final Type: IERC20
 NO FIELDS

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _updateVaderPrice
Function _updateVaderPrice not marked
Mark Iterations TRUE, proceeding anyway
Function name: _updateVaderPrice
Function Visibility (test): internal
State_var: oracles
Finding type for oracles...
mapping(address => IAggregatorV3)
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: mapping(address => IAggregatorV3)
mapping(address => IAggregatorV3)
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: previousPrices
Finding type for previousPrices...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPool
Finding type for vaderPool...
IVaderPoolV2
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPOOL')
----
Type: IVaderPoolV2
IVaderPoolV2
Final Type: IVaderPoolV2
 NO FIELDS

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxUpdateWindow
Finding type for maxUpdateWindow...
uint256
Check copy_toekn_tuple
(-1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalLiquidityWeight
Finding type for totalLiquidityWeight...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: twapData
Finding type for twapData...
mapping(address => ILiquidityBasedTWAP.ExchangePair)
Check copy_toekn_tuple
(-1, -1, 0, 'EXCHANGEPAIR')
----
Type: mapping(address => ILiquidityBasedTWAP.ExchangePair)
mapping(address => ILiquidityBasedTWAP.ExchangePair)
ILiquidityBasedTWAP.ExchangePair
Final Type: ILiquidityBasedTWAP.ExchangePair
global
twapData
nativeTokenPriceCumulative
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
nativeTokenPriceAverage
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
nativeTokenPriceAverage
_x
FIELDS:
nativeTokenPriceAverage Fields:
^^^
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
twapData.nativeTokenPriceAverage
_x
FIELDS:
twapData.nativeTokenPriceAverage Fields:
^^^
global
twapData
lastMeasurement
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
updatePeriod
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
pastLiquidityEvaluation
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
foreignAsset
Check copy_toekn_tuple
([-1], [-1], [0], 'FOREIGNASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
twapData
foreignUnit
Check copy_toekn_tuple
([-1], [-1], [-404], None)
----
Type: uint96
uint96
Final Type: uint96
Type: uint96
uint96
Final Type: uint96
FIELDS:
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
[*]Type fetched successfully
State_var: vader
Finding type for vader...
address
Check copy_toekn_tuple
(2, -1, 0, 'VADER')
----
Type: address
address
Final Type: address

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPairs
Finding type for vaderPairs...
IUniswapV2Pair[]
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPAIR')
----
Type: IUniswapV2Pair[]
IUniswapV2Pair[]
IUniswapV2Pair
Final Type: IUniswapV2Pair
 NO FIELDS

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 0, 'OWNER')
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: usdvPairs
Finding type for usdvPairs...
IERC20[]
Check copy_toekn_tuple
(-1, -1, 0, 'USDVPAIR')
----
Type: IERC20[]
IERC20[]
IERC20
Final Type: IERC20
 NO FIELDS

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _calculateVaderPrice
Function _calculateVaderPrice not marked
Mark Iterations TRUE, proceeding anyway
Function name: _calculateVaderPrice
Function Visibility (test): internal
State_var: oracles
Finding type for oracles...
mapping(address => IAggregatorV3)
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: mapping(address => IAggregatorV3)
mapping(address => IAggregatorV3)
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: previousPrices
Finding type for previousPrices...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPool
Finding type for vaderPool...
IVaderPoolV2
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPOOL')
----
Type: IVaderPoolV2
IVaderPoolV2
Final Type: IVaderPoolV2
 NO FIELDS

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxUpdateWindow
Finding type for maxUpdateWindow...
uint256
Check copy_toekn_tuple
(-1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalLiquidityWeight
Finding type for totalLiquidityWeight...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: twapData
Finding type for twapData...
mapping(address => ILiquidityBasedTWAP.ExchangePair)
Check copy_toekn_tuple
(-1, -1, 0, 'EXCHANGEPAIR')
----
Type: mapping(address => ILiquidityBasedTWAP.ExchangePair)
mapping(address => ILiquidityBasedTWAP.ExchangePair)
ILiquidityBasedTWAP.ExchangePair
Final Type: ILiquidityBasedTWAP.ExchangePair
global
twapData
nativeTokenPriceCumulative
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
nativeTokenPriceAverage
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
nativeTokenPriceAverage
_x
FIELDS:
nativeTokenPriceAverage Fields:
^^^
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
twapData.nativeTokenPriceAverage
_x
FIELDS:
twapData.nativeTokenPriceAverage Fields:
^^^
global
twapData
lastMeasurement
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
updatePeriod
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
pastLiquidityEvaluation
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
foreignAsset
Check copy_toekn_tuple
([-1], [-1], [0], 'FOREIGNASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
twapData
foreignUnit
Check copy_toekn_tuple
([-1], [-1], [-404], None)
----
Type: uint96
uint96
Final Type: uint96
Type: uint96
uint96
Final Type: uint96
FIELDS:
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
[*]Type fetched successfully
State_var: vader
Finding type for vader...
address
Check copy_toekn_tuple
(2, -1, 0, 'VADER')
----
Type: address
address
Final Type: address

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPairs
Finding type for vaderPairs...
IUniswapV2Pair[]
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPAIR')
----
Type: IUniswapV2Pair[]
IUniswapV2Pair[]
IUniswapV2Pair
Final Type: IUniswapV2Pair
 NO FIELDS

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 0, 'OWNER')
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: usdvPairs
Finding type for usdvPairs...
IERC20[]
Check copy_toekn_tuple
(-1, -1, 0, 'USDVPAIR')
----
Type: IERC20[]
IERC20[]
IERC20
Final Type: IERC20
 NO FIELDS

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: setupVader
Function name: setupVader
Function Visibility (test): external
pair
Finding type for pair...
IUniswapV2Pair
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPAIR')
----
Type: IUniswapV2Pair
IUniswapV2Pair
Final Type: IUniswapV2Pair
 NO FIELDS

Name: pair Function: setupVader
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
oracle
Finding type for oracle...
IAggregatorV3
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: IAggregatorV3
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracle Function: setupVader
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
updatePeriod
Finding type for updatePeriod...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: updatePeriod Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
vaderPrice
Finding type for vaderPrice...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: vaderPrice Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADERPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: ORACLE
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADERPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: ORACLE
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
previousPrices_5(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
typecheckig node...
previousPrices_5(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: setupVader
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, Ownable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, Ownable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: onlyOwner
Function Visibility: internal
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_178(address) = INTERNAL_CALL, Ownable.owner()()
has variable
[i] TMP_178 cleared
clearing ir...?
TMP_179(address) = INTERNAL_CALL, Context._msgSender()()
has variable
[i] TMP_179 cleared
clearing ir...?
TMP_180(bool) = TMP_178 == TMP_179
has variable
[i] TMP_180 cleared
clearing ir...?
TMP_181(None) = SOLIDITY_CALL require(bool,string)(TMP_180,Ownable: caller is not the owner)
typecheckig node...
TMP_178(address) = INTERNAL_CALL, Ownable.owner()()
Function name: onlyOwner
Internal call...
owner
Function: owner
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: owner
Function Visibility: public
clearning node...
clearing ir...?
_owner_1(address) := ϕ(['_owner_0', '_owner_3'])
has variable
typecheckig node...
_owner_1(address) := ϕ(['_owner_0', '_owner_3'])
Function name: owner
Phi
[i]Type for _owner

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _owner_1
typecheckig node...
RETURN _owner_1
RETURN

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "owner":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: owner

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
___
[i]Type for TMP_178

Name: TMP_178 Function: onlyOwner
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
done.
TMP_179(address) = INTERNAL_CALL, Context._msgSender()()
Function name: onlyOwner
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: _msgSender
Function Visibility: internal
clearning node...
typecheckig node...
clearning node...
clearing ir...?
RETURN msg.sender
typecheckig node...
RETURN msg.sender
RETURN
msg.sender
WORKLIST iteration 0 for function call "_msgSender":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _msgSender

Name: PIC_26 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_179

Name: TMP_179 Function: onlyOwner
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_180(bool) = TMP_178 == TMP_179
Function name: onlyOwner
[i]Type for TMP_180

Name: TMP_180 Function: onlyOwner
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_181(None) = SOLIDITY_CALL require(bool,string)(TMP_180,Ownable: caller is not the owner)
[i]Type for TMP_181

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "onlyOwner":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: onlyOwner
done.
clearning node...
clearing ir...?
REF_49(ILiquidityBasedTWAP.Paths) -> Paths.VADER
has variable
clearing ir...?
TMP_68 = CONVERT REF_49 to uint256
has variable
[i] TMP_68 cleared
clearing ir...?
REF_50(uint256) -> previousPrices_6[TMP_68]
has variable
clearing ir...?
TMP_69(bool) = REF_50 == 0
has variable
[i] TMP_69 cleared
clearing ir...?
TMP_70(None) = SOLIDITY_CALL require(bool,string)(TMP_69,LBTWAP::setupVader: Already Initialized)
typecheckig node...
REF_49(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: setupVader
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_49

Name: Paths.VADER Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_68 = CONVERT REF_49 to uint256
Function name: setupVader

Name: Paths.VADER Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_68 Function: setupVader
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_68

Name: TMP_68 Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_50(uint256) -> previousPrices_6[TMP_68]
Function name: setupVader
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
previousPrices
[i]Type for REF_50

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_50(uint256) -> previousPrices_6[TMP_68]
XXXXX
TMP_69(bool) = REF_50 == 0
Function name: setupVader
[i]Type for TMP_69

Name: TMP_69 Function: setupVader
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_70(None) = SOLIDITY_CALL require(bool,string)(TMP_69,LBTWAP::setupVader: Already Initialized)
[i]Type for TMP_70

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_51(ILiquidityBasedTWAP.Paths) -> Paths.VADER
has variable
clearing ir...?
TMP_71 = CONVERT REF_51 to uint256
has variable
[i] TMP_71 cleared
clearing ir...?
REF_52(uint256) -> previousPrices_6[TMP_71]
has variable
clearing ir...?
previousPrices_7(uint256[2]) := ϕ(['previousPrices_6'])
has variable
clearing ir...?
REF_52 (->previousPrices_7) := vaderPrice_1(uint256)
has variable
typecheckig node...
REF_51(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: setupVader
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_51

Name: Paths.VADER Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_71 = CONVERT REF_51 to uint256
Function name: setupVader

Name: Paths.VADER Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_71 Function: setupVader
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_71

Name: TMP_71 Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_52(uint256) -> previousPrices_6[TMP_71]
Function name: setupVader
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
previousPrices
[i]Type for REF_52

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_52(uint256) -> previousPrices_6[TMP_71]
XXXXX
previousPrices_7(uint256[2]) := ϕ(['previousPrices_6'])
Function name: setupVader
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_52 (->previousPrices_7) := vaderPrice_1(uint256)
Function name: setupVader
asgn

Name: vaderPrice Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_52 Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_52

Name: REF_52 Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LiquidityBasedTWAP._addVaderPair(IUniswapV2Pair,IAggregatorV3,uint256)(pair_1,oracle_1,updatePeriod_1)
typecheckig node...
INTERNAL_CALL, LiquidityBasedTWAP._addVaderPair(IUniswapV2Pair,IAggregatorV3,uint256)(pair_1,oracle_1,updatePeriod_1)
Internal call...
_addVaderPair
pair
oracle
updatePeriod
Function: _addVaderPair
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADERPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: ORACLE
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADERPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: ORACLE
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 0, 'VADERPAIR', [], -1]
[[-1], [-1], 0, 'ORACLE', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _addVaderPair
Function Visibility: internal
clearning node...
clearing ir...?
pair_1(IUniswapV2Pair) := ϕ(['pair_1', 'pair_1'])
has variable
[i] pair cleared
clearing ir...?
oracle_1(IAggregatorV3) := ϕ(['oracle_1', 'oracle_1'])
has variable
[i] oracle cleared
clearing ir...?
updatePeriod_1(uint256) := ϕ(['updatePeriod_1', 'updatePeriod_1'])
has variable
[i] updatePeriod cleared
clearing ir...?
vader_4(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_0'])
has variable
clearing ir...?
vaderPairs_6(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_1(uint256) := ϕ(['maxUpdateWindow_0', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_5(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_10(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
twapData_8(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
has variable
typecheckig node...
pair_1(IUniswapV2Pair) := ϕ(['pair_1', 'pair_1'])
Function name: _addVaderPair
Phi
[i]Type for pair

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := ϕ(['oracle_1', 'oracle_1'])
Function name: _addVaderPair
Phi
[i]Type for oracle

Name: oracle Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
done.
updatePeriod_1(uint256) := ϕ(['updatePeriod_1', 'updatePeriod_1'])
Function name: _addVaderPair
Phi
[i]Type for updatePeriod

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vader_4(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_0'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_6(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_1(uint256) := ϕ(['maxUpdateWindow_0', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_5(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_10(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_8(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_79(bool) = updatePeriod_1 != 0
has variable
[i] TMP_79 cleared
clearing ir...?
TMP_80(None) = SOLIDITY_CALL require(bool,string)(TMP_79,LBTWAP::addVaderPair: Incorrect Update Period)
typecheckig node...
TMP_79(bool) = updatePeriod_1 != 0
Function name: _addVaderPair
[i]Type for TMP_79

Name: TMP_79 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_80(None) = SOLIDITY_CALL require(bool,string)(TMP_79,LBTWAP::addVaderPair: Incorrect Update Period)
[i]Type for TMP_80

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_81(uint8) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:decimals, arguments:[]  
has variable
[i] TMP_81 cleared
clearing ir...?
vader_5(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_4', 'vader_1'])
has variable
clearing ir...?
vaderPairs_7(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1', 'vaderPairs_6'])
has variable
clearing ir...?
maxUpdateWindow_2(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_1'])
has variable
clearing ir...?
totalLiquidityWeight_6(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_5', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_11(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_10', 'previousPrices_4'])
has variable
clearing ir...?
twapData_9(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_8', 'twapData_3', 'twapData_15', 'twapData_21', 'twapData_7'])
has variable
clearing ir...?
TMP_82(bool) = TMP_81 == 8
has variable
[i] TMP_82 cleared
clearing ir...?
TMP_83(None) = SOLIDITY_CALL require(bool,string)(TMP_82,LBTWAP::addVaderPair: Non-USD Oracle)
typecheckig node...
TMP_81(uint8) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:decimals, arguments:[]  
Function name: _addVaderPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_81
hlc contract name: ORACLE func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_81

Name: TMP_81 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vader_5(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_4', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_7(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1', 'vaderPairs_6'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_2(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_1'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_6(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_5', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_11(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_10', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_9(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_8', 'twapData_3', 'twapData_15', 'twapData_21', 'twapData_7'])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
TMP_82(bool) = TMP_81 == 8
Function name: _addVaderPair
[i]Type for TMP_82

Name: TMP_82 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_83(None) = SOLIDITY_CALL require(bool,string)(TMP_82,LBTWAP::addVaderPair: Non-USD Oracle)
[i]Type for TMP_83

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_84 = CONVERT pair_1 to address
has variable
[i] TMP_84 cleared
clearing ir...?
REF_56(ILiquidityBasedTWAP.ExchangePair) -> twapData_9[TMP_84]
has variable
clearing ir...?
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_56(ILiquidityBasedTWAP.ExchangePair)
has variable
[i] pairData cleared
typecheckig node...
TMP_84 = CONVERT pair_1 to address
Function name: _addVaderPair

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: TMP_84 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_84

Name: TMP_84 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_56(ILiquidityBasedTWAP.ExchangePair) -> twapData_9[TMP_84]
Function name: _addVaderPair
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_56

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_56(ILiquidityBasedTWAP.ExchangePair)
Function name: _addVaderPair
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_85(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
has variable
[i] TMP_85 cleared
clearing ir...?
vader_6(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_5', 'vader_1'])
has variable
clearing ir...?
vaderPairs_8(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_7', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_3(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_2'])
has variable
clearing ir...?
totalLiquidityWeight_7(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_6', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_12(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_11'])
has variable
clearing ir...?
TMP_86(bool) = TMP_85 == vader_6
has variable
[i] TMP_86 cleared
clearing ir...?
isFirst_1(bool) := TMP_86(bool)
has variable
[i] isFirst cleared
typecheckig node...
TMP_85(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_85
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_85

Name: TMP_85 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_6(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_5', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_8(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_7', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_3(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_2'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_7(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_6', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_12(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_11'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_86(bool) = TMP_85 == vader_6
Function name: _addVaderPair
[i]Type for TMP_86

Name: TMP_86 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
isFirst_1(bool) := TMP_86(bool)
Function name: _addVaderPair
asgn

Name: TMP_86 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: isFirst Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for isFirst

Name: isFirst Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
isFirst_1(bool) := TMP_86(bool)
XXXXX
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
CONDITION isFirst_1
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
clearning node...
clearing ir...?
TMP_104(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
has variable
[i] TMP_104 cleared
clearing ir...?
vader_7(address) := ϕ(['vader_6', 'vader_8', 'vader_10', 'vader_3', 'vader_1'])
has variable
clearing ir...?
vaderPairs_9(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_8', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_4(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_3', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_8(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_7', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_13(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_12', 'previousPrices_4'])
has variable
clearing ir...?
TMP_105(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token1, arguments:[]  
has variable
[i] TMP_105 cleared
clearing ir...?
vader_8(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_7'])
has variable
clearing ir...?
vaderPairs_10(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_9', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_5(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_4'])
has variable
clearing ir...?
totalLiquidityWeight_9(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_8', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_14(uint256[2]) := ϕ(['previousPrices_13', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
nativeAsset_1(address) := TMP_104(address)
has variable
[i] nativeAsset cleared
clearing ir...?
foreignAsset_1(address) := TMP_105(address)
has variable
[i] foreignAsset cleared
typecheckig node...
TMP_104(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_104
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_104

Name: TMP_104 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_7(address) := ϕ(['vader_6', 'vader_8', 'vader_10', 'vader_3', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_9(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_8', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_4(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_3', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_8(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_7', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_13(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_12', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_105(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token1, arguments:[]  
Function name: _addVaderPair
High Call: token1
func name:token1
other func name:token1
TMP_105
hlc contract name: VADERPAIR func_name: token1
('c', [-1], [-1], 0, 'TOK1')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK1', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_105

Name: TMP_105 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
vader_8(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_7'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_10(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_9', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_5(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_4'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_9(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_8', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_14(uint256[2]) := ϕ(['previousPrices_13', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeAsset_1(address) := TMP_104(address)
Function name: _addVaderPair
asgn

Name: TMP_104 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: nativeAsset Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
foreignAsset_1(address) := TMP_105(address)
Function name: _addVaderPair
asgn

Name: TMP_105 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef

Name: foreignAsset Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_106(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token1, arguments:[]  
has variable
[i] TMP_106 cleared
clearing ir...?
vader_9(address) := ϕ(['vader_3', 'vader_1', 'vader_8', 'vader_10'])
has variable
clearing ir...?
vaderPairs_11(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_10', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_6(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_5', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_10(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_9', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_15(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_14', 'previousPrices_4'])
has variable
clearing ir...?
TMP_107(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
has variable
[i] TMP_107 cleared
clearing ir...?
vader_10(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_9'])
has variable
clearing ir...?
vaderPairs_12(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_11', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_7(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_6'])
has variable
clearing ir...?
totalLiquidityWeight_11(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_10', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_16(uint256[2]) := ϕ(['previousPrices_15', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
nativeAsset_2(address) := TMP_106(address)
has variable
[i] nativeAsset cleared
clearing ir...?
foreignAsset_2(address) := TMP_107(address)
has variable
[i] foreignAsset cleared
typecheckig node...
TMP_106(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token1, arguments:[]  
Function name: _addVaderPair
High Call: token1
func name:token1
other func name:token1
TMP_106
hlc contract name: VADERPAIR func_name: token1
('c', [-1], [-1], 0, 'TOK1')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK1', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_106

Name: TMP_106 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
vader_9(address) := ϕ(['vader_3', 'vader_1', 'vader_8', 'vader_10'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_11(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_10', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_6(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_5', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_10(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_9', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_15(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_14', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_107(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_107
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_107

Name: TMP_107 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_10(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_9'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_12(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_11', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_7(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_6'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_11(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_10', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_16(uint256[2]) := ϕ(['previousPrices_15', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeAsset_2(address) := TMP_106(address)
Function name: _addVaderPair
asgn

Name: TMP_106 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef

Name: nativeAsset Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
foreignAsset_2(address) := TMP_107(address)
Function name: _addVaderPair
asgn

Name: TMP_107 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: foreignAsset Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
nativeAsset_3(address) := ϕ(['nativeAsset_1', 'nativeAsset_2'])
has variable
[i] nativeAsset cleared
clearing ir...?
foreignAsset_3(address) := ϕ(['foreignAsset_1', 'foreignAsset_2'])
has variable
[i] foreignAsset cleared
typecheckig node...
nativeAsset_3(address) := ϕ(['nativeAsset_1', 'nativeAsset_2'])
Function name: _addVaderPair
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
foreignAsset_3(address) := ϕ(['foreignAsset_1', 'foreignAsset_2'])
Function name: _addVaderPair
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_58(IAggregatorV3) -> oracles_1[foreignAsset_3]
has variable
clearing ir...?
oracles_2(mapping(address => IAggregatorV3)) := ϕ(['oracles_1'])
has variable
clearing ir...?
REF_58 (->oracles_2) := oracle_1(IAggregatorV3)
has variable
typecheckig node...
REF_58(IAggregatorV3) -> oracles_1[foreignAsset_3]
Function name: _addVaderPair
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_58

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracles_2(mapping(address => IAggregatorV3)) := ϕ(['oracles_1'])
Function name: _addVaderPair
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_58 (->oracles_2) := oracle_1(IAggregatorV3)
Function name: _addVaderPair
asgn

Name: oracle Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef

Name: REF_58 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_58

Name: REF_58 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_87(bool) = nativeAsset_3 == vader_10
has variable
[i] TMP_87 cleared
clearing ir...?
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,LBTWAP::addVaderPair: Unsupported Pair)
typecheckig node...
TMP_87(bool) = nativeAsset_3 == vader_10
Function name: _addVaderPair
[i]Type for TMP_87

Name: TMP_87 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,LBTWAP::addVaderPair: Unsupported Pair)
[i]Type for TMP_88

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_59(address) -> pairData_1 (-> ['twapData']).foreignAsset
has variable
clearing ir...?
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_59 (->pairData_2 (-> ['twapData'])) := foreignAsset_3(address)
has variable
clearing ir...?
twapData_10(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
has variable
typecheckig node...
REF_59(address) -> pairData_1 (-> ['twapData']).foreignAsset
Function name: _addVaderPair
MEMBER
pairData
foreignAsset
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
[i]Type for REF_59

Name: pairData.foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: pairData.foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: foreignAsset Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_59 (->pairData_2 (-> ['twapData'])) := foreignAsset_3(address)
Function name: _addVaderPair
asgn

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_59

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
done.
twapData_10(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_60(uint96) -> pairData_2 (-> ['twapData']).foreignUnit
has variable
clearing ir...?
TMP_89 = CONVERT foreignAsset_3 to IERC20Metadata
has variable
[i] TMP_89 cleared
clearing ir...?
TMP_90(uint8) = HIGH_LEVEL_CALL, dest:TMP_89(IERC20Metadata), function:decimals, arguments:[]  
has variable
[i] TMP_90 cleared
clearing ir...?
vaderPairs_13(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_12', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_8(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_7', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_12(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_11', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_17(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_16', 'previousPrices_4'])
has variable
clearing ir...?
TMP_91 = CONVERT TMP_90 to uint256
has variable
[i] TMP_91 cleared
clearing ir...?
TMP_92(uint256) = 10 (c)** TMP_91
has variable
[i] TMP_92 cleared
clearing ir...?
TMP_93 = CONVERT TMP_92 to uint96
has variable
[i] TMP_93 cleared
clearing ir...?
pairData_3 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_2 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_60 (->pairData_3 (-> ['twapData'])) := TMP_93(uint96)
has variable
clearing ir...?
twapData_11(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_3 (-> ['twapData'])"])
has variable
typecheckig node...
REF_60(uint96) -> pairData_2 (-> ['twapData']).foreignUnit
Function name: _addVaderPair
MEMBER
pairData
foreignUnit
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_60

Name: pairData.foreignUnit Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.foreignUnit Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_89 = CONVERT foreignAsset_3 to IERC20Metadata
Function name: _addVaderPair

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: TMP_89 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_89

Name: TMP_89 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
TMP_90(uint8) = HIGH_LEVEL_CALL, dest:TMP_89(IERC20Metadata), function:decimals, arguments:[]  
Function name: _addVaderPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_90
hlc contract name: TOK0 func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_90

Name: TMP_90 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_13(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_12', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_8(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_7', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_12(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_11', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_17(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_16', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_91 = CONVERT TMP_90 to uint256
Function name: _addVaderPair

Name: TMP_90 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_91 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_91

Name: TMP_91 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_92(uint256) = 10 (c)** TMP_91
Function name: _addVaderPair
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: TMP_91 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_92 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_92

Name: TMP_92 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_93 = CONVERT TMP_92 to uint96
Function name: _addVaderPair

Name: TMP_92 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: TMP_93 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_93

Name: TMP_93 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
pairData_3 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_60 (->pairData_3 (-> ['twapData'])) := TMP_93(uint96)
Function name: _addVaderPair
asgn

Name: TMP_93 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_60

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_11(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_62(uint256) -> pairData_3 (-> ['twapData']).updatePeriod
has variable
clearing ir...?
pairData_4 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_3 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_62 (->pairData_4 (-> ['twapData'])) := updatePeriod_1(uint256)
has variable
clearing ir...?
twapData_12(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_4 (-> ['twapData'])"])
has variable
typecheckig node...
REF_62(uint256) -> pairData_3 (-> ['twapData']).updatePeriod
Function name: _addVaderPair
MEMBER
pairData
updatePeriod
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_62

Name: pairData.updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_4 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_62 (->pairData_4 (-> ['twapData'])) := updatePeriod_1(uint256)
Function name: _addVaderPair
asgn

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_62

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
twapData_12(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_63(uint256) -> pairData_4 (-> ['twapData']).lastMeasurement
has variable
clearing ir...?
pairData_5 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_4 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_63 (->pairData_5 (-> ['twapData'])) := block.timestamp(uint256)
has variable
clearing ir...?
twapData_13(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_5 (-> ['twapData'])"])
has variable
typecheckig node...
REF_63(uint256) -> pairData_4 (-> ['twapData']).lastMeasurement
Function name: _addVaderPair
MEMBER
pairData
lastMeasurement
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_63

Name: pairData.lastMeasurement Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_5 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_63 (->pairData_5 (-> ['twapData'])) := block.timestamp(uint256)
Function name: _addVaderPair
asgn
block.timestamp

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_63

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_63 (->pairData_5 (-> ['twapData'])) := block.timestamp(uint256)
XXXXX
twapData_13(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
CONDITION isFirst_1
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
clearning node...
clearing ir...?
REF_79(uint256) -> pairData_5 (-> ['twapData']).nativeTokenPriceCumulative
has variable
clearing ir...?
TMP_109(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price1CumulativeLast, arguments:[]  
has variable
[i] TMP_109 cleared
clearing ir...?
vaderPairs_15(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_14', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_10(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_9'])
has variable
clearing ir...?
totalLiquidityWeight_14(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_13', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_19(uint256[2]) := ϕ(['previousPrices_18', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
pairData_7 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_79 (->pairData_7 (-> ['twapData'])) := TMP_109(uint256)
has variable
clearing ir...?
twapData_16(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_7 (-> ['twapData'])"])
has variable
typecheckig node...
REF_79(uint256) -> pairData_5 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addVaderPair
MEMBER
pairData
nativeTokenPriceCumulative
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_79

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_109(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price1CumulativeLast, arguments:[]  
Function name: _addVaderPair
High Call: price1CumulativeLast
func name:price1CumulativeLast
other func name:price1CumulativeLast
TMP_109
hlc contract name: VADERPAIR func_name: price1CumulativeLast
wfc len: 0
COPIED
[i]Type for TMP_109

Name: TMP_109 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_15(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_14', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_10(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_9'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_14(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_13', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_19(uint256[2]) := ϕ(['previousPrices_18', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pairData_7 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_79 (->pairData_7 (-> ['twapData'])) := TMP_109(uint256)
Function name: _addVaderPair
asgn

Name: TMP_109 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_79

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_16(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_7 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
pairData_8 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_6 (-> ['twapData'])", "pairData_7 (-> ['twapData'])"])
has variable
[i] pairData cleared
typecheckig node...
pairData_8 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_6 (-> ['twapData'])", "pairData_7 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_77(uint256) -> pairData_5 (-> ['twapData']).nativeTokenPriceCumulative
has variable
clearing ir...?
TMP_108(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price0CumulativeLast, arguments:[]  
has variable
[i] TMP_108 cleared
clearing ir...?
vaderPairs_14(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_13', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_9(uint256) := ϕ(['maxUpdateWindow_8', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_13(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_12', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_18(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_17', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
pairData_6 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_77 (->pairData_6 (-> ['twapData'])) := TMP_108(uint256)
has variable
clearing ir...?
twapData_14(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_6 (-> ['twapData'])"])
has variable
typecheckig node...
REF_77(uint256) -> pairData_5 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addVaderPair
MEMBER
pairData
nativeTokenPriceCumulative
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_77

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_108(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price0CumulativeLast, arguments:[]  
Function name: _addVaderPair
High Call: price0CumulativeLast
func name:price0CumulativeLast
other func name:price0CumulativeLast
TMP_108
hlc contract name: VADERPAIR func_name: price0CumulativeLast
wfc len: 0
COPIED
[i]Type for TMP_108

Name: TMP_108 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_14(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_13', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_9(uint256) := ϕ(['maxUpdateWindow_8', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_13(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_12', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_18(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_17', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pairData_6 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_77 (->pairData_6 (-> ['twapData'])) := TMP_108(uint256)
Function name: _addVaderPair
asgn

Name: TMP_108 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_77

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_14(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_6 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_4(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:getReserves, arguments:[]  
has variable
clearing ir...?
vaderPairs_16(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_15', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_11(uint256) := ϕ(['maxUpdateWindow_10', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_15(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_14', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_20(uint256[2]) := ϕ(['previousPrices_19', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
reserve0_1(uint256)= UNPACK TUPLE_4 index: 0 
has variable
[i] reserve0 cleared
clearing ir...?
reserve1_1(uint256)= UNPACK TUPLE_4 index: 1 
has variable
[i] reserve1 cleared
typecheckig node...
TUPLE_4(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:getReserves, arguments:[]  
Function name: _addVaderPair
High Call: getReserves
func name:getReserves
other func name:getReserves
TUPLE_4
hlc contract name: VADERPAIR func_name: getReserves
('c', [-1], [-1], 'u', None)
('c', [-1], [-1], 'u', None)
('c', [-1], [-1], 'u', None)
wfc len: 3
COPIED
[i]Type for TUPLE_4

Name: TUPLE_4 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_16(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_15', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_11(uint256) := ϕ(['maxUpdateWindow_10', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_15(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_14', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_20(uint256[2]) := ϕ(['previousPrices_19', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserve0_1(uint256)= UNPACK TUPLE_4 index: 0 
Function name: _addVaderPair
Reading tuple TUPLE_4 index 0
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserve0

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserve1_1(uint256)= UNPACK TUPLE_4 index: 1 
Function name: _addVaderPair
Reading tuple TUPLE_4 index 1
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserve1

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
CONDITION isFirst_1
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
clearning node...
clearing ir...?
reserveNative_1(uint256) := reserve1_1(uint256)
has variable
[i] reserveNative cleared
clearing ir...?
reserveForeign_1(uint256) := reserve0_1(uint256)
has variable
[i] reserveForeign cleared
typecheckig node...
reserveNative_1(uint256) := reserve1_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveNative Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_1(uint256) := reserve0_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveForeign Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
reserveNative_2(uint256) := reserve0_1(uint256)
has variable
[i] reserveNative cleared
clearing ir...?
reserveForeign_2(uint256) := reserve1_1(uint256)
has variable
[i] reserveForeign cleared
typecheckig node...
reserveNative_2(uint256) := reserve0_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveNative Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_2(uint256) := reserve1_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveForeign Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
reserveNative_3(uint256) := ϕ(['reserveNative_1', 'reserveNative_2'])
has variable
[i] reserveNative cleared
clearing ir...?
reserveForeign_3(uint256) := ϕ(['reserveForeign_1', 'reserveForeign_2'])
has variable
[i] reserveForeign cleared
typecheckig node...
reserveNative_3(uint256) := ϕ(['reserveNative_1', 'reserveNative_2'])
Function name: _addVaderPair
Phi
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_3(uint256) := ϕ(['reserveForeign_1', 'reserveForeign_2'])
Function name: _addVaderPair
Phi
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_65(ILiquidityBasedTWAP.Paths) -> Paths.VADER
has variable
clearing ir...?
TMP_94 = CONVERT REF_65 to uint256
has variable
[i] TMP_94 cleared
clearing ir...?
REF_66(uint256) -> previousPrices_20[TMP_94]
has variable
clearing ir...?
TMP_95(uint256) = reserveNative_3 (c)* REF_66
has variable
[i] TMP_95 cleared
clearing ir...?
TMP_96(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(foreignAsset_3)
has variable
[i] TMP_96 cleared
clearing ir...?
TMP_97(uint256) = reserveForeign_3 (c)* TMP_96
has variable
[i] TMP_97 cleared
clearing ir...?
TMP_98(uint256) = TMP_95 (c)+ TMP_97
has variable
[i] TMP_98 cleared
clearing ir...?
pairLiquidityEvaluation_1(uint256) := TMP_98(uint256)
has variable
[i] pairLiquidityEvaluation cleared
typecheckig node...
REF_65(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: _addVaderPair
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_65

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_94 = CONVERT REF_65 to uint256
Function name: _addVaderPair

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_94 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_94

Name: TMP_94 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_66(uint256) -> previousPrices_20[TMP_94]
Function name: _addVaderPair
INDEX

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_66

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_95(uint256) = reserveNative_3 (c)* REF_66
Function name: _addVaderPair
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_95 Function: _addVaderPair
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_95

Name: TMP_95 Function: _addVaderPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_96(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(foreignAsset_3)
Function name: _addVaderPair
Internal call...
getChainlinkPrice
foreignAsset
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOK0
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
0

Name: PIC_2 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_96 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_96

Name: TMP_96 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_97(uint256) = reserveForeign_3 (c)* TMP_96
Function name: _addVaderPair
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_96 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_97 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_97

Name: TMP_97 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_98(uint256) = TMP_95 (c)+ TMP_97
Function name: _addVaderPair

Name: TMP_98 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
Error with TMP_98 in function _addVaderPair
Error with: TMP_98 in function _addVaderPair
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f5145e0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f436910>]
[i]Type for TMP_98

Name: TMP_98 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairLiquidityEvaluation_1(uint256) := TMP_98(uint256)
Function name: _addVaderPair
asgn

Name: TMP_98 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairLiquidityEvaluation

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_67(uint256) -> pairData_8 (-> ['twapData']).pastLiquidityEvaluation
has variable
clearing ir...?
pairData_9 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_8 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_67 (->pairData_9 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
has variable
clearing ir...?
twapData_15(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_9 (-> ['twapData'])"])
has variable
typecheckig node...
REF_67(uint256) -> pairData_8 (-> ['twapData']).pastLiquidityEvaluation
Function name: _addVaderPair
MEMBER
pairData
pastLiquidityEvaluation
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_67

Name: pairData.pastLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_9 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_8 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_67 (->pairData_9 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
Function name: _addVaderPair
asgn

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_67

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
twapData_15(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_9 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_68(ILiquidityBasedTWAP.Paths) -> Paths.VADER
has variable
clearing ir...?
TMP_99 = CONVERT REF_68 to uint256
has variable
[i] TMP_99 cleared
clearing ir...?
REF_69(uint256) -> totalLiquidityWeight_16[TMP_99]
has variable
clearing ir...?
totalLiquidityWeight_17(uint256[2]) := ϕ(['totalLiquidityWeight_16'])
has variable
clearing ir...?
REF_69(-> totalLiquidityWeight_17) = REF_69 (c)+ pairLiquidityEvaluation_1
has variable
typecheckig node...
REF_68(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: _addVaderPair
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_68

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_99 = CONVERT REF_68 to uint256
Function name: _addVaderPair

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_99 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_99

Name: TMP_99 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_69(uint256) -> totalLiquidityWeight_16[TMP_99]
Function name: _addVaderPair
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalLiquidityWeight
[i]Type for REF_69

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_69(uint256) -> totalLiquidityWeight_16[TMP_99]
XXXXX
totalLiquidityWeight_17(uint256[2]) := ϕ(['totalLiquidityWeight_16'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_69(-> totalLiquidityWeight_17) = REF_69 (c)+ pairLiquidityEvaluation_1
Function name: _addVaderPair

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_69

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_71 -> LENGTH vaderPairs_17
clearing ir...?
TMP_101(uint256) := REF_71(uint256)
has variable
[i] TMP_101 cleared
clearing ir...?
TMP_102(uint256) = TMP_101 (c)+ 1
has variable
[i] TMP_102 cleared
clearing ir...?
vaderPairs_18(IUniswapV2Pair[]) := ϕ(['vaderPairs_17'])
has variable
clearing ir...?
REF_71 (->vaderPairs_18) := TMP_102(uint256)
has variable
clearing ir...?
REF_72(IUniswapV2Pair) -> vaderPairs_18[TMP_101]
has variable
clearing ir...?
vaderPairs_19(IUniswapV2Pair[]) := ϕ(['vaderPairs_18'])
has variable
clearing ir...?
REF_72 (->vaderPairs_19) := pair_1(IUniswapV2Pair)
has variable
typecheckig node...
REF_71 -> LENGTH vaderPairs_17
[i]Type for REF_71

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_101(uint256) := REF_71(uint256)
Function name: _addVaderPair
asgn

Name: REF_71 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_101 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_101

Name: TMP_101 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_101(uint256) := REF_71(uint256)
XXXXX
TMP_102(uint256) = TMP_101 (c)+ 1
Function name: _addVaderPair
val: 1

Name: TMP_102 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: _addVaderPair
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_102(uint256) = TMP_101 (c)+ 1
XXXXX
vaderPairs_18(IUniswapV2Pair[]) := ϕ(['vaderPairs_17'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_71 (->vaderPairs_18) := TMP_102(uint256)
Function name: _addVaderPair
asgn

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_71 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_71

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_72(IUniswapV2Pair) -> vaderPairs_18[TMP_101]
Function name: _addVaderPair
INDEX

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_72

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
vaderPairs_19(IUniswapV2Pair[]) := ϕ(['vaderPairs_18'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_72 (->vaderPairs_19) := pair_1(IUniswapV2Pair)
Function name: _addVaderPair
asgn

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: REF_72 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_72

Name: REF_72 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_103(bool) = maxUpdateWindow_12 < updatePeriod_1
has variable
[i] TMP_103 cleared
clearing ir...?
CONDITION TMP_103
typecheckig node...
TMP_103(bool) = maxUpdateWindow_12 < updatePeriod_1
Function name: _addVaderPair
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_103

Name: TMP_103 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_103
Condition...
Conidtion: 
TMP_103
TMP_103
clearning node...
clearing ir...?
maxUpdateWindow_13(uint256) := updatePeriod_1(uint256)
has variable
typecheckig node...
maxUpdateWindow_13(uint256) := updatePeriod_1(uint256)
Function name: _addVaderPair
asgn

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxUpdateWindow Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "_addVaderPair":
 New undefined nodes- 4
 Old undefined nodes- 0
typecheckig node...
pair_1(IUniswapV2Pair) := ϕ(['pair_1', 'pair_1'])
Function name: _addVaderPair
Phi
[i]Type for pair

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := ϕ(['oracle_1', 'oracle_1'])
Function name: _addVaderPair
Phi
[i]Type for oracle

Name: oracle Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
done.
updatePeriod_1(uint256) := ϕ(['updatePeriod_1', 'updatePeriod_1'])
Function name: _addVaderPair
Phi
[i]Type for updatePeriod

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vader_4(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_0'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_6(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_1(uint256) := ϕ(['maxUpdateWindow_0', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_5(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_10(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_8(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
TMP_79(bool) = updatePeriod_1 != 0
Function name: _addVaderPair
[i]Type for TMP_79

Name: TMP_79 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_80(None) = SOLIDITY_CALL require(bool,string)(TMP_79,LBTWAP::addVaderPair: Incorrect Update Period)
[i]Type for TMP_80

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_81(uint8) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:decimals, arguments:[]  
Function name: _addVaderPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_81
hlc contract name: ORACLE func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_81

Name: TMP_81 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vader_5(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_4', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_7(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1', 'vaderPairs_6'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_2(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_1'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_6(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_5', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_11(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_10', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_9(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_8', 'twapData_3', 'twapData_15', 'twapData_21', 'twapData_7'])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
TMP_82(bool) = TMP_81 == 8
Function name: _addVaderPair
[i]Type for TMP_82

Name: TMP_82 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_83(None) = SOLIDITY_CALL require(bool,string)(TMP_82,LBTWAP::addVaderPair: Non-USD Oracle)
[i]Type for TMP_83

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_84 = CONVERT pair_1 to address
Function name: _addVaderPair

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: TMP_84 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_84

Name: TMP_84 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_56(ILiquidityBasedTWAP.ExchangePair) -> twapData_9[TMP_84]
Function name: _addVaderPair
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_56

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_56(ILiquidityBasedTWAP.ExchangePair)
Function name: _addVaderPair
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
TMP_85(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_85
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_85

Name: TMP_85 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_6(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_5', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_8(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_7', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_3(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_2'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_7(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_6', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_12(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_11'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_86(bool) = TMP_85 == vader_6
Function name: _addVaderPair
[i]Type for TMP_86

Name: TMP_86 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
isFirst_1(bool) := TMP_86(bool)
Function name: _addVaderPair
asgn

Name: TMP_86 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: isFirst Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for isFirst

Name: isFirst Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
isFirst_1(bool) := TMP_86(bool)
XXXXX
typecheckig node...
typecheckig node...
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
typecheckig node...
TMP_104(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_104
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_104

Name: TMP_104 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_7(address) := ϕ(['vader_6', 'vader_8', 'vader_10', 'vader_3', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_9(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_8', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_4(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_3', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_8(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_7', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_13(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_12', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_105(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token1, arguments:[]  
Function name: _addVaderPair
High Call: token1
func name:token1
other func name:token1
TMP_105
hlc contract name: VADERPAIR func_name: token1
('c', [-1], [-1], 0, 'TOK1')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK1', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_105

Name: TMP_105 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
vader_8(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_7'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_10(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_9', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_5(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_4'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_9(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_8', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_14(uint256[2]) := ϕ(['previousPrices_13', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeAsset_1(address) := TMP_104(address)
Function name: _addVaderPair
asgn

Name: TMP_104 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
foreignAsset_1(address) := TMP_105(address)
Function name: _addVaderPair
asgn

Name: TMP_105 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_106(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token1, arguments:[]  
Function name: _addVaderPair
High Call: token1
func name:token1
other func name:token1
TMP_106
hlc contract name: VADERPAIR func_name: token1
('c', [-1], [-1], 0, 'TOK1')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK1', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_106

Name: TMP_106 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
vader_9(address) := ϕ(['vader_3', 'vader_1', 'vader_8', 'vader_10'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_11(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_10', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_6(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_5', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_10(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_9', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_15(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_14', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_107(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_107
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_107

Name: TMP_107 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_10(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_9'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_12(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_11', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_7(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_6'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_11(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_10', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_16(uint256[2]) := ϕ(['previousPrices_15', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeAsset_2(address) := TMP_106(address)
Function name: _addVaderPair
asgn

Name: TMP_106 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
foreignAsset_2(address) := TMP_107(address)
Function name: _addVaderPair
asgn

Name: TMP_107 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
typecheckig node...
nativeAsset_3(address) := ϕ(['nativeAsset_1', 'nativeAsset_2'])
Function name: _addVaderPair
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
foreignAsset_3(address) := ϕ(['foreignAsset_1', 'foreignAsset_2'])
Function name: _addVaderPair
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_58(IAggregatorV3) -> oracles_1[foreignAsset_3]
Function name: _addVaderPair
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_58

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracles_2(mapping(address => IAggregatorV3)) := ϕ(['oracles_1'])
Function name: _addVaderPair
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_58 (->oracles_2) := oracle_1(IAggregatorV3)
Function name: _addVaderPair
asgn

Name: oracle Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef

Name: REF_58 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_58

Name: REF_58 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_87(bool) = nativeAsset_3 == vader_10
Function name: _addVaderPair
[i]Type for TMP_87

Name: TMP_87 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,LBTWAP::addVaderPair: Unsupported Pair)
[i]Type for TMP_88

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_59(address) -> pairData_1 (-> ['twapData']).foreignAsset
Function name: _addVaderPair
MEMBER
pairData
foreignAsset
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
[i]Type for REF_59

Name: pairData.foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: pairData.foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
done.
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_59 (->pairData_2 (-> ['twapData'])) := foreignAsset_3(address)
Function name: _addVaderPair
asgn

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_59

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
done.
twapData_10(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_60(uint96) -> pairData_2 (-> ['twapData']).foreignUnit
Function name: _addVaderPair
MEMBER
pairData
foreignUnit
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_60

Name: pairData.foreignUnit Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.foreignUnit Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_89 = CONVERT foreignAsset_3 to IERC20Metadata
Function name: _addVaderPair

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: TMP_89 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
[i]Type for TMP_89

Name: TMP_89 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
TMP_90(uint8) = HIGH_LEVEL_CALL, dest:TMP_89(IERC20Metadata), function:decimals, arguments:[]  
Function name: _addVaderPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_90
hlc contract name: TOK0 func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_90

Name: TMP_90 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_13(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_12', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_8(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_7', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_12(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_11', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_17(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_16', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_91 = CONVERT TMP_90 to uint256
Function name: _addVaderPair

Name: TMP_90 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_91 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_91

Name: TMP_91 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_92(uint256) = 10 (c)** TMP_91
Function name: _addVaderPair
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: TMP_91 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_92 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:*
-1
val: 10
1
[i]Type for TMP_92

Name: TMP_92 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_93 = CONVERT TMP_92 to uint96
Function name: _addVaderPair

Name: TMP_92 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: TMP_93 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_93

Name: TMP_93 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
pairData_3 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_60 (->pairData_3 (-> ['twapData'])) := TMP_93(uint96)
Function name: _addVaderPair
asgn

Name: TMP_93 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_60

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_11(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_62(uint256) -> pairData_3 (-> ['twapData']).updatePeriod
Function name: _addVaderPair
MEMBER
pairData
updatePeriod
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_62

Name: pairData.updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_4 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_62 (->pairData_4 (-> ['twapData'])) := updatePeriod_1(uint256)
Function name: _addVaderPair
asgn

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_62

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
twapData_12(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_63(uint256) -> pairData_4 (-> ['twapData']).lastMeasurement
Function name: _addVaderPair
MEMBER
pairData
lastMeasurement
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_63

Name: pairData.lastMeasurement Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_5 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_63 (->pairData_5 (-> ['twapData'])) := block.timestamp(uint256)
Function name: _addVaderPair
asgn
block.timestamp

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_63

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_63 (->pairData_5 (-> ['twapData'])) := block.timestamp(uint256)
XXXXX
twapData_13(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
typecheckig node...
REF_79(uint256) -> pairData_5 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addVaderPair
MEMBER
[W] Initializing defined variable to constant
pairData
nativeTokenPriceCumulative
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_79

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_109(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price1CumulativeLast, arguments:[]  
Function name: _addVaderPair
High Call: price1CumulativeLast
func name:price1CumulativeLast
other func name:price1CumulativeLast
TMP_109
hlc contract name: VADERPAIR func_name: price1CumulativeLast
wfc len: 0
COPIED
[i]Type for TMP_109

Name: TMP_109 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_15(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_14', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_10(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_9'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_14(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_13', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_19(uint256[2]) := ϕ(['previousPrices_18', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pairData_7 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_79 (->pairData_7 (-> ['twapData'])) := TMP_109(uint256)
Function name: _addVaderPair
asgn

Name: TMP_109 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_79

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_16(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_7 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
pairData_8 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_6 (-> ['twapData'])", "pairData_7 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_77(uint256) -> pairData_5 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addVaderPair
MEMBER
[W] Initializing defined variable to constant
pairData
nativeTokenPriceCumulative
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_77

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_108(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price0CumulativeLast, arguments:[]  
Function name: _addVaderPair
High Call: price0CumulativeLast
func name:price0CumulativeLast
other func name:price0CumulativeLast
TMP_108
hlc contract name: VADERPAIR func_name: price0CumulativeLast
wfc len: 0
COPIED
[i]Type for TMP_108

Name: TMP_108 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_14(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_13', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_9(uint256) := ϕ(['maxUpdateWindow_8', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_13(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_12', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_18(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_17', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pairData_6 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_77 (->pairData_6 (-> ['twapData'])) := TMP_108(uint256)
Function name: _addVaderPair
asgn

Name: TMP_108 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_77

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_14(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_6 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
TUPLE_4(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:getReserves, arguments:[]  
Function name: _addVaderPair
High Call: getReserves
func name:getReserves
other func name:getReserves
TUPLE_4
hlc contract name: VADERPAIR func_name: getReserves
('c', [-1], [-1], 'u', None)
('c', [-1], [-1], 'u', None)
('c', [-1], [-1], 'u', None)
wfc len: 3
COPIED
[i]Type for TUPLE_4

Name: TUPLE_4 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_16(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_15', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_11(uint256) := ϕ(['maxUpdateWindow_10', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_15(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_14', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_20(uint256[2]) := ϕ(['previousPrices_19', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserve0_1(uint256)= UNPACK TUPLE_4 index: 0 
Function name: _addVaderPair
Reading tuple TUPLE_4 index 0
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserve0

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserve1_1(uint256)= UNPACK TUPLE_4 index: 1 
Function name: _addVaderPair
Reading tuple TUPLE_4 index 1
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserve1

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
typecheckig node...
reserveNative_1(uint256) := reserve1_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_1(uint256) := reserve0_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
reserveNative_2(uint256) := reserve0_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_2(uint256) := reserve1_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
reserveNative_3(uint256) := ϕ(['reserveNative_1', 'reserveNative_2'])
Function name: _addVaderPair
Phi
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_3(uint256) := ϕ(['reserveForeign_1', 'reserveForeign_2'])
Function name: _addVaderPair
Phi
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_65(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: _addVaderPair
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_65

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_94 = CONVERT REF_65 to uint256
Function name: _addVaderPair

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_94 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_94

Name: TMP_94 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_66(uint256) -> previousPrices_20[TMP_94]
Function name: _addVaderPair
INDEX

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_66

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_95(uint256) = reserveNative_3 (c)* REF_66
Function name: _addVaderPair
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_95 Function: _addVaderPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_95

Name: TMP_95 Function: _addVaderPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_96(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(foreignAsset_3)
Function name: _addVaderPair
Internal call...
getChainlinkPrice
foreignAsset
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOK0
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
0

Name: PIC_2 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_96 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_96

Name: TMP_96 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_97(uint256) = reserveForeign_3 (c)* TMP_96
Function name: _addVaderPair
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_96 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_97 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_97

Name: TMP_97 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_98(uint256) = TMP_95 (c)+ TMP_97
Function name: _addVaderPair

Name: TMP_98 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_98

Name: TMP_98 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pairLiquidityEvaluation_1(uint256) := TMP_98(uint256)
Function name: _addVaderPair
asgn

Name: TMP_98 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairLiquidityEvaluation

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_67(uint256) -> pairData_8 (-> ['twapData']).pastLiquidityEvaluation
Function name: _addVaderPair
MEMBER
pairData
pastLiquidityEvaluation
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_67

Name: pairData.pastLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_9 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_8 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_67 (->pairData_9 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
Function name: _addVaderPair
asgn

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_67

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
twapData_15(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_9 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_68(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: _addVaderPair
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_68

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_99 = CONVERT REF_68 to uint256
Function name: _addVaderPair

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_99 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_99

Name: TMP_99 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_69(uint256) -> totalLiquidityWeight_16[TMP_99]
Function name: _addVaderPair
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalLiquidityWeight
[i]Type for REF_69

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_69(uint256) -> totalLiquidityWeight_16[TMP_99]
XXXXX
totalLiquidityWeight_17(uint256[2]) := ϕ(['totalLiquidityWeight_16'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_69(-> totalLiquidityWeight_17) = REF_69 (c)+ pairLiquidityEvaluation_1
Function name: _addVaderPair

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_69

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_71 -> LENGTH vaderPairs_17
[i]Type for REF_71

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_101(uint256) := REF_71(uint256)
Function name: _addVaderPair
asgn

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_101 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_101

Name: TMP_101 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(uint256) = TMP_101 (c)+ 1
Function name: _addVaderPair
val: 1

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_18(IUniswapV2Pair[]) := ϕ(['vaderPairs_17'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_71 (->vaderPairs_18) := TMP_102(uint256)
Function name: _addVaderPair
asgn

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_71

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_72(IUniswapV2Pair) -> vaderPairs_18[TMP_101]
Function name: _addVaderPair
INDEX

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_72

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
vaderPairs_19(IUniswapV2Pair[]) := ϕ(['vaderPairs_18'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_72 (->vaderPairs_19) := pair_1(IUniswapV2Pair)
Function name: _addVaderPair
asgn

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: REF_72 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_72

Name: REF_72 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_103(bool) = maxUpdateWindow_12 < updatePeriod_1
Function name: _addVaderPair
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_103

Name: TMP_103 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_103
Condition...
Conidtion: 
TMP_103
TMP_103
typecheckig node...
maxUpdateWindow_13(uint256) := updatePeriod_1(uint256)
Function name: _addVaderPair
asgn

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxUpdateWindow Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
WORKLIST iteration 1 for function call "_addVaderPair":
 New undefined nodes- 3
 Old undefined nodes- 4
typecheckig node...
pair_1(IUniswapV2Pair) := ϕ(['pair_1', 'pair_1'])
Function name: _addVaderPair
Phi
[i]Type for pair

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := ϕ(['oracle_1', 'oracle_1'])
Function name: _addVaderPair
Phi
[i]Type for oracle

Name: oracle Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
done.
updatePeriod_1(uint256) := ϕ(['updatePeriod_1', 'updatePeriod_1'])
Function name: _addVaderPair
Phi
[i]Type for updatePeriod

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vader_4(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_0'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_6(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_1(uint256) := ϕ(['maxUpdateWindow_0', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_5(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_10(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_8(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
TMP_79(bool) = updatePeriod_1 != 0
Function name: _addVaderPair
[i]Type for TMP_79

Name: TMP_79 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_80(None) = SOLIDITY_CALL require(bool,string)(TMP_79,LBTWAP::addVaderPair: Incorrect Update Period)
[i]Type for TMP_80

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_81(uint8) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:decimals, arguments:[]  
Function name: _addVaderPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_81
hlc contract name: ORACLE func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_81

Name: TMP_81 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vader_5(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_4', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_7(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1', 'vaderPairs_6'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_2(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_1'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_6(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_5', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_11(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_10', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_9(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_8', 'twapData_3', 'twapData_15', 'twapData_21', 'twapData_7'])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
TMP_82(bool) = TMP_81 == 8
Function name: _addVaderPair
[i]Type for TMP_82

Name: TMP_82 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_83(None) = SOLIDITY_CALL require(bool,string)(TMP_82,LBTWAP::addVaderPair: Non-USD Oracle)
[i]Type for TMP_83

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_84 = CONVERT pair_1 to address
Function name: _addVaderPair

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: TMP_84 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_84

Name: TMP_84 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_56(ILiquidityBasedTWAP.ExchangePair) -> twapData_9[TMP_84]
Function name: _addVaderPair
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_56

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_56(ILiquidityBasedTWAP.ExchangePair)
Function name: _addVaderPair
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
TMP_85(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_85
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_85

Name: TMP_85 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_6(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_5', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_8(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_7', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_3(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_2'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_7(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_6', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_12(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_11'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_86(bool) = TMP_85 == vader_6
Function name: _addVaderPair
[i]Type for TMP_86

Name: TMP_86 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
isFirst_1(bool) := TMP_86(bool)
Function name: _addVaderPair
asgn

Name: TMP_86 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: isFirst Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for isFirst

Name: isFirst Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
isFirst_1(bool) := TMP_86(bool)
XXXXX
typecheckig node...
typecheckig node...
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
typecheckig node...
TMP_104(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_104
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_104

Name: TMP_104 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_7(address) := ϕ(['vader_6', 'vader_8', 'vader_10', 'vader_3', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_9(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_8', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_4(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_3', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_8(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_7', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_13(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_12', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_105(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token1, arguments:[]  
Function name: _addVaderPair
High Call: token1
func name:token1
other func name:token1
TMP_105
hlc contract name: VADERPAIR func_name: token1
('c', [-1], [-1], 0, 'TOK1')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK1', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_105

Name: TMP_105 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
vader_8(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_7'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_10(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_9', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_5(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_4'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_9(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_8', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_14(uint256[2]) := ϕ(['previousPrices_13', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeAsset_1(address) := TMP_104(address)
Function name: _addVaderPair
asgn

Name: TMP_104 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
foreignAsset_1(address) := TMP_105(address)
Function name: _addVaderPair
asgn

Name: TMP_105 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_106(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token1, arguments:[]  
Function name: _addVaderPair
High Call: token1
func name:token1
other func name:token1
TMP_106
hlc contract name: VADERPAIR func_name: token1
('c', [-1], [-1], 0, 'TOK1')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK1', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_106

Name: TMP_106 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
vader_9(address) := ϕ(['vader_3', 'vader_1', 'vader_8', 'vader_10'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_11(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_10', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_6(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_5', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_10(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_9', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_15(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_14', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_107(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_107
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_107

Name: TMP_107 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_10(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_9'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_12(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_11', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_7(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_6'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_11(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_10', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_16(uint256[2]) := ϕ(['previousPrices_15', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeAsset_2(address) := TMP_106(address)
Function name: _addVaderPair
asgn

Name: TMP_106 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
foreignAsset_2(address) := TMP_107(address)
Function name: _addVaderPair
asgn

Name: TMP_107 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
typecheckig node...
nativeAsset_3(address) := ϕ(['nativeAsset_1', 'nativeAsset_2'])
Function name: _addVaderPair
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
foreignAsset_3(address) := ϕ(['foreignAsset_1', 'foreignAsset_2'])
Function name: _addVaderPair
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_58(IAggregatorV3) -> oracles_1[foreignAsset_3]
Function name: _addVaderPair
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_58

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracles_2(mapping(address => IAggregatorV3)) := ϕ(['oracles_1'])
Function name: _addVaderPair
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_58 (->oracles_2) := oracle_1(IAggregatorV3)
Function name: _addVaderPair
asgn

Name: oracle Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef

Name: REF_58 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_58

Name: REF_58 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_87(bool) = nativeAsset_3 == vader_10
Function name: _addVaderPair
[i]Type for TMP_87

Name: TMP_87 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,LBTWAP::addVaderPair: Unsupported Pair)
[i]Type for TMP_88

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_59(address) -> pairData_1 (-> ['twapData']).foreignAsset
Function name: _addVaderPair
MEMBER
pairData
foreignAsset
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
[i]Type for REF_59

Name: pairData.foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: pairData.foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
done.
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_59 (->pairData_2 (-> ['twapData'])) := foreignAsset_3(address)
Function name: _addVaderPair
asgn

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_59

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
done.
twapData_10(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_60(uint96) -> pairData_2 (-> ['twapData']).foreignUnit
Function name: _addVaderPair
MEMBER
pairData
foreignUnit
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_60

Name: pairData.foreignUnit Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.foreignUnit Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_89 = CONVERT foreignAsset_3 to IERC20Metadata
Function name: _addVaderPair

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: TMP_89 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
[i]Type for TMP_89

Name: TMP_89 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
TMP_90(uint8) = HIGH_LEVEL_CALL, dest:TMP_89(IERC20Metadata), function:decimals, arguments:[]  
Function name: _addVaderPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_90
hlc contract name: TOK0 func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_90

Name: TMP_90 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_13(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_12', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_8(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_7', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_12(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_11', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_17(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_16', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_91 = CONVERT TMP_90 to uint256
Function name: _addVaderPair

Name: TMP_90 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_91 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_91

Name: TMP_91 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_92(uint256) = 10 (c)** TMP_91
Function name: _addVaderPair
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: TMP_91 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_92 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:*
-1
val: 10
1
[i]Type for TMP_92

Name: TMP_92 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_93 = CONVERT TMP_92 to uint96
Function name: _addVaderPair

Name: TMP_92 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: TMP_93 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_93

Name: TMP_93 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
pairData_3 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_60 (->pairData_3 (-> ['twapData'])) := TMP_93(uint96)
Function name: _addVaderPair
asgn

Name: TMP_93 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_60

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_11(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_62(uint256) -> pairData_3 (-> ['twapData']).updatePeriod
Function name: _addVaderPair
MEMBER
pairData
updatePeriod
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_62

Name: pairData.updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_4 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_62 (->pairData_4 (-> ['twapData'])) := updatePeriod_1(uint256)
Function name: _addVaderPair
asgn

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_62

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
twapData_12(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_63(uint256) -> pairData_4 (-> ['twapData']).lastMeasurement
Function name: _addVaderPair
MEMBER
pairData
lastMeasurement
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_63

Name: pairData.lastMeasurement Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_5 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_63 (->pairData_5 (-> ['twapData'])) := block.timestamp(uint256)
Function name: _addVaderPair
asgn
block.timestamp

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_63

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_63 (->pairData_5 (-> ['twapData'])) := block.timestamp(uint256)
XXXXX
twapData_13(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
typecheckig node...
REF_79(uint256) -> pairData_5 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addVaderPair
MEMBER
pairData
nativeTokenPriceCumulative
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_79

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_109(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price1CumulativeLast, arguments:[]  
Function name: _addVaderPair
High Call: price1CumulativeLast
func name:price1CumulativeLast
other func name:price1CumulativeLast
TMP_109
hlc contract name: VADERPAIR func_name: price1CumulativeLast
wfc len: 0
COPIED
[i]Type for TMP_109

Name: TMP_109 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_15(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_14', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_10(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_9'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_14(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_13', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_19(uint256[2]) := ϕ(['previousPrices_18', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pairData_7 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_79 (->pairData_7 (-> ['twapData'])) := TMP_109(uint256)
Function name: _addVaderPair
asgn

Name: TMP_109 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_79

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_16(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_7 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
pairData_8 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_6 (-> ['twapData'])", "pairData_7 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_77(uint256) -> pairData_5 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addVaderPair
MEMBER
pairData
nativeTokenPriceCumulative
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_77

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_108(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price0CumulativeLast, arguments:[]  
Function name: _addVaderPair
High Call: price0CumulativeLast
func name:price0CumulativeLast
other func name:price0CumulativeLast
TMP_108
hlc contract name: VADERPAIR func_name: price0CumulativeLast
wfc len: 0
COPIED
[i]Type for TMP_108

Name: TMP_108 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_14(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_13', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_9(uint256) := ϕ(['maxUpdateWindow_8', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_13(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_12', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_18(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_17', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pairData_6 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_77 (->pairData_6 (-> ['twapData'])) := TMP_108(uint256)
Function name: _addVaderPair
asgn

Name: TMP_108 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_77

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_14(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_6 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
TUPLE_4(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:getReserves, arguments:[]  
Function name: _addVaderPair
High Call: getReserves
func name:getReserves
other func name:getReserves
TUPLE_4
hlc contract name: VADERPAIR func_name: getReserves
('c', [-1], [-1], 'u', None)
('c', [-1], [-1], 'u', None)
('c', [-1], [-1], 'u', None)
wfc len: 3
COPIED
[i]Type for TUPLE_4

Name: TUPLE_4 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_16(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_15', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_11(uint256) := ϕ(['maxUpdateWindow_10', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_15(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_14', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_20(uint256[2]) := ϕ(['previousPrices_19', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserve0_1(uint256)= UNPACK TUPLE_4 index: 0 
Function name: _addVaderPair
Reading tuple TUPLE_4 index 0
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserve0

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserve1_1(uint256)= UNPACK TUPLE_4 index: 1 
Function name: _addVaderPair
Reading tuple TUPLE_4 index 1
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserve1

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
typecheckig node...
reserveNative_1(uint256) := reserve1_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_1(uint256) := reserve0_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
reserveNative_2(uint256) := reserve0_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_2(uint256) := reserve1_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
reserveNative_3(uint256) := ϕ(['reserveNative_1', 'reserveNative_2'])
Function name: _addVaderPair
Phi
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_3(uint256) := ϕ(['reserveForeign_1', 'reserveForeign_2'])
Function name: _addVaderPair
Phi
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_65(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: _addVaderPair
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_65

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_94 = CONVERT REF_65 to uint256
Function name: _addVaderPair

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_94 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_94

Name: TMP_94 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_66(uint256) -> previousPrices_20[TMP_94]
Function name: _addVaderPair
INDEX

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_66

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_95(uint256) = reserveNative_3 (c)* REF_66
Function name: _addVaderPair
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_95 Function: _addVaderPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_95

Name: TMP_95 Function: _addVaderPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_96(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(foreignAsset_3)
Function name: _addVaderPair
Internal call...
getChainlinkPrice
foreignAsset
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOK0
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
0

Name: PIC_2 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_96 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_96

Name: TMP_96 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_97(uint256) = reserveForeign_3 (c)* TMP_96
Function name: _addVaderPair
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_96 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_97 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_97

Name: TMP_97 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_98(uint256) = TMP_95 (c)+ TMP_97
Function name: _addVaderPair

Name: TMP_98 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_98

Name: TMP_98 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pairLiquidityEvaluation_1(uint256) := TMP_98(uint256)
Function name: _addVaderPair
asgn

Name: TMP_98 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairLiquidityEvaluation

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_67(uint256) -> pairData_8 (-> ['twapData']).pastLiquidityEvaluation
Function name: _addVaderPair
MEMBER
pairData
pastLiquidityEvaluation
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_67

Name: pairData.pastLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_9 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_8 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_67 (->pairData_9 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
Function name: _addVaderPair
asgn

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_67

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
twapData_15(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_9 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_68(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: _addVaderPair
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_68

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_99 = CONVERT REF_68 to uint256
Function name: _addVaderPair

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_99 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_99

Name: TMP_99 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_69(uint256) -> totalLiquidityWeight_16[TMP_99]
Function name: _addVaderPair
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalLiquidityWeight
[i]Type for REF_69

Name: None Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_69(uint256) -> totalLiquidityWeight_16[TMP_99]
XXXXX
totalLiquidityWeight_17(uint256[2]) := ϕ(['totalLiquidityWeight_16'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_69(-> totalLiquidityWeight_17) = REF_69 (c)+ pairLiquidityEvaluation_1
Function name: _addVaderPair

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_69

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_71 -> LENGTH vaderPairs_17
[i]Type for REF_71

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_101(uint256) := REF_71(uint256)
Function name: _addVaderPair
asgn

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_101 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_101

Name: TMP_101 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(uint256) = TMP_101 (c)+ 1
Function name: _addVaderPair
val: 1

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_18(IUniswapV2Pair[]) := ϕ(['vaderPairs_17'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_71 (->vaderPairs_18) := TMP_102(uint256)
Function name: _addVaderPair
asgn

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_71

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_72(IUniswapV2Pair) -> vaderPairs_18[TMP_101]
Function name: _addVaderPair
INDEX

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_72

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
vaderPairs_19(IUniswapV2Pair[]) := ϕ(['vaderPairs_18'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_72 (->vaderPairs_19) := pair_1(IUniswapV2Pair)
Function name: _addVaderPair
asgn

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: REF_72 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_72

Name: REF_72 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_103(bool) = maxUpdateWindow_12 < updatePeriod_1
Function name: _addVaderPair
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_103

Name: TMP_103 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_103
Condition...
Conidtion: 
TMP_103
TMP_103
typecheckig node...
maxUpdateWindow_13(uint256) := updatePeriod_1(uint256)
Function name: _addVaderPair
asgn

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxUpdateWindow Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
WORKLIST iteration 2 for function call "_addVaderPair":
 New undefined nodes- 3
 Old undefined nodes- 3
Saving return values for: _addVaderPair
done.
This IR caused addback:
INTERNAL_CALL, LiquidityBasedTWAP._addVaderPair(IUniswapV2Pair,IAggregatorV3,uint256)(pair_1,oracle_1,updatePeriod_1)
XXXXX
WORKLIST iteration 0 for function call "setupVader":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
previousPrices_5(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: setupVader
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, Ownable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
typecheckig node...
REF_49(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: setupVader
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_49

Name: Paths.VADER Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_68 = CONVERT REF_49 to uint256
Function name: setupVader

Name: Paths.VADER Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_68 Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_68

Name: TMP_68 Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_50(uint256) -> previousPrices_6[TMP_68]
Function name: setupVader
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
previousPrices
[i]Type for REF_50

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_50(uint256) -> previousPrices_6[TMP_68]
XXXXX
TMP_69(bool) = REF_50 == 0
Function name: setupVader
[i]Type for TMP_69

Name: TMP_69 Function: setupVader
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_70(None) = SOLIDITY_CALL require(bool,string)(TMP_69,LBTWAP::setupVader: Already Initialized)
[i]Type for TMP_70

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_51(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: setupVader
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_51

Name: Paths.VADER Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_71 = CONVERT REF_51 to uint256
Function name: setupVader

Name: Paths.VADER Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_71 Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_71

Name: TMP_71 Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_52(uint256) -> previousPrices_6[TMP_71]
Function name: setupVader
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
previousPrices
[i]Type for REF_52

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_52(uint256) -> previousPrices_6[TMP_71]
XXXXX
previousPrices_7(uint256[2]) := ϕ(['previousPrices_6'])
Function name: setupVader
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_52 (->previousPrices_7) := vaderPrice_1(uint256)
Function name: setupVader
asgn

Name: vaderPrice Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_52 Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_52

Name: REF_52 Function: setupVader
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, LiquidityBasedTWAP._addVaderPair(IUniswapV2Pair,IAggregatorV3,uint256)(pair_1,oracle_1,updatePeriod_1)
Internal call...
_addVaderPair
pair
oracle
updatePeriod
Function: _addVaderPair
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADERPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: ORACLE
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADERPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: ORACLE
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'VADERPAIR', [], -1]
cur_param: [[-1], [-1], 0, 'ORACLE', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADERPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: ORACLE
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'VADERPAIR', [], -1]
[[-1], [-1], 0, 'ORACLE', [], -1]
[[-1], [-1], 'u', None, [], -1]
0
done.
WORKLIST iteration 1 for function call "setupVader":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: setupVader
State_var: oracles
Finding type for oracles...
mapping(address => IAggregatorV3)
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: mapping(address => IAggregatorV3)
mapping(address => IAggregatorV3)
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: previousPrices
Finding type for previousPrices...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPool
Finding type for vaderPool...
IVaderPoolV2
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPOOL')
----
Type: IVaderPoolV2
IVaderPoolV2
Final Type: IVaderPoolV2
 NO FIELDS

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxUpdateWindow
Finding type for maxUpdateWindow...
uint256
Check copy_toekn_tuple
(-1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalLiquidityWeight
Finding type for totalLiquidityWeight...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: twapData
Finding type for twapData...
mapping(address => ILiquidityBasedTWAP.ExchangePair)
Check copy_toekn_tuple
(-1, -1, 0, 'EXCHANGEPAIR')
----
Type: mapping(address => ILiquidityBasedTWAP.ExchangePair)
mapping(address => ILiquidityBasedTWAP.ExchangePair)
ILiquidityBasedTWAP.ExchangePair
Final Type: ILiquidityBasedTWAP.ExchangePair
global
twapData
nativeTokenPriceCumulative
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
nativeTokenPriceAverage
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
nativeTokenPriceAverage
_x
FIELDS:
nativeTokenPriceAverage Fields:
^^^
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
twapData.nativeTokenPriceAverage
_x
FIELDS:
twapData.nativeTokenPriceAverage Fields:
^^^
global
twapData
lastMeasurement
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
updatePeriod
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
pastLiquidityEvaluation
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
foreignAsset
Check copy_toekn_tuple
([-1], [-1], [0], 'FOREIGNASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
twapData
foreignUnit
Check copy_toekn_tuple
([-1], [-1], [-404], None)
----
Type: uint96
uint96
Final Type: uint96
Type: uint96
uint96
Final Type: uint96
FIELDS:
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
[*]Type fetched successfully
State_var: vader
Finding type for vader...
address
Check copy_toekn_tuple
(2, -1, 0, 'VADER')
----
Type: address
address
Final Type: address

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPairs
Finding type for vaderPairs...
IUniswapV2Pair[]
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPAIR')
----
Type: IUniswapV2Pair[]
IUniswapV2Pair[]
IUniswapV2Pair
Final Type: IUniswapV2Pair
 NO FIELDS

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 0, 'OWNER')
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: usdvPairs
Finding type for usdvPairs...
IERC20[]
Check copy_toekn_tuple
(-1, -1, 0, 'USDVPAIR')
----
Type: IERC20[]
IERC20[]
IERC20
Final Type: IERC20
 NO FIELDS

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: addVaderPair
Function name: addVaderPair
Function Visibility (test): external
pair
Finding type for pair...
IUniswapV2Pair
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IUniswapV2Pair
IUniswapV2Pair
Final Type: IUniswapV2Pair
 NO FIELDS

Name: pair Function: addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
oracle
Finding type for oracle...
IAggregatorV3
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IAggregatorV3
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracle Function: addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
updatePeriod
Finding type for updatePeriod...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: updatePeriod Function: addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
previousPrices_8(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
typecheckig node...
previousPrices_8(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, Ownable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, Ownable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
REF_53(ILiquidityBasedTWAP.Paths) -> Paths.VADER
has variable
clearing ir...?
TMP_74 = CONVERT REF_53 to uint256
has variable
[i] TMP_74 cleared
clearing ir...?
REF_54(uint256) -> previousPrices_9[TMP_74]
has variable
clearing ir...?
TMP_75(bool) = REF_54 != 0
has variable
[i] TMP_75 cleared
clearing ir...?
TMP_76(None) = SOLIDITY_CALL require(bool,string)(TMP_75,LBTWAP::addVaderPair: Vader Uninitialized)
typecheckig node...
REF_53(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: addVaderPair
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_53

Name: Paths.VADER Function: addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_74 = CONVERT REF_53 to uint256
Function name: addVaderPair

Name: Paths.VADER Function: addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_74 Function: addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_74

Name: TMP_74 Function: addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_54(uint256) -> previousPrices_9[TMP_74]
Function name: addVaderPair
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
previousPrices
[i]Type for REF_54

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_54(uint256) -> previousPrices_9[TMP_74]
XXXXX
TMP_75(bool) = REF_54 != 0
Function name: addVaderPair
[i]Type for TMP_75

Name: TMP_75 Function: addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_76(None) = SOLIDITY_CALL require(bool,string)(TMP_75,LBTWAP::addVaderPair: Vader Uninitialized)
[i]Type for TMP_76

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LiquidityBasedTWAP._addVaderPair(IUniswapV2Pair,IAggregatorV3,uint256)(pair_1,oracle_1,updatePeriod_1)
typecheckig node...
INTERNAL_CALL, LiquidityBasedTWAP._addVaderPair(IUniswapV2Pair,IAggregatorV3,uint256)(pair_1,oracle_1,updatePeriod_1)
Internal call...
_addVaderPair
pair
oracle
updatePeriod
Function: _addVaderPair
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADERPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: ORACLE
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'VADERPAIR', [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'VADERPAIR', [], -1]
[[-1], [-1], 0, 'ORACLE', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _addVaderPair
Function Visibility: internal
clearning node...
clearing ir...?
pair_1(IUniswapV2Pair) := ϕ(['pair_1', 'pair_1'])
has variable
[i] pair cleared
clearing ir...?
oracle_1(IAggregatorV3) := ϕ(['oracle_1', 'oracle_1'])
has variable
[i] oracle cleared
clearing ir...?
updatePeriod_1(uint256) := ϕ(['updatePeriod_1', 'updatePeriod_1'])
has variable
[i] updatePeriod cleared
clearing ir...?
vader_4(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_0'])
has variable
clearing ir...?
vaderPairs_6(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_1(uint256) := ϕ(['maxUpdateWindow_0', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_5(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_10(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
twapData_8(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
has variable
typecheckig node...
pair_1(IUniswapV2Pair) := ϕ(['pair_1', 'pair_1'])
Function name: _addVaderPair
Phi
[i]Type for pair

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := ϕ(['oracle_1', 'oracle_1'])
Function name: _addVaderPair
Phi
[i]Type for oracle

Name: oracle Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
done.
updatePeriod_1(uint256) := ϕ(['updatePeriod_1', 'updatePeriod_1'])
Function name: _addVaderPair
Phi
[i]Type for updatePeriod

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vader_4(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_0'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_6(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_1(uint256) := ϕ(['maxUpdateWindow_0', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_5(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_10(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_8(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_79(bool) = updatePeriod_1 != 0
has variable
[i] TMP_79 cleared
clearing ir...?
TMP_80(None) = SOLIDITY_CALL require(bool,string)(TMP_79,LBTWAP::addVaderPair: Incorrect Update Period)
typecheckig node...
TMP_79(bool) = updatePeriod_1 != 0
Function name: _addVaderPair
[i]Type for TMP_79

Name: TMP_79 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_80(None) = SOLIDITY_CALL require(bool,string)(TMP_79,LBTWAP::addVaderPair: Incorrect Update Period)
[i]Type for TMP_80

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_81(uint8) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:decimals, arguments:[]  
has variable
[i] TMP_81 cleared
clearing ir...?
vader_5(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_4', 'vader_1'])
has variable
clearing ir...?
vaderPairs_7(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1', 'vaderPairs_6'])
has variable
clearing ir...?
maxUpdateWindow_2(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_1'])
has variable
clearing ir...?
totalLiquidityWeight_6(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_5', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_11(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_10', 'previousPrices_4'])
has variable
clearing ir...?
twapData_9(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_8', 'twapData_3', 'twapData_15', 'twapData_21', 'twapData_7'])
has variable
clearing ir...?
TMP_82(bool) = TMP_81 == 8
has variable
[i] TMP_82 cleared
clearing ir...?
TMP_83(None) = SOLIDITY_CALL require(bool,string)(TMP_82,LBTWAP::addVaderPair: Non-USD Oracle)
typecheckig node...
TMP_81(uint8) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:decimals, arguments:[]  
Function name: _addVaderPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_81
hlc contract name: ORACLE func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_81

Name: TMP_81 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vader_5(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_4', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_7(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1', 'vaderPairs_6'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_2(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_1'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_6(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_5', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_11(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_10', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_9(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_8', 'twapData_3', 'twapData_15', 'twapData_21', 'twapData_7'])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
TMP_82(bool) = TMP_81 == 8
Function name: _addVaderPair
[i]Type for TMP_82

Name: TMP_82 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_83(None) = SOLIDITY_CALL require(bool,string)(TMP_82,LBTWAP::addVaderPair: Non-USD Oracle)
[i]Type for TMP_83

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_84 = CONVERT pair_1 to address
has variable
[i] TMP_84 cleared
clearing ir...?
REF_56(ILiquidityBasedTWAP.ExchangePair) -> twapData_9[TMP_84]
has variable
clearing ir...?
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_56(ILiquidityBasedTWAP.ExchangePair)
has variable
[i] pairData cleared
typecheckig node...
TMP_84 = CONVERT pair_1 to address
Function name: _addVaderPair

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: TMP_84 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_84

Name: TMP_84 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_56(ILiquidityBasedTWAP.ExchangePair) -> twapData_9[TMP_84]
Function name: _addVaderPair
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_56

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_56(ILiquidityBasedTWAP.ExchangePair)
Function name: _addVaderPair
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_85(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
has variable
[i] TMP_85 cleared
clearing ir...?
vader_6(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_5', 'vader_1'])
has variable
clearing ir...?
vaderPairs_8(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_7', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_3(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_2'])
has variable
clearing ir...?
totalLiquidityWeight_7(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_6', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_12(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_11'])
has variable
clearing ir...?
TMP_86(bool) = TMP_85 == vader_6
has variable
[i] TMP_86 cleared
clearing ir...?
isFirst_1(bool) := TMP_86(bool)
has variable
[i] isFirst cleared
typecheckig node...
TMP_85(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_85
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_85

Name: TMP_85 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_6(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_5', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_8(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_7', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_3(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_2'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_7(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_6', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_12(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_11'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_86(bool) = TMP_85 == vader_6
Function name: _addVaderPair
[i]Type for TMP_86

Name: TMP_86 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
isFirst_1(bool) := TMP_86(bool)
Function name: _addVaderPair
asgn

Name: TMP_86 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: isFirst Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for isFirst

Name: isFirst Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
isFirst_1(bool) := TMP_86(bool)
XXXXX
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
CONDITION isFirst_1
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
clearning node...
clearing ir...?
TMP_104(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
has variable
[i] TMP_104 cleared
clearing ir...?
vader_7(address) := ϕ(['vader_6', 'vader_8', 'vader_10', 'vader_3', 'vader_1'])
has variable
clearing ir...?
vaderPairs_9(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_8', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_4(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_3', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_8(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_7', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_13(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_12', 'previousPrices_4'])
has variable
clearing ir...?
TMP_105(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token1, arguments:[]  
has variable
[i] TMP_105 cleared
clearing ir...?
vader_8(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_7'])
has variable
clearing ir...?
vaderPairs_10(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_9', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_5(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_4'])
has variable
clearing ir...?
totalLiquidityWeight_9(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_8', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_14(uint256[2]) := ϕ(['previousPrices_13', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
nativeAsset_1(address) := TMP_104(address)
has variable
[i] nativeAsset cleared
clearing ir...?
foreignAsset_1(address) := TMP_105(address)
has variable
[i] foreignAsset cleared
typecheckig node...
TMP_104(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_104
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_104

Name: TMP_104 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_7(address) := ϕ(['vader_6', 'vader_8', 'vader_10', 'vader_3', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_9(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_8', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_4(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_3', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_8(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_7', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_13(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_12', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_105(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token1, arguments:[]  
Function name: _addVaderPair
High Call: token1
func name:token1
other func name:token1
TMP_105
hlc contract name: VADERPAIR func_name: token1
('c', [-1], [-1], 0, 'TOK1')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK1', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_105

Name: TMP_105 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
vader_8(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_7'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_10(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_9', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_5(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_4'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_9(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_8', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_14(uint256[2]) := ϕ(['previousPrices_13', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeAsset_1(address) := TMP_104(address)
Function name: _addVaderPair
asgn

Name: TMP_104 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: nativeAsset Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: TOK0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
foreignAsset_1(address) := TMP_105(address)
Function name: _addVaderPair
asgn

Name: TMP_105 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef

Name: foreignAsset Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: TOK1
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_106(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token1, arguments:[]  
has variable
[i] TMP_106 cleared
clearing ir...?
vader_9(address) := ϕ(['vader_3', 'vader_1', 'vader_8', 'vader_10'])
has variable
clearing ir...?
vaderPairs_11(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_10', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_6(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_5', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_10(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_9', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_15(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_14', 'previousPrices_4'])
has variable
clearing ir...?
TMP_107(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
has variable
[i] TMP_107 cleared
clearing ir...?
vader_10(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_9'])
has variable
clearing ir...?
vaderPairs_12(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_11', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_7(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_6'])
has variable
clearing ir...?
totalLiquidityWeight_11(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_10', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_16(uint256[2]) := ϕ(['previousPrices_15', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
nativeAsset_2(address) := TMP_106(address)
has variable
[i] nativeAsset cleared
clearing ir...?
foreignAsset_2(address) := TMP_107(address)
has variable
[i] foreignAsset cleared
typecheckig node...
TMP_106(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token1, arguments:[]  
Function name: _addVaderPair
High Call: token1
func name:token1
other func name:token1
TMP_106
hlc contract name: VADERPAIR func_name: token1
('c', [-1], [-1], 0, 'TOK1')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK1', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_106

Name: TMP_106 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
vader_9(address) := ϕ(['vader_3', 'vader_1', 'vader_8', 'vader_10'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_11(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_10', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_6(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_5', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_10(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_9', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_15(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_14', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_107(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_107
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_107

Name: TMP_107 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_10(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_9'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_12(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_11', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_7(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_6'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_11(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_10', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_16(uint256[2]) := ϕ(['previousPrices_15', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeAsset_2(address) := TMP_106(address)
Function name: _addVaderPair
asgn

Name: TMP_106 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef

Name: nativeAsset Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: TOK1
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
foreignAsset_2(address) := TMP_107(address)
Function name: _addVaderPair
asgn

Name: TMP_107 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: foreignAsset Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: TOK0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
nativeAsset_3(address) := ϕ(['nativeAsset_1', 'nativeAsset_2'])
has variable
[i] nativeAsset cleared
clearing ir...?
foreignAsset_3(address) := ϕ(['foreignAsset_1', 'foreignAsset_2'])
has variable
[i] foreignAsset cleared
typecheckig node...
nativeAsset_3(address) := ϕ(['nativeAsset_1', 'nativeAsset_2'])
Function name: _addVaderPair
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
foreignAsset_3(address) := ϕ(['foreignAsset_1', 'foreignAsset_2'])
Function name: _addVaderPair
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_58(IAggregatorV3) -> oracles_1[foreignAsset_3]
has variable
clearing ir...?
oracles_2(mapping(address => IAggregatorV3)) := ϕ(['oracles_1'])
has variable
clearing ir...?
REF_58 (->oracles_2) := oracle_1(IAggregatorV3)
has variable
typecheckig node...
REF_58(IAggregatorV3) -> oracles_1[foreignAsset_3]
Function name: _addVaderPair
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_58

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracles_2(mapping(address => IAggregatorV3)) := ϕ(['oracles_1'])
Function name: _addVaderPair
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_58 (->oracles_2) := oracle_1(IAggregatorV3)
Function name: _addVaderPair
asgn

Name: oracle Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef

Name: REF_58 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_58

Name: REF_58 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_87(bool) = nativeAsset_3 == vader_10
has variable
[i] TMP_87 cleared
clearing ir...?
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,LBTWAP::addVaderPair: Unsupported Pair)
typecheckig node...
TMP_87(bool) = nativeAsset_3 == vader_10
Function name: _addVaderPair
[i]Type for TMP_87

Name: TMP_87 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,LBTWAP::addVaderPair: Unsupported Pair)
[i]Type for TMP_88

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_59(address) -> pairData_1 (-> ['twapData']).foreignAsset
has variable
clearing ir...?
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_59 (->pairData_2 (-> ['twapData'])) := foreignAsset_3(address)
has variable
clearing ir...?
twapData_10(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
has variable
typecheckig node...
REF_59(address) -> pairData_1 (-> ['twapData']).foreignAsset
Function name: _addVaderPair
MEMBER
pairData
foreignAsset
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
[i]Type for REF_59

Name: pairData.foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: pairData.foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
done.
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_59 (->pairData_2 (-> ['twapData'])) := foreignAsset_3(address)
Function name: _addVaderPair
asgn

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_59

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
done.
twapData_10(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_60(uint96) -> pairData_2 (-> ['twapData']).foreignUnit
has variable
clearing ir...?
TMP_89 = CONVERT foreignAsset_3 to IERC20Metadata
has variable
[i] TMP_89 cleared
clearing ir...?
TMP_90(uint8) = HIGH_LEVEL_CALL, dest:TMP_89(IERC20Metadata), function:decimals, arguments:[]  
has variable
[i] TMP_90 cleared
clearing ir...?
vaderPairs_13(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_12', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_8(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_7', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_12(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_11', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_17(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_16', 'previousPrices_4'])
has variable
clearing ir...?
TMP_91 = CONVERT TMP_90 to uint256
has variable
[i] TMP_91 cleared
clearing ir...?
TMP_92(uint256) = 10 (c)** TMP_91
has variable
[i] TMP_92 cleared
clearing ir...?
TMP_93 = CONVERT TMP_92 to uint96
has variable
[i] TMP_93 cleared
clearing ir...?
pairData_3 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_2 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_60 (->pairData_3 (-> ['twapData'])) := TMP_93(uint96)
has variable
clearing ir...?
twapData_11(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_3 (-> ['twapData'])"])
has variable
typecheckig node...
REF_60(uint96) -> pairData_2 (-> ['twapData']).foreignUnit
Function name: _addVaderPair
MEMBER
pairData
foreignUnit
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_60

Name: pairData.foreignUnit Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.foreignUnit Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_89 = CONVERT foreignAsset_3 to IERC20Metadata
Function name: _addVaderPair

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: TMP_89 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: TOK0
Fields: 
Finance Type: undef
[i]Type for TMP_89

Name: TMP_89 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
TMP_90(uint8) = HIGH_LEVEL_CALL, dest:TMP_89(IERC20Metadata), function:decimals, arguments:[]  
Function name: _addVaderPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_90
hlc contract name: TOK0 func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_90

Name: TMP_90 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_13(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_12', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_8(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_7', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_12(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_11', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_17(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_16', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_91 = CONVERT TMP_90 to uint256
Function name: _addVaderPair

Name: TMP_90 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_91 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_91

Name: TMP_91 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_92(uint256) = 10 (c)** TMP_91
Function name: _addVaderPair
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: TMP_91 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_92 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_92

Name: TMP_92 Function: _addVaderPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_93 = CONVERT TMP_92 to uint96
Function name: _addVaderPair

Name: TMP_92 Function: _addVaderPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: TMP_93 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_93

Name: TMP_93 Function: _addVaderPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_93 = CONVERT TMP_92 to uint96
XXXXX
pairData_3 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_60 (->pairData_3 (-> ['twapData'])) := TMP_93(uint96)
Function name: _addVaderPair
asgn

Name: TMP_93 Function: _addVaderPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_60

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_60 (->pairData_3 (-> ['twapData'])) := TMP_93(uint96)
XXXXX
twapData_11(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_62(uint256) -> pairData_3 (-> ['twapData']).updatePeriod
has variable
clearing ir...?
pairData_4 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_3 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_62 (->pairData_4 (-> ['twapData'])) := updatePeriod_1(uint256)
has variable
clearing ir...?
twapData_12(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_4 (-> ['twapData'])"])
has variable
typecheckig node...
REF_62(uint256) -> pairData_3 (-> ['twapData']).updatePeriod
Function name: _addVaderPair
MEMBER
pairData
updatePeriod
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_62

Name: pairData.updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_4 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_62 (->pairData_4 (-> ['twapData'])) := updatePeriod_1(uint256)
Function name: _addVaderPair
asgn

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_62

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
twapData_12(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_63(uint256) -> pairData_4 (-> ['twapData']).lastMeasurement
has variable
clearing ir...?
pairData_5 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_4 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_63 (->pairData_5 (-> ['twapData'])) := block.timestamp(uint256)
has variable
clearing ir...?
twapData_13(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_5 (-> ['twapData'])"])
has variable
typecheckig node...
REF_63(uint256) -> pairData_4 (-> ['twapData']).lastMeasurement
Function name: _addVaderPair
MEMBER
pairData
lastMeasurement
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_63

Name: pairData.lastMeasurement Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_5 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_63 (->pairData_5 (-> ['twapData'])) := block.timestamp(uint256)
Function name: _addVaderPair
asgn
block.timestamp

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_63

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_63 (->pairData_5 (-> ['twapData'])) := block.timestamp(uint256)
XXXXX
twapData_13(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
CONDITION isFirst_1
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
clearning node...
clearing ir...?
REF_79(uint256) -> pairData_5 (-> ['twapData']).nativeTokenPriceCumulative
has variable
clearing ir...?
TMP_109(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price1CumulativeLast, arguments:[]  
has variable
[i] TMP_109 cleared
clearing ir...?
vaderPairs_15(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_14', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_10(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_9'])
has variable
clearing ir...?
totalLiquidityWeight_14(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_13', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_19(uint256[2]) := ϕ(['previousPrices_18', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
pairData_7 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_79 (->pairData_7 (-> ['twapData'])) := TMP_109(uint256)
has variable
clearing ir...?
twapData_16(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_7 (-> ['twapData'])"])
has variable
typecheckig node...
REF_79(uint256) -> pairData_5 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addVaderPair
MEMBER
pairData
nativeTokenPriceCumulative
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_79

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_109(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price1CumulativeLast, arguments:[]  
Function name: _addVaderPair
High Call: price1CumulativeLast
func name:price1CumulativeLast
other func name:price1CumulativeLast
TMP_109
hlc contract name: VADERPAIR func_name: price1CumulativeLast
wfc len: 0
COPIED
[i]Type for TMP_109

Name: TMP_109 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_15(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_14', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_10(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_9'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_14(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_13', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_19(uint256[2]) := ϕ(['previousPrices_18', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pairData_7 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_79 (->pairData_7 (-> ['twapData'])) := TMP_109(uint256)
Function name: _addVaderPair
asgn

Name: TMP_109 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_79

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_16(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_7 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
pairData_8 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_6 (-> ['twapData'])", "pairData_7 (-> ['twapData'])"])
has variable
[i] pairData cleared
typecheckig node...
pairData_8 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_6 (-> ['twapData'])", "pairData_7 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_77(uint256) -> pairData_5 (-> ['twapData']).nativeTokenPriceCumulative
has variable
clearing ir...?
TMP_108(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price0CumulativeLast, arguments:[]  
has variable
[i] TMP_108 cleared
clearing ir...?
vaderPairs_14(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_13', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_9(uint256) := ϕ(['maxUpdateWindow_8', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_13(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_12', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_18(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_17', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
pairData_6 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_77 (->pairData_6 (-> ['twapData'])) := TMP_108(uint256)
has variable
clearing ir...?
twapData_14(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_6 (-> ['twapData'])"])
has variable
typecheckig node...
REF_77(uint256) -> pairData_5 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addVaderPair
MEMBER
pairData
nativeTokenPriceCumulative
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_77

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_108(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price0CumulativeLast, arguments:[]  
Function name: _addVaderPair
High Call: price0CumulativeLast
func name:price0CumulativeLast
other func name:price0CumulativeLast
TMP_108
hlc contract name: VADERPAIR func_name: price0CumulativeLast
wfc len: 0
COPIED
[i]Type for TMP_108

Name: TMP_108 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_14(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_13', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_9(uint256) := ϕ(['maxUpdateWindow_8', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_13(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_12', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_18(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_17', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pairData_6 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_77 (->pairData_6 (-> ['twapData'])) := TMP_108(uint256)
Function name: _addVaderPair
asgn

Name: TMP_108 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_77

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_14(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_6 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_4(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:getReserves, arguments:[]  
has variable
clearing ir...?
vaderPairs_16(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_15', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_11(uint256) := ϕ(['maxUpdateWindow_10', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_15(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_14', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_20(uint256[2]) := ϕ(['previousPrices_19', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
reserve0_1(uint256)= UNPACK TUPLE_4 index: 0 
has variable
[i] reserve0 cleared
clearing ir...?
reserve1_1(uint256)= UNPACK TUPLE_4 index: 1 
has variable
[i] reserve1 cleared
typecheckig node...
TUPLE_4(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:getReserves, arguments:[]  
Function name: _addVaderPair
High Call: getReserves
func name:getReserves
other func name:getReserves
TUPLE_4
hlc contract name: VADERPAIR func_name: getReserves
('c', [-1], [-1], 'u', None)
('c', [-1], [-1], 'u', None)
('c', [-1], [-1], 'u', None)
wfc len: 3
COPIED
[i]Type for TUPLE_4

Name: TUPLE_4 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_16(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_15', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_11(uint256) := ϕ(['maxUpdateWindow_10', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_15(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_14', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_20(uint256[2]) := ϕ(['previousPrices_19', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserve0_1(uint256)= UNPACK TUPLE_4 index: 0 
Function name: _addVaderPair
Reading tuple TUPLE_4 index 0
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserve0

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserve1_1(uint256)= UNPACK TUPLE_4 index: 1 
Function name: _addVaderPair
Reading tuple TUPLE_4 index 1
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserve1

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
CONDITION isFirst_1
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
clearning node...
clearing ir...?
reserveNative_1(uint256) := reserve1_1(uint256)
has variable
[i] reserveNative cleared
clearing ir...?
reserveForeign_1(uint256) := reserve0_1(uint256)
has variable
[i] reserveForeign cleared
typecheckig node...
reserveNative_1(uint256) := reserve1_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveNative Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_1(uint256) := reserve0_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveForeign Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
reserveNative_2(uint256) := reserve0_1(uint256)
has variable
[i] reserveNative cleared
clearing ir...?
reserveForeign_2(uint256) := reserve1_1(uint256)
has variable
[i] reserveForeign cleared
typecheckig node...
reserveNative_2(uint256) := reserve0_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveNative Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_2(uint256) := reserve1_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveForeign Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
reserveNative_3(uint256) := ϕ(['reserveNative_1', 'reserveNative_2'])
has variable
[i] reserveNative cleared
clearing ir...?
reserveForeign_3(uint256) := ϕ(['reserveForeign_1', 'reserveForeign_2'])
has variable
[i] reserveForeign cleared
typecheckig node...
reserveNative_3(uint256) := ϕ(['reserveNative_1', 'reserveNative_2'])
Function name: _addVaderPair
Phi
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_3(uint256) := ϕ(['reserveForeign_1', 'reserveForeign_2'])
Function name: _addVaderPair
Phi
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_65(ILiquidityBasedTWAP.Paths) -> Paths.VADER
has variable
clearing ir...?
TMP_94 = CONVERT REF_65 to uint256
has variable
[i] TMP_94 cleared
clearing ir...?
REF_66(uint256) -> previousPrices_20[TMP_94]
has variable
clearing ir...?
TMP_95(uint256) = reserveNative_3 (c)* REF_66
has variable
[i] TMP_95 cleared
clearing ir...?
TMP_96(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(foreignAsset_3)
has variable
[i] TMP_96 cleared
clearing ir...?
TMP_97(uint256) = reserveForeign_3 (c)* TMP_96
has variable
[i] TMP_97 cleared
clearing ir...?
TMP_98(uint256) = TMP_95 (c)+ TMP_97
has variable
[i] TMP_98 cleared
clearing ir...?
pairLiquidityEvaluation_1(uint256) := TMP_98(uint256)
has variable
[i] pairLiquidityEvaluation cleared
typecheckig node...
REF_65(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: _addVaderPair
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_65

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_94 = CONVERT REF_65 to uint256
Function name: _addVaderPair

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_94 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_94

Name: TMP_94 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_66(uint256) -> previousPrices_20[TMP_94]
Function name: _addVaderPair
INDEX

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_66

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_95(uint256) = reserveNative_3 (c)* REF_66
Function name: _addVaderPair
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_95 Function: _addVaderPair
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_95

Name: TMP_95 Function: _addVaderPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_96(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(foreignAsset_3)
Function name: _addVaderPair
Internal call...
getChainlinkPrice
foreignAsset
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOK0
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
0

Name: PIC_2 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_96 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_96

Name: TMP_96 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_97(uint256) = reserveForeign_3 (c)* TMP_96
Function name: _addVaderPair
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_96 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_97 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_97

Name: TMP_97 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_98(uint256) = TMP_95 (c)+ TMP_97
Function name: _addVaderPair

Name: TMP_98 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_98

Name: TMP_98 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairLiquidityEvaluation_1(uint256) := TMP_98(uint256)
Function name: _addVaderPair
asgn

Name: TMP_98 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairLiquidityEvaluation

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pairLiquidityEvaluation_1(uint256) := TMP_98(uint256)
XXXXX
clearning node...
clearing ir...?
REF_67(uint256) -> pairData_8 (-> ['twapData']).pastLiquidityEvaluation
has variable
clearing ir...?
pairData_9 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_8 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_67 (->pairData_9 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
has variable
clearing ir...?
twapData_15(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_9 (-> ['twapData'])"])
has variable
typecheckig node...
REF_67(uint256) -> pairData_8 (-> ['twapData']).pastLiquidityEvaluation
Function name: _addVaderPair
MEMBER
pairData
pastLiquidityEvaluation
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_67

Name: pairData.pastLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_9 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_8 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_67 (->pairData_9 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
Function name: _addVaderPair
asgn

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_67

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_67 (->pairData_9 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
XXXXX
twapData_15(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_9 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_68(ILiquidityBasedTWAP.Paths) -> Paths.VADER
has variable
clearing ir...?
TMP_99 = CONVERT REF_68 to uint256
has variable
[i] TMP_99 cleared
clearing ir...?
REF_69(uint256) -> totalLiquidityWeight_16[TMP_99]
has variable
clearing ir...?
totalLiquidityWeight_17(uint256[2]) := ϕ(['totalLiquidityWeight_16'])
has variable
clearing ir...?
REF_69(-> totalLiquidityWeight_17) = REF_69 (c)+ pairLiquidityEvaluation_1
has variable
typecheckig node...
REF_68(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: _addVaderPair
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_68

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_99 = CONVERT REF_68 to uint256
Function name: _addVaderPair

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_99 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_99

Name: TMP_99 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_69(uint256) -> totalLiquidityWeight_16[TMP_99]
Function name: _addVaderPair
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalLiquidityWeight
[i]Type for REF_69

Name: None Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_69(uint256) -> totalLiquidityWeight_16[TMP_99]
XXXXX
totalLiquidityWeight_17(uint256[2]) := ϕ(['totalLiquidityWeight_16'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_69(-> totalLiquidityWeight_17) = REF_69 (c)+ pairLiquidityEvaluation_1
Function name: _addVaderPair

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_69

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_69(-> totalLiquidityWeight_17) = REF_69 (c)+ pairLiquidityEvaluation_1
XXXXX
clearning node...
clearing ir...?
REF_71 -> LENGTH vaderPairs_17
clearing ir...?
TMP_101(uint256) := REF_71(uint256)
has variable
[i] TMP_101 cleared
clearing ir...?
TMP_102(uint256) = TMP_101 (c)+ 1
has variable
[i] TMP_102 cleared
clearing ir...?
vaderPairs_18(IUniswapV2Pair[]) := ϕ(['vaderPairs_17'])
has variable
clearing ir...?
REF_71 (->vaderPairs_18) := TMP_102(uint256)
has variable
clearing ir...?
REF_72(IUniswapV2Pair) -> vaderPairs_18[TMP_101]
has variable
clearing ir...?
vaderPairs_19(IUniswapV2Pair[]) := ϕ(['vaderPairs_18'])
has variable
clearing ir...?
REF_72 (->vaderPairs_19) := pair_1(IUniswapV2Pair)
has variable
typecheckig node...
REF_71 -> LENGTH vaderPairs_17
[i]Type for REF_71

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_101(uint256) := REF_71(uint256)
Function name: _addVaderPair
asgn

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_101 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_101

Name: TMP_101 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(uint256) = TMP_101 (c)+ 1
Function name: _addVaderPair
val: 1

Name: TMP_102 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: _addVaderPair
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_18(IUniswapV2Pair[]) := ϕ(['vaderPairs_17'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_71 (->vaderPairs_18) := TMP_102(uint256)
Function name: _addVaderPair
asgn

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_71

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_72(IUniswapV2Pair) -> vaderPairs_18[TMP_101]
Function name: _addVaderPair
INDEX

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_72

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
vaderPairs_19(IUniswapV2Pair[]) := ϕ(['vaderPairs_18'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_72 (->vaderPairs_19) := pair_1(IUniswapV2Pair)
Function name: _addVaderPair
asgn

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: REF_72 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_72

Name: REF_72 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_103(bool) = maxUpdateWindow_12 < updatePeriod_1
has variable
[i] TMP_103 cleared
clearing ir...?
CONDITION TMP_103
typecheckig node...
TMP_103(bool) = maxUpdateWindow_12 < updatePeriod_1
Function name: _addVaderPair
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_103

Name: TMP_103 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_103
Condition...
Conidtion: 
TMP_103
TMP_103
clearning node...
clearing ir...?
maxUpdateWindow_13(uint256) := updatePeriod_1(uint256)
has variable
typecheckig node...
maxUpdateWindow_13(uint256) := updatePeriod_1(uint256)
Function name: _addVaderPair
asgn

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxUpdateWindow Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "_addVaderPair":
 New undefined nodes- 6
 Old undefined nodes- 0
typecheckig node...
pair_1(IUniswapV2Pair) := ϕ(['pair_1', 'pair_1'])
Function name: _addVaderPair
Phi
[i]Type for pair

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := ϕ(['oracle_1', 'oracle_1'])
Function name: _addVaderPair
Phi
[i]Type for oracle

Name: oracle Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
done.
updatePeriod_1(uint256) := ϕ(['updatePeriod_1', 'updatePeriod_1'])
Function name: _addVaderPair
Phi
[i]Type for updatePeriod

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vader_4(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_0'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_6(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_1(uint256) := ϕ(['maxUpdateWindow_0', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_5(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_10(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_8(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
TMP_79(bool) = updatePeriod_1 != 0
Function name: _addVaderPair
[i]Type for TMP_79

Name: TMP_79 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_80(None) = SOLIDITY_CALL require(bool,string)(TMP_79,LBTWAP::addVaderPair: Incorrect Update Period)
[i]Type for TMP_80

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_81(uint8) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:decimals, arguments:[]  
Function name: _addVaderPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_81
hlc contract name: ORACLE func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_81

Name: TMP_81 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vader_5(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_4', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_7(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1', 'vaderPairs_6'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_2(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_1'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_6(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_5', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_11(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_10', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_9(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_8', 'twapData_3', 'twapData_15', 'twapData_21', 'twapData_7'])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
TMP_82(bool) = TMP_81 == 8
Function name: _addVaderPair
[i]Type for TMP_82

Name: TMP_82 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_83(None) = SOLIDITY_CALL require(bool,string)(TMP_82,LBTWAP::addVaderPair: Non-USD Oracle)
[i]Type for TMP_83

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_84 = CONVERT pair_1 to address
Function name: _addVaderPair

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: TMP_84 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_84

Name: TMP_84 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_56(ILiquidityBasedTWAP.ExchangePair) -> twapData_9[TMP_84]
Function name: _addVaderPair
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_56

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_56(ILiquidityBasedTWAP.ExchangePair)
Function name: _addVaderPair
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
TMP_85(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_85
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_85

Name: TMP_85 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_6(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_5', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_8(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_7', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_3(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_2'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_7(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_6', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_12(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_11'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_86(bool) = TMP_85 == vader_6
Function name: _addVaderPair
[i]Type for TMP_86

Name: TMP_86 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
isFirst_1(bool) := TMP_86(bool)
Function name: _addVaderPair
asgn

Name: TMP_86 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: isFirst Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for isFirst

Name: isFirst Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
isFirst_1(bool) := TMP_86(bool)
XXXXX
typecheckig node...
typecheckig node...
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
typecheckig node...
TMP_104(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_104
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_104

Name: TMP_104 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_7(address) := ϕ(['vader_6', 'vader_8', 'vader_10', 'vader_3', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_9(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_8', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_4(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_3', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_8(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_7', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_13(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_12', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_105(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token1, arguments:[]  
Function name: _addVaderPair
High Call: token1
func name:token1
other func name:token1
TMP_105
hlc contract name: VADERPAIR func_name: token1
('c', [-1], [-1], 0, 'TOK1')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK1', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_105

Name: TMP_105 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
vader_8(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_7'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_10(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_9', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_5(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_4'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_9(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_8', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_14(uint256[2]) := ϕ(['previousPrices_13', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeAsset_1(address) := TMP_104(address)
Function name: _addVaderPair
asgn

Name: TMP_104 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
foreignAsset_1(address) := TMP_105(address)
Function name: _addVaderPair
asgn

Name: TMP_105 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_106(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token1, arguments:[]  
Function name: _addVaderPair
High Call: token1
func name:token1
other func name:token1
TMP_106
hlc contract name: VADERPAIR func_name: token1
('c', [-1], [-1], 0, 'TOK1')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK1', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_106

Name: TMP_106 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
vader_9(address) := ϕ(['vader_3', 'vader_1', 'vader_8', 'vader_10'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_11(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_10', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_6(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_5', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_10(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_9', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_15(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_14', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_107(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_107
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_107

Name: TMP_107 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_10(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_9'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_12(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_11', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_7(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_6'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_11(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_10', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_16(uint256[2]) := ϕ(['previousPrices_15', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeAsset_2(address) := TMP_106(address)
Function name: _addVaderPair
asgn

Name: TMP_106 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
foreignAsset_2(address) := TMP_107(address)
Function name: _addVaderPair
asgn

Name: TMP_107 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
typecheckig node...
nativeAsset_3(address) := ϕ(['nativeAsset_1', 'nativeAsset_2'])
Function name: _addVaderPair
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
foreignAsset_3(address) := ϕ(['foreignAsset_1', 'foreignAsset_2'])
Function name: _addVaderPair
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_58(IAggregatorV3) -> oracles_1[foreignAsset_3]
Function name: _addVaderPair
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_58

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracles_2(mapping(address => IAggregatorV3)) := ϕ(['oracles_1'])
Function name: _addVaderPair
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_58 (->oracles_2) := oracle_1(IAggregatorV3)
Function name: _addVaderPair
asgn

Name: oracle Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef

Name: REF_58 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_58

Name: REF_58 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_87(bool) = nativeAsset_3 == vader_10
Function name: _addVaderPair
[i]Type for TMP_87

Name: TMP_87 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,LBTWAP::addVaderPair: Unsupported Pair)
[i]Type for TMP_88

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_59(address) -> pairData_1 (-> ['twapData']).foreignAsset
Function name: _addVaderPair
MEMBER
pairData
foreignAsset
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
[i]Type for REF_59

Name: pairData.foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: pairData.foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
done.
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_59 (->pairData_2 (-> ['twapData'])) := foreignAsset_3(address)
Function name: _addVaderPair
asgn

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_59

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
done.
twapData_10(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_60(uint96) -> pairData_2 (-> ['twapData']).foreignUnit
Function name: _addVaderPair
MEMBER
pairData
foreignUnit
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_60

Name: pairData.foreignUnit Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.foreignUnit Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_89 = CONVERT foreignAsset_3 to IERC20Metadata
Function name: _addVaderPair

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: TMP_89 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
[i]Type for TMP_89

Name: TMP_89 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
TMP_90(uint8) = HIGH_LEVEL_CALL, dest:TMP_89(IERC20Metadata), function:decimals, arguments:[]  
Function name: _addVaderPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_90
hlc contract name: TOK0 func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_90

Name: TMP_90 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_13(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_12', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_8(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_7', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_12(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_11', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_17(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_16', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_91 = CONVERT TMP_90 to uint256
Function name: _addVaderPair

Name: TMP_90 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_91 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_91

Name: TMP_91 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_92(uint256) = 10 (c)** TMP_91
Function name: _addVaderPair
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: TMP_91 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_92 Function: _addVaderPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_92

Name: TMP_92 Function: _addVaderPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_93 = CONVERT TMP_92 to uint96
Function name: _addVaderPair

Name: TMP_92 Function: _addVaderPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: TMP_93 Function: _addVaderPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_93

Name: TMP_93 Function: _addVaderPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_93 = CONVERT TMP_92 to uint96
XXXXX
pairData_3 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_60 (->pairData_3 (-> ['twapData'])) := TMP_93(uint96)
Function name: _addVaderPair
asgn

Name: TMP_93 Function: _addVaderPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_60

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_60 (->pairData_3 (-> ['twapData'])) := TMP_93(uint96)
XXXXX
twapData_11(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_62(uint256) -> pairData_3 (-> ['twapData']).updatePeriod
Function name: _addVaderPair
MEMBER
pairData
updatePeriod
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_62

Name: pairData.updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_4 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_62 (->pairData_4 (-> ['twapData'])) := updatePeriod_1(uint256)
Function name: _addVaderPair
asgn

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_62

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
twapData_12(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_63(uint256) -> pairData_4 (-> ['twapData']).lastMeasurement
Function name: _addVaderPair
MEMBER
pairData
lastMeasurement
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_63

Name: pairData.lastMeasurement Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_5 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_63 (->pairData_5 (-> ['twapData'])) := block.timestamp(uint256)
Function name: _addVaderPair
asgn
block.timestamp

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_63

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_63 (->pairData_5 (-> ['twapData'])) := block.timestamp(uint256)
XXXXX
twapData_13(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
typecheckig node...
REF_79(uint256) -> pairData_5 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addVaderPair
MEMBER
pairData
nativeTokenPriceCumulative
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_79

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_109(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price1CumulativeLast, arguments:[]  
Function name: _addVaderPair
High Call: price1CumulativeLast
func name:price1CumulativeLast
other func name:price1CumulativeLast
TMP_109
hlc contract name: VADERPAIR func_name: price1CumulativeLast
wfc len: 0
COPIED
[i]Type for TMP_109

Name: TMP_109 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_15(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_14', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_10(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_9'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_14(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_13', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_19(uint256[2]) := ϕ(['previousPrices_18', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pairData_7 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_79 (->pairData_7 (-> ['twapData'])) := TMP_109(uint256)
Function name: _addVaderPair
asgn

Name: TMP_109 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_79

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_16(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_7 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
pairData_8 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_6 (-> ['twapData'])", "pairData_7 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_77(uint256) -> pairData_5 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addVaderPair
MEMBER
pairData
nativeTokenPriceCumulative
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_77

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_108(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price0CumulativeLast, arguments:[]  
Function name: _addVaderPair
High Call: price0CumulativeLast
func name:price0CumulativeLast
other func name:price0CumulativeLast
TMP_108
hlc contract name: VADERPAIR func_name: price0CumulativeLast
wfc len: 0
COPIED
[i]Type for TMP_108

Name: TMP_108 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_14(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_13', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_9(uint256) := ϕ(['maxUpdateWindow_8', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_13(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_12', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_18(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_17', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pairData_6 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_77 (->pairData_6 (-> ['twapData'])) := TMP_108(uint256)
Function name: _addVaderPair
asgn

Name: TMP_108 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_77

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_14(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_6 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
TUPLE_4(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:getReserves, arguments:[]  
Function name: _addVaderPair
High Call: getReserves
func name:getReserves
other func name:getReserves
TUPLE_4
hlc contract name: VADERPAIR func_name: getReserves
('c', [-1], [-1], 'u', None)
('c', [-1], [-1], 'u', None)
('c', [-1], [-1], 'u', None)
wfc len: 3
COPIED
[i]Type for TUPLE_4

Name: TUPLE_4 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_16(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_15', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_11(uint256) := ϕ(['maxUpdateWindow_10', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_15(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_14', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_20(uint256[2]) := ϕ(['previousPrices_19', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserve0_1(uint256)= UNPACK TUPLE_4 index: 0 
Function name: _addVaderPair
Reading tuple TUPLE_4 index 0
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserve0

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserve1_1(uint256)= UNPACK TUPLE_4 index: 1 
Function name: _addVaderPair
Reading tuple TUPLE_4 index 1
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserve1

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
typecheckig node...
reserveNative_1(uint256) := reserve1_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_1(uint256) := reserve0_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
reserveNative_2(uint256) := reserve0_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_2(uint256) := reserve1_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
reserveNative_3(uint256) := ϕ(['reserveNative_1', 'reserveNative_2'])
Function name: _addVaderPair
Phi
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_3(uint256) := ϕ(['reserveForeign_1', 'reserveForeign_2'])
Function name: _addVaderPair
Phi
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_65(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: _addVaderPair
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_65

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_94 = CONVERT REF_65 to uint256
Function name: _addVaderPair

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_94 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_94

Name: TMP_94 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_66(uint256) -> previousPrices_20[TMP_94]
Function name: _addVaderPair
INDEX

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_66

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_95(uint256) = reserveNative_3 (c)* REF_66
Function name: _addVaderPair
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_95 Function: _addVaderPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_95

Name: TMP_95 Function: _addVaderPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_96(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(foreignAsset_3)
Function name: _addVaderPair
Internal call...
getChainlinkPrice
foreignAsset
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOK0
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
0

Name: PIC_2 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_96 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_96

Name: TMP_96 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_97(uint256) = reserveForeign_3 (c)* TMP_96
Function name: _addVaderPair
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_96 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_97 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_97

Name: TMP_97 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_98(uint256) = TMP_95 (c)+ TMP_97
Function name: _addVaderPair

Name: TMP_98 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_98

Name: TMP_98 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairLiquidityEvaluation_1(uint256) := TMP_98(uint256)
Function name: _addVaderPair
asgn

Name: TMP_98 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairLiquidityEvaluation

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pairLiquidityEvaluation_1(uint256) := TMP_98(uint256)
XXXXX
typecheckig node...
REF_67(uint256) -> pairData_8 (-> ['twapData']).pastLiquidityEvaluation
Function name: _addVaderPair
MEMBER
pairData
pastLiquidityEvaluation
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_67

Name: pairData.pastLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_9 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_8 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_67 (->pairData_9 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
Function name: _addVaderPair
asgn

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_67

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_67 (->pairData_9 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
XXXXX
twapData_15(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_9 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_68(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: _addVaderPair
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_68

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_99 = CONVERT REF_68 to uint256
Function name: _addVaderPair

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_99 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_99

Name: TMP_99 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_69(uint256) -> totalLiquidityWeight_16[TMP_99]
Function name: _addVaderPair
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalLiquidityWeight
[i]Type for REF_69

Name: None Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_69(uint256) -> totalLiquidityWeight_16[TMP_99]
XXXXX
totalLiquidityWeight_17(uint256[2]) := ϕ(['totalLiquidityWeight_16'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_69(-> totalLiquidityWeight_17) = REF_69 (c)+ pairLiquidityEvaluation_1
Function name: _addVaderPair

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_69

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_69(-> totalLiquidityWeight_17) = REF_69 (c)+ pairLiquidityEvaluation_1
XXXXX
typecheckig node...
REF_71 -> LENGTH vaderPairs_17
[i]Type for REF_71

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_101(uint256) := REF_71(uint256)
Function name: _addVaderPair
asgn

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_101 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_101

Name: TMP_101 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(uint256) = TMP_101 (c)+ 1
Function name: _addVaderPair
val: 1

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_18(IUniswapV2Pair[]) := ϕ(['vaderPairs_17'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_71 (->vaderPairs_18) := TMP_102(uint256)
Function name: _addVaderPair
asgn

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_71

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_72(IUniswapV2Pair) -> vaderPairs_18[TMP_101]
Function name: _addVaderPair
INDEX

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_72

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
vaderPairs_19(IUniswapV2Pair[]) := ϕ(['vaderPairs_18'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_72 (->vaderPairs_19) := pair_1(IUniswapV2Pair)
Function name: _addVaderPair
asgn

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: REF_72 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_72

Name: REF_72 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_103(bool) = maxUpdateWindow_12 < updatePeriod_1
Function name: _addVaderPair
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_103

Name: TMP_103 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_103
Condition...
Conidtion: 
TMP_103
TMP_103
typecheckig node...
maxUpdateWindow_13(uint256) := updatePeriod_1(uint256)
Function name: _addVaderPair
asgn

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxUpdateWindow Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
WORKLIST iteration 1 for function call "_addVaderPair":
 New undefined nodes- 6
 Old undefined nodes- 6
Saving return values for: _addVaderPair
done.
This IR caused addback:
INTERNAL_CALL, LiquidityBasedTWAP._addVaderPair(IUniswapV2Pair,IAggregatorV3,uint256)(pair_1,oracle_1,updatePeriod_1)
XXXXX
WORKLIST iteration 0 for function call "addVaderPair":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
previousPrices_8(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, Ownable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
typecheckig node...
REF_53(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: addVaderPair
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_53

Name: Paths.VADER Function: addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_74 = CONVERT REF_53 to uint256
Function name: addVaderPair

Name: Paths.VADER Function: addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_74 Function: addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_74

Name: TMP_74 Function: addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_54(uint256) -> previousPrices_9[TMP_74]
Function name: addVaderPair
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
previousPrices
[i]Type for REF_54

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_54(uint256) -> previousPrices_9[TMP_74]
XXXXX
TMP_75(bool) = REF_54 != 0
Function name: addVaderPair
[i]Type for TMP_75

Name: TMP_75 Function: addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_76(None) = SOLIDITY_CALL require(bool,string)(TMP_75,LBTWAP::addVaderPair: Vader Uninitialized)
[i]Type for TMP_76

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, LiquidityBasedTWAP._addVaderPair(IUniswapV2Pair,IAggregatorV3,uint256)(pair_1,oracle_1,updatePeriod_1)
Internal call...
_addVaderPair
pair
oracle
updatePeriod
Function: _addVaderPair
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: VADERPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: ORACLE
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'VADERPAIR', [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'VADERPAIR', [], -1]
[[-1], [-1], 0, 'ORACLE', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _addVaderPair
Function Visibility: internal
clearning node...
clearing ir...?
pair_1(IUniswapV2Pair) := ϕ(['pair_1', 'pair_1'])
has variable
[i] pair cleared
clearing ir...?
oracle_1(IAggregatorV3) := ϕ(['oracle_1', 'oracle_1'])
has variable
[i] oracle cleared
clearing ir...?
updatePeriod_1(uint256) := ϕ(['updatePeriod_1', 'updatePeriod_1'])
has variable
[i] updatePeriod cleared
clearing ir...?
vader_4(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_0'])
has variable
clearing ir...?
vaderPairs_6(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_1(uint256) := ϕ(['maxUpdateWindow_0', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_5(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_10(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
twapData_8(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
has variable
typecheckig node...
pair_1(IUniswapV2Pair) := ϕ(['pair_1', 'pair_1'])
Function name: _addVaderPair
Phi
[i]Type for pair

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := ϕ(['oracle_1', 'oracle_1'])
Function name: _addVaderPair
Phi
[i]Type for oracle

Name: oracle Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
done.
updatePeriod_1(uint256) := ϕ(['updatePeriod_1', 'updatePeriod_1'])
Function name: _addVaderPair
Phi
[i]Type for updatePeriod

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vader_4(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_0'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_6(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_1(uint256) := ϕ(['maxUpdateWindow_0', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_5(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_10(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_8(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_79(bool) = updatePeriod_1 != 0
has variable
[i] TMP_79 cleared
clearing ir...?
TMP_80(None) = SOLIDITY_CALL require(bool,string)(TMP_79,LBTWAP::addVaderPair: Incorrect Update Period)
typecheckig node...
TMP_79(bool) = updatePeriod_1 != 0
Function name: _addVaderPair
[i]Type for TMP_79

Name: TMP_79 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_80(None) = SOLIDITY_CALL require(bool,string)(TMP_79,LBTWAP::addVaderPair: Incorrect Update Period)
[i]Type for TMP_80

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_81(uint8) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:decimals, arguments:[]  
has variable
[i] TMP_81 cleared
clearing ir...?
vader_5(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_4', 'vader_1'])
has variable
clearing ir...?
vaderPairs_7(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1', 'vaderPairs_6'])
has variable
clearing ir...?
maxUpdateWindow_2(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_1'])
has variable
clearing ir...?
totalLiquidityWeight_6(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_5', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_11(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_10', 'previousPrices_4'])
has variable
clearing ir...?
twapData_9(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_8', 'twapData_3', 'twapData_15', 'twapData_21', 'twapData_7'])
has variable
clearing ir...?
TMP_82(bool) = TMP_81 == 8
has variable
[i] TMP_82 cleared
clearing ir...?
TMP_83(None) = SOLIDITY_CALL require(bool,string)(TMP_82,LBTWAP::addVaderPair: Non-USD Oracle)
typecheckig node...
TMP_81(uint8) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:decimals, arguments:[]  
Function name: _addVaderPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_81
hlc contract name: ORACLE func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_81

Name: TMP_81 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vader_5(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_4', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_7(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1', 'vaderPairs_6'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_2(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_1'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_6(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_5', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_11(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_10', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_9(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_8', 'twapData_3', 'twapData_15', 'twapData_21', 'twapData_7'])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
TMP_82(bool) = TMP_81 == 8
Function name: _addVaderPair
[i]Type for TMP_82

Name: TMP_82 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_83(None) = SOLIDITY_CALL require(bool,string)(TMP_82,LBTWAP::addVaderPair: Non-USD Oracle)
[i]Type for TMP_83

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_84 = CONVERT pair_1 to address
has variable
[i] TMP_84 cleared
clearing ir...?
REF_56(ILiquidityBasedTWAP.ExchangePair) -> twapData_9[TMP_84]
has variable
clearing ir...?
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_56(ILiquidityBasedTWAP.ExchangePair)
has variable
[i] pairData cleared
typecheckig node...
TMP_84 = CONVERT pair_1 to address
Function name: _addVaderPair

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: TMP_84 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_84

Name: TMP_84 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_56(ILiquidityBasedTWAP.ExchangePair) -> twapData_9[TMP_84]
Function name: _addVaderPair
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_56

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_56(ILiquidityBasedTWAP.ExchangePair)
Function name: _addVaderPair
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_85(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
has variable
[i] TMP_85 cleared
clearing ir...?
vader_6(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_5', 'vader_1'])
has variable
clearing ir...?
vaderPairs_8(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_7', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_3(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_2'])
has variable
clearing ir...?
totalLiquidityWeight_7(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_6', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_12(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_11'])
has variable
clearing ir...?
TMP_86(bool) = TMP_85 == vader_6
has variable
[i] TMP_86 cleared
clearing ir...?
isFirst_1(bool) := TMP_86(bool)
has variable
[i] isFirst cleared
typecheckig node...
TMP_85(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_85
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_85

Name: TMP_85 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_6(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_5', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_8(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_7', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_3(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_2'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_7(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_6', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_12(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_11'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_86(bool) = TMP_85 == vader_6
Function name: _addVaderPair
[i]Type for TMP_86

Name: TMP_86 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
isFirst_1(bool) := TMP_86(bool)
Function name: _addVaderPair
asgn

Name: TMP_86 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: isFirst Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for isFirst

Name: isFirst Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
isFirst_1(bool) := TMP_86(bool)
XXXXX
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
CONDITION isFirst_1
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
clearning node...
clearing ir...?
TMP_104(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
has variable
[i] TMP_104 cleared
clearing ir...?
vader_7(address) := ϕ(['vader_6', 'vader_8', 'vader_10', 'vader_3', 'vader_1'])
has variable
clearing ir...?
vaderPairs_9(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_8', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_4(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_3', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_8(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_7', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_13(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_12', 'previousPrices_4'])
has variable
clearing ir...?
TMP_105(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token1, arguments:[]  
has variable
[i] TMP_105 cleared
clearing ir...?
vader_8(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_7'])
has variable
clearing ir...?
vaderPairs_10(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_9', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_5(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_4'])
has variable
clearing ir...?
totalLiquidityWeight_9(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_8', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_14(uint256[2]) := ϕ(['previousPrices_13', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
nativeAsset_1(address) := TMP_104(address)
has variable
[i] nativeAsset cleared
clearing ir...?
foreignAsset_1(address) := TMP_105(address)
has variable
[i] foreignAsset cleared
typecheckig node...
TMP_104(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_104
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_104

Name: TMP_104 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_7(address) := ϕ(['vader_6', 'vader_8', 'vader_10', 'vader_3', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_9(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_8', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_4(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_3', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_8(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_7', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_13(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_12', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_105(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token1, arguments:[]  
Function name: _addVaderPair
High Call: token1
func name:token1
other func name:token1
TMP_105
hlc contract name: VADERPAIR func_name: token1
('c', [-1], [-1], 0, 'TOK1')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK1', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_105

Name: TMP_105 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
vader_8(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_7'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_10(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_9', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_5(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_4'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_9(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_8', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_14(uint256[2]) := ϕ(['previousPrices_13', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeAsset_1(address) := TMP_104(address)
Function name: _addVaderPair
asgn

Name: TMP_104 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: nativeAsset Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: TOK0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
foreignAsset_1(address) := TMP_105(address)
Function name: _addVaderPair
asgn

Name: TMP_105 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef

Name: foreignAsset Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: TOK1
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_106(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token1, arguments:[]  
has variable
[i] TMP_106 cleared
clearing ir...?
vader_9(address) := ϕ(['vader_3', 'vader_1', 'vader_8', 'vader_10'])
has variable
clearing ir...?
vaderPairs_11(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_10', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_6(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_5', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_10(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_9', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_15(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_14', 'previousPrices_4'])
has variable
clearing ir...?
TMP_107(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
has variable
[i] TMP_107 cleared
clearing ir...?
vader_10(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_9'])
has variable
clearing ir...?
vaderPairs_12(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_11', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_7(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_6'])
has variable
clearing ir...?
totalLiquidityWeight_11(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_10', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_16(uint256[2]) := ϕ(['previousPrices_15', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
nativeAsset_2(address) := TMP_106(address)
has variable
[i] nativeAsset cleared
clearing ir...?
foreignAsset_2(address) := TMP_107(address)
has variable
[i] foreignAsset cleared
typecheckig node...
TMP_106(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token1, arguments:[]  
Function name: _addVaderPair
High Call: token1
func name:token1
other func name:token1
TMP_106
hlc contract name: VADERPAIR func_name: token1
('c', [-1], [-1], 0, 'TOK1')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK1', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_106

Name: TMP_106 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
vader_9(address) := ϕ(['vader_3', 'vader_1', 'vader_8', 'vader_10'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_11(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_10', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_6(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_5', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_10(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_9', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_15(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_14', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_107(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_107
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_107

Name: TMP_107 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_10(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_9'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_12(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_11', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_7(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_6'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_11(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_10', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_16(uint256[2]) := ϕ(['previousPrices_15', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeAsset_2(address) := TMP_106(address)
Function name: _addVaderPair
asgn

Name: TMP_106 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef

Name: nativeAsset Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: TOK1
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
foreignAsset_2(address) := TMP_107(address)
Function name: _addVaderPair
asgn

Name: TMP_107 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: foreignAsset Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: TOK0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
nativeAsset_3(address) := ϕ(['nativeAsset_1', 'nativeAsset_2'])
has variable
[i] nativeAsset cleared
clearing ir...?
foreignAsset_3(address) := ϕ(['foreignAsset_1', 'foreignAsset_2'])
has variable
[i] foreignAsset cleared
typecheckig node...
nativeAsset_3(address) := ϕ(['nativeAsset_1', 'nativeAsset_2'])
Function name: _addVaderPair
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
foreignAsset_3(address) := ϕ(['foreignAsset_1', 'foreignAsset_2'])
Function name: _addVaderPair
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_58(IAggregatorV3) -> oracles_1[foreignAsset_3]
has variable
clearing ir...?
oracles_2(mapping(address => IAggregatorV3)) := ϕ(['oracles_1'])
has variable
clearing ir...?
REF_58 (->oracles_2) := oracle_1(IAggregatorV3)
has variable
typecheckig node...
REF_58(IAggregatorV3) -> oracles_1[foreignAsset_3]
Function name: _addVaderPair
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_58

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracles_2(mapping(address => IAggregatorV3)) := ϕ(['oracles_1'])
Function name: _addVaderPair
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_58 (->oracles_2) := oracle_1(IAggregatorV3)
Function name: _addVaderPair
asgn

Name: oracle Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef

Name: REF_58 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_58

Name: REF_58 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_87(bool) = nativeAsset_3 == vader_10
has variable
[i] TMP_87 cleared
clearing ir...?
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,LBTWAP::addVaderPair: Unsupported Pair)
typecheckig node...
TMP_87(bool) = nativeAsset_3 == vader_10
Function name: _addVaderPair
[i]Type for TMP_87

Name: TMP_87 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,LBTWAP::addVaderPair: Unsupported Pair)
[i]Type for TMP_88

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_59(address) -> pairData_1 (-> ['twapData']).foreignAsset
has variable
clearing ir...?
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_59 (->pairData_2 (-> ['twapData'])) := foreignAsset_3(address)
has variable
clearing ir...?
twapData_10(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
has variable
typecheckig node...
REF_59(address) -> pairData_1 (-> ['twapData']).foreignAsset
Function name: _addVaderPair
MEMBER
pairData
foreignAsset
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
[i]Type for REF_59

Name: pairData.foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: pairData.foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
done.
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_59 (->pairData_2 (-> ['twapData'])) := foreignAsset_3(address)
Function name: _addVaderPair
asgn

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_59

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
done.
twapData_10(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_60(uint96) -> pairData_2 (-> ['twapData']).foreignUnit
has variable
clearing ir...?
TMP_89 = CONVERT foreignAsset_3 to IERC20Metadata
has variable
[i] TMP_89 cleared
clearing ir...?
TMP_90(uint8) = HIGH_LEVEL_CALL, dest:TMP_89(IERC20Metadata), function:decimals, arguments:[]  
has variable
[i] TMP_90 cleared
clearing ir...?
vaderPairs_13(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_12', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_8(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_7', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_12(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_11', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_17(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_16', 'previousPrices_4'])
has variable
clearing ir...?
TMP_91 = CONVERT TMP_90 to uint256
has variable
[i] TMP_91 cleared
clearing ir...?
TMP_92(uint256) = 10 (c)** TMP_91
has variable
[i] TMP_92 cleared
clearing ir...?
TMP_93 = CONVERT TMP_92 to uint96
has variable
[i] TMP_93 cleared
clearing ir...?
pairData_3 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_2 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_60 (->pairData_3 (-> ['twapData'])) := TMP_93(uint96)
has variable
clearing ir...?
twapData_11(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_3 (-> ['twapData'])"])
has variable
typecheckig node...
REF_60(uint96) -> pairData_2 (-> ['twapData']).foreignUnit
Function name: _addVaderPair
MEMBER
pairData
foreignUnit
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_60

Name: pairData.foreignUnit Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.foreignUnit Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_89 = CONVERT foreignAsset_3 to IERC20Metadata
Function name: _addVaderPair

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: TMP_89 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: TOK0
Fields: 
Finance Type: undef
[i]Type for TMP_89

Name: TMP_89 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
TMP_90(uint8) = HIGH_LEVEL_CALL, dest:TMP_89(IERC20Metadata), function:decimals, arguments:[]  
Function name: _addVaderPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_90
hlc contract name: TOK0 func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_90

Name: TMP_90 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_13(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_12', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_8(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_7', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_12(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_11', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_17(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_16', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_91 = CONVERT TMP_90 to uint256
Function name: _addVaderPair

Name: TMP_90 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_91 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_91

Name: TMP_91 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_92(uint256) = 10 (c)** TMP_91
Function name: _addVaderPair
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: TMP_91 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_92 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_92

Name: TMP_92 Function: _addVaderPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_93 = CONVERT TMP_92 to uint96
Function name: _addVaderPair

Name: TMP_92 Function: _addVaderPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: TMP_93 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_93

Name: TMP_93 Function: _addVaderPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_93 = CONVERT TMP_92 to uint96
XXXXX
pairData_3 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_60 (->pairData_3 (-> ['twapData'])) := TMP_93(uint96)
Function name: _addVaderPair
asgn

Name: TMP_93 Function: _addVaderPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_60

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_60 (->pairData_3 (-> ['twapData'])) := TMP_93(uint96)
XXXXX
twapData_11(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_62(uint256) -> pairData_3 (-> ['twapData']).updatePeriod
has variable
clearing ir...?
pairData_4 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_3 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_62 (->pairData_4 (-> ['twapData'])) := updatePeriod_1(uint256)
has variable
clearing ir...?
twapData_12(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_4 (-> ['twapData'])"])
has variable
typecheckig node...
REF_62(uint256) -> pairData_3 (-> ['twapData']).updatePeriod
Function name: _addVaderPair
MEMBER
pairData
updatePeriod
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_62

Name: pairData.updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_4 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_62 (->pairData_4 (-> ['twapData'])) := updatePeriod_1(uint256)
Function name: _addVaderPair
asgn

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_62

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
twapData_12(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_63(uint256) -> pairData_4 (-> ['twapData']).lastMeasurement
has variable
clearing ir...?
pairData_5 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_4 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_63 (->pairData_5 (-> ['twapData'])) := block.timestamp(uint256)
has variable
clearing ir...?
twapData_13(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_5 (-> ['twapData'])"])
has variable
typecheckig node...
REF_63(uint256) -> pairData_4 (-> ['twapData']).lastMeasurement
Function name: _addVaderPair
MEMBER
pairData
lastMeasurement
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_63

Name: pairData.lastMeasurement Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_5 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_63 (->pairData_5 (-> ['twapData'])) := block.timestamp(uint256)
Function name: _addVaderPair
asgn
block.timestamp

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_63

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_63 (->pairData_5 (-> ['twapData'])) := block.timestamp(uint256)
XXXXX
twapData_13(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
CONDITION isFirst_1
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
clearning node...
clearing ir...?
REF_79(uint256) -> pairData_5 (-> ['twapData']).nativeTokenPriceCumulative
has variable
clearing ir...?
TMP_109(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price1CumulativeLast, arguments:[]  
has variable
[i] TMP_109 cleared
clearing ir...?
vaderPairs_15(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_14', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_10(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_9'])
has variable
clearing ir...?
totalLiquidityWeight_14(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_13', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_19(uint256[2]) := ϕ(['previousPrices_18', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
pairData_7 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_79 (->pairData_7 (-> ['twapData'])) := TMP_109(uint256)
has variable
clearing ir...?
twapData_16(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_7 (-> ['twapData'])"])
has variable
typecheckig node...
REF_79(uint256) -> pairData_5 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addVaderPair
MEMBER
pairData
nativeTokenPriceCumulative
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_79

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_109(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price1CumulativeLast, arguments:[]  
Function name: _addVaderPair
High Call: price1CumulativeLast
func name:price1CumulativeLast
other func name:price1CumulativeLast
TMP_109
hlc contract name: VADERPAIR func_name: price1CumulativeLast
wfc len: 0
COPIED
[i]Type for TMP_109

Name: TMP_109 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_15(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_14', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_10(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_9'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_14(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_13', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_19(uint256[2]) := ϕ(['previousPrices_18', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pairData_7 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_79 (->pairData_7 (-> ['twapData'])) := TMP_109(uint256)
Function name: _addVaderPair
asgn

Name: TMP_109 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_79

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_16(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_7 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
pairData_8 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_6 (-> ['twapData'])", "pairData_7 (-> ['twapData'])"])
has variable
[i] pairData cleared
typecheckig node...
pairData_8 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_6 (-> ['twapData'])", "pairData_7 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_77(uint256) -> pairData_5 (-> ['twapData']).nativeTokenPriceCumulative
has variable
clearing ir...?
TMP_108(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price0CumulativeLast, arguments:[]  
has variable
[i] TMP_108 cleared
clearing ir...?
vaderPairs_14(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_13', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_9(uint256) := ϕ(['maxUpdateWindow_8', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_13(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_12', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_18(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_17', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
pairData_6 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_77 (->pairData_6 (-> ['twapData'])) := TMP_108(uint256)
has variable
clearing ir...?
twapData_14(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_6 (-> ['twapData'])"])
has variable
typecheckig node...
REF_77(uint256) -> pairData_5 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addVaderPair
MEMBER
pairData
nativeTokenPriceCumulative
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_77

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_108(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price0CumulativeLast, arguments:[]  
Function name: _addVaderPair
High Call: price0CumulativeLast
func name:price0CumulativeLast
other func name:price0CumulativeLast
TMP_108
hlc contract name: VADERPAIR func_name: price0CumulativeLast
wfc len: 0
COPIED
[i]Type for TMP_108

Name: TMP_108 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_14(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_13', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_9(uint256) := ϕ(['maxUpdateWindow_8', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_13(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_12', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_18(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_17', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pairData_6 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_77 (->pairData_6 (-> ['twapData'])) := TMP_108(uint256)
Function name: _addVaderPair
asgn

Name: TMP_108 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_77

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_14(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_6 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_4(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:getReserves, arguments:[]  
has variable
clearing ir...?
vaderPairs_16(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_15', 'vaderPairs_1'])
has variable
clearing ir...?
maxUpdateWindow_11(uint256) := ϕ(['maxUpdateWindow_10', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_15(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_14', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_20(uint256[2]) := ϕ(['previousPrices_19', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
reserve0_1(uint256)= UNPACK TUPLE_4 index: 0 
has variable
[i] reserve0 cleared
clearing ir...?
reserve1_1(uint256)= UNPACK TUPLE_4 index: 1 
has variable
[i] reserve1 cleared
typecheckig node...
TUPLE_4(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:getReserves, arguments:[]  
Function name: _addVaderPair
High Call: getReserves
func name:getReserves
other func name:getReserves
TUPLE_4
hlc contract name: VADERPAIR func_name: getReserves
('c', [-1], [-1], 'u', None)
('c', [-1], [-1], 'u', None)
('c', [-1], [-1], 'u', None)
wfc len: 3
COPIED
[i]Type for TUPLE_4

Name: TUPLE_4 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_16(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_15', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_11(uint256) := ϕ(['maxUpdateWindow_10', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_15(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_14', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_20(uint256[2]) := ϕ(['previousPrices_19', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserve0_1(uint256)= UNPACK TUPLE_4 index: 0 
Function name: _addVaderPair
Reading tuple TUPLE_4 index 0
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserve0

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserve1_1(uint256)= UNPACK TUPLE_4 index: 1 
Function name: _addVaderPair
Reading tuple TUPLE_4 index 1
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserve1

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
CONDITION isFirst_1
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
clearning node...
clearing ir...?
reserveNative_1(uint256) := reserve1_1(uint256)
has variable
[i] reserveNative cleared
clearing ir...?
reserveForeign_1(uint256) := reserve0_1(uint256)
has variable
[i] reserveForeign cleared
typecheckig node...
reserveNative_1(uint256) := reserve1_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveNative Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_1(uint256) := reserve0_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveForeign Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
reserveNative_2(uint256) := reserve0_1(uint256)
has variable
[i] reserveNative cleared
clearing ir...?
reserveForeign_2(uint256) := reserve1_1(uint256)
has variable
[i] reserveForeign cleared
typecheckig node...
reserveNative_2(uint256) := reserve0_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveNative Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_2(uint256) := reserve1_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveForeign Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
reserveNative_3(uint256) := ϕ(['reserveNative_1', 'reserveNative_2'])
has variable
[i] reserveNative cleared
clearing ir...?
reserveForeign_3(uint256) := ϕ(['reserveForeign_1', 'reserveForeign_2'])
has variable
[i] reserveForeign cleared
typecheckig node...
reserveNative_3(uint256) := ϕ(['reserveNative_1', 'reserveNative_2'])
Function name: _addVaderPair
Phi
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_3(uint256) := ϕ(['reserveForeign_1', 'reserveForeign_2'])
Function name: _addVaderPair
Phi
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_65(ILiquidityBasedTWAP.Paths) -> Paths.VADER
has variable
clearing ir...?
TMP_94 = CONVERT REF_65 to uint256
has variable
[i] TMP_94 cleared
clearing ir...?
REF_66(uint256) -> previousPrices_20[TMP_94]
has variable
clearing ir...?
TMP_95(uint256) = reserveNative_3 (c)* REF_66
has variable
[i] TMP_95 cleared
clearing ir...?
TMP_96(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(foreignAsset_3)
has variable
[i] TMP_96 cleared
clearing ir...?
TMP_97(uint256) = reserveForeign_3 (c)* TMP_96
has variable
[i] TMP_97 cleared
clearing ir...?
TMP_98(uint256) = TMP_95 (c)+ TMP_97
has variable
[i] TMP_98 cleared
clearing ir...?
pairLiquidityEvaluation_1(uint256) := TMP_98(uint256)
has variable
[i] pairLiquidityEvaluation cleared
typecheckig node...
REF_65(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: _addVaderPair
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_65

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_94 = CONVERT REF_65 to uint256
Function name: _addVaderPair

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_94 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_94

Name: TMP_94 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_66(uint256) -> previousPrices_20[TMP_94]
Function name: _addVaderPair
INDEX

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_66

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_95(uint256) = reserveNative_3 (c)* REF_66
Function name: _addVaderPair
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_95 Function: _addVaderPair
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_95

Name: TMP_95 Function: _addVaderPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_96(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(foreignAsset_3)
Function name: _addVaderPair
Internal call...
getChainlinkPrice
foreignAsset
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOK0
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
0

Name: PIC_2 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_96 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_96

Name: TMP_96 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_97(uint256) = reserveForeign_3 (c)* TMP_96
Function name: _addVaderPair
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_96 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_97 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_97

Name: TMP_97 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_98(uint256) = TMP_95 (c)+ TMP_97
Function name: _addVaderPair

Name: TMP_98 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_98

Name: TMP_98 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairLiquidityEvaluation_1(uint256) := TMP_98(uint256)
Function name: _addVaderPair
asgn

Name: TMP_98 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairLiquidityEvaluation

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pairLiquidityEvaluation_1(uint256) := TMP_98(uint256)
XXXXX
clearning node...
clearing ir...?
REF_67(uint256) -> pairData_8 (-> ['twapData']).pastLiquidityEvaluation
has variable
clearing ir...?
pairData_9 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_8 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_67 (->pairData_9 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
has variable
clearing ir...?
twapData_15(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_9 (-> ['twapData'])"])
has variable
typecheckig node...
REF_67(uint256) -> pairData_8 (-> ['twapData']).pastLiquidityEvaluation
Function name: _addVaderPair
MEMBER
pairData
pastLiquidityEvaluation
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_67

Name: pairData.pastLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_9 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_8 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_67 (->pairData_9 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
Function name: _addVaderPair
asgn

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_67

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_67 (->pairData_9 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
XXXXX
twapData_15(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_9 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_68(ILiquidityBasedTWAP.Paths) -> Paths.VADER
has variable
clearing ir...?
TMP_99 = CONVERT REF_68 to uint256
has variable
[i] TMP_99 cleared
clearing ir...?
REF_69(uint256) -> totalLiquidityWeight_16[TMP_99]
has variable
clearing ir...?
totalLiquidityWeight_17(uint256[2]) := ϕ(['totalLiquidityWeight_16'])
has variable
clearing ir...?
REF_69(-> totalLiquidityWeight_17) = REF_69 (c)+ pairLiquidityEvaluation_1
has variable
typecheckig node...
REF_68(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: _addVaderPair
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_68

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_99 = CONVERT REF_68 to uint256
Function name: _addVaderPair

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_99 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_99

Name: TMP_99 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_69(uint256) -> totalLiquidityWeight_16[TMP_99]
Function name: _addVaderPair
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalLiquidityWeight
[i]Type for REF_69

Name: None Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_69(uint256) -> totalLiquidityWeight_16[TMP_99]
XXXXX
totalLiquidityWeight_17(uint256[2]) := ϕ(['totalLiquidityWeight_16'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_69(-> totalLiquidityWeight_17) = REF_69 (c)+ pairLiquidityEvaluation_1
Function name: _addVaderPair

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_69

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_69(-> totalLiquidityWeight_17) = REF_69 (c)+ pairLiquidityEvaluation_1
XXXXX
clearning node...
clearing ir...?
REF_71 -> LENGTH vaderPairs_17
clearing ir...?
TMP_101(uint256) := REF_71(uint256)
has variable
[i] TMP_101 cleared
clearing ir...?
TMP_102(uint256) = TMP_101 (c)+ 1
has variable
[i] TMP_102 cleared
clearing ir...?
vaderPairs_18(IUniswapV2Pair[]) := ϕ(['vaderPairs_17'])
has variable
clearing ir...?
REF_71 (->vaderPairs_18) := TMP_102(uint256)
has variable
clearing ir...?
REF_72(IUniswapV2Pair) -> vaderPairs_18[TMP_101]
has variable
clearing ir...?
vaderPairs_19(IUniswapV2Pair[]) := ϕ(['vaderPairs_18'])
has variable
clearing ir...?
REF_72 (->vaderPairs_19) := pair_1(IUniswapV2Pair)
has variable
typecheckig node...
REF_71 -> LENGTH vaderPairs_17
[i]Type for REF_71

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_101(uint256) := REF_71(uint256)
Function name: _addVaderPair
asgn

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_101 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_101

Name: TMP_101 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(uint256) = TMP_101 (c)+ 1
Function name: _addVaderPair
val: 1

Name: TMP_102 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: _addVaderPair
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_18(IUniswapV2Pair[]) := ϕ(['vaderPairs_17'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_71 (->vaderPairs_18) := TMP_102(uint256)
Function name: _addVaderPair
asgn

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_71

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_72(IUniswapV2Pair) -> vaderPairs_18[TMP_101]
Function name: _addVaderPair
INDEX

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_72

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
vaderPairs_19(IUniswapV2Pair[]) := ϕ(['vaderPairs_18'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_72 (->vaderPairs_19) := pair_1(IUniswapV2Pair)
Function name: _addVaderPair
asgn

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: REF_72 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_72

Name: REF_72 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_103(bool) = maxUpdateWindow_12 < updatePeriod_1
has variable
[i] TMP_103 cleared
clearing ir...?
CONDITION TMP_103
typecheckig node...
TMP_103(bool) = maxUpdateWindow_12 < updatePeriod_1
Function name: _addVaderPair
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_103

Name: TMP_103 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_103
Condition...
Conidtion: 
TMP_103
TMP_103
clearning node...
clearing ir...?
maxUpdateWindow_13(uint256) := updatePeriod_1(uint256)
has variable
typecheckig node...
maxUpdateWindow_13(uint256) := updatePeriod_1(uint256)
Function name: _addVaderPair
asgn

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxUpdateWindow Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "_addVaderPair":
 New undefined nodes- 6
 Old undefined nodes- 0
typecheckig node...
pair_1(IUniswapV2Pair) := ϕ(['pair_1', 'pair_1'])
Function name: _addVaderPair
Phi
[i]Type for pair

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := ϕ(['oracle_1', 'oracle_1'])
Function name: _addVaderPair
Phi
[i]Type for oracle

Name: oracle Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
done.
updatePeriod_1(uint256) := ϕ(['updatePeriod_1', 'updatePeriod_1'])
Function name: _addVaderPair
Phi
[i]Type for updatePeriod

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vader_4(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_0'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_6(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_0', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_1(uint256) := ϕ(['maxUpdateWindow_0', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_5(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_10(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_8(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
TMP_79(bool) = updatePeriod_1 != 0
Function name: _addVaderPair
[i]Type for TMP_79

Name: TMP_79 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_80(None) = SOLIDITY_CALL require(bool,string)(TMP_79,LBTWAP::addVaderPair: Incorrect Update Period)
[i]Type for TMP_80

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_81(uint8) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:decimals, arguments:[]  
Function name: _addVaderPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_81
hlc contract name: ORACLE func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_81

Name: TMP_81 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vader_5(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_4', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_7(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1', 'vaderPairs_6'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_2(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_1'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_6(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_5', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_11(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_10', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_9(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_8', 'twapData_3', 'twapData_15', 'twapData_21', 'twapData_7'])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
TMP_82(bool) = TMP_81 == 8
Function name: _addVaderPair
[i]Type for TMP_82

Name: TMP_82 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_83(None) = SOLIDITY_CALL require(bool,string)(TMP_82,LBTWAP::addVaderPair: Non-USD Oracle)
[i]Type for TMP_83

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_84 = CONVERT pair_1 to address
Function name: _addVaderPair

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: TMP_84 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_84

Name: TMP_84 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_56(ILiquidityBasedTWAP.ExchangePair) -> twapData_9[TMP_84]
Function name: _addVaderPair
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_56

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_56(ILiquidityBasedTWAP.ExchangePair)
Function name: _addVaderPair
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
TMP_85(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_85
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_85

Name: TMP_85 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_6(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_5', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_8(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_7', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_3(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_2'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_7(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_6', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_12(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_11'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_86(bool) = TMP_85 == vader_6
Function name: _addVaderPair
[i]Type for TMP_86

Name: TMP_86 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
isFirst_1(bool) := TMP_86(bool)
Function name: _addVaderPair
asgn

Name: TMP_86 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: isFirst Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for isFirst

Name: isFirst Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
isFirst_1(bool) := TMP_86(bool)
XXXXX
typecheckig node...
typecheckig node...
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
typecheckig node...
TMP_104(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_104
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_104

Name: TMP_104 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_7(address) := ϕ(['vader_6', 'vader_8', 'vader_10', 'vader_3', 'vader_1'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_9(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_8', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_4(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_3', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_8(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_7', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_13(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_12', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_105(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token1, arguments:[]  
Function name: _addVaderPair
High Call: token1
func name:token1
other func name:token1
TMP_105
hlc contract name: VADERPAIR func_name: token1
('c', [-1], [-1], 0, 'TOK1')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK1', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_105

Name: TMP_105 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
vader_8(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_7'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_10(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_9', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_5(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_4'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_9(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_8', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_14(uint256[2]) := ϕ(['previousPrices_13', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeAsset_1(address) := TMP_104(address)
Function name: _addVaderPair
asgn

Name: TMP_104 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
foreignAsset_1(address) := TMP_105(address)
Function name: _addVaderPair
asgn

Name: TMP_105 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_106(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token1, arguments:[]  
Function name: _addVaderPair
High Call: token1
func name:token1
other func name:token1
TMP_106
hlc contract name: VADERPAIR func_name: token1
('c', [-1], [-1], 0, 'TOK1')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK1', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_106

Name: TMP_106 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
vader_9(address) := ϕ(['vader_3', 'vader_1', 'vader_8', 'vader_10'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_11(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_10', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_6(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_5', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_10(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_9', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_15(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_14', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_107(address) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:token0, arguments:[]  
Function name: _addVaderPair
High Call: token0
func name:token0
other func name:token0
TMP_107
hlc contract name: VADERPAIR func_name: token0
('c', [-1], [-1], 0, 'TOK0')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'TOK0', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_107

Name: TMP_107 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
vader_10(address) := ϕ(['vader_8', 'vader_10', 'vader_3', 'vader_1', 'vader_9'])
Function name: _addVaderPair
Phi
[i]Type for vader

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
done.
vaderPairs_12(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_11', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_7(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_6'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_11(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_10', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_16(uint256[2]) := ϕ(['previousPrices_15', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeAsset_2(address) := TMP_106(address)
Function name: _addVaderPair
asgn

Name: TMP_106 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
foreignAsset_2(address) := TMP_107(address)
Function name: _addVaderPair
asgn

Name: TMP_107 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
typecheckig node...
nativeAsset_3(address) := ϕ(['nativeAsset_1', 'nativeAsset_2'])
Function name: _addVaderPair
Phi
[i]Type for nativeAsset

Name: nativeAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK1
Fields: 
Finance Type: undef
done.
foreignAsset_3(address) := ϕ(['foreignAsset_1', 'foreignAsset_2'])
Function name: _addVaderPair
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_58(IAggregatorV3) -> oracles_1[foreignAsset_3]
Function name: _addVaderPair
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_58

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracles_2(mapping(address => IAggregatorV3)) := ϕ(['oracles_1'])
Function name: _addVaderPair
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_58 (->oracles_2) := oracle_1(IAggregatorV3)
Function name: _addVaderPair
asgn

Name: oracle Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef

Name: REF_58 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_58

Name: REF_58 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_87(bool) = nativeAsset_3 == vader_10
Function name: _addVaderPair
[i]Type for TMP_87

Name: TMP_87 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_88(None) = SOLIDITY_CALL require(bool,string)(TMP_87,LBTWAP::addVaderPair: Unsupported Pair)
[i]Type for TMP_88

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_59(address) -> pairData_1 (-> ['twapData']).foreignAsset
Function name: _addVaderPair
MEMBER
pairData
foreignAsset
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
[i]Type for REF_59

Name: pairData.foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: pairData.foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
done.
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_59 (->pairData_2 (-> ['twapData'])) := foreignAsset_3(address)
Function name: _addVaderPair
asgn

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_59

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: REF_59 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef

Name: foreignAsset Function: global
Num: -1
Den: -1
Norm: 0
LF: FOREIGNASSET
Fields: 
Finance Type: undef
done.
twapData_10(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_60(uint96) -> pairData_2 (-> ['twapData']).foreignUnit
Function name: _addVaderPair
MEMBER
pairData
foreignUnit
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_60

Name: pairData.foreignUnit Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.foreignUnit Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_89 = CONVERT foreignAsset_3 to IERC20Metadata
Function name: _addVaderPair

Name: foreignAsset Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef

Name: TMP_89 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
[i]Type for TMP_89

Name: TMP_89 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: TOK0
Fields: 
Finance Type: undef
done.
TMP_90(uint8) = HIGH_LEVEL_CALL, dest:TMP_89(IERC20Metadata), function:decimals, arguments:[]  
Function name: _addVaderPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_90
hlc contract name: TOK0 func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_90

Name: TMP_90 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_13(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_12', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_8(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_7', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_12(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_11', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_17(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_16', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_91 = CONVERT TMP_90 to uint256
Function name: _addVaderPair

Name: TMP_90 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_91 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_91

Name: TMP_91 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_92(uint256) = 10 (c)** TMP_91
Function name: _addVaderPair
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: TMP_91 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_92 Function: _addVaderPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_92

Name: TMP_92 Function: _addVaderPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_93 = CONVERT TMP_92 to uint96
Function name: _addVaderPair

Name: TMP_92 Function: _addVaderPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: TMP_93 Function: _addVaderPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_93

Name: TMP_93 Function: _addVaderPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_93 = CONVERT TMP_92 to uint96
XXXXX
pairData_3 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_60 (->pairData_3 (-> ['twapData'])) := TMP_93(uint96)
Function name: _addVaderPair
asgn

Name: TMP_93 Function: _addVaderPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_60

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_60 Function: _addVaderPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_60 (->pairData_3 (-> ['twapData'])) := TMP_93(uint96)
XXXXX
twapData_11(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_62(uint256) -> pairData_3 (-> ['twapData']).updatePeriod
Function name: _addVaderPair
MEMBER
pairData
updatePeriod
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_62

Name: pairData.updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_4 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_62 (->pairData_4 (-> ['twapData'])) := updatePeriod_1(uint256)
Function name: _addVaderPair
asgn

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_62

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_62 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
twapData_12(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_63(uint256) -> pairData_4 (-> ['twapData']).lastMeasurement
Function name: _addVaderPair
MEMBER
pairData
lastMeasurement
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_63

Name: pairData.lastMeasurement Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_5 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_63 (->pairData_5 (-> ['twapData'])) := block.timestamp(uint256)
Function name: _addVaderPair
asgn
block.timestamp

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_63

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_63 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_63 (->pairData_5 (-> ['twapData'])) := block.timestamp(uint256)
XXXXX
twapData_13(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
typecheckig node...
REF_79(uint256) -> pairData_5 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addVaderPair
MEMBER
pairData
nativeTokenPriceCumulative
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_79

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_109(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price1CumulativeLast, arguments:[]  
Function name: _addVaderPair
High Call: price1CumulativeLast
func name:price1CumulativeLast
other func name:price1CumulativeLast
TMP_109
hlc contract name: VADERPAIR func_name: price1CumulativeLast
wfc len: 0
COPIED
[i]Type for TMP_109

Name: TMP_109 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_15(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_14', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_10(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_9'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_14(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_13', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_19(uint256[2]) := ϕ(['previousPrices_18', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pairData_7 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_79 (->pairData_7 (-> ['twapData'])) := TMP_109(uint256)
Function name: _addVaderPair
asgn

Name: TMP_109 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_79

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_16(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_7 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
pairData_8 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_6 (-> ['twapData'])", "pairData_7 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_77(uint256) -> pairData_5 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addVaderPair
MEMBER
pairData
nativeTokenPriceCumulative
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_77

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_108(uint256) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:price0CumulativeLast, arguments:[]  
Function name: _addVaderPair
High Call: price0CumulativeLast
func name:price0CumulativeLast
other func name:price0CumulativeLast
TMP_108
hlc contract name: VADERPAIR func_name: price0CumulativeLast
wfc len: 0
COPIED
[i]Type for TMP_108

Name: TMP_108 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_14(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_13', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_9(uint256) := ϕ(['maxUpdateWindow_8', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_13(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_12', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_18(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_17', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pairData_6 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_77 (->pairData_6 (-> ['twapData'])) := TMP_108(uint256)
Function name: _addVaderPair
asgn

Name: TMP_108 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_77

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _addVaderPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_14(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_6 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
TUPLE_4(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:pair_1(IUniswapV2Pair), function:getReserves, arguments:[]  
Function name: _addVaderPair
High Call: getReserves
func name:getReserves
other func name:getReserves
TUPLE_4
hlc contract name: VADERPAIR func_name: getReserves
('c', [-1], [-1], 'u', None)
('c', [-1], [-1], 'u', None)
('c', [-1], [-1], 'u', None)
wfc len: 3
COPIED
[i]Type for TUPLE_4

Name: TUPLE_4 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_16(IUniswapV2Pair[]) := ϕ(['vaderPairs_2', 'vaderPairs_4', 'vaderPairs_19', 'vaderPairs_5', 'vaderPairs_3', 'vaderPairs_15', 'vaderPairs_1'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_11(uint256) := ϕ(['maxUpdateWindow_10', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addVaderPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_15(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_14', 'totalLiquidityWeight_17'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_20(uint256[2]) := ϕ(['previousPrices_19', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addVaderPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserve0_1(uint256)= UNPACK TUPLE_4 index: 0 
Function name: _addVaderPair
Reading tuple TUPLE_4 index 0
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserve0

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserve1_1(uint256)= UNPACK TUPLE_4 index: 1 
Function name: _addVaderPair
Reading tuple TUPLE_4 index 1
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserve1

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
CONDITION isFirst_1
Condition...
Conidtion: 
isFirst_1
isFirst_1
typecheckig node...
reserveNative_1(uint256) := reserve1_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_1(uint256) := reserve0_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
reserveNative_2(uint256) := reserve0_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve0 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_2(uint256) := reserve1_1(uint256)
Function name: _addVaderPair
asgn

Name: reserve1 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
reserveNative_3(uint256) := ϕ(['reserveNative_1', 'reserveNative_2'])
Function name: _addVaderPair
Phi
[i]Type for reserveNative

Name: reserveNative Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_3(uint256) := ϕ(['reserveForeign_1', 'reserveForeign_2'])
Function name: _addVaderPair
Phi
[i]Type for reserveForeign

Name: reserveForeign Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_65(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: _addVaderPair
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_65

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_94 = CONVERT REF_65 to uint256
Function name: _addVaderPair

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_94 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_94

Name: TMP_94 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_66(uint256) -> previousPrices_20[TMP_94]
Function name: _addVaderPair
INDEX

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_66

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_95(uint256) = reserveNative_3 (c)* REF_66
Function name: _addVaderPair
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_95 Function: _addVaderPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_95

Name: TMP_95 Function: _addVaderPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_96(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(foreignAsset_3)
Function name: _addVaderPair
Internal call...
getChainlinkPrice
foreignAsset
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: TOK0
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
0

Name: PIC_2 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_96 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_96

Name: TMP_96 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_97(uint256) = reserveForeign_3 (c)* TMP_96
Function name: _addVaderPair
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_96 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_97 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_97

Name: TMP_97 Function: _addVaderPair
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_98(uint256) = TMP_95 (c)+ TMP_97
Function name: _addVaderPair

Name: TMP_98 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_98

Name: TMP_98 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairLiquidityEvaluation_1(uint256) := TMP_98(uint256)
Function name: _addVaderPair
asgn

Name: TMP_98 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairLiquidityEvaluation

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pairLiquidityEvaluation_1(uint256) := TMP_98(uint256)
XXXXX
typecheckig node...
REF_67(uint256) -> pairData_8 (-> ['twapData']).pastLiquidityEvaluation
Function name: _addVaderPair
MEMBER
pairData
pastLiquidityEvaluation
_addVaderPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_67

Name: pairData.pastLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_9 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_8 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for pairData

Name: pairData Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_67 (->pairData_9 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
Function name: _addVaderPair
asgn

Name: pairLiquidityEvaluation Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_67

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_67 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_67 (->pairData_9 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
XXXXX
twapData_15(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_9 (-> ['twapData'])"])
Function name: _addVaderPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_68(ILiquidityBasedTWAP.Paths) -> Paths.VADER
Function name: _addVaderPair
MEMBER
Paths
Paths
VADER
global
Paths Fields:
VADER
USDV
^^^

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_68

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: VADER Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_99 = CONVERT REF_68 to uint256
Function name: _addVaderPair

Name: Paths.VADER Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_99 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_99

Name: TMP_99 Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_69(uint256) -> totalLiquidityWeight_16[TMP_99]
Function name: _addVaderPair
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalLiquidityWeight
[i]Type for REF_69

Name: None Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_69(uint256) -> totalLiquidityWeight_16[TMP_99]
XXXXX
totalLiquidityWeight_17(uint256[2]) := ϕ(['totalLiquidityWeight_16'])
Function name: _addVaderPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_69(-> totalLiquidityWeight_17) = REF_69 (c)+ pairLiquidityEvaluation_1
Function name: _addVaderPair

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_69

Name: REF_69 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_69(-> totalLiquidityWeight_17) = REF_69 (c)+ pairLiquidityEvaluation_1
XXXXX
typecheckig node...
REF_71 -> LENGTH vaderPairs_17
[i]Type for REF_71

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_101(uint256) := REF_71(uint256)
Function name: _addVaderPair
asgn

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_101 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_101

Name: TMP_101 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(uint256) = TMP_101 (c)+ 1
Function name: _addVaderPair
val: 1

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_102

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
vaderPairs_18(IUniswapV2Pair[]) := ϕ(['vaderPairs_17'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_71 (->vaderPairs_18) := TMP_102(uint256)
Function name: _addVaderPair
asgn

Name: TMP_102 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_71

Name: REF_71 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_72(IUniswapV2Pair) -> vaderPairs_18[TMP_101]
Function name: _addVaderPair
INDEX

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_72

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
vaderPairs_19(IUniswapV2Pair[]) := ϕ(['vaderPairs_18'])
Function name: _addVaderPair
Phi
[i]Type for vaderPairs

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
REF_72 (->vaderPairs_19) := pair_1(IUniswapV2Pair)
Function name: _addVaderPair
asgn

Name: pair Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: VADERPAIR
Fields: 
Finance Type: undef

Name: REF_72 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_72

Name: REF_72 Function: _addVaderPair
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_103(bool) = maxUpdateWindow_12 < updatePeriod_1
Function name: _addVaderPair
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_103

Name: TMP_103 Function: _addVaderPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_103
Condition...
Conidtion: 
TMP_103
TMP_103
typecheckig node...
maxUpdateWindow_13(uint256) := updatePeriod_1(uint256)
Function name: _addVaderPair
asgn

Name: updatePeriod Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxUpdateWindow Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: _addVaderPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
WORKLIST iteration 1 for function call "_addVaderPair":
 New undefined nodes- 6
 Old undefined nodes- 6
Saving return values for: _addVaderPair
done.
This IR caused addback:
INTERNAL_CALL, LiquidityBasedTWAP._addVaderPair(IUniswapV2Pair,IAggregatorV3,uint256)(pair_1,oracle_1,updatePeriod_1)
XXXXX
WORKLIST iteration 1 for function call "addVaderPair":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: addVaderPair
State_var: oracles
Finding type for oracles...
mapping(address => IAggregatorV3)
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: mapping(address => IAggregatorV3)
mapping(address => IAggregatorV3)
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: previousPrices
Finding type for previousPrices...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPool
Finding type for vaderPool...
IVaderPoolV2
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPOOL')
----
Type: IVaderPoolV2
IVaderPoolV2
Final Type: IVaderPoolV2
 NO FIELDS

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxUpdateWindow
Finding type for maxUpdateWindow...
uint256
Check copy_toekn_tuple
(-1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalLiquidityWeight
Finding type for totalLiquidityWeight...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: twapData
Finding type for twapData...
mapping(address => ILiquidityBasedTWAP.ExchangePair)
Check copy_toekn_tuple
(-1, -1, 0, 'EXCHANGEPAIR')
----
Type: mapping(address => ILiquidityBasedTWAP.ExchangePair)
mapping(address => ILiquidityBasedTWAP.ExchangePair)
ILiquidityBasedTWAP.ExchangePair
Final Type: ILiquidityBasedTWAP.ExchangePair
global
twapData
nativeTokenPriceCumulative
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
nativeTokenPriceAverage
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
nativeTokenPriceAverage
_x
FIELDS:
nativeTokenPriceAverage Fields:
^^^
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
twapData.nativeTokenPriceAverage
_x
FIELDS:
twapData.nativeTokenPriceAverage Fields:
^^^
global
twapData
lastMeasurement
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
updatePeriod
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
pastLiquidityEvaluation
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
foreignAsset
Check copy_toekn_tuple
([-1], [-1], [0], 'FOREIGNASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
twapData
foreignUnit
Check copy_toekn_tuple
([-1], [-1], [-404], None)
----
Type: uint96
uint96
Final Type: uint96
Type: uint96
uint96
Final Type: uint96
FIELDS:
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
[*]Type fetched successfully
State_var: vader
Finding type for vader...
address
Check copy_toekn_tuple
(2, -1, 0, 'VADER')
----
Type: address
address
Final Type: address

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPairs
Finding type for vaderPairs...
IUniswapV2Pair[]
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPAIR')
----
Type: IUniswapV2Pair[]
IUniswapV2Pair[]
IUniswapV2Pair
Final Type: IUniswapV2Pair
 NO FIELDS

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 0, 'OWNER')
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: usdvPairs
Finding type for usdvPairs...
IERC20[]
Check copy_toekn_tuple
(-1, -1, 0, 'USDVPAIR')
----
Type: IERC20[]
IERC20[]
IERC20
Final Type: IERC20
 NO FIELDS

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _addVaderPair
Function _addVaderPair not marked
Mark Iterations TRUE, proceeding anyway
Function name: _addVaderPair
Function Visibility (test): internal
State_var: oracles
Finding type for oracles...
mapping(address => IAggregatorV3)
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: mapping(address => IAggregatorV3)
mapping(address => IAggregatorV3)
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: previousPrices
Finding type for previousPrices...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPool
Finding type for vaderPool...
IVaderPoolV2
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPOOL')
----
Type: IVaderPoolV2
IVaderPoolV2
Final Type: IVaderPoolV2
 NO FIELDS

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxUpdateWindow
Finding type for maxUpdateWindow...
uint256
Check copy_toekn_tuple
(-1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalLiquidityWeight
Finding type for totalLiquidityWeight...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: twapData
Finding type for twapData...
mapping(address => ILiquidityBasedTWAP.ExchangePair)
Check copy_toekn_tuple
(-1, -1, 0, 'EXCHANGEPAIR')
----
Type: mapping(address => ILiquidityBasedTWAP.ExchangePair)
mapping(address => ILiquidityBasedTWAP.ExchangePair)
ILiquidityBasedTWAP.ExchangePair
Final Type: ILiquidityBasedTWAP.ExchangePair
global
twapData
nativeTokenPriceCumulative
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
nativeTokenPriceAverage
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
nativeTokenPriceAverage
_x
FIELDS:
nativeTokenPriceAverage Fields:
^^^
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
twapData.nativeTokenPriceAverage
_x
FIELDS:
twapData.nativeTokenPriceAverage Fields:
^^^
global
twapData
lastMeasurement
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
updatePeriod
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
pastLiquidityEvaluation
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
foreignAsset
Check copy_toekn_tuple
([-1], [-1], [0], 'FOREIGNASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
twapData
foreignUnit
Check copy_toekn_tuple
([-1], [-1], [-404], None)
----
Type: uint96
uint96
Final Type: uint96
Type: uint96
uint96
Final Type: uint96
FIELDS:
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
[*]Type fetched successfully
State_var: vader
Finding type for vader...
address
Check copy_toekn_tuple
(2, -1, 0, 'VADER')
----
Type: address
address
Final Type: address

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPairs
Finding type for vaderPairs...
IUniswapV2Pair[]
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPAIR')
----
Type: IUniswapV2Pair[]
IUniswapV2Pair[]
IUniswapV2Pair
Final Type: IUniswapV2Pair
 NO FIELDS

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 0, 'OWNER')
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: usdvPairs
Finding type for usdvPairs...
IERC20[]
Check copy_toekn_tuple
(-1, -1, 0, 'USDVPAIR')
----
Type: IERC20[]
IERC20[]
IERC20
Final Type: IERC20
 NO FIELDS

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: getUSDVPrice
Function name: getUSDVPrice
Function Visibility (test): external
-100
Add new
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_5(uint256[],uint256) = INTERNAL_CALL, LiquidityBasedTWAP.syncUSDVPrice()()
has variable
clearing ir...?
pastLiquidityWeights_1 (-> [])(uint256[])= UNPACK TUPLE_5 index: 0 
has variable
[i] pastLiquidityWeights cleared
clearing ir...?
pastTotalLiquidityWeight_1(uint256)= UNPACK TUPLE_5 index: 1 
has variable
[i] pastTotalLiquidityWeight cleared
typecheckig node...
TUPLE_5(uint256[],uint256) = INTERNAL_CALL, LiquidityBasedTWAP.syncUSDVPrice()()
Function name: getUSDVPrice
Internal call...
syncUSDVPrice
Function: syncUSDVPrice
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: syncUSDVPrice
Function Visibility: public
clearning node...
clearing ir...?
usdvPairs_2(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
has variable
clearing ir...?
totalLiquidityWeight_18(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
twapData_17(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
has variable
typecheckig node...
usdvPairs_2(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
Function name: syncUSDVPrice
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_18(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: syncUSDVPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_17(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: syncUSDVPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_81 -> LENGTH usdvPairs_2
clearing ir...?
totalPairs_1(uint256) := REF_81(uint256)
has variable
[i] totalPairs cleared
typecheckig node...
REF_81 -> LENGTH usdvPairs_2
[i]Type for REF_81

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalPairs_1(uint256) := REF_81(uint256)
Function name: syncUSDVPrice
asgn

Name: REF_81 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalPairs Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalPairs

Name: totalPairs Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalPairs_1(uint256) := REF_81(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_113 = new uint256[](totalPairs_1)
clearing ir...?
pastLiquidityWeights_1(uint256[]) := TMP_113(uint256)
has variable
[i] pastLiquidityWeights cleared
typecheckig node...
TMP_113 = new uint256[](totalPairs_1)
[i]Type for TMP_113

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_1(uint256[]) := TMP_113(uint256)
Function name: syncUSDVPrice
asgn

Name: TMP_113 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pastLiquidityWeights_1(uint256[]) := TMP_113(uint256)
XXXXX
clearning node...
clearing ir...?
REF_82(ILiquidityBasedTWAP.Paths) -> Paths.USDV
has variable
clearing ir...?
TMP_114 = CONVERT REF_82 to uint256
has variable
[i] TMP_114 cleared
clearing ir...?
REF_83(uint256) -> totalLiquidityWeight_18[TMP_114]
has variable
clearing ir...?
pastTotalLiquidityWeight_1(uint256) := REF_83(uint256)
has variable
[i] pastTotalLiquidityWeight cleared
typecheckig node...
REF_82(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: syncUSDVPrice
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_82

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_114 = CONVERT REF_82 to uint256
Function name: syncUSDVPrice

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_114 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_114

Name: TMP_114 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_83(uint256) -> totalLiquidityWeight_18[TMP_114]
Function name: syncUSDVPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_83

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pastTotalLiquidityWeight_1(uint256) := REF_83(uint256)
Function name: syncUSDVPrice
asgn

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: pastTotalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastTotalLiquidityWeight

Name: pastTotalLiquidityWeight Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
pastLiquidityWeights_2(uint256[]) := ϕ(['pastLiquidityWeights_3', 'pastLiquidityWeights_1'])
has variable
[i] pastLiquidityWeights cleared
clearing ir...?
_totalLiquidityWeight_1(uint256) := ϕ(['_totalLiquidityWeight_2', '_totalLiquidityWeight_0'])
has variable
[i] _totalLiquidityWeight cleared
clearing ir...?
i_1(uint256) := ϕ(['i_2', 'i_0'])
has variable
[i] i cleared
clearing ir...?
TMP_115(bool) = i_1 < totalPairs_1
has variable
[i] TMP_115 cleared
clearing ir...?
CONDITION TMP_115
typecheckig node...
pastLiquidityWeights_2(uint256[]) := ϕ(['pastLiquidityWeights_3', 'pastLiquidityWeights_1'])
Function name: syncUSDVPrice
Phi
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalLiquidityWeight_1(uint256) := ϕ(['_totalLiquidityWeight_2', '_totalLiquidityWeight_0'])
Function name: syncUSDVPrice
Phi
[i]Type for _totalLiquidityWeight

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
i_1(uint256) := ϕ(['i_2', 'i_0'])
Function name: syncUSDVPrice
Phi
[i]Type for i

Name: i Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_115(bool) = i_1 < totalPairs_1
Function name: syncUSDVPrice
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: totalPairs Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_115 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_115

Name: TMP_115 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_115(bool) = i_1 < totalPairs_1
XXXXX
CONDITION TMP_115
Condition...
Conidtion: 
TMP_115
TMP_115
clearning node...
clearing ir...?
REF_84(IERC20) -> usdvPairs_2[i_1]
has variable
clearing ir...?
foreignAsset_1(IERC20) := REF_84(IERC20)
has variable
[i] foreignAsset cleared
typecheckig node...
REF_84(IERC20) -> usdvPairs_2[i_1]
Function name: syncUSDVPrice
INDEX

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_84

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
foreignAsset_1(IERC20) := REF_84(IERC20)
Function name: syncUSDVPrice
asgn

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: foreignAsset Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_116 = CONVERT foreignAsset_1 to address
has variable
[i] TMP_116 cleared
clearing ir...?
REF_85(ILiquidityBasedTWAP.ExchangePair) -> twapData_17[TMP_116]
has variable
clearing ir...?
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_85(ILiquidityBasedTWAP.ExchangePair)
has variable
[i] pairData cleared
typecheckig node...
TMP_116 = CONVERT foreignAsset_1 to address
Function name: syncUSDVPrice

Name: foreignAsset Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: TMP_116 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_116

Name: TMP_116 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_85(ILiquidityBasedTWAP.ExchangePair) -> twapData_17[TMP_116]
Function name: syncUSDVPrice
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_85

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_85(ILiquidityBasedTWAP.ExchangePair)
Function name: syncUSDVPrice
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_91(ILiquidityBasedTWAP.Paths) -> Paths.USDV
has variable
clearing ir...?
TMP_120 = CONVERT REF_91 to uint256
has variable
[i] TMP_120 cleared
clearing ir...?
REF_92(uint256) -> totalLiquidityWeight_18[TMP_120]
has variable
clearing ir...?
totalLiquidityWeight_19(uint256[2]) := ϕ(['totalLiquidityWeight_18'])
has variable
clearing ir...?
REF_92 (->totalLiquidityWeight_19) := _totalLiquidityWeight_1(uint256)
has variable
typecheckig node...
REF_91(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: syncUSDVPrice
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_91

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_120 = CONVERT REF_91 to uint256
Function name: syncUSDVPrice

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_120 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_120

Name: TMP_120 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_92(uint256) -> totalLiquidityWeight_18[TMP_120]
Function name: syncUSDVPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_92

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_19(uint256[2]) := ϕ(['totalLiquidityWeight_18'])
Function name: syncUSDVPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_92 (->totalLiquidityWeight_19) := _totalLiquidityWeight_1(uint256)
Function name: syncUSDVPrice
asgn

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_92 Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_92

Name: REF_92 Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_92 (->totalLiquidityWeight_19) := _totalLiquidityWeight_1(uint256)
XXXXX
clearning node...
clearing ir...?
REF_86(uint256) -> pairData_1 (-> ['twapData']).lastMeasurement
has variable
clearing ir...?
TMP_117(uint256) = block.timestamp (c)- REF_86
has variable
[i] TMP_117 cleared
clearing ir...?
timeElapsed_1(uint256) := TMP_117(uint256)
has variable
[i] timeElapsed cleared
typecheckig node...
REF_86(uint256) -> pairData_1 (-> ['twapData']).lastMeasurement
Function name: syncUSDVPrice
MEMBER
pairData
lastMeasurement
syncUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_86

Name: pairData.lastMeasurement Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_117(uint256) = block.timestamp (c)- REF_86
Function name: syncUSDVPrice
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_34 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_117 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_117

Name: TMP_117 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
timeElapsed_1(uint256) := TMP_117(uint256)
Function name: syncUSDVPrice
asgn

Name: TMP_117 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: timeElapsed Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for timeElapsed

Name: timeElapsed Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_87(uint256) -> pairData_1 (-> ['twapData']).updatePeriod
has variable
clearing ir...?
TMP_118(bool) = timeElapsed_1 < REF_87
has variable
[i] TMP_118 cleared
clearing ir...?
CONDITION TMP_118
typecheckig node...
REF_87(uint256) -> pairData_1 (-> ['twapData']).updatePeriod
Function name: syncUSDVPrice
MEMBER
pairData
updatePeriod
syncUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_87

Name: pairData.updatePeriod Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_118(bool) = timeElapsed_1 < REF_87
Function name: syncUSDVPrice
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_118

Name: TMP_118 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_118
Condition...
Conidtion: 
TMP_118
TMP_118
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_88(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
has variable
clearing ir...?
pastLiquidityEvaluation_1(uint256) := REF_88(uint256)
has variable
[i] pastLiquidityEvaluation cleared
typecheckig node...
REF_88(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
Function name: syncUSDVPrice
MEMBER
pairData
pastLiquidityEvaluation
syncUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_88

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityEvaluation_1(uint256) := REF_88(uint256)
Function name: syncUSDVPrice
asgn

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityEvaluation

Name: pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_119(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._updateUSDVPrice(IERC20,ILiquidityBasedTWAP.ExchangePair,uint256)(foreignAsset_1,pairData_1 (-> ['twapData']),timeElapsed_1)
has variable
[i] TMP_119 cleared
clearing ir...?
currentLiquidityEvaluation_1(uint256) := TMP_119(uint256)
has variable
[i] currentLiquidityEvaluation cleared
typecheckig node...
TMP_119(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._updateUSDVPrice(IERC20,ILiquidityBasedTWAP.ExchangePair,uint256)(foreignAsset_1,pairData_1 (-> ['twapData']),timeElapsed_1)
Function name: syncUSDVPrice
Internal call...
_updateUSDVPrice
foreignAsset
pairData
timeElapsed
Function: _updateUSDVPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: USDVPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: USDVPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 0, 'USDVPAIR', [], -1]
[[-1], [-1], 0, 'EXCHANGEPAIR', [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _updateUSDVPrice
Function Visibility: internal
clearning node...
clearing ir...?
foreignAsset_1(IERC20) := ϕ(['foreignAsset_1'])
has variable
[i] foreignAsset cleared
clearing ir...?
pairData_1 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
timeElapsed_1(uint256) := ϕ(['timeElapsed_1'])
has variable
[i] timeElapsed cleared
clearing ir...?
vaderPool_2(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_0', 'vaderPool_4', 'vaderPool_1'])
has variable
clearing ir...?
previousPrices_22(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
typecheckig node...
foreignAsset_1(IERC20) := ϕ(['foreignAsset_1'])
Function name: _updateUSDVPrice
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
pairData_1 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: _updateUSDVPrice
Phi
[i]Type for pairData

Name: pairData Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
timeElapsed_1(uint256) := ϕ(['timeElapsed_1'])
Function name: _updateUSDVPrice
Phi
[i]Type for timeElapsed

Name: timeElapsed Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_2(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_0', 'vaderPool_4', 'vaderPool_1'])
Function name: _updateUSDVPrice
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
previousPrices_22(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _updateUSDVPrice
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_6(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_2(IVaderPoolV2), function:getReserves, arguments:['foreignAsset_1']  
has variable
clearing ir...?
vaderPool_3(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_2', 'vaderPool_1'])
has variable
clearing ir...?
previousPrices_23(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_22', 'previousPrices_4'])
has variable
clearing ir...?
reserveNative_1(uint256)= UNPACK TUPLE_6 index: 0 
has variable
[i] reserveNative cleared
clearing ir...?
reserveForeign_1(uint256)= UNPACK TUPLE_6 index: 1 
has variable
[i] reserveForeign cleared
typecheckig node...
TUPLE_6(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_2(IVaderPoolV2), function:getReserves, arguments:['foreignAsset_1']  
Function name: _updateUSDVPrice
High Call: getReserves
func name:getReserves
other func name:getReserves
TUPLE_6
hlc contract name: VADERPOOL func_name: getReserves
('c', [1], [-1], 0, None)
foreignAsset
('c', [2], [-1], 0, None)
foreignAsset
wfc len: 2
COPIED
[i]Type for TUPLE_6

Name: TUPLE_6 Function: _updateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_3(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_2', 'vaderPool_1'])
Function name: _updateUSDVPrice
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
previousPrices_23(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_22', 'previousPrices_4'])
Function name: _updateUSDVPrice
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserveNative_1(uint256)= UNPACK TUPLE_6 index: 0 
Function name: _updateUSDVPrice
Reading tuple TUPLE_6 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserveNative

Name: reserveNative Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_1(uint256)= UNPACK TUPLE_6 index: 1 
Function name: _updateUSDVPrice
Reading tuple TUPLE_6 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserveForeign

Name: reserveForeign Function: _updateUSDVPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_7(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_3(IVaderPoolV2), function:cumulativePrices, arguments:['foreignAsset_1']  
has variable
clearing ir...?
vaderPool_4(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_3', 'vaderPool_1'])
has variable
clearing ir...?
previousPrices_24(uint256[2]) := ϕ(['previousPrices_23', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
nativeTokenPriceCumulative_1(uint256)= UNPACK TUPLE_7 index: 0 
has variable
[i] nativeTokenPriceCumulative cleared
clearing ir...?
currentMeasurement_1(uint256)= UNPACK TUPLE_7 index: 2 
has variable
[i] currentMeasurement cleared
typecheckig node...
TUPLE_7(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_3(IVaderPoolV2), function:cumulativePrices, arguments:['foreignAsset_1']  
Function name: _updateUSDVPrice
High Call: cumulativePrices
func name:cumulativePrices
other func name:cumulativePrices
TUPLE_7
hlc contract name: VADERPOOL func_name: cumulativePrices
('c', [1], [-1], 0, None)
foreignAsset
('c', [-1], [-1], 'u', None)
foreignAsset
('c', [-1], [-1], 'u', None)
foreignAsset
wfc len: 3
COPIED
[i]Type for TUPLE_7

Name: TUPLE_7 Function: _updateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_4(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_3', 'vaderPool_1'])
Function name: _updateUSDVPrice
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
previousPrices_24(uint256[2]) := ϕ(['previousPrices_23', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _updateUSDVPrice
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeTokenPriceCumulative_1(uint256)= UNPACK TUPLE_7 index: 0 
Function name: _updateUSDVPrice
Reading tuple TUPLE_7 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for nativeTokenPriceCumulative

Name: nativeTokenPriceCumulative Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
currentMeasurement_1(uint256)= UNPACK TUPLE_7 index: 2 
Function name: _updateUSDVPrice
Reading tuple TUPLE_7 index 2
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for currentMeasurement

Name: currentMeasurement Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_95(FixedPoint.uq112x112) -> pairData_1 (-> []).nativeTokenPriceAverage
has variable
clearing ir...?
REF_97(uint256) -> pairData_1 (-> []).nativeTokenPriceCumulative
has variable
clearing ir...?
TMP_121(uint256) = nativeTokenPriceCumulative_1 - REF_97
has variable
[i] TMP_121 cleared
clearing ir...?
TMP_122(uint256) = TMP_121 / timeElapsed_1
has variable
[i] TMP_122 cleared
clearing ir...?
TMP_123 = CONVERT TMP_122 to uint224
has variable
[i] TMP_123 cleared
clearing ir...?
TMP_124 = new uq112x112(TMP_123)
clearing ir...?
pairData_2 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(['pairData_1 (-> [])'])
has variable
[i] pairData cleared
clearing ir...?
REF_95 (->pairData_2 (-> [])) := TMP_124(FixedPoint.uq112x112)
has variable
typecheckig node...
REF_95(FixedPoint.uq112x112) -> pairData_1 (-> []).nativeTokenPriceAverage
Function name: _updateUSDVPrice
MEMBER
pairData
nativeTokenPriceAverage
_updateUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_95

Name: pairData.nativeTokenPriceAverage Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceAverage Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceAverage Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_97(uint256) -> pairData_1 (-> []).nativeTokenPriceCumulative
Function name: _updateUSDVPrice
MEMBER
pairData
nativeTokenPriceCumulative
_updateUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_97

Name: pairData.nativeTokenPriceCumulative Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_121(uint256) = nativeTokenPriceCumulative_1 - REF_97
Function name: _updateUSDVPrice
Error with TMP_121 in function _updateUSDVPrice
Error with: TMP_121 in function _updateUSDVPrice
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f5145e0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f436910>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f408460>]
lnorm: 0 rnorm: -404
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: nativeTokenPriceCumulative Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_121 Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_121

Name: TMP_121 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_122(uint256) = TMP_121 / timeElapsed_1
Function name: _updateUSDVPrice
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_122 Function: _updateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_121 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_122 Function: _updateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_122

Name: TMP_122 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_123 = CONVERT TMP_122 to uint224
Function name: _updateUSDVPrice

Name: TMP_122 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_123 Function: _updateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_123

Name: TMP_123 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_124 = new uq112x112(TMP_123)
[i]Type for TMP_124

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_2 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(['pairData_1 (-> [])'])
Function name: _updateUSDVPrice
Phi
[i]Type for pairData

Name: pairData Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_95 (->pairData_2 (-> [])) := TMP_124(FixedPoint.uq112x112)
Function name: _updateUSDVPrice
asgn

Name: TMP_124 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_95 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_95

Name: REF_95 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: REF_95 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_95 (->pairData_2 (-> [])) := TMP_124(FixedPoint.uq112x112)
XXXXX
clearning node...
clearing ir...?
REF_98(uint256) -> pairData_2 (-> []).nativeTokenPriceCumulative
has variable
clearing ir...?
pairData_3 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(['pairData_2 (-> [])'])
has variable
[i] pairData cleared
clearing ir...?
REF_98 (->pairData_3 (-> [])) := nativeTokenPriceCumulative_1(uint256)
has variable
typecheckig node...
REF_98(uint256) -> pairData_2 (-> []).nativeTokenPriceCumulative
Function name: _updateUSDVPrice
MEMBER
pairData
nativeTokenPriceCumulative
_updateUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_98

Name: pairData.nativeTokenPriceCumulative Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_3 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(['pairData_2 (-> [])'])
Function name: _updateUSDVPrice
Phi
[i]Type for pairData

Name: pairData Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_98 (->pairData_3 (-> [])) := nativeTokenPriceCumulative_1(uint256)
Function name: _updateUSDVPrice
asgn

Name: nativeTokenPriceCumulative Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_98 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Error with REF_98 in function _updateUSDVPrice
Error with: REF_98 in function _updateUSDVPrice
[W] Initializing defined variable to constant
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f5145e0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f436910>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f408460>, <slither.slithir.variables.reference_ssa.ReferenceVariableSSA object at 0x7f4b4f408a60>]
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_98

Name: REF_98 Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_98 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_99(uint256) -> pairData_3 (-> []).lastMeasurement
has variable
clearing ir...?
pairData_4 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(['pairData_3 (-> [])'])
has variable
[i] pairData cleared
clearing ir...?
REF_99 (->pairData_4 (-> [])) := currentMeasurement_1(uint256)
has variable
typecheckig node...
REF_99(uint256) -> pairData_3 (-> []).lastMeasurement
Function name: _updateUSDVPrice
MEMBER
pairData
lastMeasurement
_updateUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_99

Name: pairData.lastMeasurement Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_4 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(['pairData_3 (-> [])'])
Function name: _updateUSDVPrice
Phi
[i]Type for pairData

Name: pairData Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_99 (->pairData_4 (-> [])) := currentMeasurement_1(uint256)
Function name: _updateUSDVPrice
asgn

Name: currentMeasurement Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_99 Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_99

Name: REF_99 Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_99 Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_100(ILiquidityBasedTWAP.Paths) -> Paths.USDV
has variable
clearing ir...?
TMP_125 = CONVERT REF_100 to uint256
has variable
[i] TMP_125 cleared
clearing ir...?
REF_101(uint256) -> previousPrices_24[TMP_125]
has variable
clearing ir...?
TMP_126(uint256) = reserveNative_1 (c)* REF_101
has variable
[i] TMP_126 cleared
clearing ir...?
TMP_127 = CONVERT foreignAsset_1 to address
has variable
[i] TMP_127 cleared
clearing ir...?
TMP_128(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(TMP_127)
has variable
[i] TMP_128 cleared
clearing ir...?
TMP_129(uint256) = reserveForeign_1 (c)* TMP_128
has variable
[i] TMP_129 cleared
clearing ir...?
TMP_130(uint256) = TMP_126 (c)+ TMP_129
has variable
[i] TMP_130 cleared
clearing ir...?
currentLiquidityEvaluation_1(uint256) := TMP_130(uint256)
has variable
[i] currentLiquidityEvaluation cleared
typecheckig node...
REF_100(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: _updateUSDVPrice
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_100

Name: Paths.USDV Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_125 = CONVERT REF_100 to uint256
Function name: _updateUSDVPrice

Name: Paths.USDV Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_125 Function: _updateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_125

Name: TMP_125 Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_101(uint256) -> previousPrices_24[TMP_125]
Function name: _updateUSDVPrice
INDEX

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_101

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_126(uint256) = reserveNative_1 (c)* REF_101
Function name: _updateUSDVPrice
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_35 Function: None
Num: 1, 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_126 Function: _updateUSDVPrice
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_126

Name: TMP_126 Function: _updateUSDVPrice
Num: 1, 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_127 = CONVERT foreignAsset_1 to address
Function name: _updateUSDVPrice

Name: foreignAsset Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: TMP_127 Function: _updateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_127

Name: TMP_127 Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
TMP_128(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(TMP_127)
Function name: _updateUSDVPrice
Internal call...
getChainlinkPrice
TMP_127
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: USDVPAIR
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
added
xyz
Function name: getChainlinkPrice
Function Visibility: public
clearning node...
clearing ir...?
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
has variable
[i] asset cleared
clearing ir...?
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
has variable
typecheckig node...
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
Function name: getChainlinkPrice
Phi
[i]Type for asset

Name: asset Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
Function name: getChainlinkPrice
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_14(IAggregatorV3) -> oracles_1[asset_1]
has variable
clearing ir...?
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
has variable
[i] oracle cleared
typecheckig node...
REF_14(IAggregatorV3) -> oracles_1[asset_1]
Function name: getChainlinkPrice
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_14

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
Function name: getChainlinkPrice
asgn

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: oracle Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for oracle

Name: oracle Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
has variable
clearing ir...?
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
has variable
[i] roundID cleared
clearing ir...?
price_1(int256)= UNPACK TUPLE_0 index: 1 
has variable
[i] price cleared
clearing ir...?
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
has variable
[i] answeredInRound cleared
typecheckig node...
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
Function name: getChainlinkPrice
High Call: latestRoundData
func name:latestRoundData
other func name:latestRoundData
TUPLE_0
hlc contract name: ORACLE func_name: latestRoundData
('c', [-1], [-1], 0, None)
('c', [2], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
wfc len: 5
COPIED
[i]Type for TUPLE_0

Name: TUPLE_0 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for roundID

Name: roundID Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
price_1(int256)= UNPACK TUPLE_0 index: 1 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: int256
int256
Final Type: int256
[i]Type for price

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 4
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for answeredInRound

Name: answeredInRound Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_30(bool) = answeredInRound_1 >= roundID_1
has variable
[i] TMP_30 cleared
clearing ir...?
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
typecheckig node...
TMP_30(bool) = answeredInRound_1 >= roundID_1
Function name: getChainlinkPrice
testing gt...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_30

Name: TMP_30 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_32(bool) = price_1 > 0
has variable
[i] TMP_32 cleared
clearing ir...?
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
typecheckig node...
TMP_32(bool) = price_1 > 0
Function name: getChainlinkPrice
testing gt...
val: 0
val: 0
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_32

Name: TMP_32 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_34 = CONVERT price_1 to uint256
has variable
[i] TMP_34 cleared
clearing ir...?
RETURN TMP_34
typecheckig node...
TMP_34 = CONVERT price_1 to uint256
Function name: getChainlinkPrice

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_34 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_34

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_34
RETURN

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "getChainlinkPrice":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: getChainlinkPrice

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_128

Name: TMP_128 Function: _updateUSDVPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_129(uint256) = reserveForeign_1 (c)* TMP_128
Function name: _updateUSDVPrice
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_37 Function: None
Num: 2, 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_129 Function: _updateUSDVPrice
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_129

Name: TMP_129 Function: _updateUSDVPrice
Num: 2, 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_130(uint256) = TMP_126 (c)+ TMP_129
Function name: _updateUSDVPrice

Name: TMP_130 Function: _updateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
Error with TMP_130 in function _updateUSDVPrice
Error with: TMP_130 in function _updateUSDVPrice
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f5145e0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f436910>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f408460>, <slither.slithir.variables.reference_ssa.ReferenceVariableSSA object at 0x7f4b4f408a60>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f4138e0>]
[i]Type for TMP_130

Name: TMP_130 Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
currentLiquidityEvaluation_1(uint256) := TMP_130(uint256)
Function name: _updateUSDVPrice
asgn

Name: TMP_130 Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidityEvaluation Function: _updateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidityEvaluation

Name: currentLiquidityEvaluation Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_updateUSDVPrice":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
foreignAsset_1(IERC20) := ϕ(['foreignAsset_1'])
Function name: _updateUSDVPrice
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
pairData_1 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: _updateUSDVPrice
Phi
[i]Type for pairData

Name: pairData Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
timeElapsed_1(uint256) := ϕ(['timeElapsed_1'])
Function name: _updateUSDVPrice
Phi
[i]Type for timeElapsed

Name: timeElapsed Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_2(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_0', 'vaderPool_4', 'vaderPool_1'])
Function name: _updateUSDVPrice
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
previousPrices_22(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _updateUSDVPrice
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
TUPLE_6(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_2(IVaderPoolV2), function:getReserves, arguments:['foreignAsset_1']  
Function name: _updateUSDVPrice
High Call: getReserves
func name:getReserves
other func name:getReserves
TUPLE_6
hlc contract name: VADERPOOL func_name: getReserves
('c', [1], [-1], 0, None)
foreignAsset
('c', [2], [-1], 0, None)
foreignAsset
wfc len: 2
COPIED
[i]Type for TUPLE_6

Name: TUPLE_6 Function: _updateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_3(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_2', 'vaderPool_1'])
Function name: _updateUSDVPrice
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
previousPrices_23(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_22', 'previousPrices_4'])
Function name: _updateUSDVPrice
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserveNative_1(uint256)= UNPACK TUPLE_6 index: 0 
Function name: _updateUSDVPrice
Reading tuple TUPLE_6 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserveNative

Name: reserveNative Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_1(uint256)= UNPACK TUPLE_6 index: 1 
Function name: _updateUSDVPrice
Reading tuple TUPLE_6 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserveForeign

Name: reserveForeign Function: _updateUSDVPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
TUPLE_7(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_3(IVaderPoolV2), function:cumulativePrices, arguments:['foreignAsset_1']  
Function name: _updateUSDVPrice
High Call: cumulativePrices
func name:cumulativePrices
other func name:cumulativePrices
TUPLE_7
hlc contract name: VADERPOOL func_name: cumulativePrices
('c', [1], [-1], 0, None)
foreignAsset
('c', [-1], [-1], 'u', None)
foreignAsset
('c', [-1], [-1], 'u', None)
foreignAsset
wfc len: 3
COPIED
[i]Type for TUPLE_7

Name: TUPLE_7 Function: _updateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_4(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_3', 'vaderPool_1'])
Function name: _updateUSDVPrice
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
previousPrices_24(uint256[2]) := ϕ(['previousPrices_23', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _updateUSDVPrice
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeTokenPriceCumulative_1(uint256)= UNPACK TUPLE_7 index: 0 
Function name: _updateUSDVPrice
Reading tuple TUPLE_7 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for nativeTokenPriceCumulative

Name: nativeTokenPriceCumulative Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
currentMeasurement_1(uint256)= UNPACK TUPLE_7 index: 2 
Function name: _updateUSDVPrice
Reading tuple TUPLE_7 index 2
Check copy_toekn_tuple
([-1], [-1], 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for currentMeasurement

Name: currentMeasurement Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_95(FixedPoint.uq112x112) -> pairData_1 (-> []).nativeTokenPriceAverage
Function name: _updateUSDVPrice
MEMBER
[W] Initializing defined variable to constant
pairData
nativeTokenPriceAverage
_updateUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_95

Name: pairData.nativeTokenPriceAverage Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceAverage Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
REF_97(uint256) -> pairData_1 (-> []).nativeTokenPriceCumulative
Function name: _updateUSDVPrice
MEMBER
pairData
nativeTokenPriceCumulative
_updateUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_97

Name: pairData.nativeTokenPriceCumulative Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_121(uint256) = nativeTokenPriceCumulative_1 - REF_97
Function name: _updateUSDVPrice
[W] Initializing defined variable to constant
lnorm: 0 rnorm: -404
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: nativeTokenPriceCumulative Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_121 Function: _updateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_121

Name: TMP_121 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_122(uint256) = TMP_121 / timeElapsed_1
Function name: _updateUSDVPrice
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_122 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_121 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_122 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_122

Name: TMP_122 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_123 = CONVERT TMP_122 to uint224
Function name: _updateUSDVPrice

Name: TMP_122 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_123 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_123

Name: TMP_123 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_124 = new uq112x112(TMP_123)
[i]Type for TMP_124

Name: TMP_124 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_2 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(['pairData_1 (-> [])'])
Function name: _updateUSDVPrice
Phi
[i]Type for pairData

Name: pairData Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_95 (->pairData_2 (-> [])) := TMP_124(FixedPoint.uq112x112)
Function name: _updateUSDVPrice
asgn

Name: TMP_124 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_95 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_95

Name: REF_95 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: REF_95 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceAverage Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_95 (->pairData_2 (-> [])) := TMP_124(FixedPoint.uq112x112)
XXXXX
typecheckig node...
REF_98(uint256) -> pairData_2 (-> []).nativeTokenPriceCumulative
Function name: _updateUSDVPrice
MEMBER
[W] Initializing defined variable to constant
pairData
nativeTokenPriceCumulative
_updateUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_98

Name: pairData.nativeTokenPriceCumulative Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
pairData_3 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(['pairData_2 (-> [])'])
Function name: _updateUSDVPrice
Phi
[i]Type for pairData

Name: pairData Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_98 (->pairData_3 (-> [])) := nativeTokenPriceCumulative_1(uint256)
Function name: _updateUSDVPrice
asgn

Name: nativeTokenPriceCumulative Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_98 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[W] Initializing defined variable to constant
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_98

Name: REF_98 Function: _updateUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_98 Function: _updateUSDVPrice
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_99(uint256) -> pairData_3 (-> []).lastMeasurement
Function name: _updateUSDVPrice
MEMBER
pairData
lastMeasurement
_updateUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_99

Name: pairData.lastMeasurement Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_4 (-> [])(ILiquidityBasedTWAP.ExchangePair) := ϕ(['pairData_3 (-> [])'])
Function name: _updateUSDVPrice
Phi
[i]Type for pairData

Name: pairData Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_99 (->pairData_4 (-> [])) := currentMeasurement_1(uint256)
Function name: _updateUSDVPrice
asgn

Name: currentMeasurement Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_99 Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_99

Name: REF_99 Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_99 Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_100(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: _updateUSDVPrice
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_100

Name: Paths.USDV Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_125 = CONVERT REF_100 to uint256
Function name: _updateUSDVPrice

Name: Paths.USDV Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_125 Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_125

Name: TMP_125 Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_101(uint256) -> previousPrices_24[TMP_125]
Function name: _updateUSDVPrice
INDEX

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_101

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_126(uint256) = reserveNative_1 (c)* REF_101
Function name: _updateUSDVPrice
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_38 Function: None
Num: 1, 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_126 Function: _updateUSDVPrice
Num: 1, 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_126

Name: TMP_126 Function: _updateUSDVPrice
Num: 1, 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_127 = CONVERT foreignAsset_1 to address
Function name: _updateUSDVPrice

Name: foreignAsset Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: TMP_127 Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: USDVPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_127

Name: TMP_127 Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
TMP_128(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(TMP_127)
Function name: _updateUSDVPrice
Internal call...
getChainlinkPrice
TMP_127
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: USDVPAIR
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
added
xyz
Function name: getChainlinkPrice
Function Visibility: public
clearning node...
clearing ir...?
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
has variable
[i] asset cleared
clearing ir...?
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
has variable
typecheckig node...
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
Function name: getChainlinkPrice
Phi
[i]Type for asset

Name: asset Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
Function name: getChainlinkPrice
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_14(IAggregatorV3) -> oracles_1[asset_1]
has variable
clearing ir...?
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
has variable
[i] oracle cleared
typecheckig node...
REF_14(IAggregatorV3) -> oracles_1[asset_1]
Function name: getChainlinkPrice
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_14

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
Function name: getChainlinkPrice
asgn

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: oracle Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for oracle

Name: oracle Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
has variable
clearing ir...?
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
has variable
[i] roundID cleared
clearing ir...?
price_1(int256)= UNPACK TUPLE_0 index: 1 
has variable
[i] price cleared
clearing ir...?
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
has variable
[i] answeredInRound cleared
typecheckig node...
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
Function name: getChainlinkPrice
High Call: latestRoundData
func name:latestRoundData
other func name:latestRoundData
TUPLE_0
hlc contract name: ORACLE func_name: latestRoundData
('c', [-1], [-1], 0, None)
('c', [2], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
wfc len: 5
COPIED
[i]Type for TUPLE_0

Name: TUPLE_0 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for roundID

Name: roundID Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
price_1(int256)= UNPACK TUPLE_0 index: 1 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: int256
int256
Final Type: int256
[i]Type for price

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 4
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for answeredInRound

Name: answeredInRound Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_30(bool) = answeredInRound_1 >= roundID_1
has variable
[i] TMP_30 cleared
clearing ir...?
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
typecheckig node...
TMP_30(bool) = answeredInRound_1 >= roundID_1
Function name: getChainlinkPrice
testing gt...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_30

Name: TMP_30 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_32(bool) = price_1 > 0
has variable
[i] TMP_32 cleared
clearing ir...?
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
typecheckig node...
TMP_32(bool) = price_1 > 0
Function name: getChainlinkPrice
testing gt...
val: 0
val: 0
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_32

Name: TMP_32 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_34 = CONVERT price_1 to uint256
has variable
[i] TMP_34 cleared
clearing ir...?
RETURN TMP_34
typecheckig node...
TMP_34 = CONVERT price_1 to uint256
Function name: getChainlinkPrice

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_34 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_34

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_34
RETURN

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "getChainlinkPrice":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: getChainlinkPrice

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_128

Name: TMP_128 Function: _updateUSDVPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_129(uint256) = reserveForeign_1 (c)* TMP_128
Function name: _updateUSDVPrice
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_40 Function: None
Num: 2, 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_129 Function: _updateUSDVPrice
Num: 2, 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_129

Name: TMP_129 Function: _updateUSDVPrice
Num: 2, 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_130(uint256) = TMP_126 (c)+ TMP_129
Function name: _updateUSDVPrice

Name: TMP_130 Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_130

Name: TMP_130 Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
currentLiquidityEvaluation_1(uint256) := TMP_130(uint256)
Function name: _updateUSDVPrice
asgn

Name: TMP_130 Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidityEvaluation Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidityEvaluation

Name: currentLiquidityEvaluation Function: _updateUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "_updateUSDVPrice":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: _updateUSDVPrice

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_119

Name: TMP_119 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_119(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._updateUSDVPrice(IERC20,ILiquidityBasedTWAP.ExchangePair,uint256)(foreignAsset_1,pairData_1 (-> ['twapData']),timeElapsed_1)
XXXXX
currentLiquidityEvaluation_1(uint256) := TMP_119(uint256)
Function name: syncUSDVPrice
asgn

Name: TMP_119 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidityEvaluation

Name: currentLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
currentLiquidityEvaluation_1(uint256) := TMP_119(uint256)
XXXXX
clearning node...
clearing ir...?
REF_89(uint256) -> pastLiquidityWeights_2[i_1]
has variable
clearing ir...?
pastLiquidityWeights_3(uint256[]) := ϕ(['pastLiquidityWeights_2'])
has variable
[i] pastLiquidityWeights cleared
clearing ir...?
REF_89 (->pastLiquidityWeights_3) := pastLiquidityEvaluation_1(uint256)
has variable
typecheckig node...
REF_89(uint256) -> pastLiquidityWeights_2[i_1]
Function name: syncUSDVPrice
INDEX

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: syncUSDVPrice
pastLiquidityWeights
[i]Type for REF_89

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_89(uint256) -> pastLiquidityWeights_2[i_1]
XXXXX
pastLiquidityWeights_3(uint256[]) := ϕ(['pastLiquidityWeights_2'])
Function name: syncUSDVPrice
Phi
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_89 (->pastLiquidityWeights_3) := pastLiquidityEvaluation_1(uint256)
Function name: syncUSDVPrice
asgn

Name: pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_89 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_89

Name: REF_89 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_90(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
has variable
clearing ir...?
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_90 (->pairData_2 (-> ['twapData'])) := currentLiquidityEvaluation_1(uint256)
has variable
clearing ir...?
twapData_19(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
has variable
typecheckig node...
REF_90(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
Function name: syncUSDVPrice
MEMBER
pairData
pastLiquidityEvaluation
syncUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_90

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: syncUSDVPrice
Phi
[i]Type for pairData

Name: pairData Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_90 (->pairData_2 (-> ['twapData'])) := currentLiquidityEvaluation_1(uint256)
Function name: syncUSDVPrice
asgn

Name: currentLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_90 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_90

Name: REF_90 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_90 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_90 (->pairData_2 (-> ['twapData'])) := currentLiquidityEvaluation_1(uint256)
XXXXX
twapData_19(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: syncUSDVPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
_totalLiquidityWeight_2(uint256) = _totalLiquidityWeight_1 (c)+ currentLiquidityEvaluation_1
has variable
[i] _totalLiquidityWeight cleared
typecheckig node...
_totalLiquidityWeight_2(uint256) = _totalLiquidityWeight_1 (c)+ currentLiquidityEvaluation_1
Function name: syncUSDVPrice

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: currentLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for _totalLiquidityWeight

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_totalLiquidityWeight_2(uint256) = _totalLiquidityWeight_1 (c)+ currentLiquidityEvaluation_1
XXXXX
clearning node...
clearing ir...?
i_2(uint256) = i_1 (c)+ 1
has variable
[i] i cleared
typecheckig node...
i_2(uint256) = i_1 (c)+ 1
Function name: syncUSDVPrice
val: 1

Name: i Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: syncUSDVPrice
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
i_2(uint256) = i_1 (c)+ 1
XXXXX
clearning node...
clearing ir...?
RETURN pastLiquidityWeights_2,pastTotalLiquidityWeight_1
typecheckig node...
RETURN pastLiquidityWeights_2,pastTotalLiquidityWeight_1
RETURN

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastTotalLiquidityWeight Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "syncUSDVPrice":
 New undefined nodes- 9
 Old undefined nodes- 0
typecheckig node...
usdvPairs_2(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
Function name: syncUSDVPrice
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_18(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: syncUSDVPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_17(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: syncUSDVPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
REF_81 -> LENGTH usdvPairs_2
[i]Type for REF_81

Name: REF_81 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalPairs_1(uint256) := REF_81(uint256)
Function name: syncUSDVPrice
asgn

Name: REF_81 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalPairs Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalPairs

Name: totalPairs Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalPairs_1(uint256) := REF_81(uint256)
XXXXX
typecheckig node...
TMP_113 = new uint256[](totalPairs_1)
[i]Type for TMP_113

Name: TMP_113 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_1(uint256[]) := TMP_113(uint256)
Function name: syncUSDVPrice
asgn

Name: TMP_113 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pastLiquidityWeights_1(uint256[]) := TMP_113(uint256)
XXXXX
typecheckig node...
REF_82(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: syncUSDVPrice
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_82

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_114 = CONVERT REF_82 to uint256
Function name: syncUSDVPrice

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_114 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_114

Name: TMP_114 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_83(uint256) -> totalLiquidityWeight_18[TMP_114]
Function name: syncUSDVPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_83

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pastTotalLiquidityWeight_1(uint256) := REF_83(uint256)
Function name: syncUSDVPrice
asgn

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: pastTotalLiquidityWeight Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastTotalLiquidityWeight

Name: pastTotalLiquidityWeight Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
pastLiquidityWeights_2(uint256[]) := ϕ(['pastLiquidityWeights_3', 'pastLiquidityWeights_1'])
Function name: syncUSDVPrice
Phi
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalLiquidityWeight_1(uint256) := ϕ(['_totalLiquidityWeight_2', '_totalLiquidityWeight_0'])
Function name: syncUSDVPrice
Phi
[i]Type for _totalLiquidityWeight

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
i_1(uint256) := ϕ(['i_2', 'i_0'])
Function name: syncUSDVPrice
Phi
[i]Type for i

Name: i Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_115(bool) = i_1 < totalPairs_1
Function name: syncUSDVPrice
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: i Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_115 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_115

Name: TMP_115 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_115(bool) = i_1 < totalPairs_1
XXXXX
CONDITION TMP_115
Condition...
Conidtion: 
TMP_115
TMP_115
typecheckig node...
REF_84(IERC20) -> usdvPairs_2[i_1]
Function name: syncUSDVPrice
INDEX

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_84

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
foreignAsset_1(IERC20) := REF_84(IERC20)
Function name: syncUSDVPrice
asgn

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: foreignAsset Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_116 = CONVERT foreignAsset_1 to address
Function name: syncUSDVPrice

Name: foreignAsset Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: TMP_116 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_116

Name: TMP_116 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_85(ILiquidityBasedTWAP.ExchangePair) -> twapData_17[TMP_116]
Function name: syncUSDVPrice
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_85

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_85(ILiquidityBasedTWAP.ExchangePair)
Function name: syncUSDVPrice
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_91(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: syncUSDVPrice
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_91

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_120 = CONVERT REF_91 to uint256
Function name: syncUSDVPrice

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_120 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_120

Name: TMP_120 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_92(uint256) -> totalLiquidityWeight_18[TMP_120]
Function name: syncUSDVPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_92

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_19(uint256[2]) := ϕ(['totalLiquidityWeight_18'])
Function name: syncUSDVPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_92 (->totalLiquidityWeight_19) := _totalLiquidityWeight_1(uint256)
Function name: syncUSDVPrice
asgn

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_92 Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_92

Name: REF_92 Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_92 (->totalLiquidityWeight_19) := _totalLiquidityWeight_1(uint256)
XXXXX
typecheckig node...
REF_86(uint256) -> pairData_1 (-> ['twapData']).lastMeasurement
Function name: syncUSDVPrice
MEMBER
pairData
lastMeasurement
syncUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_86

Name: pairData.lastMeasurement Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_117(uint256) = block.timestamp (c)- REF_86
Function name: syncUSDVPrice
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_42 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_117 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_117

Name: TMP_117 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
timeElapsed_1(uint256) := TMP_117(uint256)
Function name: syncUSDVPrice
asgn

Name: TMP_117 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: timeElapsed Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for timeElapsed

Name: timeElapsed Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_87(uint256) -> pairData_1 (-> ['twapData']).updatePeriod
Function name: syncUSDVPrice
MEMBER
pairData
updatePeriod
syncUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_87

Name: pairData.updatePeriod Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_118(bool) = timeElapsed_1 < REF_87
Function name: syncUSDVPrice
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_118

Name: TMP_118 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_118
Condition...
Conidtion: 
TMP_118
TMP_118
typecheckig node...
typecheckig node...
REF_88(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
Function name: syncUSDVPrice
MEMBER
pairData
pastLiquidityEvaluation
syncUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_88

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityEvaluation_1(uint256) := REF_88(uint256)
Function name: syncUSDVPrice
asgn

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityEvaluation

Name: pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_119(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._updateUSDVPrice(IERC20,ILiquidityBasedTWAP.ExchangePair,uint256)(foreignAsset_1,pairData_1 (-> ['twapData']),timeElapsed_1)
Function name: syncUSDVPrice
Internal call...
_updateUSDVPrice
foreignAsset
pairData
timeElapsed
Function: _updateUSDVPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: USDVPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: USDVPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'USDVPAIR', [], -1]
cur_param: [[-1], [-1], 0, 'EXCHANGEPAIR', [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: USDVPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'USDVPAIR', [], -1]
[[-1], [-1], 0, 'EXCHANGEPAIR', [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>], -1]
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_41 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_119 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_119

Name: TMP_119 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
currentLiquidityEvaluation_1(uint256) := TMP_119(uint256)
Function name: syncUSDVPrice
asgn

Name: TMP_119 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidityEvaluation

Name: currentLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
currentLiquidityEvaluation_1(uint256) := TMP_119(uint256)
XXXXX
typecheckig node...
REF_89(uint256) -> pastLiquidityWeights_2[i_1]
Function name: syncUSDVPrice
INDEX

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: syncUSDVPrice
pastLiquidityWeights
[i]Type for REF_89

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_89(uint256) -> pastLiquidityWeights_2[i_1]
XXXXX
pastLiquidityWeights_3(uint256[]) := ϕ(['pastLiquidityWeights_2'])
Function name: syncUSDVPrice
Phi
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_89 (->pastLiquidityWeights_3) := pastLiquidityEvaluation_1(uint256)
Function name: syncUSDVPrice
asgn

Name: pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_89 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_89

Name: REF_89 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_90(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
Function name: syncUSDVPrice
MEMBER
pairData
pastLiquidityEvaluation
syncUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_90

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: syncUSDVPrice
Phi
[i]Type for pairData

Name: pairData Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_90 (->pairData_2 (-> ['twapData'])) := currentLiquidityEvaluation_1(uint256)
Function name: syncUSDVPrice
asgn

Name: currentLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_90 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_90

Name: REF_90 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_90 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_90 (->pairData_2 (-> ['twapData'])) := currentLiquidityEvaluation_1(uint256)
XXXXX
twapData_19(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: syncUSDVPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
_totalLiquidityWeight_2(uint256) = _totalLiquidityWeight_1 (c)+ currentLiquidityEvaluation_1
Function name: syncUSDVPrice

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: currentLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for _totalLiquidityWeight

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_totalLiquidityWeight_2(uint256) = _totalLiquidityWeight_1 (c)+ currentLiquidityEvaluation_1
XXXXX
typecheckig node...
i_2(uint256) = i_1 (c)+ 1
Function name: syncUSDVPrice
val: 1

Name: i Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN pastLiquidityWeights_2,pastTotalLiquidityWeight_1
typecheckig node...
RETURN pastLiquidityWeights_2,pastTotalLiquidityWeight_1
RETURN

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastTotalLiquidityWeight Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "syncUSDVPrice":
 New undefined nodes- 8
 Old undefined nodes- 9
typecheckig node...
usdvPairs_2(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
Function name: syncUSDVPrice
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_18(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: syncUSDVPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_17(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: syncUSDVPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
REF_81 -> LENGTH usdvPairs_2
[i]Type for REF_81

Name: REF_81 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalPairs_1(uint256) := REF_81(uint256)
Function name: syncUSDVPrice
asgn

Name: REF_81 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalPairs Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalPairs

Name: totalPairs Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalPairs_1(uint256) := REF_81(uint256)
XXXXX
typecheckig node...
TMP_113 = new uint256[](totalPairs_1)
[i]Type for TMP_113

Name: TMP_113 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_1(uint256[]) := TMP_113(uint256)
Function name: syncUSDVPrice
asgn

Name: TMP_113 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pastLiquidityWeights_1(uint256[]) := TMP_113(uint256)
XXXXX
typecheckig node...
REF_82(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: syncUSDVPrice
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_82

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_114 = CONVERT REF_82 to uint256
Function name: syncUSDVPrice

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_114 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_114

Name: TMP_114 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_83(uint256) -> totalLiquidityWeight_18[TMP_114]
Function name: syncUSDVPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_83

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pastTotalLiquidityWeight_1(uint256) := REF_83(uint256)
Function name: syncUSDVPrice
asgn

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: pastTotalLiquidityWeight Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastTotalLiquidityWeight

Name: pastTotalLiquidityWeight Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
pastLiquidityWeights_2(uint256[]) := ϕ(['pastLiquidityWeights_3', 'pastLiquidityWeights_1'])
Function name: syncUSDVPrice
Phi
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalLiquidityWeight_1(uint256) := ϕ(['_totalLiquidityWeight_2', '_totalLiquidityWeight_0'])
Function name: syncUSDVPrice
Phi
[i]Type for _totalLiquidityWeight

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
i_1(uint256) := ϕ(['i_2', 'i_0'])
Function name: syncUSDVPrice
Phi
[i]Type for i

Name: i Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_115(bool) = i_1 < totalPairs_1
Function name: syncUSDVPrice
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: i Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_115 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_115

Name: TMP_115 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_115(bool) = i_1 < totalPairs_1
XXXXX
CONDITION TMP_115
Condition...
Conidtion: 
TMP_115
TMP_115
typecheckig node...
REF_84(IERC20) -> usdvPairs_2[i_1]
Function name: syncUSDVPrice
INDEX

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_84

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
foreignAsset_1(IERC20) := REF_84(IERC20)
Function name: syncUSDVPrice
asgn

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: foreignAsset Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_116 = CONVERT foreignAsset_1 to address
Function name: syncUSDVPrice

Name: foreignAsset Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: TMP_116 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_116

Name: TMP_116 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_85(ILiquidityBasedTWAP.ExchangePair) -> twapData_17[TMP_116]
Function name: syncUSDVPrice
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_85

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_85(ILiquidityBasedTWAP.ExchangePair)
Function name: syncUSDVPrice
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_91(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: syncUSDVPrice
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_91

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_120 = CONVERT REF_91 to uint256
Function name: syncUSDVPrice

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_120 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_120

Name: TMP_120 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_92(uint256) -> totalLiquidityWeight_18[TMP_120]
Function name: syncUSDVPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_92

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_19(uint256[2]) := ϕ(['totalLiquidityWeight_18'])
Function name: syncUSDVPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_92 (->totalLiquidityWeight_19) := _totalLiquidityWeight_1(uint256)
Function name: syncUSDVPrice
asgn

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_92 Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_92

Name: REF_92 Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_92 (->totalLiquidityWeight_19) := _totalLiquidityWeight_1(uint256)
XXXXX
typecheckig node...
REF_86(uint256) -> pairData_1 (-> ['twapData']).lastMeasurement
Function name: syncUSDVPrice
MEMBER
pairData
lastMeasurement
syncUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_86

Name: pairData.lastMeasurement Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_117(uint256) = block.timestamp (c)- REF_86
Function name: syncUSDVPrice
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_43 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_117 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_117

Name: TMP_117 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
timeElapsed_1(uint256) := TMP_117(uint256)
Function name: syncUSDVPrice
asgn

Name: TMP_117 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: timeElapsed Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for timeElapsed

Name: timeElapsed Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_87(uint256) -> pairData_1 (-> ['twapData']).updatePeriod
Function name: syncUSDVPrice
MEMBER
pairData
updatePeriod
syncUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_87

Name: pairData.updatePeriod Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_118(bool) = timeElapsed_1 < REF_87
Function name: syncUSDVPrice
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_118

Name: TMP_118 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_118
Condition...
Conidtion: 
TMP_118
TMP_118
typecheckig node...
typecheckig node...
REF_88(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
Function name: syncUSDVPrice
MEMBER
pairData
pastLiquidityEvaluation
syncUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_88

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityEvaluation_1(uint256) := REF_88(uint256)
Function name: syncUSDVPrice
asgn

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityEvaluation

Name: pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_119(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._updateUSDVPrice(IERC20,ILiquidityBasedTWAP.ExchangePair,uint256)(foreignAsset_1,pairData_1 (-> ['twapData']),timeElapsed_1)
Function name: syncUSDVPrice
Internal call...
_updateUSDVPrice
foreignAsset
pairData
timeElapsed
Function: _updateUSDVPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: USDVPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: USDVPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'USDVPAIR', [], -1]
cur_param: [[-1], [-1], 0, 'EXCHANGEPAIR', [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: USDVPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'USDVPAIR', [], -1]
[[-1], [-1], 0, 'EXCHANGEPAIR', [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>], -1]
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_41 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_119 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_119

Name: TMP_119 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
currentLiquidityEvaluation_1(uint256) := TMP_119(uint256)
Function name: syncUSDVPrice
asgn

Name: TMP_119 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidityEvaluation

Name: currentLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
currentLiquidityEvaluation_1(uint256) := TMP_119(uint256)
XXXXX
typecheckig node...
REF_89(uint256) -> pastLiquidityWeights_2[i_1]
Function name: syncUSDVPrice
INDEX

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: syncUSDVPrice
pastLiquidityWeights
[i]Type for REF_89

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_89(uint256) -> pastLiquidityWeights_2[i_1]
XXXXX
pastLiquidityWeights_3(uint256[]) := ϕ(['pastLiquidityWeights_2'])
Function name: syncUSDVPrice
Phi
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_89 (->pastLiquidityWeights_3) := pastLiquidityEvaluation_1(uint256)
Function name: syncUSDVPrice
asgn

Name: pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_89 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_89

Name: REF_89 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_90(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
Function name: syncUSDVPrice
MEMBER
pairData
pastLiquidityEvaluation
syncUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_90

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: syncUSDVPrice
Phi
[i]Type for pairData

Name: pairData Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_90 (->pairData_2 (-> ['twapData'])) := currentLiquidityEvaluation_1(uint256)
Function name: syncUSDVPrice
asgn

Name: currentLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_90 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_90

Name: REF_90 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_90 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_90 (->pairData_2 (-> ['twapData'])) := currentLiquidityEvaluation_1(uint256)
XXXXX
twapData_19(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: syncUSDVPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
_totalLiquidityWeight_2(uint256) = _totalLiquidityWeight_1 (c)+ currentLiquidityEvaluation_1
Function name: syncUSDVPrice

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: currentLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for _totalLiquidityWeight

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_totalLiquidityWeight_2(uint256) = _totalLiquidityWeight_1 (c)+ currentLiquidityEvaluation_1
XXXXX
typecheckig node...
i_2(uint256) = i_1 (c)+ 1
Function name: syncUSDVPrice
val: 1

Name: i Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN pastLiquidityWeights_2,pastTotalLiquidityWeight_1
typecheckig node...
RETURN pastLiquidityWeights_2,pastTotalLiquidityWeight_1
RETURN

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastTotalLiquidityWeight Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 2 for function call "syncUSDVPrice":
 New undefined nodes- 8
 Old undefined nodes- 8
Saving return values for: syncUSDVPrice

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___

Name: pastTotalLiquidityWeight Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TUPLE_5

Name: TUPLE_5 Function: getUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TUPLE_5(uint256[],uint256) = INTERNAL_CALL, LiquidityBasedTWAP.syncUSDVPrice()()
XXXXX
pastLiquidityWeights_1 (-> [])(uint256[])= UNPACK TUPLE_5 index: 0 
Function name: getUSDVPrice
Reading tuple TUPLE_5 index 0
Check copy_toekn_tuple
([], [], 'u', None, -1)
----
Type: uint256[]
uint256[]
uint256
Final Type: uint256
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: getUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastTotalLiquidityWeight_1(uint256)= UNPACK TUPLE_5 index: 1 
Function name: getUSDVPrice
Reading tuple TUPLE_5 index 1
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for pastTotalLiquidityWeight

Name: pastTotalLiquidityWeight Function: getUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_110(int256) = 1 (c)+ 1
has variable
[i] TMP_110 cleared
clearing ir...?
a_1(int256) := TMP_110(int256)
has variable
[i] a cleared
typecheckig node...
TMP_110(int256) = 1 (c)+ 1
Function name: getUSDVPrice
val: 1
val: 1

Name: TMP_110 Function: getUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_110 Function: getUSDVPrice
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_110

Name: TMP_110 Function: getUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
a_1(int256) := TMP_110(int256)
Function name: getUSDVPrice
asgn

Name: TMP_110 Function: getUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: a Function: getUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for a

Name: a Function: getUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_111(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._calculateUSDVPrice(uint256[],uint256)(pastLiquidityWeights_1 (-> []),pastTotalLiquidityWeight_1)
has variable
[i] TMP_111 cleared
clearing ir...?
RETURN TMP_111
typecheckig node...
TMP_111(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._calculateUSDVPrice(uint256[],uint256)(pastLiquidityWeights_1 (-> []),pastTotalLiquidityWeight_1)
Function name: getUSDVPrice
Internal call...
_calculateUSDVPrice
pastLiquidityWeights
pastTotalLiquidityWeight
Function: _calculateUSDVPrice
ic
Internal cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[], [], 'u', None, [], -1]
cur_param: [[1], [-1], 0, None, [], -1]
Its the same:
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[], [], 'u', None, [], -1]
[[1], [-1], 0, None, [], -1]
0

Name: PIC_17 Function: None
Num: 2
Den: 1
Norm: 826
LF: None
Fields: 
Finance Type: undef

Name: TMP_111 Function: getUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_111

Name: TMP_111 Function: getUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_111
RETURN

Name: TMP_111 Function: getUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "getUSDVPrice":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: getUSDVPrice

Name: TMP_111 Function: getUSDVPrice
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
State_var: oracles
Finding type for oracles...
mapping(address => IAggregatorV3)
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: mapping(address => IAggregatorV3)
mapping(address => IAggregatorV3)
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: previousPrices
Finding type for previousPrices...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPool
Finding type for vaderPool...
IVaderPoolV2
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPOOL')
----
Type: IVaderPoolV2
IVaderPoolV2
Final Type: IVaderPoolV2
 NO FIELDS

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxUpdateWindow
Finding type for maxUpdateWindow...
uint256
Check copy_toekn_tuple
(-1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalLiquidityWeight
Finding type for totalLiquidityWeight...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: twapData
Finding type for twapData...
mapping(address => ILiquidityBasedTWAP.ExchangePair)
Check copy_toekn_tuple
(-1, -1, 0, 'EXCHANGEPAIR')
----
Type: mapping(address => ILiquidityBasedTWAP.ExchangePair)
mapping(address => ILiquidityBasedTWAP.ExchangePair)
ILiquidityBasedTWAP.ExchangePair
Final Type: ILiquidityBasedTWAP.ExchangePair
global
twapData
nativeTokenPriceCumulative
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
nativeTokenPriceAverage
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
nativeTokenPriceAverage
_x
FIELDS:
nativeTokenPriceAverage Fields:
^^^
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
twapData.nativeTokenPriceAverage
_x
FIELDS:
twapData.nativeTokenPriceAverage Fields:
^^^
global
twapData
lastMeasurement
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
updatePeriod
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
pastLiquidityEvaluation
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
foreignAsset
Check copy_toekn_tuple
([-1], [-1], [0], 'FOREIGNASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
twapData
foreignUnit
Check copy_toekn_tuple
([-1], [-1], [-404], None)
----
Type: uint96
uint96
Final Type: uint96
Type: uint96
uint96
Final Type: uint96
FIELDS:
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
[*]Type fetched successfully
State_var: vader
Finding type for vader...
address
Check copy_toekn_tuple
(2, -1, 0, 'VADER')
----
Type: address
address
Final Type: address

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPairs
Finding type for vaderPairs...
IUniswapV2Pair[]
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPAIR')
----
Type: IUniswapV2Pair[]
IUniswapV2Pair[]
IUniswapV2Pair
Final Type: IUniswapV2Pair
 NO FIELDS

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 0, 'OWNER')
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: usdvPairs
Finding type for usdvPairs...
IERC20[]
Check copy_toekn_tuple
(-1, -1, 0, 'USDVPAIR')
----
Type: IERC20[]
IERC20[]
IERC20
Final Type: IERC20
 NO FIELDS

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: syncUSDVPrice
Function name: syncUSDVPrice
Function Visibility (test): public
Its the same:
0
clearning node...
clearing ir...?
usdvPairs_2(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
has variable
clearing ir...?
totalLiquidityWeight_18(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
twapData_17(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
has variable
typecheckig node...
usdvPairs_2(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
Function name: syncUSDVPrice
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_18(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: syncUSDVPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_17(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: syncUSDVPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_81 -> LENGTH usdvPairs_2
clearing ir...?
totalPairs_1(uint256) := REF_81(uint256)
has variable
[i] totalPairs cleared
typecheckig node...
REF_81 -> LENGTH usdvPairs_2
[i]Type for REF_81

Name: REF_81 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalPairs_1(uint256) := REF_81(uint256)
Function name: syncUSDVPrice
asgn

Name: REF_81 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalPairs Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalPairs

Name: totalPairs Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalPairs_1(uint256) := REF_81(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_113 = new uint256[](totalPairs_1)
clearing ir...?
pastLiquidityWeights_1(uint256[]) := TMP_113(uint256)
has variable
[i] pastLiquidityWeights cleared
typecheckig node...
TMP_113 = new uint256[](totalPairs_1)
[i]Type for TMP_113

Name: TMP_113 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_1(uint256[]) := TMP_113(uint256)
Function name: syncUSDVPrice
asgn

Name: TMP_113 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pastLiquidityWeights_1(uint256[]) := TMP_113(uint256)
XXXXX
clearning node...
clearing ir...?
REF_82(ILiquidityBasedTWAP.Paths) -> Paths.USDV
has variable
clearing ir...?
TMP_114 = CONVERT REF_82 to uint256
has variable
[i] TMP_114 cleared
clearing ir...?
REF_83(uint256) -> totalLiquidityWeight_18[TMP_114]
has variable
clearing ir...?
pastTotalLiquidityWeight_1(uint256) := REF_83(uint256)
has variable
[i] pastTotalLiquidityWeight cleared
typecheckig node...
REF_82(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: syncUSDVPrice
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_82

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_114 = CONVERT REF_82 to uint256
Function name: syncUSDVPrice

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_114 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_114

Name: TMP_114 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_83(uint256) -> totalLiquidityWeight_18[TMP_114]
Function name: syncUSDVPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_83

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pastTotalLiquidityWeight_1(uint256) := REF_83(uint256)
Function name: syncUSDVPrice
asgn

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: pastTotalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastTotalLiquidityWeight

Name: pastTotalLiquidityWeight Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
pastLiquidityWeights_2(uint256[]) := ϕ(['pastLiquidityWeights_3', 'pastLiquidityWeights_1'])
has variable
[i] pastLiquidityWeights cleared
clearing ir...?
_totalLiquidityWeight_1(uint256) := ϕ(['_totalLiquidityWeight_2', '_totalLiquidityWeight_0'])
has variable
[i] _totalLiquidityWeight cleared
clearing ir...?
i_1(uint256) := ϕ(['i_2', 'i_0'])
has variable
[i] i cleared
clearing ir...?
TMP_115(bool) = i_1 < totalPairs_1
has variable
[i] TMP_115 cleared
clearing ir...?
CONDITION TMP_115
typecheckig node...
pastLiquidityWeights_2(uint256[]) := ϕ(['pastLiquidityWeights_3', 'pastLiquidityWeights_1'])
Function name: syncUSDVPrice
Phi
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalLiquidityWeight_1(uint256) := ϕ(['_totalLiquidityWeight_2', '_totalLiquidityWeight_0'])
Function name: syncUSDVPrice
Phi
[i]Type for _totalLiquidityWeight

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
i_1(uint256) := ϕ(['i_2', 'i_0'])
Function name: syncUSDVPrice
Phi
[i]Type for i

Name: i Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_115(bool) = i_1 < totalPairs_1
Function name: syncUSDVPrice
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: i Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_115 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_115

Name: TMP_115 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_115(bool) = i_1 < totalPairs_1
XXXXX
CONDITION TMP_115
Condition...
Conidtion: 
TMP_115
TMP_115
clearning node...
clearing ir...?
REF_84(IERC20) -> usdvPairs_2[i_1]
has variable
clearing ir...?
foreignAsset_1(IERC20) := REF_84(IERC20)
has variable
[i] foreignAsset cleared
typecheckig node...
REF_84(IERC20) -> usdvPairs_2[i_1]
Function name: syncUSDVPrice
INDEX

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_84

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
foreignAsset_1(IERC20) := REF_84(IERC20)
Function name: syncUSDVPrice
asgn

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: foreignAsset Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: USDVPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_116 = CONVERT foreignAsset_1 to address
has variable
[i] TMP_116 cleared
clearing ir...?
REF_85(ILiquidityBasedTWAP.ExchangePair) -> twapData_17[TMP_116]
has variable
clearing ir...?
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_85(ILiquidityBasedTWAP.ExchangePair)
has variable
[i] pairData cleared
typecheckig node...
TMP_116 = CONVERT foreignAsset_1 to address
Function name: syncUSDVPrice

Name: foreignAsset Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: TMP_116 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: USDVPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_116

Name: TMP_116 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_85(ILiquidityBasedTWAP.ExchangePair) -> twapData_17[TMP_116]
Function name: syncUSDVPrice
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_85

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_85(ILiquidityBasedTWAP.ExchangePair)
Function name: syncUSDVPrice
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_91(ILiquidityBasedTWAP.Paths) -> Paths.USDV
has variable
clearing ir...?
TMP_120 = CONVERT REF_91 to uint256
has variable
[i] TMP_120 cleared
clearing ir...?
REF_92(uint256) -> totalLiquidityWeight_18[TMP_120]
has variable
clearing ir...?
totalLiquidityWeight_19(uint256[2]) := ϕ(['totalLiquidityWeight_18'])
has variable
clearing ir...?
REF_92 (->totalLiquidityWeight_19) := _totalLiquidityWeight_1(uint256)
has variable
typecheckig node...
REF_91(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: syncUSDVPrice
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_91

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_120 = CONVERT REF_91 to uint256
Function name: syncUSDVPrice

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_120 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_120

Name: TMP_120 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_92(uint256) -> totalLiquidityWeight_18[TMP_120]
Function name: syncUSDVPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_92

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_19(uint256[2]) := ϕ(['totalLiquidityWeight_18'])
Function name: syncUSDVPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_92 (->totalLiquidityWeight_19) := _totalLiquidityWeight_1(uint256)
Function name: syncUSDVPrice
asgn

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_92 Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_92

Name: REF_92 Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_92 (->totalLiquidityWeight_19) := _totalLiquidityWeight_1(uint256)
XXXXX
clearning node...
clearing ir...?
RETURN pastLiquidityWeights_2,pastTotalLiquidityWeight_1
typecheckig node...
RETURN pastLiquidityWeights_2,pastTotalLiquidityWeight_1
RETURN

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastTotalLiquidityWeight Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
REF_86(uint256) -> pairData_1 (-> ['twapData']).lastMeasurement
has variable
clearing ir...?
TMP_117(uint256) = block.timestamp (c)- REF_86
has variable
[i] TMP_117 cleared
clearing ir...?
timeElapsed_1(uint256) := TMP_117(uint256)
has variable
[i] timeElapsed cleared
typecheckig node...
REF_86(uint256) -> pairData_1 (-> ['twapData']).lastMeasurement
Function name: syncUSDVPrice
MEMBER
pairData
lastMeasurement
syncUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_86

Name: pairData.lastMeasurement Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_117(uint256) = block.timestamp (c)- REF_86
Function name: syncUSDVPrice
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_46 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_117 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_117

Name: TMP_117 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
timeElapsed_1(uint256) := TMP_117(uint256)
Function name: syncUSDVPrice
asgn

Name: TMP_117 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: timeElapsed Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for timeElapsed

Name: timeElapsed Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_87(uint256) -> pairData_1 (-> ['twapData']).updatePeriod
has variable
clearing ir...?
TMP_118(bool) = timeElapsed_1 < REF_87
has variable
[i] TMP_118 cleared
clearing ir...?
CONDITION TMP_118
typecheckig node...
REF_87(uint256) -> pairData_1 (-> ['twapData']).updatePeriod
Function name: syncUSDVPrice
MEMBER
pairData
updatePeriod
syncUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_87

Name: pairData.updatePeriod Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_118(bool) = timeElapsed_1 < REF_87
Function name: syncUSDVPrice
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_118

Name: TMP_118 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_118
Condition...
Conidtion: 
TMP_118
TMP_118
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_88(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
has variable
clearing ir...?
pastLiquidityEvaluation_1(uint256) := REF_88(uint256)
has variable
[i] pastLiquidityEvaluation cleared
typecheckig node...
REF_88(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
Function name: syncUSDVPrice
MEMBER
pairData
pastLiquidityEvaluation
syncUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_88

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityEvaluation_1(uint256) := REF_88(uint256)
Function name: syncUSDVPrice
asgn

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityEvaluation

Name: pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_119(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._updateUSDVPrice(IERC20,ILiquidityBasedTWAP.ExchangePair,uint256)(foreignAsset_1,pairData_1 (-> ['twapData']),timeElapsed_1)
has variable
[i] TMP_119 cleared
clearing ir...?
currentLiquidityEvaluation_1(uint256) := TMP_119(uint256)
has variable
[i] currentLiquidityEvaluation cleared
typecheckig node...
TMP_119(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._updateUSDVPrice(IERC20,ILiquidityBasedTWAP.ExchangePair,uint256)(foreignAsset_1,pairData_1 (-> ['twapData']),timeElapsed_1)
Function name: syncUSDVPrice
Internal call...
_updateUSDVPrice
foreignAsset
pairData
timeElapsed
Function: _updateUSDVPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: USDVPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: USDVPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'USDVPAIR', [], -1]
cur_param: [[-1], [-1], 0, 'EXCHANGEPAIR', [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: USDVPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'USDVPAIR', [], -1]
[[-1], [-1], 0, 'EXCHANGEPAIR', [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>], -1]
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_41 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_119 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_119

Name: TMP_119 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
currentLiquidityEvaluation_1(uint256) := TMP_119(uint256)
Function name: syncUSDVPrice
asgn

Name: TMP_119 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidityEvaluation

Name: currentLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
currentLiquidityEvaluation_1(uint256) := TMP_119(uint256)
XXXXX
clearning node...
clearing ir...?
REF_89(uint256) -> pastLiquidityWeights_2[i_1]
has variable
clearing ir...?
pastLiquidityWeights_3(uint256[]) := ϕ(['pastLiquidityWeights_2'])
has variable
[i] pastLiquidityWeights cleared
clearing ir...?
REF_89 (->pastLiquidityWeights_3) := pastLiquidityEvaluation_1(uint256)
has variable
typecheckig node...
REF_89(uint256) -> pastLiquidityWeights_2[i_1]
Function name: syncUSDVPrice
INDEX

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: syncUSDVPrice
pastLiquidityWeights
[i]Type for REF_89

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_89(uint256) -> pastLiquidityWeights_2[i_1]
XXXXX
pastLiquidityWeights_3(uint256[]) := ϕ(['pastLiquidityWeights_2'])
Function name: syncUSDVPrice
Phi
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_89 (->pastLiquidityWeights_3) := pastLiquidityEvaluation_1(uint256)
Function name: syncUSDVPrice
asgn

Name: pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_89 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_89

Name: REF_89 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_90(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
has variable
clearing ir...?
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_90 (->pairData_2 (-> ['twapData'])) := currentLiquidityEvaluation_1(uint256)
has variable
clearing ir...?
twapData_19(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
has variable
typecheckig node...
REF_90(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
Function name: syncUSDVPrice
MEMBER
pairData
pastLiquidityEvaluation
syncUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_90

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: syncUSDVPrice
Phi
[i]Type for pairData

Name: pairData Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_90 (->pairData_2 (-> ['twapData'])) := currentLiquidityEvaluation_1(uint256)
Function name: syncUSDVPrice
asgn

Name: currentLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_90 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_90

Name: REF_90 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_90 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_90 (->pairData_2 (-> ['twapData'])) := currentLiquidityEvaluation_1(uint256)
XXXXX
twapData_19(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: syncUSDVPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
_totalLiquidityWeight_2(uint256) = _totalLiquidityWeight_1 (c)+ currentLiquidityEvaluation_1
has variable
[i] _totalLiquidityWeight cleared
typecheckig node...
_totalLiquidityWeight_2(uint256) = _totalLiquidityWeight_1 (c)+ currentLiquidityEvaluation_1
Function name: syncUSDVPrice

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: currentLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for _totalLiquidityWeight

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_totalLiquidityWeight_2(uint256) = _totalLiquidityWeight_1 (c)+ currentLiquidityEvaluation_1
XXXXX
clearning node...
clearing ir...?
i_2(uint256) = i_1 (c)+ 1
has variable
[i] i cleared
typecheckig node...
i_2(uint256) = i_1 (c)+ 1
Function name: syncUSDVPrice
val: 1

Name: i Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: syncUSDVPrice
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "syncUSDVPrice":
 New undefined nodes- 8
 Old undefined nodes- 0
typecheckig node...
usdvPairs_2(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
Function name: syncUSDVPrice
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_18(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: syncUSDVPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_17(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: syncUSDVPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
REF_81 -> LENGTH usdvPairs_2
[i]Type for REF_81

Name: REF_81 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalPairs_1(uint256) := REF_81(uint256)
Function name: syncUSDVPrice
asgn

Name: REF_81 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalPairs Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for totalPairs

Name: totalPairs Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
totalPairs_1(uint256) := REF_81(uint256)
XXXXX
typecheckig node...
TMP_113 = new uint256[](totalPairs_1)
[i]Type for TMP_113

Name: TMP_113 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityWeights_1(uint256[]) := TMP_113(uint256)
Function name: syncUSDVPrice
asgn

Name: TMP_113 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pastLiquidityWeights_1(uint256[]) := TMP_113(uint256)
XXXXX
typecheckig node...
REF_82(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: syncUSDVPrice
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_82

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_114 = CONVERT REF_82 to uint256
Function name: syncUSDVPrice

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_114 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_114

Name: TMP_114 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_83(uint256) -> totalLiquidityWeight_18[TMP_114]
Function name: syncUSDVPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_83

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pastTotalLiquidityWeight_1(uint256) := REF_83(uint256)
Function name: syncUSDVPrice
asgn

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: pastTotalLiquidityWeight Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastTotalLiquidityWeight

Name: pastTotalLiquidityWeight Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
pastLiquidityWeights_2(uint256[]) := ϕ(['pastLiquidityWeights_3', 'pastLiquidityWeights_1'])
Function name: syncUSDVPrice
Phi
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalLiquidityWeight_1(uint256) := ϕ(['_totalLiquidityWeight_2', '_totalLiquidityWeight_0'])
Function name: syncUSDVPrice
Phi
[i]Type for _totalLiquidityWeight

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
i_1(uint256) := ϕ(['i_2', 'i_0'])
Function name: syncUSDVPrice
Phi
[i]Type for i

Name: i Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_115(bool) = i_1 < totalPairs_1
Function name: syncUSDVPrice
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: i Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_115 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_115

Name: TMP_115 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_115(bool) = i_1 < totalPairs_1
XXXXX
CONDITION TMP_115
Condition...
Conidtion: 
TMP_115
TMP_115
typecheckig node...
REF_84(IERC20) -> usdvPairs_2[i_1]
Function name: syncUSDVPrice
INDEX

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_84

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
foreignAsset_1(IERC20) := REF_84(IERC20)
Function name: syncUSDVPrice
asgn

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: foreignAsset Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for foreignAsset

Name: foreignAsset Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_116 = CONVERT foreignAsset_1 to address
Function name: syncUSDVPrice

Name: foreignAsset Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef

Name: TMP_116 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[i]Type for TMP_116

Name: TMP_116 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_85(ILiquidityBasedTWAP.ExchangePair) -> twapData_17[TMP_116]
Function name: syncUSDVPrice
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_85

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_85(ILiquidityBasedTWAP.ExchangePair)
Function name: syncUSDVPrice
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_91(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: syncUSDVPrice
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_91

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_120 = CONVERT REF_91 to uint256
Function name: syncUSDVPrice

Name: Paths.USDV Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_120 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_120

Name: TMP_120 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_92(uint256) -> totalLiquidityWeight_18[TMP_120]
Function name: syncUSDVPrice
INDEX

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_92

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_19(uint256[2]) := ϕ(['totalLiquidityWeight_18'])
Function name: syncUSDVPrice
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_92 (->totalLiquidityWeight_19) := _totalLiquidityWeight_1(uint256)
Function name: syncUSDVPrice
asgn

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_92 Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_92

Name: REF_92 Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_92 (->totalLiquidityWeight_19) := _totalLiquidityWeight_1(uint256)
XXXXX
typecheckig node...
RETURN pastLiquidityWeights_2,pastTotalLiquidityWeight_1
RETURN

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastTotalLiquidityWeight Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
typecheckig node...
REF_86(uint256) -> pairData_1 (-> ['twapData']).lastMeasurement
Function name: syncUSDVPrice
MEMBER
pairData
lastMeasurement
syncUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_86

Name: pairData.lastMeasurement Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_117(uint256) = block.timestamp (c)- REF_86
Function name: syncUSDVPrice
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_47 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_117 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_117

Name: TMP_117 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
timeElapsed_1(uint256) := TMP_117(uint256)
Function name: syncUSDVPrice
asgn

Name: TMP_117 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: timeElapsed Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for timeElapsed

Name: timeElapsed Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_87(uint256) -> pairData_1 (-> ['twapData']).updatePeriod
Function name: syncUSDVPrice
MEMBER
pairData
updatePeriod
syncUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_87

Name: pairData.updatePeriod Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_118(bool) = timeElapsed_1 < REF_87
Function name: syncUSDVPrice
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_118

Name: TMP_118 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_118
Condition...
Conidtion: 
TMP_118
TMP_118
typecheckig node...
typecheckig node...
REF_88(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
Function name: syncUSDVPrice
MEMBER
pairData
pastLiquidityEvaluation
syncUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_88

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pastLiquidityEvaluation_1(uint256) := REF_88(uint256)
Function name: syncUSDVPrice
asgn

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pastLiquidityEvaluation

Name: pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_119(uint256) = INTERNAL_CALL, LiquidityBasedTWAP._updateUSDVPrice(IERC20,ILiquidityBasedTWAP.ExchangePair,uint256)(foreignAsset_1,pairData_1 (-> ['twapData']),timeElapsed_1)
Function name: syncUSDVPrice
Internal call...
_updateUSDVPrice
foreignAsset
pairData
timeElapsed
Function: _updateUSDVPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: USDVPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: USDVPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'USDVPAIR', [], -1]
cur_param: [[-1], [-1], 0, 'EXCHANGEPAIR', [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: USDVPAIR
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: EXCHANGEPAIR
    fields: [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>]
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'USDVPAIR', [], -1]
[[-1], [-1], 0, 'EXCHANGEPAIR', [<slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33a00>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33220>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe33ee0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1c0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b3d0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b1f0>, <slither.core.variables.structure_variable.StructureVariable object at 0x7f4b4fe3b670>], -1]
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_41 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_119 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_119

Name: TMP_119 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
currentLiquidityEvaluation_1(uint256) := TMP_119(uint256)
Function name: syncUSDVPrice
asgn

Name: TMP_119 Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentLiquidityEvaluation

Name: currentLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
currentLiquidityEvaluation_1(uint256) := TMP_119(uint256)
XXXXX
typecheckig node...
REF_89(uint256) -> pastLiquidityWeights_2[i_1]
Function name: syncUSDVPrice
INDEX

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: syncUSDVPrice
pastLiquidityWeights
[i]Type for REF_89

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_89(uint256) -> pastLiquidityWeights_2[i_1]
XXXXX
pastLiquidityWeights_3(uint256[]) := ϕ(['pastLiquidityWeights_2'])
Function name: syncUSDVPrice
Phi
[i]Type for pastLiquidityWeights

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_89 (->pastLiquidityWeights_3) := pastLiquidityEvaluation_1(uint256)
Function name: syncUSDVPrice
asgn

Name: pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_89 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_89

Name: REF_89 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_90(uint256) -> pairData_1 (-> ['twapData']).pastLiquidityEvaluation
Function name: syncUSDVPrice
MEMBER
pairData
pastLiquidityEvaluation
syncUSDVPrice
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_90

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: syncUSDVPrice
Phi
[i]Type for pairData

Name: pairData Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_90 (->pairData_2 (-> ['twapData'])) := currentLiquidityEvaluation_1(uint256)
Function name: syncUSDVPrice
asgn

Name: currentLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_90 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_90

Name: REF_90 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_90 Function: syncUSDVPrice
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_90 (->pairData_2 (-> ['twapData'])) := currentLiquidityEvaluation_1(uint256)
XXXXX
twapData_19(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: syncUSDVPrice
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
_totalLiquidityWeight_2(uint256) = _totalLiquidityWeight_1 (c)+ currentLiquidityEvaluation_1
Function name: syncUSDVPrice

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: currentLiquidityEvaluation Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for _totalLiquidityWeight

Name: _totalLiquidityWeight Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_totalLiquidityWeight_2(uint256) = _totalLiquidityWeight_1 (c)+ currentLiquidityEvaluation_1
XXXXX
typecheckig node...
i_2(uint256) = i_1 (c)+ 1
Function name: syncUSDVPrice
val: 1

Name: i Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: i Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for i

Name: i Function: syncUSDVPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "syncUSDVPrice":
 New undefined nodes- 8
 Old undefined nodes- 8
Saving return values for: syncUSDVPrice

Name: pastLiquidityWeights Function: syncUSDVPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___

Name: pastTotalLiquidityWeight Function: syncUSDVPrice
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
State_var: oracles
Finding type for oracles...
mapping(address => IAggregatorV3)
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: mapping(address => IAggregatorV3)
mapping(address => IAggregatorV3)
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: previousPrices
Finding type for previousPrices...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPool
Finding type for vaderPool...
IVaderPoolV2
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPOOL')
----
Type: IVaderPoolV2
IVaderPoolV2
Final Type: IVaderPoolV2
 NO FIELDS

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxUpdateWindow
Finding type for maxUpdateWindow...
uint256
Check copy_toekn_tuple
(-1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalLiquidityWeight
Finding type for totalLiquidityWeight...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: twapData
Finding type for twapData...
mapping(address => ILiquidityBasedTWAP.ExchangePair)
Check copy_toekn_tuple
(-1, -1, 0, 'EXCHANGEPAIR')
----
Type: mapping(address => ILiquidityBasedTWAP.ExchangePair)
mapping(address => ILiquidityBasedTWAP.ExchangePair)
ILiquidityBasedTWAP.ExchangePair
Final Type: ILiquidityBasedTWAP.ExchangePair
global
twapData
nativeTokenPriceCumulative
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
nativeTokenPriceAverage
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
nativeTokenPriceAverage
_x
FIELDS:
nativeTokenPriceAverage Fields:
^^^
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
twapData.nativeTokenPriceAverage
_x
FIELDS:
twapData.nativeTokenPriceAverage Fields:
^^^
global
twapData
lastMeasurement
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
updatePeriod
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
pastLiquidityEvaluation
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
foreignAsset
Check copy_toekn_tuple
([-1], [-1], [0], 'FOREIGNASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
twapData
foreignUnit
Check copy_toekn_tuple
([-1], [-1], [-404], None)
----
Type: uint96
uint96
Final Type: uint96
Type: uint96
uint96
Final Type: uint96
FIELDS:
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
[*]Type fetched successfully
State_var: vader
Finding type for vader...
address
Check copy_toekn_tuple
(2, -1, 0, 'VADER')
----
Type: address
address
Final Type: address

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPairs
Finding type for vaderPairs...
IUniswapV2Pair[]
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPAIR')
----
Type: IUniswapV2Pair[]
IUniswapV2Pair[]
IUniswapV2Pair
Final Type: IUniswapV2Pair
 NO FIELDS

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 0, 'OWNER')
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: usdvPairs
Finding type for usdvPairs...
IERC20[]
Check copy_toekn_tuple
(-1, -1, 0, 'USDVPAIR')
----
Type: IERC20[]
IERC20[]
IERC20
Final Type: IERC20
 NO FIELDS

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _updateUSDVPrice
Function _updateUSDVPrice not marked
Mark Iterations TRUE, proceeding anyway
Function name: _updateUSDVPrice
Function Visibility (test): internal
State_var: oracles
Finding type for oracles...
mapping(address => IAggregatorV3)
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: mapping(address => IAggregatorV3)
mapping(address => IAggregatorV3)
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: previousPrices
Finding type for previousPrices...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPool
Finding type for vaderPool...
IVaderPoolV2
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPOOL')
----
Type: IVaderPoolV2
IVaderPoolV2
Final Type: IVaderPoolV2
 NO FIELDS

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxUpdateWindow
Finding type for maxUpdateWindow...
uint256
Check copy_toekn_tuple
(-1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalLiquidityWeight
Finding type for totalLiquidityWeight...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: twapData
Finding type for twapData...
mapping(address => ILiquidityBasedTWAP.ExchangePair)
Check copy_toekn_tuple
(-1, -1, 0, 'EXCHANGEPAIR')
----
Type: mapping(address => ILiquidityBasedTWAP.ExchangePair)
mapping(address => ILiquidityBasedTWAP.ExchangePair)
ILiquidityBasedTWAP.ExchangePair
Final Type: ILiquidityBasedTWAP.ExchangePair
global
twapData
nativeTokenPriceCumulative
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
nativeTokenPriceAverage
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
nativeTokenPriceAverage
_x
FIELDS:
nativeTokenPriceAverage Fields:
^^^
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
twapData.nativeTokenPriceAverage
_x
FIELDS:
twapData.nativeTokenPriceAverage Fields:
^^^
global
twapData
lastMeasurement
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
updatePeriod
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
pastLiquidityEvaluation
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
foreignAsset
Check copy_toekn_tuple
([-1], [-1], [0], 'FOREIGNASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
twapData
foreignUnit
Check copy_toekn_tuple
([-1], [-1], [-404], None)
----
Type: uint96
uint96
Final Type: uint96
Type: uint96
uint96
Final Type: uint96
FIELDS:
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
[*]Type fetched successfully
State_var: vader
Finding type for vader...
address
Check copy_toekn_tuple
(2, -1, 0, 'VADER')
----
Type: address
address
Final Type: address

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPairs
Finding type for vaderPairs...
IUniswapV2Pair[]
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPAIR')
----
Type: IUniswapV2Pair[]
IUniswapV2Pair[]
IUniswapV2Pair
Final Type: IUniswapV2Pair
 NO FIELDS

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 0, 'OWNER')
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: usdvPairs
Finding type for usdvPairs...
IERC20[]
Check copy_toekn_tuple
(-1, -1, 0, 'USDVPAIR')
----
Type: IERC20[]
IERC20[]
IERC20
Final Type: IERC20
 NO FIELDS

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _calculateUSDVPrice
Function _calculateUSDVPrice not marked
Mark Iterations TRUE, proceeding anyway
Function name: _calculateUSDVPrice
Function Visibility (test): internal
State_var: oracles
Finding type for oracles...
mapping(address => IAggregatorV3)
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: mapping(address => IAggregatorV3)
mapping(address => IAggregatorV3)
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: previousPrices
Finding type for previousPrices...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPool
Finding type for vaderPool...
IVaderPoolV2
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPOOL')
----
Type: IVaderPoolV2
IVaderPoolV2
Final Type: IVaderPoolV2
 NO FIELDS

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxUpdateWindow
Finding type for maxUpdateWindow...
uint256
Check copy_toekn_tuple
(-1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalLiquidityWeight
Finding type for totalLiquidityWeight...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: twapData
Finding type for twapData...
mapping(address => ILiquidityBasedTWAP.ExchangePair)
Check copy_toekn_tuple
(-1, -1, 0, 'EXCHANGEPAIR')
----
Type: mapping(address => ILiquidityBasedTWAP.ExchangePair)
mapping(address => ILiquidityBasedTWAP.ExchangePair)
ILiquidityBasedTWAP.ExchangePair
Final Type: ILiquidityBasedTWAP.ExchangePair
global
twapData
nativeTokenPriceCumulative
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
nativeTokenPriceAverage
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
nativeTokenPriceAverage
_x
FIELDS:
nativeTokenPriceAverage Fields:
^^^
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
twapData.nativeTokenPriceAverage
_x
FIELDS:
twapData.nativeTokenPriceAverage Fields:
^^^
global
twapData
lastMeasurement
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
updatePeriod
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
pastLiquidityEvaluation
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
foreignAsset
Check copy_toekn_tuple
([-1], [-1], [0], 'FOREIGNASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
twapData
foreignUnit
Check copy_toekn_tuple
([-1], [-1], [-404], None)
----
Type: uint96
uint96
Final Type: uint96
Type: uint96
uint96
Final Type: uint96
FIELDS:
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
[*]Type fetched successfully
State_var: vader
Finding type for vader...
address
Check copy_toekn_tuple
(2, -1, 0, 'VADER')
----
Type: address
address
Final Type: address

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPairs
Finding type for vaderPairs...
IUniswapV2Pair[]
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPAIR')
----
Type: IUniswapV2Pair[]
IUniswapV2Pair[]
IUniswapV2Pair
Final Type: IUniswapV2Pair
 NO FIELDS

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 0, 'OWNER')
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: usdvPairs
Finding type for usdvPairs...
IERC20[]
Check copy_toekn_tuple
(-1, -1, 0, 'USDVPAIR')
----
Type: IERC20[]
IERC20[]
IERC20
Final Type: IERC20
 NO FIELDS

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: setupUSDV
Function name: setupUSDV
Function Visibility (test): external
foreignAsset
Finding type for foreignAsset...
IERC20
Check copy_toekn_tuple
(-1, -1, 0, 'ASSET')
----
Type: IERC20
IERC20
Final Type: IERC20
 NO FIELDS

Name: foreignAsset Function: setupUSDV
Num: -1
Den: -1
Norm: 0
LF: ASSET
Fields: 
Finance Type: undef
[*]Type fetched successfully
oracle
Finding type for oracle...
IAggregatorV3
Check copy_toekn_tuple
(1, -1, 0, 'ORACLE')
----
Type: IAggregatorV3
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracle Function: setupUSDV
Num: 1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
updatePeriod
Finding type for updatePeriod...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: updatePeriod Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
usdvPrice
Finding type for usdvPrice...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: usdvPrice Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: ASSET
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: ORACLE
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: ASSET
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: ORACLE
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
previousPrices_26(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
typecheckig node...
previousPrices_26(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: setupUSDV
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, Ownable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, Ownable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
REF_111(ILiquidityBasedTWAP.Paths) -> Paths.USDV
has variable
clearing ir...?
TMP_143 = CONVERT REF_111 to uint256
has variable
[i] TMP_143 cleared
clearing ir...?
REF_112(uint256) -> previousPrices_27[TMP_143]
has variable
clearing ir...?
TMP_144(bool) = REF_112 == 0
has variable
[i] TMP_144 cleared
clearing ir...?
TMP_145(None) = SOLIDITY_CALL require(bool,string)(TMP_144,LBTWAP::setupUSDV: Already Initialized)
typecheckig node...
REF_111(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: setupUSDV
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_111

Name: Paths.USDV Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_143 = CONVERT REF_111 to uint256
Function name: setupUSDV

Name: Paths.USDV Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_143 Function: setupUSDV
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_143

Name: TMP_143 Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_112(uint256) -> previousPrices_27[TMP_143]
Function name: setupUSDV
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
previousPrices
[i]Type for REF_112

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_112(uint256) -> previousPrices_27[TMP_143]
XXXXX
TMP_144(bool) = REF_112 == 0
Function name: setupUSDV
[i]Type for TMP_144

Name: TMP_144 Function: setupUSDV
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_145(None) = SOLIDITY_CALL require(bool,string)(TMP_144,LBTWAP::setupUSDV: Already Initialized)
[i]Type for TMP_145

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_113(ILiquidityBasedTWAP.Paths) -> Paths.USDV
has variable
clearing ir...?
TMP_146 = CONVERT REF_113 to uint256
has variable
[i] TMP_146 cleared
clearing ir...?
REF_114(uint256) -> previousPrices_27[TMP_146]
has variable
clearing ir...?
previousPrices_28(uint256[2]) := ϕ(['previousPrices_27'])
has variable
clearing ir...?
REF_114 (->previousPrices_28) := usdvPrice_1(uint256)
has variable
typecheckig node...
REF_113(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: setupUSDV
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_113

Name: Paths.USDV Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_146 = CONVERT REF_113 to uint256
Function name: setupUSDV

Name: Paths.USDV Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_146 Function: setupUSDV
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_146

Name: TMP_146 Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_114(uint256) -> previousPrices_27[TMP_146]
Function name: setupUSDV
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
previousPrices
[i]Type for REF_114

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_114(uint256) -> previousPrices_27[TMP_146]
XXXXX
previousPrices_28(uint256[2]) := ϕ(['previousPrices_27'])
Function name: setupUSDV
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_114 (->previousPrices_28) := usdvPrice_1(uint256)
Function name: setupUSDV
asgn

Name: usdvPrice Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_114 Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_114

Name: REF_114 Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LiquidityBasedTWAP._addUSDVPair(IERC20,IAggregatorV3,uint256)(foreignAsset_1,oracle_1,updatePeriod_1)
typecheckig node...
INTERNAL_CALL, LiquidityBasedTWAP._addUSDVPair(IERC20,IAggregatorV3,uint256)(foreignAsset_1,oracle_1,updatePeriod_1)
Internal call...
_addUSDVPair
foreignAsset
oracle
updatePeriod
Function: _addUSDVPair
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: ASSET
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: ORACLE
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: ASSET
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: ORACLE
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 0, 'ASSET', [], -1]
[[1], [-1], 0, 'ORACLE', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _addUSDVPair
Function Visibility: internal
clearning node...
clearing ir...?
foreignAsset_1(IERC20) := ϕ(['foreignAsset_1', 'foreignAsset_1'])
has variable
[i] foreignAsset cleared
clearing ir...?
oracle_1(IAggregatorV3) := ϕ(['oracle_1', 'oracle_1'])
has variable
[i] oracle cleared
clearing ir...?
updatePeriod_1(uint256) := ϕ(['updatePeriod_1', 'updatePeriod_1'])
has variable
[i] updatePeriod cleared
clearing ir...?
vaderPool_5(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_0', 'vaderPool_4', 'vaderPool_1'])
has variable
clearing ir...?
usdvPairs_6(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
has variable
clearing ir...?
maxUpdateWindow_14(uint256) := ϕ(['maxUpdateWindow_0', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_20(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_31(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
twapData_22(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
has variable
typecheckig node...
foreignAsset_1(IERC20) := ϕ(['foreignAsset_1', 'foreignAsset_1'])
Function name: _addUSDVPair
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := ϕ(['oracle_1', 'oracle_1'])
Function name: _addUSDVPair
Phi
[i]Type for oracle

Name: oracle Function: _addUSDVPair
Num: 1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
done.
updatePeriod_1(uint256) := ϕ(['updatePeriod_1', 'updatePeriod_1'])
Function name: _addUSDVPair
Phi
[i]Type for updatePeriod

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_5(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_0', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_6(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_14(uint256) := ϕ(['maxUpdateWindow_0', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_20(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_31(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_22(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_154(bool) = updatePeriod_1 != 0
has variable
[i] TMP_154 cleared
clearing ir...?
TMP_155(None) = SOLIDITY_CALL require(bool,string)(TMP_154,LBTWAP::addUSDVPair: Incorrect Update Period)
typecheckig node...
TMP_154(bool) = updatePeriod_1 != 0
Function name: _addUSDVPair
[i]Type for TMP_154

Name: TMP_154 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_155(None) = SOLIDITY_CALL require(bool,string)(TMP_154,LBTWAP::addUSDVPair: Incorrect Update Period)
[i]Type for TMP_155

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_156(uint8) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:decimals, arguments:[]  
has variable
[i] TMP_156 cleared
clearing ir...?
vaderPool_6(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_5', 'vaderPool_1'])
has variable
clearing ir...?
usdvPairs_7(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_6'])
has variable
clearing ir...?
maxUpdateWindow_15(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_14'])
has variable
clearing ir...?
totalLiquidityWeight_21(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_20', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_32(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_31', 'previousPrices_4'])
has variable
clearing ir...?
twapData_23(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_22', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_21', 'twapData_7'])
has variable
clearing ir...?
TMP_157(bool) = TMP_156 == 8
has variable
[i] TMP_157 cleared
clearing ir...?
TMP_158(None) = SOLIDITY_CALL require(bool,string)(TMP_157,LBTWAP::addUSDVPair: Non-USD Oracle)
typecheckig node...
TMP_156(uint8) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:decimals, arguments:[]  
Function name: _addUSDVPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_156
hlc contract name: ORACLE func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_156

Name: TMP_156 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_6(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_5', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_7(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_6'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_15(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_14'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_21(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_20', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_32(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_31', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_23(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_22', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_21', 'twapData_7'])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
TMP_157(bool) = TMP_156 == 8
Function name: _addUSDVPair
[i]Type for TMP_157

Name: TMP_157 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_158(None) = SOLIDITY_CALL require(bool,string)(TMP_157,LBTWAP::addUSDVPair: Non-USD Oracle)
[i]Type for TMP_158

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_159 = CONVERT foreignAsset_1 to address
has variable
[i] TMP_159 cleared
clearing ir...?
REF_118(IAggregatorV3) -> oracles_2[TMP_159]
has variable
clearing ir...?
oracles_3(mapping(address => IAggregatorV3)) := ϕ(['oracles_2'])
has variable
clearing ir...?
REF_118 (->oracles_3) := oracle_1(IAggregatorV3)
has variable
typecheckig node...
TMP_159 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_159 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_159

Name: TMP_159 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
REF_118(IAggregatorV3) -> oracles_2[TMP_159]
Function name: _addUSDVPair
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_118

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracles_3(mapping(address => IAggregatorV3)) := ϕ(['oracles_2'])
Function name: _addUSDVPair
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_118 (->oracles_3) := oracle_1(IAggregatorV3)
Function name: _addUSDVPair
asgn

Name: oracle Function: _addUSDVPair
Num: 1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef

Name: REF_118 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_118

Name: REF_118 Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_160 = CONVERT foreignAsset_1 to address
has variable
[i] TMP_160 cleared
clearing ir...?
REF_119(ILiquidityBasedTWAP.ExchangePair) -> twapData_23[TMP_160]
has variable
clearing ir...?
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_119(ILiquidityBasedTWAP.ExchangePair)
has variable
[i] pairData cleared
typecheckig node...
TMP_160 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_160 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_160

Name: TMP_160 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
REF_119(ILiquidityBasedTWAP.ExchangePair) -> twapData_23[TMP_160]
Function name: _addUSDVPair
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_119

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_119(ILiquidityBasedTWAP.ExchangePair)
Function name: _addUSDVPair
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_120(uint96) -> pairData_1 (-> ['twapData']).foreignUnit
has variable
clearing ir...?
TMP_161 = CONVERT foreignAsset_1 to address
has variable
[i] TMP_161 cleared
clearing ir...?
TMP_162 = CONVERT TMP_161 to IERC20Metadata
has variable
[i] TMP_162 cleared
clearing ir...?
TMP_163(uint8) = HIGH_LEVEL_CALL, dest:TMP_162(IERC20Metadata), function:decimals, arguments:[]  
has variable
[i] TMP_163 cleared
clearing ir...?
vaderPool_7(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_6', 'vaderPool_4', 'vaderPool_1'])
has variable
clearing ir...?
usdvPairs_8(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_7'])
has variable
clearing ir...?
maxUpdateWindow_16(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_15'])
has variable
clearing ir...?
totalLiquidityWeight_22(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_21', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_33(uint256[2]) := ϕ(['previousPrices_32', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
TMP_164 = CONVERT TMP_163 to uint256
has variable
[i] TMP_164 cleared
clearing ir...?
TMP_165(uint256) = 10 (c)** TMP_164
has variable
[i] TMP_165 cleared
clearing ir...?
TMP_166 = CONVERT TMP_165 to uint96
has variable
[i] TMP_166 cleared
clearing ir...?
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_120 (->pairData_2 (-> ['twapData'])) := TMP_166(uint96)
has variable
clearing ir...?
twapData_24(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
has variable
typecheckig node...
REF_120(uint96) -> pairData_1 (-> ['twapData']).foreignUnit
Function name: _addUSDVPair
MEMBER
pairData
foreignUnit
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_120

Name: pairData.foreignUnit Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.foreignUnit Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_161 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_161 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_161

Name: TMP_161 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_162 = CONVERT TMP_161 to IERC20Metadata
Function name: _addUSDVPair

Name: TMP_161 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_162 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_162

Name: TMP_162 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_163(uint8) = HIGH_LEVEL_CALL, dest:TMP_162(IERC20Metadata), function:decimals, arguments:[]  
Function name: _addUSDVPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_163
hlc contract name: ASSET func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_163

Name: TMP_163 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_7(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_6', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_8(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_7'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_16(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_15'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_22(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_21', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_33(uint256[2]) := ϕ(['previousPrices_32', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_164 = CONVERT TMP_163 to uint256
Function name: _addUSDVPair

Name: TMP_163 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_164 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_164

Name: TMP_164 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_165(uint256) = 10 (c)** TMP_164
Function name: _addUSDVPair
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: TMP_164 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_165 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_165

Name: TMP_165 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_166 = CONVERT TMP_165 to uint96
Function name: _addUSDVPair

Name: TMP_165 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: TMP_166 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_166

Name: TMP_166 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_120 (->pairData_2 (-> ['twapData'])) := TMP_166(uint96)
Function name: _addUSDVPair
asgn

Name: TMP_166 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_120

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_24(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_122(uint256) -> pairData_2 (-> ['twapData']).updatePeriod
has variable
clearing ir...?
pairData_3 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_2 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_122 (->pairData_3 (-> ['twapData'])) := updatePeriod_1(uint256)
has variable
clearing ir...?
twapData_25(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_3 (-> ['twapData'])"])
has variable
typecheckig node...
REF_122(uint256) -> pairData_2 (-> ['twapData']).updatePeriod
Function name: _addUSDVPair
MEMBER
pairData
updatePeriod
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_122

Name: pairData.updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_3 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_122 (->pairData_3 (-> ['twapData'])) := updatePeriod_1(uint256)
Function name: _addUSDVPair
asgn

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_122

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
twapData_25(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_123(uint256) -> pairData_3 (-> ['twapData']).lastMeasurement
has variable
clearing ir...?
pairData_4 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_3 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_123 (->pairData_4 (-> ['twapData'])) := block.timestamp(uint256)
has variable
clearing ir...?
twapData_26(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_4 (-> ['twapData'])"])
has variable
typecheckig node...
REF_123(uint256) -> pairData_3 (-> ['twapData']).lastMeasurement
Function name: _addUSDVPair
MEMBER
pairData
lastMeasurement
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_123

Name: pairData.lastMeasurement Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_4 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_123 (->pairData_4 (-> ['twapData'])) := block.timestamp(uint256)
Function name: _addUSDVPair
asgn
block.timestamp

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_123

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_123 (->pairData_4 (-> ['twapData'])) := block.timestamp(uint256)
XXXXX
twapData_26(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_8(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_7(IVaderPoolV2), function:cumulativePrices, arguments:['foreignAsset_1']  
has variable
clearing ir...?
vaderPool_8(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_7', 'vaderPool_1'])
has variable
clearing ir...?
usdvPairs_9(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_8'])
has variable
clearing ir...?
maxUpdateWindow_17(uint256) := ϕ(['maxUpdateWindow_16', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_23(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_22', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_34(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_33', 'previousPrices_4'])
has variable
clearing ir...?
nativeTokenPriceCumulative_1(uint256)= UNPACK TUPLE_8 index: 0 
has variable
[i] nativeTokenPriceCumulative cleared
typecheckig node...
TUPLE_8(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_7(IVaderPoolV2), function:cumulativePrices, arguments:['foreignAsset_1']  
Function name: _addUSDVPair
High Call: cumulativePrices
func name:cumulativePrices
other func name:cumulativePrices
TUPLE_8
hlc contract name: VADERPOOL func_name: cumulativePrices
('c', [1], [-1], 0, None)
foreignAsset
('c', [-1], [-1], 'u', None)
foreignAsset
('c', [-1], [-1], 'u', None)
foreignAsset
wfc len: 3
COPIED
[i]Type for TUPLE_8

Name: TUPLE_8 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_8(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_7', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_9(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_8'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_17(uint256) := ϕ(['maxUpdateWindow_16', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_23(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_22', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_34(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_33', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeTokenPriceCumulative_1(uint256)= UNPACK TUPLE_8 index: 0 
Function name: _addUSDVPair
Reading tuple TUPLE_8 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for nativeTokenPriceCumulative

Name: nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_125(uint256) -> pairData_4 (-> ['twapData']).nativeTokenPriceCumulative
has variable
clearing ir...?
pairData_5 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_4 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_125 (->pairData_5 (-> ['twapData'])) := nativeTokenPriceCumulative_1(uint256)
has variable
clearing ir...?
twapData_27(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_5 (-> ['twapData'])"])
has variable
typecheckig node...
REF_125(uint256) -> pairData_4 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addUSDVPair
MEMBER
pairData
nativeTokenPriceCumulative
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_125

Name: pairData.nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_5 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_125 (->pairData_5 (-> ['twapData'])) := nativeTokenPriceCumulative_1(uint256)
Function name: _addUSDVPair
asgn

Name: nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_125 Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Error with REF_125 in function _addUSDVPair
Error with: REF_125 in function _addUSDVPair
[W] Initializing defined variable to constant
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f5145e0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f436910>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f408460>, <slither.slithir.variables.reference_ssa.ReferenceVariableSSA object at 0x7f4b4f408a60>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f4138e0>, <slither.slithir.variables.reference_ssa.ReferenceVariableSSA object at 0x7f4b4f37c460>]
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_125

Name: REF_125 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_125 Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_27(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_9(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_8(IVaderPoolV2), function:getReserves, arguments:['foreignAsset_1']  
has variable
clearing ir...?
vaderPool_9(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_8', 'vaderPool_4', 'vaderPool_1'])
has variable
clearing ir...?
usdvPairs_10(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_9', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3'])
has variable
clearing ir...?
maxUpdateWindow_18(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_17'])
has variable
clearing ir...?
totalLiquidityWeight_24(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_23', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_35(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_34'])
has variable
clearing ir...?
reserveNative_1(uint256)= UNPACK TUPLE_9 index: 0 
has variable
[i] reserveNative cleared
clearing ir...?
reserveForeign_1(uint256)= UNPACK TUPLE_9 index: 1 
has variable
[i] reserveForeign cleared
typecheckig node...
TUPLE_9(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_8(IVaderPoolV2), function:getReserves, arguments:['foreignAsset_1']  
Function name: _addUSDVPair
High Call: getReserves
func name:getReserves
other func name:getReserves
TUPLE_9
hlc contract name: VADERPOOL func_name: getReserves
('c', [1], [-1], 0, None)
foreignAsset
('c', [2], [-1], 0, None)
foreignAsset
wfc len: 2
COPIED
[i]Type for TUPLE_9

Name: TUPLE_9 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_9(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_8', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_10(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_9', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_18(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_17'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_24(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_23', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_35(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_34'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserveNative_1(uint256)= UNPACK TUPLE_9 index: 0 
Function name: _addUSDVPair
Reading tuple TUPLE_9 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserveNative

Name: reserveNative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_1(uint256)= UNPACK TUPLE_9 index: 1 
Function name: _addUSDVPair
Reading tuple TUPLE_9 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserveForeign

Name: reserveForeign Function: _addUSDVPair
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_127(ILiquidityBasedTWAP.Paths) -> Paths.USDV
has variable
clearing ir...?
TMP_167 = CONVERT REF_127 to uint256
has variable
[i] TMP_167 cleared
clearing ir...?
REF_128(uint256) -> previousPrices_35[TMP_167]
has variable
clearing ir...?
TMP_168(uint256) = reserveNative_1 (c)* REF_128
has variable
[i] TMP_168 cleared
clearing ir...?
TMP_169 = CONVERT foreignAsset_1 to address
has variable
[i] TMP_169 cleared
clearing ir...?
TMP_170(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(TMP_169)
has variable
[i] TMP_170 cleared
clearing ir...?
TMP_171(uint256) = reserveForeign_1 (c)* TMP_170
has variable
[i] TMP_171 cleared
clearing ir...?
TMP_172(uint256) = TMP_168 (c)+ TMP_171
has variable
[i] TMP_172 cleared
clearing ir...?
pairLiquidityEvaluation_1(uint256) := TMP_172(uint256)
has variable
[i] pairLiquidityEvaluation cleared
typecheckig node...
REF_127(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: _addUSDVPair
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_127

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_167 = CONVERT REF_127 to uint256
Function name: _addUSDVPair

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_167 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_167

Name: TMP_167 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_128(uint256) -> previousPrices_35[TMP_167]
Function name: _addUSDVPair
INDEX

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_128

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_168(uint256) = reserveNative_1 (c)* REF_128
Function name: _addUSDVPair
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_49 Function: None
Num: 1, 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_168 Function: _addUSDVPair
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_168

Name: TMP_168 Function: _addUSDVPair
Num: 1, 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_169 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_169 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_169

Name: TMP_169 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_170(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(TMP_169)
Function name: _addUSDVPair
Internal call...
getChainlinkPrice
TMP_169
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: ASSET
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
added
xyz
Function name: getChainlinkPrice
Function Visibility: public
clearning node...
clearing ir...?
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
has variable
[i] asset cleared
clearing ir...?
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
has variable
typecheckig node...
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
Function name: getChainlinkPrice
Phi
[i]Type for asset

Name: asset Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: ASSET
Fields: 
Finance Type: undef
done.
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
Function name: getChainlinkPrice
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_14(IAggregatorV3) -> oracles_1[asset_1]
has variable
clearing ir...?
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
has variable
[i] oracle cleared
typecheckig node...
REF_14(IAggregatorV3) -> oracles_1[asset_1]
Function name: getChainlinkPrice
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_14

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
Function name: getChainlinkPrice
asgn

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: oracle Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for oracle

Name: oracle Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
has variable
clearing ir...?
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
has variable
[i] roundID cleared
clearing ir...?
price_1(int256)= UNPACK TUPLE_0 index: 1 
has variable
[i] price cleared
clearing ir...?
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
has variable
[i] answeredInRound cleared
typecheckig node...
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
Function name: getChainlinkPrice
High Call: latestRoundData
func name:latestRoundData
other func name:latestRoundData
TUPLE_0
hlc contract name: ORACLE func_name: latestRoundData
('c', [-1], [-1], 0, None)
('c', [2], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
wfc len: 5
COPIED
[i]Type for TUPLE_0

Name: TUPLE_0 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for roundID

Name: roundID Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
price_1(int256)= UNPACK TUPLE_0 index: 1 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: int256
int256
Final Type: int256
[i]Type for price

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 4
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for answeredInRound

Name: answeredInRound Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_30(bool) = answeredInRound_1 >= roundID_1
has variable
[i] TMP_30 cleared
clearing ir...?
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
typecheckig node...
TMP_30(bool) = answeredInRound_1 >= roundID_1
Function name: getChainlinkPrice
testing gt...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_30

Name: TMP_30 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_32(bool) = price_1 > 0
has variable
[i] TMP_32 cleared
clearing ir...?
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
typecheckig node...
TMP_32(bool) = price_1 > 0
Function name: getChainlinkPrice
testing gt...
val: 0
val: 0
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_32

Name: TMP_32 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_34 = CONVERT price_1 to uint256
has variable
[i] TMP_34 cleared
clearing ir...?
RETURN TMP_34
typecheckig node...
TMP_34 = CONVERT price_1 to uint256
Function name: getChainlinkPrice

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_34 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_34

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_34
RETURN

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "getChainlinkPrice":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: getChainlinkPrice

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_170

Name: TMP_170 Function: _addUSDVPair
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_171(uint256) = reserveForeign_1 (c)* TMP_170
Function name: _addUSDVPair
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_51 Function: None
Num: 2, 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_171 Function: _addUSDVPair
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_171

Name: TMP_171 Function: _addUSDVPair
Num: 2, 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_172(uint256) = TMP_168 (c)+ TMP_171
Function name: _addUSDVPair

Name: TMP_172 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
Error with TMP_172 in function _addUSDVPair
Error with: TMP_172 in function _addUSDVPair
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f5145e0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f436910>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f408460>, <slither.slithir.variables.reference_ssa.ReferenceVariableSSA object at 0x7f4b4f408a60>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f4138e0>, <slither.slithir.variables.reference_ssa.ReferenceVariableSSA object at 0x7f4b4f37c460>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f386d30>]
[i]Type for TMP_172

Name: TMP_172 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairLiquidityEvaluation_1(uint256) := TMP_172(uint256)
Function name: _addUSDVPair
asgn

Name: TMP_172 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairLiquidityEvaluation

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_129(uint256) -> pairData_5 (-> ['twapData']).pastLiquidityEvaluation
has variable
clearing ir...?
pairData_6 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_129 (->pairData_6 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
has variable
clearing ir...?
twapData_28(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_6 (-> ['twapData'])"])
has variable
typecheckig node...
REF_129(uint256) -> pairData_5 (-> ['twapData']).pastLiquidityEvaluation
Function name: _addUSDVPair
MEMBER
pairData
pastLiquidityEvaluation
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_129

Name: pairData.pastLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_6 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_129 (->pairData_6 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
Function name: _addUSDVPair
asgn

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_129

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
twapData_28(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_6 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_130(ILiquidityBasedTWAP.Paths) -> Paths.USDV
has variable
clearing ir...?
TMP_173 = CONVERT REF_130 to uint256
has variable
[i] TMP_173 cleared
clearing ir...?
REF_131(uint256) -> totalLiquidityWeight_25[TMP_173]
has variable
clearing ir...?
totalLiquidityWeight_26(uint256[2]) := ϕ(['totalLiquidityWeight_25'])
has variable
clearing ir...?
REF_131(-> totalLiquidityWeight_26) = REF_131 (c)+ pairLiquidityEvaluation_1
has variable
typecheckig node...
REF_130(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: _addUSDVPair
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_130

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_173 = CONVERT REF_130 to uint256
Function name: _addUSDVPair

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_173 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_173

Name: TMP_173 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_131(uint256) -> totalLiquidityWeight_25[TMP_173]
Function name: _addUSDVPair
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalLiquidityWeight
[i]Type for REF_131

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_131(uint256) -> totalLiquidityWeight_25[TMP_173]
XXXXX
totalLiquidityWeight_26(uint256[2]) := ϕ(['totalLiquidityWeight_25'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_131(-> totalLiquidityWeight_26) = REF_131 (c)+ pairLiquidityEvaluation_1
Function name: _addUSDVPair

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_131

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_133 -> LENGTH usdvPairs_11
clearing ir...?
TMP_175(uint256) := REF_133(uint256)
has variable
[i] TMP_175 cleared
clearing ir...?
TMP_176(uint256) = TMP_175 (c)+ 1
has variable
[i] TMP_176 cleared
clearing ir...?
usdvPairs_12(IERC20[]) := ϕ(['usdvPairs_11'])
has variable
clearing ir...?
REF_133 (->usdvPairs_12) := TMP_176(uint256)
has variable
clearing ir...?
REF_134(IERC20) -> usdvPairs_12[TMP_175]
has variable
clearing ir...?
usdvPairs_13(IERC20[]) := ϕ(['usdvPairs_12'])
has variable
clearing ir...?
REF_134 (->usdvPairs_13) := foreignAsset_1(IERC20)
has variable
typecheckig node...
REF_133 -> LENGTH usdvPairs_11
[i]Type for REF_133

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_175(uint256) := REF_133(uint256)
Function name: _addUSDVPair
asgn

Name: REF_133 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_175 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_175

Name: TMP_175 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_175(uint256) := REF_133(uint256)
XXXXX
TMP_176(uint256) = TMP_175 (c)+ 1
Function name: _addUSDVPair
val: 1

Name: TMP_176 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_176 Function: _addUSDVPair
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_176

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_176(uint256) = TMP_175 (c)+ 1
XXXXX
usdvPairs_12(IERC20[]) := ϕ(['usdvPairs_11'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_133 (->usdvPairs_12) := TMP_176(uint256)
Function name: _addUSDVPair
asgn

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_133 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_133

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_134(IERC20) -> usdvPairs_12[TMP_175]
Function name: _addUSDVPair
INDEX

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_134

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
usdvPairs_13(IERC20[]) := ϕ(['usdvPairs_12'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_134 (->usdvPairs_13) := foreignAsset_1(IERC20)
Function name: _addUSDVPair
asgn

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: REF_134 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_134

Name: REF_134 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_177(bool) = maxUpdateWindow_19 < updatePeriod_1
has variable
[i] TMP_177 cleared
clearing ir...?
CONDITION TMP_177
typecheckig node...
TMP_177(bool) = maxUpdateWindow_19 < updatePeriod_1
Function name: _addUSDVPair
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_177

Name: TMP_177 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_177
Condition...
Conidtion: 
TMP_177
TMP_177
clearning node...
clearing ir...?
maxUpdateWindow_20(uint256) := updatePeriod_1(uint256)
has variable
typecheckig node...
maxUpdateWindow_20(uint256) := updatePeriod_1(uint256)
Function name: _addUSDVPair
asgn

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxUpdateWindow Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "_addUSDVPair":
 New undefined nodes- 3
 Old undefined nodes- 0
typecheckig node...
foreignAsset_1(IERC20) := ϕ(['foreignAsset_1', 'foreignAsset_1'])
Function name: _addUSDVPair
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := ϕ(['oracle_1', 'oracle_1'])
Function name: _addUSDVPair
Phi
[i]Type for oracle

Name: oracle Function: _addUSDVPair
Num: 1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
done.
updatePeriod_1(uint256) := ϕ(['updatePeriod_1', 'updatePeriod_1'])
Function name: _addUSDVPair
Phi
[i]Type for updatePeriod

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_5(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_0', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_6(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_14(uint256) := ϕ(['maxUpdateWindow_0', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_20(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_31(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_22(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
TMP_154(bool) = updatePeriod_1 != 0
Function name: _addUSDVPair
[i]Type for TMP_154

Name: TMP_154 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_155(None) = SOLIDITY_CALL require(bool,string)(TMP_154,LBTWAP::addUSDVPair: Incorrect Update Period)
[i]Type for TMP_155

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_156(uint8) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:decimals, arguments:[]  
Function name: _addUSDVPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_156
hlc contract name: ORACLE func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_156

Name: TMP_156 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_6(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_5', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_7(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_6'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_15(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_14'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_21(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_20', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_32(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_31', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_23(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_22', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_21', 'twapData_7'])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
TMP_157(bool) = TMP_156 == 8
Function name: _addUSDVPair
[i]Type for TMP_157

Name: TMP_157 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_158(None) = SOLIDITY_CALL require(bool,string)(TMP_157,LBTWAP::addUSDVPair: Non-USD Oracle)
[i]Type for TMP_158

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_159 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_159 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_159

Name: TMP_159 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
REF_118(IAggregatorV3) -> oracles_2[TMP_159]
Function name: _addUSDVPair
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_118

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracles_3(mapping(address => IAggregatorV3)) := ϕ(['oracles_2'])
Function name: _addUSDVPair
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_118 (->oracles_3) := oracle_1(IAggregatorV3)
Function name: _addUSDVPair
asgn

Name: oracle Function: _addUSDVPair
Num: 1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef

Name: REF_118 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_118

Name: REF_118 Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_160 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_160 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_160

Name: TMP_160 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
REF_119(ILiquidityBasedTWAP.ExchangePair) -> twapData_23[TMP_160]
Function name: _addUSDVPair
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_119

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_119(ILiquidityBasedTWAP.ExchangePair)
Function name: _addUSDVPair
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_120(uint96) -> pairData_1 (-> ['twapData']).foreignUnit
Function name: _addUSDVPair
MEMBER
pairData
foreignUnit
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_120

Name: pairData.foreignUnit Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.foreignUnit Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_161 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_161 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_161

Name: TMP_161 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_162 = CONVERT TMP_161 to IERC20Metadata
Function name: _addUSDVPair

Name: TMP_161 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_162 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_162

Name: TMP_162 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_163(uint8) = HIGH_LEVEL_CALL, dest:TMP_162(IERC20Metadata), function:decimals, arguments:[]  
Function name: _addUSDVPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_163
hlc contract name: ASSET func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_163

Name: TMP_163 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_7(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_6', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_8(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_7'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_16(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_15'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_22(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_21', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_33(uint256[2]) := ϕ(['previousPrices_32', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_164 = CONVERT TMP_163 to uint256
Function name: _addUSDVPair

Name: TMP_163 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_164 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_164

Name: TMP_164 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_165(uint256) = 10 (c)** TMP_164
Function name: _addUSDVPair
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: TMP_164 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_165 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:*
-1
val: 10
1
[i]Type for TMP_165

Name: TMP_165 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_166 = CONVERT TMP_165 to uint96
Function name: _addUSDVPair

Name: TMP_165 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: TMP_166 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_166

Name: TMP_166 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_120 (->pairData_2 (-> ['twapData'])) := TMP_166(uint96)
Function name: _addUSDVPair
asgn

Name: TMP_166 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_120

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_24(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_122(uint256) -> pairData_2 (-> ['twapData']).updatePeriod
Function name: _addUSDVPair
MEMBER
pairData
updatePeriod
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_122

Name: pairData.updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_3 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_122 (->pairData_3 (-> ['twapData'])) := updatePeriod_1(uint256)
Function name: _addUSDVPair
asgn

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_122

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
twapData_25(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_123(uint256) -> pairData_3 (-> ['twapData']).lastMeasurement
Function name: _addUSDVPair
MEMBER
pairData
lastMeasurement
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_123

Name: pairData.lastMeasurement Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_4 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_123 (->pairData_4 (-> ['twapData'])) := block.timestamp(uint256)
Function name: _addUSDVPair
asgn
block.timestamp

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_123

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_123 (->pairData_4 (-> ['twapData'])) := block.timestamp(uint256)
XXXXX
twapData_26(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TUPLE_8(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_7(IVaderPoolV2), function:cumulativePrices, arguments:['foreignAsset_1']  
Function name: _addUSDVPair
High Call: cumulativePrices
func name:cumulativePrices
other func name:cumulativePrices
TUPLE_8
hlc contract name: VADERPOOL func_name: cumulativePrices
('c', [1], [-1], 0, None)
foreignAsset
('c', [-1], [-1], 'u', None)
foreignAsset
('c', [-1], [-1], 'u', None)
foreignAsset
wfc len: 3
COPIED
[i]Type for TUPLE_8

Name: TUPLE_8 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_8(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_7', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_9(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_8'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_17(uint256) := ϕ(['maxUpdateWindow_16', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_23(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_22', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_34(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_33', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeTokenPriceCumulative_1(uint256)= UNPACK TUPLE_8 index: 0 
Function name: _addUSDVPair
Reading tuple TUPLE_8 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for nativeTokenPriceCumulative

Name: nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_125(uint256) -> pairData_4 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addUSDVPair
MEMBER
[W] Initializing defined variable to constant
pairData
nativeTokenPriceCumulative
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_125

Name: pairData.nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
pairData_5 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_125 (->pairData_5 (-> ['twapData'])) := nativeTokenPriceCumulative_1(uint256)
Function name: _addUSDVPair
asgn

Name: nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_125 Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[W] Initializing defined variable to constant
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_125

Name: REF_125 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_125 Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_27(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
TUPLE_9(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_8(IVaderPoolV2), function:getReserves, arguments:['foreignAsset_1']  
Function name: _addUSDVPair
High Call: getReserves
func name:getReserves
other func name:getReserves
TUPLE_9
hlc contract name: VADERPOOL func_name: getReserves
('c', [1], [-1], 0, None)
foreignAsset
('c', [2], [-1], 0, None)
foreignAsset
wfc len: 2
COPIED
[i]Type for TUPLE_9

Name: TUPLE_9 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_9(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_8', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_10(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_9', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_18(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_17'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_24(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_23', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_35(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_34'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserveNative_1(uint256)= UNPACK TUPLE_9 index: 0 
Function name: _addUSDVPair
Reading tuple TUPLE_9 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserveNative

Name: reserveNative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_1(uint256)= UNPACK TUPLE_9 index: 1 
Function name: _addUSDVPair
Reading tuple TUPLE_9 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserveForeign

Name: reserveForeign Function: _addUSDVPair
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_127(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: _addUSDVPair
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_127

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_167 = CONVERT REF_127 to uint256
Function name: _addUSDVPair

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_167 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_167

Name: TMP_167 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_128(uint256) -> previousPrices_35[TMP_167]
Function name: _addUSDVPair
INDEX

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_128

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_168(uint256) = reserveNative_1 (c)* REF_128
Function name: _addUSDVPair
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_52 Function: None
Num: 1, 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_168 Function: _addUSDVPair
Num: 1, 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_168

Name: TMP_168 Function: _addUSDVPair
Num: 1, 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_169 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_169 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_169

Name: TMP_169 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_170(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(TMP_169)
Function name: _addUSDVPair
Internal call...
getChainlinkPrice
TMP_169
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: ASSET
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
added
xyz
Function name: getChainlinkPrice
Function Visibility: public
clearning node...
clearing ir...?
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
has variable
[i] asset cleared
clearing ir...?
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
has variable
typecheckig node...
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
Function name: getChainlinkPrice
Phi
[i]Type for asset

Name: asset Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: ASSET
Fields: 
Finance Type: undef
done.
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
Function name: getChainlinkPrice
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_14(IAggregatorV3) -> oracles_1[asset_1]
has variable
clearing ir...?
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
has variable
[i] oracle cleared
typecheckig node...
REF_14(IAggregatorV3) -> oracles_1[asset_1]
Function name: getChainlinkPrice
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_14

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
Function name: getChainlinkPrice
asgn

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: oracle Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for oracle

Name: oracle Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
has variable
clearing ir...?
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
has variable
[i] roundID cleared
clearing ir...?
price_1(int256)= UNPACK TUPLE_0 index: 1 
has variable
[i] price cleared
clearing ir...?
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
has variable
[i] answeredInRound cleared
typecheckig node...
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
Function name: getChainlinkPrice
High Call: latestRoundData
func name:latestRoundData
other func name:latestRoundData
TUPLE_0
hlc contract name: ORACLE func_name: latestRoundData
('c', [-1], [-1], 0, None)
('c', [2], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
wfc len: 5
COPIED
[i]Type for TUPLE_0

Name: TUPLE_0 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for roundID

Name: roundID Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
price_1(int256)= UNPACK TUPLE_0 index: 1 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: int256
int256
Final Type: int256
[i]Type for price

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 4
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for answeredInRound

Name: answeredInRound Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_30(bool) = answeredInRound_1 >= roundID_1
has variable
[i] TMP_30 cleared
clearing ir...?
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
typecheckig node...
TMP_30(bool) = answeredInRound_1 >= roundID_1
Function name: getChainlinkPrice
testing gt...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_30

Name: TMP_30 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_32(bool) = price_1 > 0
has variable
[i] TMP_32 cleared
clearing ir...?
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
typecheckig node...
TMP_32(bool) = price_1 > 0
Function name: getChainlinkPrice
testing gt...
val: 0
val: 0
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_32

Name: TMP_32 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_34 = CONVERT price_1 to uint256
has variable
[i] TMP_34 cleared
clearing ir...?
RETURN TMP_34
typecheckig node...
TMP_34 = CONVERT price_1 to uint256
Function name: getChainlinkPrice

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_34 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_34

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_34
RETURN

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "getChainlinkPrice":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: getChainlinkPrice

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_170

Name: TMP_170 Function: _addUSDVPair
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_171(uint256) = reserveForeign_1 (c)* TMP_170
Function name: _addUSDVPair
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_54 Function: None
Num: 2, 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_171 Function: _addUSDVPair
Num: 2, 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_171

Name: TMP_171 Function: _addUSDVPair
Num: 2, 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_172(uint256) = TMP_168 (c)+ TMP_171
Function name: _addUSDVPair

Name: TMP_172 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_172

Name: TMP_172 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pairLiquidityEvaluation_1(uint256) := TMP_172(uint256)
Function name: _addUSDVPair
asgn

Name: TMP_172 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairLiquidityEvaluation

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_129(uint256) -> pairData_5 (-> ['twapData']).pastLiquidityEvaluation
Function name: _addUSDVPair
MEMBER
pairData
pastLiquidityEvaluation
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_129

Name: pairData.pastLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_6 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_129 (->pairData_6 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
Function name: _addUSDVPair
asgn

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_129

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
twapData_28(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_6 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_130(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: _addUSDVPair
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_130

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_173 = CONVERT REF_130 to uint256
Function name: _addUSDVPair

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_173 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_173

Name: TMP_173 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_131(uint256) -> totalLiquidityWeight_25[TMP_173]
Function name: _addUSDVPair
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalLiquidityWeight
[i]Type for REF_131

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_131(uint256) -> totalLiquidityWeight_25[TMP_173]
XXXXX
totalLiquidityWeight_26(uint256[2]) := ϕ(['totalLiquidityWeight_25'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_131(-> totalLiquidityWeight_26) = REF_131 (c)+ pairLiquidityEvaluation_1
Function name: _addUSDVPair

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_131

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_133 -> LENGTH usdvPairs_11
[i]Type for REF_133

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_175(uint256) := REF_133(uint256)
Function name: _addUSDVPair
asgn

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_175 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_175

Name: TMP_175 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_176(uint256) = TMP_175 (c)+ 1
Function name: _addUSDVPair
val: 1

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_176

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
usdvPairs_12(IERC20[]) := ϕ(['usdvPairs_11'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_133 (->usdvPairs_12) := TMP_176(uint256)
Function name: _addUSDVPair
asgn

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_133

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_134(IERC20) -> usdvPairs_12[TMP_175]
Function name: _addUSDVPair
INDEX

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_134

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
usdvPairs_13(IERC20[]) := ϕ(['usdvPairs_12'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_134 (->usdvPairs_13) := foreignAsset_1(IERC20)
Function name: _addUSDVPair
asgn

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: REF_134 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_134

Name: REF_134 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_177(bool) = maxUpdateWindow_19 < updatePeriod_1
Function name: _addUSDVPair
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_177

Name: TMP_177 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_177
Condition...
Conidtion: 
TMP_177
TMP_177
typecheckig node...
maxUpdateWindow_20(uint256) := updatePeriod_1(uint256)
Function name: _addUSDVPair
asgn

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxUpdateWindow Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
WORKLIST iteration 1 for function call "_addUSDVPair":
 New undefined nodes- 2
 Old undefined nodes- 3
typecheckig node...
foreignAsset_1(IERC20) := ϕ(['foreignAsset_1', 'foreignAsset_1'])
Function name: _addUSDVPair
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := ϕ(['oracle_1', 'oracle_1'])
Function name: _addUSDVPair
Phi
[i]Type for oracle

Name: oracle Function: _addUSDVPair
Num: 1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
done.
updatePeriod_1(uint256) := ϕ(['updatePeriod_1', 'updatePeriod_1'])
Function name: _addUSDVPair
Phi
[i]Type for updatePeriod

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_5(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_0', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_6(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_14(uint256) := ϕ(['maxUpdateWindow_0', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_20(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_31(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_22(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
TMP_154(bool) = updatePeriod_1 != 0
Function name: _addUSDVPair
[i]Type for TMP_154

Name: TMP_154 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_155(None) = SOLIDITY_CALL require(bool,string)(TMP_154,LBTWAP::addUSDVPair: Incorrect Update Period)
[i]Type for TMP_155

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_156(uint8) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:decimals, arguments:[]  
Function name: _addUSDVPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_156
hlc contract name: ORACLE func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_156

Name: TMP_156 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_6(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_5', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_7(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_6'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_15(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_14'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_21(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_20', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_32(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_31', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_23(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_22', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_21', 'twapData_7'])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
TMP_157(bool) = TMP_156 == 8
Function name: _addUSDVPair
[i]Type for TMP_157

Name: TMP_157 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_158(None) = SOLIDITY_CALL require(bool,string)(TMP_157,LBTWAP::addUSDVPair: Non-USD Oracle)
[i]Type for TMP_158

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_159 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_159 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_159

Name: TMP_159 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
REF_118(IAggregatorV3) -> oracles_2[TMP_159]
Function name: _addUSDVPair
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_118

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracles_3(mapping(address => IAggregatorV3)) := ϕ(['oracles_2'])
Function name: _addUSDVPair
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_118 (->oracles_3) := oracle_1(IAggregatorV3)
Function name: _addUSDVPair
asgn

Name: oracle Function: _addUSDVPair
Num: 1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef

Name: REF_118 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_118

Name: REF_118 Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_160 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_160 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_160

Name: TMP_160 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
REF_119(ILiquidityBasedTWAP.ExchangePair) -> twapData_23[TMP_160]
Function name: _addUSDVPair
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_119

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_119(ILiquidityBasedTWAP.ExchangePair)
Function name: _addUSDVPair
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_120(uint96) -> pairData_1 (-> ['twapData']).foreignUnit
Function name: _addUSDVPair
MEMBER
pairData
foreignUnit
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_120

Name: pairData.foreignUnit Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.foreignUnit Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_161 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_161 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_161

Name: TMP_161 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_162 = CONVERT TMP_161 to IERC20Metadata
Function name: _addUSDVPair

Name: TMP_161 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_162 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_162

Name: TMP_162 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_163(uint8) = HIGH_LEVEL_CALL, dest:TMP_162(IERC20Metadata), function:decimals, arguments:[]  
Function name: _addUSDVPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_163
hlc contract name: ASSET func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_163

Name: TMP_163 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_7(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_6', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_8(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_7'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_16(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_15'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_22(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_21', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_33(uint256[2]) := ϕ(['previousPrices_32', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_164 = CONVERT TMP_163 to uint256
Function name: _addUSDVPair

Name: TMP_163 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_164 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_164

Name: TMP_164 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_165(uint256) = 10 (c)** TMP_164
Function name: _addUSDVPair
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: TMP_164 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_165 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:*
-1
val: 10
1
[i]Type for TMP_165

Name: TMP_165 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_166 = CONVERT TMP_165 to uint96
Function name: _addUSDVPair

Name: TMP_165 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: TMP_166 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_166

Name: TMP_166 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_120 (->pairData_2 (-> ['twapData'])) := TMP_166(uint96)
Function name: _addUSDVPair
asgn

Name: TMP_166 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_120

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_24(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_122(uint256) -> pairData_2 (-> ['twapData']).updatePeriod
Function name: _addUSDVPair
MEMBER
pairData
updatePeriod
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_122

Name: pairData.updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_3 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_122 (->pairData_3 (-> ['twapData'])) := updatePeriod_1(uint256)
Function name: _addUSDVPair
asgn

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_122

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
twapData_25(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_123(uint256) -> pairData_3 (-> ['twapData']).lastMeasurement
Function name: _addUSDVPair
MEMBER
pairData
lastMeasurement
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_123

Name: pairData.lastMeasurement Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_4 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_123 (->pairData_4 (-> ['twapData'])) := block.timestamp(uint256)
Function name: _addUSDVPair
asgn
block.timestamp

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_123

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_123 (->pairData_4 (-> ['twapData'])) := block.timestamp(uint256)
XXXXX
twapData_26(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TUPLE_8(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_7(IVaderPoolV2), function:cumulativePrices, arguments:['foreignAsset_1']  
Function name: _addUSDVPair
High Call: cumulativePrices
func name:cumulativePrices
other func name:cumulativePrices
TUPLE_8
hlc contract name: VADERPOOL func_name: cumulativePrices
('c', [1], [-1], 0, None)
foreignAsset
('c', [-1], [-1], 'u', None)
foreignAsset
('c', [-1], [-1], 'u', None)
foreignAsset
wfc len: 3
COPIED
[i]Type for TUPLE_8

Name: TUPLE_8 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_8(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_7', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_9(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_8'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_17(uint256) := ϕ(['maxUpdateWindow_16', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_23(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_22', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_34(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_33', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeTokenPriceCumulative_1(uint256)= UNPACK TUPLE_8 index: 0 
Function name: _addUSDVPair
Reading tuple TUPLE_8 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for nativeTokenPriceCumulative

Name: nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_125(uint256) -> pairData_4 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addUSDVPair
MEMBER
pairData
nativeTokenPriceCumulative
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_125

Name: pairData.nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
pairData_5 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_125 (->pairData_5 (-> ['twapData'])) := nativeTokenPriceCumulative_1(uint256)
Function name: _addUSDVPair
asgn

Name: nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_125 Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[W] Initializing defined variable to constant
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_125

Name: REF_125 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_125 Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_27(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
TUPLE_9(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_8(IVaderPoolV2), function:getReserves, arguments:['foreignAsset_1']  
Function name: _addUSDVPair
High Call: getReserves
func name:getReserves
other func name:getReserves
TUPLE_9
hlc contract name: VADERPOOL func_name: getReserves
('c', [1], [-1], 0, None)
foreignAsset
('c', [2], [-1], 0, None)
foreignAsset
wfc len: 2
COPIED
[i]Type for TUPLE_9

Name: TUPLE_9 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_9(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_8', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_10(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_9', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_18(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_17'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_24(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_23', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_35(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_34'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserveNative_1(uint256)= UNPACK TUPLE_9 index: 0 
Function name: _addUSDVPair
Reading tuple TUPLE_9 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserveNative

Name: reserveNative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_1(uint256)= UNPACK TUPLE_9 index: 1 
Function name: _addUSDVPair
Reading tuple TUPLE_9 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserveForeign

Name: reserveForeign Function: _addUSDVPair
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_127(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: _addUSDVPair
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_127

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_167 = CONVERT REF_127 to uint256
Function name: _addUSDVPair

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_167 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_167

Name: TMP_167 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_128(uint256) -> previousPrices_35[TMP_167]
Function name: _addUSDVPair
INDEX

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_128

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_168(uint256) = reserveNative_1 (c)* REF_128
Function name: _addUSDVPair
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_55 Function: None
Num: 1, 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_168 Function: _addUSDVPair
Num: 1, 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_168

Name: TMP_168 Function: _addUSDVPair
Num: 1, 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_169 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_169 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_169

Name: TMP_169 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_170(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(TMP_169)
Function name: _addUSDVPair
Internal call...
getChainlinkPrice
TMP_169
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: ASSET
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
added
xyz
Function name: getChainlinkPrice
Function Visibility: public
clearning node...
clearing ir...?
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
has variable
[i] asset cleared
clearing ir...?
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
has variable
typecheckig node...
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
Function name: getChainlinkPrice
Phi
[i]Type for asset

Name: asset Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: ASSET
Fields: 
Finance Type: undef
done.
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
Function name: getChainlinkPrice
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_14(IAggregatorV3) -> oracles_1[asset_1]
has variable
clearing ir...?
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
has variable
[i] oracle cleared
typecheckig node...
REF_14(IAggregatorV3) -> oracles_1[asset_1]
Function name: getChainlinkPrice
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_14

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
Function name: getChainlinkPrice
asgn

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: oracle Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for oracle

Name: oracle Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
has variable
clearing ir...?
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
has variable
[i] roundID cleared
clearing ir...?
price_1(int256)= UNPACK TUPLE_0 index: 1 
has variable
[i] price cleared
clearing ir...?
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
has variable
[i] answeredInRound cleared
typecheckig node...
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
Function name: getChainlinkPrice
High Call: latestRoundData
func name:latestRoundData
other func name:latestRoundData
TUPLE_0
hlc contract name: ORACLE func_name: latestRoundData
('c', [-1], [-1], 0, None)
('c', [2], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
wfc len: 5
COPIED
[i]Type for TUPLE_0

Name: TUPLE_0 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for roundID

Name: roundID Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
price_1(int256)= UNPACK TUPLE_0 index: 1 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: int256
int256
Final Type: int256
[i]Type for price

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 4
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for answeredInRound

Name: answeredInRound Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_30(bool) = answeredInRound_1 >= roundID_1
has variable
[i] TMP_30 cleared
clearing ir...?
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
typecheckig node...
TMP_30(bool) = answeredInRound_1 >= roundID_1
Function name: getChainlinkPrice
testing gt...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_30

Name: TMP_30 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_32(bool) = price_1 > 0
has variable
[i] TMP_32 cleared
clearing ir...?
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
typecheckig node...
TMP_32(bool) = price_1 > 0
Function name: getChainlinkPrice
testing gt...
val: 0
val: 0
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_32

Name: TMP_32 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_34 = CONVERT price_1 to uint256
has variable
[i] TMP_34 cleared
clearing ir...?
RETURN TMP_34
typecheckig node...
TMP_34 = CONVERT price_1 to uint256
Function name: getChainlinkPrice

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_34 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_34

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_34
RETURN

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "getChainlinkPrice":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: getChainlinkPrice

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_170

Name: TMP_170 Function: _addUSDVPair
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_171(uint256) = reserveForeign_1 (c)* TMP_170
Function name: _addUSDVPair
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_57 Function: None
Num: 2, 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_171 Function: _addUSDVPair
Num: 2, 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_171

Name: TMP_171 Function: _addUSDVPair
Num: 2, 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_172(uint256) = TMP_168 (c)+ TMP_171
Function name: _addUSDVPair

Name: TMP_172 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_172

Name: TMP_172 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
pairLiquidityEvaluation_1(uint256) := TMP_172(uint256)
Function name: _addUSDVPair
asgn

Name: TMP_172 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairLiquidityEvaluation

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_129(uint256) -> pairData_5 (-> ['twapData']).pastLiquidityEvaluation
Function name: _addUSDVPair
MEMBER
pairData
pastLiquidityEvaluation
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_129

Name: pairData.pastLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_6 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_129 (->pairData_6 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
Function name: _addUSDVPair
asgn

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_129

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
twapData_28(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_6 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_130(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: _addUSDVPair
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_130

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_173 = CONVERT REF_130 to uint256
Function name: _addUSDVPair

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_173 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_173

Name: TMP_173 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_131(uint256) -> totalLiquidityWeight_25[TMP_173]
Function name: _addUSDVPair
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalLiquidityWeight
[i]Type for REF_131

Name: None Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_131(uint256) -> totalLiquidityWeight_25[TMP_173]
XXXXX
totalLiquidityWeight_26(uint256[2]) := ϕ(['totalLiquidityWeight_25'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_131(-> totalLiquidityWeight_26) = REF_131 (c)+ pairLiquidityEvaluation_1
Function name: _addUSDVPair

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_131

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_133 -> LENGTH usdvPairs_11
[i]Type for REF_133

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_175(uint256) := REF_133(uint256)
Function name: _addUSDVPair
asgn

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_175 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_175

Name: TMP_175 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_176(uint256) = TMP_175 (c)+ 1
Function name: _addUSDVPair
val: 1

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_176

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
usdvPairs_12(IERC20[]) := ϕ(['usdvPairs_11'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_133 (->usdvPairs_12) := TMP_176(uint256)
Function name: _addUSDVPair
asgn

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_133

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_134(IERC20) -> usdvPairs_12[TMP_175]
Function name: _addUSDVPair
INDEX

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_134

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
usdvPairs_13(IERC20[]) := ϕ(['usdvPairs_12'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_134 (->usdvPairs_13) := foreignAsset_1(IERC20)
Function name: _addUSDVPair
asgn

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: REF_134 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_134

Name: REF_134 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_177(bool) = maxUpdateWindow_19 < updatePeriod_1
Function name: _addUSDVPair
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_177

Name: TMP_177 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_177
Condition...
Conidtion: 
TMP_177
TMP_177
typecheckig node...
maxUpdateWindow_20(uint256) := updatePeriod_1(uint256)
Function name: _addUSDVPair
asgn

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxUpdateWindow Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
WORKLIST iteration 2 for function call "_addUSDVPair":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: _addUSDVPair
done.
This IR caused addback:
INTERNAL_CALL, LiquidityBasedTWAP._addUSDVPair(IERC20,IAggregatorV3,uint256)(foreignAsset_1,oracle_1,updatePeriod_1)
XXXXX
WORKLIST iteration 0 for function call "setupUSDV":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
previousPrices_26(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: setupUSDV
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, Ownable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
typecheckig node...
REF_111(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: setupUSDV
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_111

Name: Paths.USDV Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_143 = CONVERT REF_111 to uint256
Function name: setupUSDV

Name: Paths.USDV Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_143 Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_143

Name: TMP_143 Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_112(uint256) -> previousPrices_27[TMP_143]
Function name: setupUSDV
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
previousPrices
[i]Type for REF_112

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_112(uint256) -> previousPrices_27[TMP_143]
XXXXX
TMP_144(bool) = REF_112 == 0
Function name: setupUSDV
[i]Type for TMP_144

Name: TMP_144 Function: setupUSDV
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_145(None) = SOLIDITY_CALL require(bool,string)(TMP_144,LBTWAP::setupUSDV: Already Initialized)
[i]Type for TMP_145

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_113(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: setupUSDV
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_113

Name: Paths.USDV Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_146 = CONVERT REF_113 to uint256
Function name: setupUSDV

Name: Paths.USDV Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_146 Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_146

Name: TMP_146 Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_114(uint256) -> previousPrices_27[TMP_146]
Function name: setupUSDV
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
previousPrices
[i]Type for REF_114

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_114(uint256) -> previousPrices_27[TMP_146]
XXXXX
previousPrices_28(uint256[2]) := ϕ(['previousPrices_27'])
Function name: setupUSDV
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_114 (->previousPrices_28) := usdvPrice_1(uint256)
Function name: setupUSDV
asgn

Name: usdvPrice Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_114 Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_114

Name: REF_114 Function: setupUSDV
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, LiquidityBasedTWAP._addUSDVPair(IERC20,IAggregatorV3,uint256)(foreignAsset_1,oracle_1,updatePeriod_1)
Internal call...
_addUSDVPair
foreignAsset
oracle
updatePeriod
Function: _addUSDVPair
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: ASSET
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: ORACLE
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: ASSET
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: ORACLE
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'ASSET', [], -1]
cur_param: [[1], [-1], 0, 'ORACLE', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: ASSET
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: ORACLE
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'ASSET', [], -1]
[[1], [-1], 0, 'ORACLE', [], -1]
[[-1], [-1], 'u', None, [], -1]
0
done.
WORKLIST iteration 1 for function call "setupUSDV":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: setupUSDV
State_var: oracles
Finding type for oracles...
mapping(address => IAggregatorV3)
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: mapping(address => IAggregatorV3)
mapping(address => IAggregatorV3)
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: previousPrices
Finding type for previousPrices...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPool
Finding type for vaderPool...
IVaderPoolV2
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPOOL')
----
Type: IVaderPoolV2
IVaderPoolV2
Final Type: IVaderPoolV2
 NO FIELDS

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxUpdateWindow
Finding type for maxUpdateWindow...
uint256
Check copy_toekn_tuple
(-1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalLiquidityWeight
Finding type for totalLiquidityWeight...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: twapData
Finding type for twapData...
mapping(address => ILiquidityBasedTWAP.ExchangePair)
Check copy_toekn_tuple
(-1, -1, 0, 'EXCHANGEPAIR')
----
Type: mapping(address => ILiquidityBasedTWAP.ExchangePair)
mapping(address => ILiquidityBasedTWAP.ExchangePair)
ILiquidityBasedTWAP.ExchangePair
Final Type: ILiquidityBasedTWAP.ExchangePair
global
twapData
nativeTokenPriceCumulative
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
nativeTokenPriceAverage
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
nativeTokenPriceAverage
_x
FIELDS:
nativeTokenPriceAverage Fields:
^^^
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
twapData.nativeTokenPriceAverage
_x
FIELDS:
twapData.nativeTokenPriceAverage Fields:
^^^
global
twapData
lastMeasurement
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
updatePeriod
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
pastLiquidityEvaluation
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
foreignAsset
Check copy_toekn_tuple
([-1], [-1], [0], 'FOREIGNASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
twapData
foreignUnit
Check copy_toekn_tuple
([-1], [-1], [-404], None)
----
Type: uint96
uint96
Final Type: uint96
Type: uint96
uint96
Final Type: uint96
FIELDS:
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
[*]Type fetched successfully
State_var: vader
Finding type for vader...
address
Check copy_toekn_tuple
(2, -1, 0, 'VADER')
----
Type: address
address
Final Type: address

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPairs
Finding type for vaderPairs...
IUniswapV2Pair[]
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPAIR')
----
Type: IUniswapV2Pair[]
IUniswapV2Pair[]
IUniswapV2Pair
Final Type: IUniswapV2Pair
 NO FIELDS

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 0, 'OWNER')
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: usdvPairs
Finding type for usdvPairs...
IERC20[]
Check copy_toekn_tuple
(-1, -1, 0, 'USDVPAIR')
----
Type: IERC20[]
IERC20[]
IERC20
Final Type: IERC20
 NO FIELDS

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: addUSDVPair
Function name: addUSDVPair
Function Visibility (test): external
foreignAsset
Finding type for foreignAsset...
IERC20
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IERC20
IERC20
Final Type: IERC20
 NO FIELDS

Name: foreignAsset Function: addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
oracle
Finding type for oracle...
IAggregatorV3
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: IAggregatorV3
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracle Function: addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
updatePeriod
Finding type for updatePeriod...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: updatePeriod Function: addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
previousPrices_29(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
typecheckig node...
previousPrices_29(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, Ownable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, Ownable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
REF_115(ILiquidityBasedTWAP.Paths) -> Paths.USDV
has variable
clearing ir...?
TMP_149 = CONVERT REF_115 to uint256
has variable
[i] TMP_149 cleared
clearing ir...?
REF_116(uint256) -> previousPrices_30[TMP_149]
has variable
clearing ir...?
TMP_150(bool) = REF_116 != 0
has variable
[i] TMP_150 cleared
clearing ir...?
TMP_151(None) = SOLIDITY_CALL require(bool,string)(TMP_150,LBTWAP::addUSDVPair: USDV Uninitialized)
typecheckig node...
REF_115(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: addUSDVPair
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_115

Name: Paths.USDV Function: addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_149 = CONVERT REF_115 to uint256
Function name: addUSDVPair

Name: Paths.USDV Function: addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_149 Function: addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_149

Name: TMP_149 Function: addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> previousPrices_30[TMP_149]
Function name: addUSDVPair
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
previousPrices
[i]Type for REF_116

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_116(uint256) -> previousPrices_30[TMP_149]
XXXXX
TMP_150(bool) = REF_116 != 0
Function name: addUSDVPair
[i]Type for TMP_150

Name: TMP_150 Function: addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_151(None) = SOLIDITY_CALL require(bool,string)(TMP_150,LBTWAP::addUSDVPair: USDV Uninitialized)
[i]Type for TMP_151

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, LiquidityBasedTWAP._addUSDVPair(IERC20,IAggregatorV3,uint256)(foreignAsset_1,oracle_1,updatePeriod_1)
typecheckig node...
INTERNAL_CALL, LiquidityBasedTWAP._addUSDVPair(IERC20,IAggregatorV3,uint256)(foreignAsset_1,oracle_1,updatePeriod_1)
Internal call...
_addUSDVPair
foreignAsset
oracle
updatePeriod
Function: _addUSDVPair
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: ASSET
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: ORACLE
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'ASSET', [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'ASSET', [], -1]
[[1], [-1], 0, 'ORACLE', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _addUSDVPair
Function Visibility: internal
clearning node...
clearing ir...?
foreignAsset_1(IERC20) := ϕ(['foreignAsset_1', 'foreignAsset_1'])
has variable
[i] foreignAsset cleared
clearing ir...?
oracle_1(IAggregatorV3) := ϕ(['oracle_1', 'oracle_1'])
has variable
[i] oracle cleared
clearing ir...?
updatePeriod_1(uint256) := ϕ(['updatePeriod_1', 'updatePeriod_1'])
has variable
[i] updatePeriod cleared
clearing ir...?
vaderPool_5(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_0', 'vaderPool_4', 'vaderPool_1'])
has variable
clearing ir...?
usdvPairs_6(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
has variable
clearing ir...?
maxUpdateWindow_14(uint256) := ϕ(['maxUpdateWindow_0', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_20(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_31(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
twapData_22(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
has variable
typecheckig node...
foreignAsset_1(IERC20) := ϕ(['foreignAsset_1', 'foreignAsset_1'])
Function name: _addUSDVPair
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := ϕ(['oracle_1', 'oracle_1'])
Function name: _addUSDVPair
Phi
[i]Type for oracle

Name: oracle Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
done.
updatePeriod_1(uint256) := ϕ(['updatePeriod_1', 'updatePeriod_1'])
Function name: _addUSDVPair
Phi
[i]Type for updatePeriod

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_5(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_0', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_6(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_14(uint256) := ϕ(['maxUpdateWindow_0', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_20(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_31(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_22(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_154(bool) = updatePeriod_1 != 0
has variable
[i] TMP_154 cleared
clearing ir...?
TMP_155(None) = SOLIDITY_CALL require(bool,string)(TMP_154,LBTWAP::addUSDVPair: Incorrect Update Period)
typecheckig node...
TMP_154(bool) = updatePeriod_1 != 0
Function name: _addUSDVPair
[i]Type for TMP_154

Name: TMP_154 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_155(None) = SOLIDITY_CALL require(bool,string)(TMP_154,LBTWAP::addUSDVPair: Incorrect Update Period)
[i]Type for TMP_155

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_156(uint8) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:decimals, arguments:[]  
has variable
[i] TMP_156 cleared
clearing ir...?
vaderPool_6(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_5', 'vaderPool_1'])
has variable
clearing ir...?
usdvPairs_7(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_6'])
has variable
clearing ir...?
maxUpdateWindow_15(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_14'])
has variable
clearing ir...?
totalLiquidityWeight_21(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_20', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_32(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_31', 'previousPrices_4'])
has variable
clearing ir...?
twapData_23(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_22', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_21', 'twapData_7'])
has variable
clearing ir...?
TMP_157(bool) = TMP_156 == 8
has variable
[i] TMP_157 cleared
clearing ir...?
TMP_158(None) = SOLIDITY_CALL require(bool,string)(TMP_157,LBTWAP::addUSDVPair: Non-USD Oracle)
typecheckig node...
TMP_156(uint8) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:decimals, arguments:[]  
Function name: _addUSDVPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_156
hlc contract name: ORACLE func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_156

Name: TMP_156 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_6(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_5', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_7(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_6'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_15(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_14'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_21(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_20', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_32(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_31', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_23(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_22', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_21', 'twapData_7'])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
TMP_157(bool) = TMP_156 == 8
Function name: _addUSDVPair
[i]Type for TMP_157

Name: TMP_157 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_158(None) = SOLIDITY_CALL require(bool,string)(TMP_157,LBTWAP::addUSDVPair: Non-USD Oracle)
[i]Type for TMP_158

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_159 = CONVERT foreignAsset_1 to address
has variable
[i] TMP_159 cleared
clearing ir...?
REF_118(IAggregatorV3) -> oracles_2[TMP_159]
has variable
clearing ir...?
oracles_3(mapping(address => IAggregatorV3)) := ϕ(['oracles_2'])
has variable
clearing ir...?
REF_118 (->oracles_3) := oracle_1(IAggregatorV3)
has variable
typecheckig node...
TMP_159 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_159 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_159

Name: TMP_159 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
REF_118(IAggregatorV3) -> oracles_2[TMP_159]
Function name: _addUSDVPair
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_118

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracles_3(mapping(address => IAggregatorV3)) := ϕ(['oracles_2'])
Function name: _addUSDVPair
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_118 (->oracles_3) := oracle_1(IAggregatorV3)
Function name: _addUSDVPair
asgn

Name: oracle Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef

Name: REF_118 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_118

Name: REF_118 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_160 = CONVERT foreignAsset_1 to address
has variable
[i] TMP_160 cleared
clearing ir...?
REF_119(ILiquidityBasedTWAP.ExchangePair) -> twapData_23[TMP_160]
has variable
clearing ir...?
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_119(ILiquidityBasedTWAP.ExchangePair)
has variable
[i] pairData cleared
typecheckig node...
TMP_160 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_160 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_160

Name: TMP_160 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
REF_119(ILiquidityBasedTWAP.ExchangePair) -> twapData_23[TMP_160]
Function name: _addUSDVPair
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_119

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_119(ILiquidityBasedTWAP.ExchangePair)
Function name: _addUSDVPair
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_120(uint96) -> pairData_1 (-> ['twapData']).foreignUnit
has variable
clearing ir...?
TMP_161 = CONVERT foreignAsset_1 to address
has variable
[i] TMP_161 cleared
clearing ir...?
TMP_162 = CONVERT TMP_161 to IERC20Metadata
has variable
[i] TMP_162 cleared
clearing ir...?
TMP_163(uint8) = HIGH_LEVEL_CALL, dest:TMP_162(IERC20Metadata), function:decimals, arguments:[]  
has variable
[i] TMP_163 cleared
clearing ir...?
vaderPool_7(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_6', 'vaderPool_4', 'vaderPool_1'])
has variable
clearing ir...?
usdvPairs_8(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_7'])
has variable
clearing ir...?
maxUpdateWindow_16(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_15'])
has variable
clearing ir...?
totalLiquidityWeight_22(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_21', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_33(uint256[2]) := ϕ(['previousPrices_32', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
TMP_164 = CONVERT TMP_163 to uint256
has variable
[i] TMP_164 cleared
clearing ir...?
TMP_165(uint256) = 10 (c)** TMP_164
has variable
[i] TMP_165 cleared
clearing ir...?
TMP_166 = CONVERT TMP_165 to uint96
has variable
[i] TMP_166 cleared
clearing ir...?
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_120 (->pairData_2 (-> ['twapData'])) := TMP_166(uint96)
has variable
clearing ir...?
twapData_24(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
has variable
typecheckig node...
REF_120(uint96) -> pairData_1 (-> ['twapData']).foreignUnit
Function name: _addUSDVPair
MEMBER
pairData
foreignUnit
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_120

Name: pairData.foreignUnit Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.foreignUnit Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_161 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_161 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_161

Name: TMP_161 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_162 = CONVERT TMP_161 to IERC20Metadata
Function name: _addUSDVPair

Name: TMP_161 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_162 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_162

Name: TMP_162 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_163(uint8) = HIGH_LEVEL_CALL, dest:TMP_162(IERC20Metadata), function:decimals, arguments:[]  
Function name: _addUSDVPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_163
hlc contract name: ASSET func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_163

Name: TMP_163 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_7(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_6', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_8(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_7'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_16(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_15'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_22(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_21', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_33(uint256[2]) := ϕ(['previousPrices_32', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_164 = CONVERT TMP_163 to uint256
Function name: _addUSDVPair

Name: TMP_163 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_164 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_164

Name: TMP_164 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_165(uint256) = 10 (c)** TMP_164
Function name: _addUSDVPair
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: TMP_164 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_165 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_165

Name: TMP_165 Function: _addUSDVPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_166 = CONVERT TMP_165 to uint96
Function name: _addUSDVPair

Name: TMP_165 Function: _addUSDVPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: TMP_166 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_166

Name: TMP_166 Function: _addUSDVPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_166 = CONVERT TMP_165 to uint96
XXXXX
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_120 (->pairData_2 (-> ['twapData'])) := TMP_166(uint96)
Function name: _addUSDVPair
asgn

Name: TMP_166 Function: _addUSDVPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_120

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_120 (->pairData_2 (-> ['twapData'])) := TMP_166(uint96)
XXXXX
twapData_24(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_122(uint256) -> pairData_2 (-> ['twapData']).updatePeriod
has variable
clearing ir...?
pairData_3 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_2 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_122 (->pairData_3 (-> ['twapData'])) := updatePeriod_1(uint256)
has variable
clearing ir...?
twapData_25(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_3 (-> ['twapData'])"])
has variable
typecheckig node...
REF_122(uint256) -> pairData_2 (-> ['twapData']).updatePeriod
Function name: _addUSDVPair
MEMBER
pairData
updatePeriod
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_122

Name: pairData.updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_3 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_122 (->pairData_3 (-> ['twapData'])) := updatePeriod_1(uint256)
Function name: _addUSDVPair
asgn

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_122

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
twapData_25(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_123(uint256) -> pairData_3 (-> ['twapData']).lastMeasurement
has variable
clearing ir...?
pairData_4 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_3 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_123 (->pairData_4 (-> ['twapData'])) := block.timestamp(uint256)
has variable
clearing ir...?
twapData_26(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_4 (-> ['twapData'])"])
has variable
typecheckig node...
REF_123(uint256) -> pairData_3 (-> ['twapData']).lastMeasurement
Function name: _addUSDVPair
MEMBER
pairData
lastMeasurement
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_123

Name: pairData.lastMeasurement Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_4 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_123 (->pairData_4 (-> ['twapData'])) := block.timestamp(uint256)
Function name: _addUSDVPair
asgn
block.timestamp

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_123

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_123 (->pairData_4 (-> ['twapData'])) := block.timestamp(uint256)
XXXXX
twapData_26(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_8(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_7(IVaderPoolV2), function:cumulativePrices, arguments:['foreignAsset_1']  
has variable
clearing ir...?
vaderPool_8(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_7', 'vaderPool_1'])
has variable
clearing ir...?
usdvPairs_9(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_8'])
has variable
clearing ir...?
maxUpdateWindow_17(uint256) := ϕ(['maxUpdateWindow_16', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_23(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_22', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_34(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_33', 'previousPrices_4'])
has variable
clearing ir...?
nativeTokenPriceCumulative_1(uint256)= UNPACK TUPLE_8 index: 0 
has variable
[i] nativeTokenPriceCumulative cleared
typecheckig node...
TUPLE_8(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_7(IVaderPoolV2), function:cumulativePrices, arguments:['foreignAsset_1']  
Function name: _addUSDVPair
High Call: cumulativePrices
func name:cumulativePrices
other func name:cumulativePrices
TUPLE_8
hlc contract name: VADERPOOL func_name: cumulativePrices
('c', [1], [-1], 0, None)
foreignAsset
('c', [-1], [-1], 'u', None)
foreignAsset
('c', [-1], [-1], 'u', None)
foreignAsset
wfc len: 3
COPIED
[i]Type for TUPLE_8

Name: TUPLE_8 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_8(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_7', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_9(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_8'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_17(uint256) := ϕ(['maxUpdateWindow_16', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_23(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_22', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_34(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_33', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeTokenPriceCumulative_1(uint256)= UNPACK TUPLE_8 index: 0 
Function name: _addUSDVPair
Reading tuple TUPLE_8 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for nativeTokenPriceCumulative

Name: nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_125(uint256) -> pairData_4 (-> ['twapData']).nativeTokenPriceCumulative
has variable
clearing ir...?
pairData_5 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_4 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_125 (->pairData_5 (-> ['twapData'])) := nativeTokenPriceCumulative_1(uint256)
has variable
clearing ir...?
twapData_27(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_5 (-> ['twapData'])"])
has variable
typecheckig node...
REF_125(uint256) -> pairData_4 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addUSDVPair
MEMBER
pairData
nativeTokenPriceCumulative
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_125

Name: pairData.nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
pairData_5 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_125 (->pairData_5 (-> ['twapData'])) := nativeTokenPriceCumulative_1(uint256)
Function name: _addUSDVPair
asgn

Name: nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_125 Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[W] Initializing defined variable to constant
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_125

Name: REF_125 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_125 Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_27(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_9(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_8(IVaderPoolV2), function:getReserves, arguments:['foreignAsset_1']  
has variable
clearing ir...?
vaderPool_9(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_8', 'vaderPool_4', 'vaderPool_1'])
has variable
clearing ir...?
usdvPairs_10(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_9', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3'])
has variable
clearing ir...?
maxUpdateWindow_18(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_17'])
has variable
clearing ir...?
totalLiquidityWeight_24(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_23', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_35(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_34'])
has variable
clearing ir...?
reserveNative_1(uint256)= UNPACK TUPLE_9 index: 0 
has variable
[i] reserveNative cleared
clearing ir...?
reserveForeign_1(uint256)= UNPACK TUPLE_9 index: 1 
has variable
[i] reserveForeign cleared
typecheckig node...
TUPLE_9(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_8(IVaderPoolV2), function:getReserves, arguments:['foreignAsset_1']  
Function name: _addUSDVPair
High Call: getReserves
func name:getReserves
other func name:getReserves
TUPLE_9
hlc contract name: VADERPOOL func_name: getReserves
('c', [1], [-1], 0, None)
foreignAsset
('c', [2], [-1], 0, None)
foreignAsset
wfc len: 2
COPIED
[i]Type for TUPLE_9

Name: TUPLE_9 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_9(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_8', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_10(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_9', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_18(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_17'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_24(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_23', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_35(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_34'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserveNative_1(uint256)= UNPACK TUPLE_9 index: 0 
Function name: _addUSDVPair
Reading tuple TUPLE_9 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserveNative

Name: reserveNative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_1(uint256)= UNPACK TUPLE_9 index: 1 
Function name: _addUSDVPair
Reading tuple TUPLE_9 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserveForeign

Name: reserveForeign Function: _addUSDVPair
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_127(ILiquidityBasedTWAP.Paths) -> Paths.USDV
has variable
clearing ir...?
TMP_167 = CONVERT REF_127 to uint256
has variable
[i] TMP_167 cleared
clearing ir...?
REF_128(uint256) -> previousPrices_35[TMP_167]
has variable
clearing ir...?
TMP_168(uint256) = reserveNative_1 (c)* REF_128
has variable
[i] TMP_168 cleared
clearing ir...?
TMP_169 = CONVERT foreignAsset_1 to address
has variable
[i] TMP_169 cleared
clearing ir...?
TMP_170(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(TMP_169)
has variable
[i] TMP_170 cleared
clearing ir...?
TMP_171(uint256) = reserveForeign_1 (c)* TMP_170
has variable
[i] TMP_171 cleared
clearing ir...?
TMP_172(uint256) = TMP_168 (c)+ TMP_171
has variable
[i] TMP_172 cleared
clearing ir...?
pairLiquidityEvaluation_1(uint256) := TMP_172(uint256)
has variable
[i] pairLiquidityEvaluation cleared
typecheckig node...
REF_127(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: _addUSDVPair
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_127

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_167 = CONVERT REF_127 to uint256
Function name: _addUSDVPair

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_167 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_167

Name: TMP_167 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_128(uint256) -> previousPrices_35[TMP_167]
Function name: _addUSDVPair
INDEX

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_128

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_168(uint256) = reserveNative_1 (c)* REF_128
Function name: _addUSDVPair
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_60 Function: None
Num: 1, 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_168 Function: _addUSDVPair
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_168

Name: TMP_168 Function: _addUSDVPair
Num: 1, 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_169 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_169 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_169

Name: TMP_169 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_170(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(TMP_169)
Function name: _addUSDVPair
Internal call...
getChainlinkPrice
TMP_169
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: ASSET
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
added
xyz
Function name: getChainlinkPrice
Function Visibility: public
clearning node...
clearing ir...?
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
has variable
[i] asset cleared
clearing ir...?
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
has variable
typecheckig node...
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
Function name: getChainlinkPrice
Phi
[i]Type for asset

Name: asset Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: ASSET
Fields: 
Finance Type: undef
done.
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
Function name: getChainlinkPrice
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_14(IAggregatorV3) -> oracles_1[asset_1]
has variable
clearing ir...?
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
has variable
[i] oracle cleared
typecheckig node...
REF_14(IAggregatorV3) -> oracles_1[asset_1]
Function name: getChainlinkPrice
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_14

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
Function name: getChainlinkPrice
asgn

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: oracle Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for oracle

Name: oracle Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
has variable
clearing ir...?
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
has variable
[i] roundID cleared
clearing ir...?
price_1(int256)= UNPACK TUPLE_0 index: 1 
has variable
[i] price cleared
clearing ir...?
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
has variable
[i] answeredInRound cleared
typecheckig node...
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
Function name: getChainlinkPrice
High Call: latestRoundData
func name:latestRoundData
other func name:latestRoundData
TUPLE_0
hlc contract name: ORACLE func_name: latestRoundData
('c', [-1], [-1], 0, None)
('c', [2], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
wfc len: 5
COPIED
[i]Type for TUPLE_0

Name: TUPLE_0 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for roundID

Name: roundID Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
price_1(int256)= UNPACK TUPLE_0 index: 1 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: int256
int256
Final Type: int256
[i]Type for price

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 4
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for answeredInRound

Name: answeredInRound Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_30(bool) = answeredInRound_1 >= roundID_1
has variable
[i] TMP_30 cleared
clearing ir...?
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
typecheckig node...
TMP_30(bool) = answeredInRound_1 >= roundID_1
Function name: getChainlinkPrice
testing gt...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_30

Name: TMP_30 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_32(bool) = price_1 > 0
has variable
[i] TMP_32 cleared
clearing ir...?
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
typecheckig node...
TMP_32(bool) = price_1 > 0
Function name: getChainlinkPrice
testing gt...
val: 0
val: 0
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_32

Name: TMP_32 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_34 = CONVERT price_1 to uint256
has variable
[i] TMP_34 cleared
clearing ir...?
RETURN TMP_34
typecheckig node...
TMP_34 = CONVERT price_1 to uint256
Function name: getChainlinkPrice

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_34 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_34

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_34
RETURN

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "getChainlinkPrice":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: getChainlinkPrice

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_170

Name: TMP_170 Function: _addUSDVPair
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_171(uint256) = reserveForeign_1 (c)* TMP_170
Function name: _addUSDVPair
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_62 Function: None
Num: 2, 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_171 Function: _addUSDVPair
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_171

Name: TMP_171 Function: _addUSDVPair
Num: 2, 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_172(uint256) = TMP_168 (c)+ TMP_171
Function name: _addUSDVPair

Name: TMP_172 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_172

Name: TMP_172 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairLiquidityEvaluation_1(uint256) := TMP_172(uint256)
Function name: _addUSDVPair
asgn

Name: TMP_172 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairLiquidityEvaluation

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pairLiquidityEvaluation_1(uint256) := TMP_172(uint256)
XXXXX
clearning node...
clearing ir...?
REF_129(uint256) -> pairData_5 (-> ['twapData']).pastLiquidityEvaluation
has variable
clearing ir...?
pairData_6 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_129 (->pairData_6 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
has variable
clearing ir...?
twapData_28(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_6 (-> ['twapData'])"])
has variable
typecheckig node...
REF_129(uint256) -> pairData_5 (-> ['twapData']).pastLiquidityEvaluation
Function name: _addUSDVPair
MEMBER
pairData
pastLiquidityEvaluation
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_129

Name: pairData.pastLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_6 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_129 (->pairData_6 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
Function name: _addUSDVPair
asgn

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_129

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_129 (->pairData_6 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
XXXXX
twapData_28(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_6 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_130(ILiquidityBasedTWAP.Paths) -> Paths.USDV
has variable
clearing ir...?
TMP_173 = CONVERT REF_130 to uint256
has variable
[i] TMP_173 cleared
clearing ir...?
REF_131(uint256) -> totalLiquidityWeight_25[TMP_173]
has variable
clearing ir...?
totalLiquidityWeight_26(uint256[2]) := ϕ(['totalLiquidityWeight_25'])
has variable
clearing ir...?
REF_131(-> totalLiquidityWeight_26) = REF_131 (c)+ pairLiquidityEvaluation_1
has variable
typecheckig node...
REF_130(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: _addUSDVPair
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_130

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_173 = CONVERT REF_130 to uint256
Function name: _addUSDVPair

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_173 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_173

Name: TMP_173 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_131(uint256) -> totalLiquidityWeight_25[TMP_173]
Function name: _addUSDVPair
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalLiquidityWeight
[i]Type for REF_131

Name: None Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_131(uint256) -> totalLiquidityWeight_25[TMP_173]
XXXXX
totalLiquidityWeight_26(uint256[2]) := ϕ(['totalLiquidityWeight_25'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_131(-> totalLiquidityWeight_26) = REF_131 (c)+ pairLiquidityEvaluation_1
Function name: _addUSDVPair

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_131

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_131(-> totalLiquidityWeight_26) = REF_131 (c)+ pairLiquidityEvaluation_1
XXXXX
clearning node...
clearing ir...?
REF_133 -> LENGTH usdvPairs_11
clearing ir...?
TMP_175(uint256) := REF_133(uint256)
has variable
[i] TMP_175 cleared
clearing ir...?
TMP_176(uint256) = TMP_175 (c)+ 1
has variable
[i] TMP_176 cleared
clearing ir...?
usdvPairs_12(IERC20[]) := ϕ(['usdvPairs_11'])
has variable
clearing ir...?
REF_133 (->usdvPairs_12) := TMP_176(uint256)
has variable
clearing ir...?
REF_134(IERC20) -> usdvPairs_12[TMP_175]
has variable
clearing ir...?
usdvPairs_13(IERC20[]) := ϕ(['usdvPairs_12'])
has variable
clearing ir...?
REF_134 (->usdvPairs_13) := foreignAsset_1(IERC20)
has variable
typecheckig node...
REF_133 -> LENGTH usdvPairs_11
[i]Type for REF_133

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_175(uint256) := REF_133(uint256)
Function name: _addUSDVPair
asgn

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_175 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_175

Name: TMP_175 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_176(uint256) = TMP_175 (c)+ 1
Function name: _addUSDVPair
val: 1

Name: TMP_176 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_176 Function: _addUSDVPair
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_176

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
usdvPairs_12(IERC20[]) := ϕ(['usdvPairs_11'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_133 (->usdvPairs_12) := TMP_176(uint256)
Function name: _addUSDVPair
asgn

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_133

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_134(IERC20) -> usdvPairs_12[TMP_175]
Function name: _addUSDVPair
INDEX

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_134

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
usdvPairs_13(IERC20[]) := ϕ(['usdvPairs_12'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_134 (->usdvPairs_13) := foreignAsset_1(IERC20)
Function name: _addUSDVPair
asgn

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: REF_134 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_134

Name: REF_134 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_177(bool) = maxUpdateWindow_19 < updatePeriod_1
has variable
[i] TMP_177 cleared
clearing ir...?
CONDITION TMP_177
typecheckig node...
TMP_177(bool) = maxUpdateWindow_19 < updatePeriod_1
Function name: _addUSDVPair
testing lt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_177

Name: TMP_177 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_177
Condition...
Conidtion: 
TMP_177
TMP_177
clearning node...
clearing ir...?
maxUpdateWindow_20(uint256) := updatePeriod_1(uint256)
has variable
typecheckig node...
maxUpdateWindow_20(uint256) := updatePeriod_1(uint256)
Function name: _addUSDVPair
asgn

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxUpdateWindow Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "_addUSDVPair":
 New undefined nodes- 5
 Old undefined nodes- 0
typecheckig node...
foreignAsset_1(IERC20) := ϕ(['foreignAsset_1', 'foreignAsset_1'])
Function name: _addUSDVPair
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := ϕ(['oracle_1', 'oracle_1'])
Function name: _addUSDVPair
Phi
[i]Type for oracle

Name: oracle Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
done.
updatePeriod_1(uint256) := ϕ(['updatePeriod_1', 'updatePeriod_1'])
Function name: _addUSDVPair
Phi
[i]Type for updatePeriod

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_5(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_0', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_6(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_14(uint256) := ϕ(['maxUpdateWindow_0', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_20(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_31(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_22(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
TMP_154(bool) = updatePeriod_1 != 0
Function name: _addUSDVPair
[i]Type for TMP_154

Name: TMP_154 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_155(None) = SOLIDITY_CALL require(bool,string)(TMP_154,LBTWAP::addUSDVPair: Incorrect Update Period)
[i]Type for TMP_155

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_156(uint8) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:decimals, arguments:[]  
Function name: _addUSDVPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_156
hlc contract name: ORACLE func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_156

Name: TMP_156 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_6(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_5', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_7(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_6'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_15(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_14'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_21(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_20', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_32(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_31', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_23(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_22', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_21', 'twapData_7'])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
TMP_157(bool) = TMP_156 == 8
Function name: _addUSDVPair
[i]Type for TMP_157

Name: TMP_157 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_158(None) = SOLIDITY_CALL require(bool,string)(TMP_157,LBTWAP::addUSDVPair: Non-USD Oracle)
[i]Type for TMP_158

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_159 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_159 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_159

Name: TMP_159 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
REF_118(IAggregatorV3) -> oracles_2[TMP_159]
Function name: _addUSDVPair
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_118

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracles_3(mapping(address => IAggregatorV3)) := ϕ(['oracles_2'])
Function name: _addUSDVPair
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_118 (->oracles_3) := oracle_1(IAggregatorV3)
Function name: _addUSDVPair
asgn

Name: oracle Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef

Name: REF_118 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_118

Name: REF_118 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_160 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_160 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_160

Name: TMP_160 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
REF_119(ILiquidityBasedTWAP.ExchangePair) -> twapData_23[TMP_160]
Function name: _addUSDVPair
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_119

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_119(ILiquidityBasedTWAP.ExchangePair)
Function name: _addUSDVPair
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_120(uint96) -> pairData_1 (-> ['twapData']).foreignUnit
Function name: _addUSDVPair
MEMBER
pairData
foreignUnit
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_120

Name: pairData.foreignUnit Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.foreignUnit Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_161 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_161 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_161

Name: TMP_161 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_162 = CONVERT TMP_161 to IERC20Metadata
Function name: _addUSDVPair

Name: TMP_161 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_162 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_162

Name: TMP_162 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_163(uint8) = HIGH_LEVEL_CALL, dest:TMP_162(IERC20Metadata), function:decimals, arguments:[]  
Function name: _addUSDVPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_163
hlc contract name: ASSET func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_163

Name: TMP_163 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_7(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_6', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_8(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_7'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_16(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_15'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_22(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_21', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_33(uint256[2]) := ϕ(['previousPrices_32', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_164 = CONVERT TMP_163 to uint256
Function name: _addUSDVPair

Name: TMP_163 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_164 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_164

Name: TMP_164 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_165(uint256) = 10 (c)** TMP_164
Function name: _addUSDVPair
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: TMP_164 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_165 Function: _addUSDVPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_165

Name: TMP_165 Function: _addUSDVPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_166 = CONVERT TMP_165 to uint96
Function name: _addUSDVPair

Name: TMP_165 Function: _addUSDVPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: TMP_166 Function: _addUSDVPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_166

Name: TMP_166 Function: _addUSDVPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_166 = CONVERT TMP_165 to uint96
XXXXX
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_120 (->pairData_2 (-> ['twapData'])) := TMP_166(uint96)
Function name: _addUSDVPair
asgn

Name: TMP_166 Function: _addUSDVPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_120

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_120 (->pairData_2 (-> ['twapData'])) := TMP_166(uint96)
XXXXX
twapData_24(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_122(uint256) -> pairData_2 (-> ['twapData']).updatePeriod
Function name: _addUSDVPair
MEMBER
pairData
updatePeriod
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_122

Name: pairData.updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_3 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_122 (->pairData_3 (-> ['twapData'])) := updatePeriod_1(uint256)
Function name: _addUSDVPair
asgn

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_122

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
twapData_25(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_123(uint256) -> pairData_3 (-> ['twapData']).lastMeasurement
Function name: _addUSDVPair
MEMBER
pairData
lastMeasurement
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_123

Name: pairData.lastMeasurement Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_4 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_123 (->pairData_4 (-> ['twapData'])) := block.timestamp(uint256)
Function name: _addUSDVPair
asgn
block.timestamp

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_123

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_123 (->pairData_4 (-> ['twapData'])) := block.timestamp(uint256)
XXXXX
twapData_26(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TUPLE_8(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_7(IVaderPoolV2), function:cumulativePrices, arguments:['foreignAsset_1']  
Function name: _addUSDVPair
High Call: cumulativePrices
func name:cumulativePrices
other func name:cumulativePrices
TUPLE_8
hlc contract name: VADERPOOL func_name: cumulativePrices
('c', [1], [-1], 0, None)
foreignAsset
('c', [-1], [-1], 'u', None)
foreignAsset
('c', [-1], [-1], 'u', None)
foreignAsset
wfc len: 3
COPIED
[i]Type for TUPLE_8

Name: TUPLE_8 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_8(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_7', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_9(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_8'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_17(uint256) := ϕ(['maxUpdateWindow_16', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_23(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_22', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_34(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_33', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeTokenPriceCumulative_1(uint256)= UNPACK TUPLE_8 index: 0 
Function name: _addUSDVPair
Reading tuple TUPLE_8 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for nativeTokenPriceCumulative

Name: nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_125(uint256) -> pairData_4 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addUSDVPair
MEMBER
pairData
nativeTokenPriceCumulative
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_125

Name: pairData.nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
pairData_5 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_125 (->pairData_5 (-> ['twapData'])) := nativeTokenPriceCumulative_1(uint256)
Function name: _addUSDVPair
asgn

Name: nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_125 Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[W] Initializing defined variable to constant
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_125

Name: REF_125 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_125 Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_27(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
TUPLE_9(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_8(IVaderPoolV2), function:getReserves, arguments:['foreignAsset_1']  
Function name: _addUSDVPair
High Call: getReserves
func name:getReserves
other func name:getReserves
TUPLE_9
hlc contract name: VADERPOOL func_name: getReserves
('c', [1], [-1], 0, None)
foreignAsset
('c', [2], [-1], 0, None)
foreignAsset
wfc len: 2
COPIED
[i]Type for TUPLE_9

Name: TUPLE_9 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_9(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_8', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_10(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_9', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_18(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_17'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_24(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_23', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_35(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_34'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserveNative_1(uint256)= UNPACK TUPLE_9 index: 0 
Function name: _addUSDVPair
Reading tuple TUPLE_9 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserveNative

Name: reserveNative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_1(uint256)= UNPACK TUPLE_9 index: 1 
Function name: _addUSDVPair
Reading tuple TUPLE_9 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserveForeign

Name: reserveForeign Function: _addUSDVPair
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_127(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: _addUSDVPair
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_127

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_167 = CONVERT REF_127 to uint256
Function name: _addUSDVPair

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_167 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_167

Name: TMP_167 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_128(uint256) -> previousPrices_35[TMP_167]
Function name: _addUSDVPair
INDEX

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_128

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_168(uint256) = reserveNative_1 (c)* REF_128
Function name: _addUSDVPair
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_63 Function: None
Num: 1, 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_168 Function: _addUSDVPair
Num: 1, 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_168

Name: TMP_168 Function: _addUSDVPair
Num: 1, 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_169 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_169 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_169

Name: TMP_169 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_170(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(TMP_169)
Function name: _addUSDVPair
Internal call...
getChainlinkPrice
TMP_169
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: ASSET
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
added
xyz
Function name: getChainlinkPrice
Function Visibility: public
clearning node...
clearing ir...?
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
has variable
[i] asset cleared
clearing ir...?
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
has variable
typecheckig node...
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
Function name: getChainlinkPrice
Phi
[i]Type for asset

Name: asset Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: ASSET
Fields: 
Finance Type: undef
done.
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
Function name: getChainlinkPrice
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_14(IAggregatorV3) -> oracles_1[asset_1]
has variable
clearing ir...?
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
has variable
[i] oracle cleared
typecheckig node...
REF_14(IAggregatorV3) -> oracles_1[asset_1]
Function name: getChainlinkPrice
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_14

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
Function name: getChainlinkPrice
asgn

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: oracle Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for oracle

Name: oracle Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
has variable
clearing ir...?
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
has variable
[i] roundID cleared
clearing ir...?
price_1(int256)= UNPACK TUPLE_0 index: 1 
has variable
[i] price cleared
clearing ir...?
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
has variable
[i] answeredInRound cleared
typecheckig node...
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
Function name: getChainlinkPrice
High Call: latestRoundData
func name:latestRoundData
other func name:latestRoundData
TUPLE_0
hlc contract name: ORACLE func_name: latestRoundData
('c', [-1], [-1], 0, None)
('c', [2], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
wfc len: 5
COPIED
[i]Type for TUPLE_0

Name: TUPLE_0 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for roundID

Name: roundID Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
price_1(int256)= UNPACK TUPLE_0 index: 1 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: int256
int256
Final Type: int256
[i]Type for price

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 4
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for answeredInRound

Name: answeredInRound Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_30(bool) = answeredInRound_1 >= roundID_1
has variable
[i] TMP_30 cleared
clearing ir...?
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
typecheckig node...
TMP_30(bool) = answeredInRound_1 >= roundID_1
Function name: getChainlinkPrice
testing gt...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_30

Name: TMP_30 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_32(bool) = price_1 > 0
has variable
[i] TMP_32 cleared
clearing ir...?
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
typecheckig node...
TMP_32(bool) = price_1 > 0
Function name: getChainlinkPrice
testing gt...
val: 0
val: 0
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_32

Name: TMP_32 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_34 = CONVERT price_1 to uint256
has variable
[i] TMP_34 cleared
clearing ir...?
RETURN TMP_34
typecheckig node...
TMP_34 = CONVERT price_1 to uint256
Function name: getChainlinkPrice

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_34 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_34

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_34
RETURN

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "getChainlinkPrice":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: getChainlinkPrice

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_170

Name: TMP_170 Function: _addUSDVPair
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_171(uint256) = reserveForeign_1 (c)* TMP_170
Function name: _addUSDVPair
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_65 Function: None
Num: 2, 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_171 Function: _addUSDVPair
Num: 2, 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_171

Name: TMP_171 Function: _addUSDVPair
Num: 2, 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_172(uint256) = TMP_168 (c)+ TMP_171
Function name: _addUSDVPair

Name: TMP_172 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_172

Name: TMP_172 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairLiquidityEvaluation_1(uint256) := TMP_172(uint256)
Function name: _addUSDVPair
asgn

Name: TMP_172 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairLiquidityEvaluation

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pairLiquidityEvaluation_1(uint256) := TMP_172(uint256)
XXXXX
typecheckig node...
REF_129(uint256) -> pairData_5 (-> ['twapData']).pastLiquidityEvaluation
Function name: _addUSDVPair
MEMBER
pairData
pastLiquidityEvaluation
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_129

Name: pairData.pastLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_6 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_129 (->pairData_6 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
Function name: _addUSDVPair
asgn

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_129

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_129 (->pairData_6 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
XXXXX
twapData_28(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_6 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_130(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: _addUSDVPair
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_130

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_173 = CONVERT REF_130 to uint256
Function name: _addUSDVPair

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_173 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_173

Name: TMP_173 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_131(uint256) -> totalLiquidityWeight_25[TMP_173]
Function name: _addUSDVPair
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalLiquidityWeight
[i]Type for REF_131

Name: None Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_131(uint256) -> totalLiquidityWeight_25[TMP_173]
XXXXX
totalLiquidityWeight_26(uint256[2]) := ϕ(['totalLiquidityWeight_25'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_131(-> totalLiquidityWeight_26) = REF_131 (c)+ pairLiquidityEvaluation_1
Function name: _addUSDVPair

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_131

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_131(-> totalLiquidityWeight_26) = REF_131 (c)+ pairLiquidityEvaluation_1
XXXXX
typecheckig node...
REF_133 -> LENGTH usdvPairs_11
[i]Type for REF_133

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_175(uint256) := REF_133(uint256)
Function name: _addUSDVPair
asgn

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_175 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_175

Name: TMP_175 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_176(uint256) = TMP_175 (c)+ 1
Function name: _addUSDVPair
val: 1

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_176

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
usdvPairs_12(IERC20[]) := ϕ(['usdvPairs_11'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_133 (->usdvPairs_12) := TMP_176(uint256)
Function name: _addUSDVPair
asgn

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_133

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_134(IERC20) -> usdvPairs_12[TMP_175]
Function name: _addUSDVPair
INDEX

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_134

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
usdvPairs_13(IERC20[]) := ϕ(['usdvPairs_12'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_134 (->usdvPairs_13) := foreignAsset_1(IERC20)
Function name: _addUSDVPair
asgn

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: REF_134 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_134

Name: REF_134 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_177(bool) = maxUpdateWindow_19 < updatePeriod_1
Function name: _addUSDVPair
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_177

Name: TMP_177 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_177
Condition...
Conidtion: 
TMP_177
TMP_177
typecheckig node...
maxUpdateWindow_20(uint256) := updatePeriod_1(uint256)
Function name: _addUSDVPair
asgn

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxUpdateWindow Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
WORKLIST iteration 1 for function call "_addUSDVPair":
 New undefined nodes- 5
 Old undefined nodes- 5
Saving return values for: _addUSDVPair
done.
This IR caused addback:
INTERNAL_CALL, LiquidityBasedTWAP._addUSDVPair(IERC20,IAggregatorV3,uint256)(foreignAsset_1,oracle_1,updatePeriod_1)
XXXXX
WORKLIST iteration 0 for function call "addUSDVPair":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
previousPrices_29(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, Ownable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
typecheckig node...
REF_115(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: addUSDVPair
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_115

Name: Paths.USDV Function: addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_149 = CONVERT REF_115 to uint256
Function name: addUSDVPair

Name: Paths.USDV Function: addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_149 Function: addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_149

Name: TMP_149 Function: addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_116(uint256) -> previousPrices_30[TMP_149]
Function name: addUSDVPair
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
previousPrices
[i]Type for REF_116

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_116(uint256) -> previousPrices_30[TMP_149]
XXXXX
TMP_150(bool) = REF_116 != 0
Function name: addUSDVPair
[i]Type for TMP_150

Name: TMP_150 Function: addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_151(None) = SOLIDITY_CALL require(bool,string)(TMP_150,LBTWAP::addUSDVPair: USDV Uninitialized)
[i]Type for TMP_151

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, LiquidityBasedTWAP._addUSDVPair(IERC20,IAggregatorV3,uint256)(foreignAsset_1,oracle_1,updatePeriod_1)
Internal call...
_addUSDVPair
foreignAsset
oracle
updatePeriod
Function: _addUSDVPair
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: ASSET
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: ORACLE
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'ASSET', [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'ASSET', [], -1]
[[1], [-1], 0, 'ORACLE', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _addUSDVPair
Function Visibility: internal
clearning node...
clearing ir...?
foreignAsset_1(IERC20) := ϕ(['foreignAsset_1', 'foreignAsset_1'])
has variable
[i] foreignAsset cleared
clearing ir...?
oracle_1(IAggregatorV3) := ϕ(['oracle_1', 'oracle_1'])
has variable
[i] oracle cleared
clearing ir...?
updatePeriod_1(uint256) := ϕ(['updatePeriod_1', 'updatePeriod_1'])
has variable
[i] updatePeriod cleared
clearing ir...?
vaderPool_5(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_0', 'vaderPool_4', 'vaderPool_1'])
has variable
clearing ir...?
usdvPairs_6(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
has variable
clearing ir...?
maxUpdateWindow_14(uint256) := ϕ(['maxUpdateWindow_0', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_20(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_31(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
twapData_22(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
has variable
typecheckig node...
foreignAsset_1(IERC20) := ϕ(['foreignAsset_1', 'foreignAsset_1'])
Function name: _addUSDVPair
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := ϕ(['oracle_1', 'oracle_1'])
Function name: _addUSDVPair
Phi
[i]Type for oracle

Name: oracle Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
done.
updatePeriod_1(uint256) := ϕ(['updatePeriod_1', 'updatePeriod_1'])
Function name: _addUSDVPair
Phi
[i]Type for updatePeriod

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_5(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_0', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_6(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_14(uint256) := ϕ(['maxUpdateWindow_0', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_20(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_31(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_22(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_154(bool) = updatePeriod_1 != 0
has variable
[i] TMP_154 cleared
clearing ir...?
TMP_155(None) = SOLIDITY_CALL require(bool,string)(TMP_154,LBTWAP::addUSDVPair: Incorrect Update Period)
typecheckig node...
TMP_154(bool) = updatePeriod_1 != 0
Function name: _addUSDVPair
[i]Type for TMP_154

Name: TMP_154 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_155(None) = SOLIDITY_CALL require(bool,string)(TMP_154,LBTWAP::addUSDVPair: Incorrect Update Period)
[i]Type for TMP_155

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_156(uint8) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:decimals, arguments:[]  
has variable
[i] TMP_156 cleared
clearing ir...?
vaderPool_6(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_5', 'vaderPool_1'])
has variable
clearing ir...?
usdvPairs_7(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_6'])
has variable
clearing ir...?
maxUpdateWindow_15(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_14'])
has variable
clearing ir...?
totalLiquidityWeight_21(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_20', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_32(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_31', 'previousPrices_4'])
has variable
clearing ir...?
twapData_23(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_22', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_21', 'twapData_7'])
has variable
clearing ir...?
TMP_157(bool) = TMP_156 == 8
has variable
[i] TMP_157 cleared
clearing ir...?
TMP_158(None) = SOLIDITY_CALL require(bool,string)(TMP_157,LBTWAP::addUSDVPair: Non-USD Oracle)
typecheckig node...
TMP_156(uint8) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:decimals, arguments:[]  
Function name: _addUSDVPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_156
hlc contract name: ORACLE func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_156

Name: TMP_156 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_6(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_5', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_7(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_6'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_15(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_14'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_21(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_20', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_32(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_31', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_23(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_22', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_21', 'twapData_7'])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
TMP_157(bool) = TMP_156 == 8
Function name: _addUSDVPair
[i]Type for TMP_157

Name: TMP_157 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_158(None) = SOLIDITY_CALL require(bool,string)(TMP_157,LBTWAP::addUSDVPair: Non-USD Oracle)
[i]Type for TMP_158

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_159 = CONVERT foreignAsset_1 to address
has variable
[i] TMP_159 cleared
clearing ir...?
REF_118(IAggregatorV3) -> oracles_2[TMP_159]
has variable
clearing ir...?
oracles_3(mapping(address => IAggregatorV3)) := ϕ(['oracles_2'])
has variable
clearing ir...?
REF_118 (->oracles_3) := oracle_1(IAggregatorV3)
has variable
typecheckig node...
TMP_159 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_159 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_159

Name: TMP_159 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
REF_118(IAggregatorV3) -> oracles_2[TMP_159]
Function name: _addUSDVPair
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_118

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracles_3(mapping(address => IAggregatorV3)) := ϕ(['oracles_2'])
Function name: _addUSDVPair
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_118 (->oracles_3) := oracle_1(IAggregatorV3)
Function name: _addUSDVPair
asgn

Name: oracle Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef

Name: REF_118 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_118

Name: REF_118 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_160 = CONVERT foreignAsset_1 to address
has variable
[i] TMP_160 cleared
clearing ir...?
REF_119(ILiquidityBasedTWAP.ExchangePair) -> twapData_23[TMP_160]
has variable
clearing ir...?
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_119(ILiquidityBasedTWAP.ExchangePair)
has variable
[i] pairData cleared
typecheckig node...
TMP_160 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_160 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_160

Name: TMP_160 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
REF_119(ILiquidityBasedTWAP.ExchangePair) -> twapData_23[TMP_160]
Function name: _addUSDVPair
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_119

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_119(ILiquidityBasedTWAP.ExchangePair)
Function name: _addUSDVPair
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_120(uint96) -> pairData_1 (-> ['twapData']).foreignUnit
has variable
clearing ir...?
TMP_161 = CONVERT foreignAsset_1 to address
has variable
[i] TMP_161 cleared
clearing ir...?
TMP_162 = CONVERT TMP_161 to IERC20Metadata
has variable
[i] TMP_162 cleared
clearing ir...?
TMP_163(uint8) = HIGH_LEVEL_CALL, dest:TMP_162(IERC20Metadata), function:decimals, arguments:[]  
has variable
[i] TMP_163 cleared
clearing ir...?
vaderPool_7(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_6', 'vaderPool_4', 'vaderPool_1'])
has variable
clearing ir...?
usdvPairs_8(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_7'])
has variable
clearing ir...?
maxUpdateWindow_16(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_15'])
has variable
clearing ir...?
totalLiquidityWeight_22(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_21', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_33(uint256[2]) := ϕ(['previousPrices_32', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
has variable
clearing ir...?
TMP_164 = CONVERT TMP_163 to uint256
has variable
[i] TMP_164 cleared
clearing ir...?
TMP_165(uint256) = 10 (c)** TMP_164
has variable
[i] TMP_165 cleared
clearing ir...?
TMP_166 = CONVERT TMP_165 to uint96
has variable
[i] TMP_166 cleared
clearing ir...?
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_120 (->pairData_2 (-> ['twapData'])) := TMP_166(uint96)
has variable
clearing ir...?
twapData_24(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
has variable
typecheckig node...
REF_120(uint96) -> pairData_1 (-> ['twapData']).foreignUnit
Function name: _addUSDVPair
MEMBER
pairData
foreignUnit
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_120

Name: pairData.foreignUnit Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.foreignUnit Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_161 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_161 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_161

Name: TMP_161 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_162 = CONVERT TMP_161 to IERC20Metadata
Function name: _addUSDVPair

Name: TMP_161 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_162 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_162

Name: TMP_162 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_163(uint8) = HIGH_LEVEL_CALL, dest:TMP_162(IERC20Metadata), function:decimals, arguments:[]  
Function name: _addUSDVPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_163
hlc contract name: ASSET func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_163

Name: TMP_163 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_7(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_6', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_8(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_7'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_16(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_15'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_22(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_21', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_33(uint256[2]) := ϕ(['previousPrices_32', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_164 = CONVERT TMP_163 to uint256
Function name: _addUSDVPair

Name: TMP_163 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_164 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_164

Name: TMP_164 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_165(uint256) = 10 (c)** TMP_164
Function name: _addUSDVPair
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: TMP_164 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_165 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_165

Name: TMP_165 Function: _addUSDVPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_166 = CONVERT TMP_165 to uint96
Function name: _addUSDVPair

Name: TMP_165 Function: _addUSDVPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: TMP_166 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_166

Name: TMP_166 Function: _addUSDVPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_166 = CONVERT TMP_165 to uint96
XXXXX
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_120 (->pairData_2 (-> ['twapData'])) := TMP_166(uint96)
Function name: _addUSDVPair
asgn

Name: TMP_166 Function: _addUSDVPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_120

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_120 (->pairData_2 (-> ['twapData'])) := TMP_166(uint96)
XXXXX
twapData_24(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_122(uint256) -> pairData_2 (-> ['twapData']).updatePeriod
has variable
clearing ir...?
pairData_3 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_2 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_122 (->pairData_3 (-> ['twapData'])) := updatePeriod_1(uint256)
has variable
clearing ir...?
twapData_25(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_3 (-> ['twapData'])"])
has variable
typecheckig node...
REF_122(uint256) -> pairData_2 (-> ['twapData']).updatePeriod
Function name: _addUSDVPair
MEMBER
pairData
updatePeriod
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_122

Name: pairData.updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_3 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_122 (->pairData_3 (-> ['twapData'])) := updatePeriod_1(uint256)
Function name: _addUSDVPair
asgn

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_122

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
twapData_25(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_123(uint256) -> pairData_3 (-> ['twapData']).lastMeasurement
has variable
clearing ir...?
pairData_4 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_3 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_123 (->pairData_4 (-> ['twapData'])) := block.timestamp(uint256)
has variable
clearing ir...?
twapData_26(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_4 (-> ['twapData'])"])
has variable
typecheckig node...
REF_123(uint256) -> pairData_3 (-> ['twapData']).lastMeasurement
Function name: _addUSDVPair
MEMBER
pairData
lastMeasurement
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_123

Name: pairData.lastMeasurement Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_4 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_123 (->pairData_4 (-> ['twapData'])) := block.timestamp(uint256)
Function name: _addUSDVPair
asgn
block.timestamp

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_123

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_123 (->pairData_4 (-> ['twapData'])) := block.timestamp(uint256)
XXXXX
twapData_26(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_8(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_7(IVaderPoolV2), function:cumulativePrices, arguments:['foreignAsset_1']  
has variable
clearing ir...?
vaderPool_8(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_7', 'vaderPool_1'])
has variable
clearing ir...?
usdvPairs_9(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_8'])
has variable
clearing ir...?
maxUpdateWindow_17(uint256) := ϕ(['maxUpdateWindow_16', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
has variable
clearing ir...?
totalLiquidityWeight_23(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_22', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_34(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_33', 'previousPrices_4'])
has variable
clearing ir...?
nativeTokenPriceCumulative_1(uint256)= UNPACK TUPLE_8 index: 0 
has variable
[i] nativeTokenPriceCumulative cleared
typecheckig node...
TUPLE_8(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_7(IVaderPoolV2), function:cumulativePrices, arguments:['foreignAsset_1']  
Function name: _addUSDVPair
High Call: cumulativePrices
func name:cumulativePrices
other func name:cumulativePrices
TUPLE_8
hlc contract name: VADERPOOL func_name: cumulativePrices
('c', [1], [-1], 0, None)
foreignAsset
('c', [-1], [-1], 'u', None)
foreignAsset
('c', [-1], [-1], 'u', None)
foreignAsset
wfc len: 3
COPIED
[i]Type for TUPLE_8

Name: TUPLE_8 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_8(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_7', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_9(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_8'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_17(uint256) := ϕ(['maxUpdateWindow_16', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_23(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_22', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_34(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_33', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeTokenPriceCumulative_1(uint256)= UNPACK TUPLE_8 index: 0 
Function name: _addUSDVPair
Reading tuple TUPLE_8 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for nativeTokenPriceCumulative

Name: nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_125(uint256) -> pairData_4 (-> ['twapData']).nativeTokenPriceCumulative
has variable
clearing ir...?
pairData_5 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_4 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_125 (->pairData_5 (-> ['twapData'])) := nativeTokenPriceCumulative_1(uint256)
has variable
clearing ir...?
twapData_27(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_5 (-> ['twapData'])"])
has variable
typecheckig node...
REF_125(uint256) -> pairData_4 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addUSDVPair
MEMBER
pairData
nativeTokenPriceCumulative
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_125

Name: pairData.nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
pairData_5 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_125 (->pairData_5 (-> ['twapData'])) := nativeTokenPriceCumulative_1(uint256)
Function name: _addUSDVPair
asgn

Name: nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_125 Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[W] Initializing defined variable to constant
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_125

Name: REF_125 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_125 Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_27(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_9(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_8(IVaderPoolV2), function:getReserves, arguments:['foreignAsset_1']  
has variable
clearing ir...?
vaderPool_9(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_8', 'vaderPool_4', 'vaderPool_1'])
has variable
clearing ir...?
usdvPairs_10(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_9', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3'])
has variable
clearing ir...?
maxUpdateWindow_18(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_17'])
has variable
clearing ir...?
totalLiquidityWeight_24(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_23', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
has variable
clearing ir...?
previousPrices_35(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_34'])
has variable
clearing ir...?
reserveNative_1(uint256)= UNPACK TUPLE_9 index: 0 
has variable
[i] reserveNative cleared
clearing ir...?
reserveForeign_1(uint256)= UNPACK TUPLE_9 index: 1 
has variable
[i] reserveForeign cleared
typecheckig node...
TUPLE_9(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_8(IVaderPoolV2), function:getReserves, arguments:['foreignAsset_1']  
Function name: _addUSDVPair
High Call: getReserves
func name:getReserves
other func name:getReserves
TUPLE_9
hlc contract name: VADERPOOL func_name: getReserves
('c', [1], [-1], 0, None)
foreignAsset
('c', [2], [-1], 0, None)
foreignAsset
wfc len: 2
COPIED
[i]Type for TUPLE_9

Name: TUPLE_9 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_9(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_8', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_10(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_9', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_18(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_17'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_24(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_23', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_35(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_34'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserveNative_1(uint256)= UNPACK TUPLE_9 index: 0 
Function name: _addUSDVPair
Reading tuple TUPLE_9 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserveNative

Name: reserveNative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_1(uint256)= UNPACK TUPLE_9 index: 1 
Function name: _addUSDVPair
Reading tuple TUPLE_9 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserveForeign

Name: reserveForeign Function: _addUSDVPair
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_127(ILiquidityBasedTWAP.Paths) -> Paths.USDV
has variable
clearing ir...?
TMP_167 = CONVERT REF_127 to uint256
has variable
[i] TMP_167 cleared
clearing ir...?
REF_128(uint256) -> previousPrices_35[TMP_167]
has variable
clearing ir...?
TMP_168(uint256) = reserveNative_1 (c)* REF_128
has variable
[i] TMP_168 cleared
clearing ir...?
TMP_169 = CONVERT foreignAsset_1 to address
has variable
[i] TMP_169 cleared
clearing ir...?
TMP_170(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(TMP_169)
has variable
[i] TMP_170 cleared
clearing ir...?
TMP_171(uint256) = reserveForeign_1 (c)* TMP_170
has variable
[i] TMP_171 cleared
clearing ir...?
TMP_172(uint256) = TMP_168 (c)+ TMP_171
has variable
[i] TMP_172 cleared
clearing ir...?
pairLiquidityEvaluation_1(uint256) := TMP_172(uint256)
has variable
[i] pairLiquidityEvaluation cleared
typecheckig node...
REF_127(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: _addUSDVPair
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_127

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_167 = CONVERT REF_127 to uint256
Function name: _addUSDVPair

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_167 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_167

Name: TMP_167 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_128(uint256) -> previousPrices_35[TMP_167]
Function name: _addUSDVPair
INDEX

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_128

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_168(uint256) = reserveNative_1 (c)* REF_128
Function name: _addUSDVPair
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_67 Function: None
Num: 1, 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_168 Function: _addUSDVPair
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_168

Name: TMP_168 Function: _addUSDVPair
Num: 1, 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_169 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_169 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_169

Name: TMP_169 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_170(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(TMP_169)
Function name: _addUSDVPair
Internal call...
getChainlinkPrice
TMP_169
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: ASSET
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
added
xyz
Function name: getChainlinkPrice
Function Visibility: public
clearning node...
clearing ir...?
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
has variable
[i] asset cleared
clearing ir...?
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
has variable
typecheckig node...
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
Function name: getChainlinkPrice
Phi
[i]Type for asset

Name: asset Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: ASSET
Fields: 
Finance Type: undef
done.
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
Function name: getChainlinkPrice
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_14(IAggregatorV3) -> oracles_1[asset_1]
has variable
clearing ir...?
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
has variable
[i] oracle cleared
typecheckig node...
REF_14(IAggregatorV3) -> oracles_1[asset_1]
Function name: getChainlinkPrice
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_14

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
Function name: getChainlinkPrice
asgn

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: oracle Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for oracle

Name: oracle Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
has variable
clearing ir...?
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
has variable
[i] roundID cleared
clearing ir...?
price_1(int256)= UNPACK TUPLE_0 index: 1 
has variable
[i] price cleared
clearing ir...?
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
has variable
[i] answeredInRound cleared
typecheckig node...
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
Function name: getChainlinkPrice
High Call: latestRoundData
func name:latestRoundData
other func name:latestRoundData
TUPLE_0
hlc contract name: ORACLE func_name: latestRoundData
('c', [-1], [-1], 0, None)
('c', [2], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
wfc len: 5
COPIED
[i]Type for TUPLE_0

Name: TUPLE_0 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for roundID

Name: roundID Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
price_1(int256)= UNPACK TUPLE_0 index: 1 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: int256
int256
Final Type: int256
[i]Type for price

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 4
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for answeredInRound

Name: answeredInRound Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_30(bool) = answeredInRound_1 >= roundID_1
has variable
[i] TMP_30 cleared
clearing ir...?
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
typecheckig node...
TMP_30(bool) = answeredInRound_1 >= roundID_1
Function name: getChainlinkPrice
testing gt...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_30

Name: TMP_30 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_32(bool) = price_1 > 0
has variable
[i] TMP_32 cleared
clearing ir...?
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
typecheckig node...
TMP_32(bool) = price_1 > 0
Function name: getChainlinkPrice
testing gt...
val: 0
val: 0
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_32

Name: TMP_32 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_34 = CONVERT price_1 to uint256
has variable
[i] TMP_34 cleared
clearing ir...?
RETURN TMP_34
typecheckig node...
TMP_34 = CONVERT price_1 to uint256
Function name: getChainlinkPrice

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_34 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_34

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_34
RETURN

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "getChainlinkPrice":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: getChainlinkPrice

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_170

Name: TMP_170 Function: _addUSDVPair
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_171(uint256) = reserveForeign_1 (c)* TMP_170
Function name: _addUSDVPair
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_69 Function: None
Num: 2, 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_171 Function: _addUSDVPair
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_171

Name: TMP_171 Function: _addUSDVPair
Num: 2, 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_172(uint256) = TMP_168 (c)+ TMP_171
Function name: _addUSDVPair

Name: TMP_172 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_172

Name: TMP_172 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairLiquidityEvaluation_1(uint256) := TMP_172(uint256)
Function name: _addUSDVPair
asgn

Name: TMP_172 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairLiquidityEvaluation

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pairLiquidityEvaluation_1(uint256) := TMP_172(uint256)
XXXXX
clearning node...
clearing ir...?
REF_129(uint256) -> pairData_5 (-> ['twapData']).pastLiquidityEvaluation
has variable
clearing ir...?
pairData_6 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
has variable
[i] pairData cleared
clearing ir...?
REF_129 (->pairData_6 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
has variable
clearing ir...?
twapData_28(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_6 (-> ['twapData'])"])
has variable
typecheckig node...
REF_129(uint256) -> pairData_5 (-> ['twapData']).pastLiquidityEvaluation
Function name: _addUSDVPair
MEMBER
pairData
pastLiquidityEvaluation
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_129

Name: pairData.pastLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_6 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_129 (->pairData_6 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
Function name: _addUSDVPair
asgn

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_129

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_129 (->pairData_6 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
XXXXX
twapData_28(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_6 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_130(ILiquidityBasedTWAP.Paths) -> Paths.USDV
has variable
clearing ir...?
TMP_173 = CONVERT REF_130 to uint256
has variable
[i] TMP_173 cleared
clearing ir...?
REF_131(uint256) -> totalLiquidityWeight_25[TMP_173]
has variable
clearing ir...?
totalLiquidityWeight_26(uint256[2]) := ϕ(['totalLiquidityWeight_25'])
has variable
clearing ir...?
REF_131(-> totalLiquidityWeight_26) = REF_131 (c)+ pairLiquidityEvaluation_1
has variable
typecheckig node...
REF_130(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: _addUSDVPair
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_130

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_173 = CONVERT REF_130 to uint256
Function name: _addUSDVPair

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_173 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_173

Name: TMP_173 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_131(uint256) -> totalLiquidityWeight_25[TMP_173]
Function name: _addUSDVPair
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalLiquidityWeight
[i]Type for REF_131

Name: None Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_131(uint256) -> totalLiquidityWeight_25[TMP_173]
XXXXX
totalLiquidityWeight_26(uint256[2]) := ϕ(['totalLiquidityWeight_25'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_131(-> totalLiquidityWeight_26) = REF_131 (c)+ pairLiquidityEvaluation_1
Function name: _addUSDVPair

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_131

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_131(-> totalLiquidityWeight_26) = REF_131 (c)+ pairLiquidityEvaluation_1
XXXXX
clearning node...
clearing ir...?
REF_133 -> LENGTH usdvPairs_11
clearing ir...?
TMP_175(uint256) := REF_133(uint256)
has variable
[i] TMP_175 cleared
clearing ir...?
TMP_176(uint256) = TMP_175 (c)+ 1
has variable
[i] TMP_176 cleared
clearing ir...?
usdvPairs_12(IERC20[]) := ϕ(['usdvPairs_11'])
has variable
clearing ir...?
REF_133 (->usdvPairs_12) := TMP_176(uint256)
has variable
clearing ir...?
REF_134(IERC20) -> usdvPairs_12[TMP_175]
has variable
clearing ir...?
usdvPairs_13(IERC20[]) := ϕ(['usdvPairs_12'])
has variable
clearing ir...?
REF_134 (->usdvPairs_13) := foreignAsset_1(IERC20)
has variable
typecheckig node...
REF_133 -> LENGTH usdvPairs_11
[i]Type for REF_133

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_175(uint256) := REF_133(uint256)
Function name: _addUSDVPair
asgn

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_175 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_175

Name: TMP_175 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_176(uint256) = TMP_175 (c)+ 1
Function name: _addUSDVPair
val: 1

Name: TMP_176 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_176 Function: _addUSDVPair
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_176

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
usdvPairs_12(IERC20[]) := ϕ(['usdvPairs_11'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_133 (->usdvPairs_12) := TMP_176(uint256)
Function name: _addUSDVPair
asgn

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_133

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_134(IERC20) -> usdvPairs_12[TMP_175]
Function name: _addUSDVPair
INDEX

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_134

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
usdvPairs_13(IERC20[]) := ϕ(['usdvPairs_12'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_134 (->usdvPairs_13) := foreignAsset_1(IERC20)
Function name: _addUSDVPair
asgn

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: REF_134 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_134

Name: REF_134 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_177(bool) = maxUpdateWindow_19 < updatePeriod_1
has variable
[i] TMP_177 cleared
clearing ir...?
CONDITION TMP_177
typecheckig node...
TMP_177(bool) = maxUpdateWindow_19 < updatePeriod_1
Function name: _addUSDVPair
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_177

Name: TMP_177 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_177
Condition...
Conidtion: 
TMP_177
TMP_177
clearning node...
clearing ir...?
maxUpdateWindow_20(uint256) := updatePeriod_1(uint256)
has variable
typecheckig node...
maxUpdateWindow_20(uint256) := updatePeriod_1(uint256)
Function name: _addUSDVPair
asgn

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxUpdateWindow Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "_addUSDVPair":
 New undefined nodes- 5
 Old undefined nodes- 0
typecheckig node...
foreignAsset_1(IERC20) := ϕ(['foreignAsset_1', 'foreignAsset_1'])
Function name: _addUSDVPair
Phi
[i]Type for foreignAsset

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := ϕ(['oracle_1', 'oracle_1'])
Function name: _addUSDVPair
Phi
[i]Type for oracle

Name: oracle Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
done.
updatePeriod_1(uint256) := ϕ(['updatePeriod_1', 'updatePeriod_1'])
Function name: _addUSDVPair
Phi
[i]Type for updatePeriod

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_5(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_0', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_6(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_0'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_14(uint256) := ϕ(['maxUpdateWindow_0', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_20(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_0', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_31(uint256[2]) := ϕ(['previousPrices_0', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_22(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_0', 'twapData_21', 'twapData_7'])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
TMP_154(bool) = updatePeriod_1 != 0
Function name: _addUSDVPair
[i]Type for TMP_154

Name: TMP_154 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_155(None) = SOLIDITY_CALL require(bool,string)(TMP_154,LBTWAP::addUSDVPair: Incorrect Update Period)
[i]Type for TMP_155

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_156(uint8) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:decimals, arguments:[]  
Function name: _addUSDVPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_156
hlc contract name: ORACLE func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_156

Name: TMP_156 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_6(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_5', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_7(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_6'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_15(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_14'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_21(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_20', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_32(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_31', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
twapData_23(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(['twapData_5', 'twapData_19', 'twapData_1', 'twapData_17', 'twapData_22', 'twapData_28', 'twapData_2', 'twapData_3', 'twapData_15', 'twapData_21', 'twapData_7'])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
TMP_157(bool) = TMP_156 == 8
Function name: _addUSDVPair
[i]Type for TMP_157

Name: TMP_157 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_158(None) = SOLIDITY_CALL require(bool,string)(TMP_157,LBTWAP::addUSDVPair: Non-USD Oracle)
[i]Type for TMP_158

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_159 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_159 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_159

Name: TMP_159 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
REF_118(IAggregatorV3) -> oracles_2[TMP_159]
Function name: _addUSDVPair
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_118

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracles_3(mapping(address => IAggregatorV3)) := ϕ(['oracles_2'])
Function name: _addUSDVPair
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_118 (->oracles_3) := oracle_1(IAggregatorV3)
Function name: _addUSDVPair
asgn

Name: oracle Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef

Name: REF_118 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_118

Name: REF_118 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_160 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_160 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_160

Name: TMP_160 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
REF_119(ILiquidityBasedTWAP.ExchangePair) -> twapData_23[TMP_160]
Function name: _addUSDVPair
INDEX

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_119

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
pairData_1 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := REF_119(ILiquidityBasedTWAP.ExchangePair)
Function name: _addUSDVPair
asgn

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_120(uint96) -> pairData_1 (-> ['twapData']).foreignUnit
Function name: _addUSDVPair
MEMBER
pairData
foreignUnit
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_120

Name: pairData.foreignUnit Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.foreignUnit Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
TMP_161 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_161 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_161

Name: TMP_161 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_162 = CONVERT TMP_161 to IERC20Metadata
Function name: _addUSDVPair

Name: TMP_161 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_162 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_162

Name: TMP_162 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_163(uint8) = HIGH_LEVEL_CALL, dest:TMP_162(IERC20Metadata), function:decimals, arguments:[]  
Function name: _addUSDVPair
High Call: decimals
func name:decimals
other func name:decimals
TMP_163
hlc contract name: ASSET func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_163

Name: TMP_163 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_7(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_6', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_8(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_7'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_16(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_15'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_22(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_21', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_33(uint256[2]) := ϕ(['previousPrices_32', 'previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_164 = CONVERT TMP_163 to uint256
Function name: _addUSDVPair

Name: TMP_163 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_164 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_164

Name: TMP_164 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_165(uint256) = 10 (c)** TMP_164
Function name: _addUSDVPair
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: TMP_164 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_165 Function: _addUSDVPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_165

Name: TMP_165 Function: _addUSDVPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_166 = CONVERT TMP_165 to uint96
Function name: _addUSDVPair

Name: TMP_165 Function: _addUSDVPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: TMP_166 Function: _addUSDVPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_166

Name: TMP_166 Function: _addUSDVPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_166 = CONVERT TMP_165 to uint96
XXXXX
pairData_2 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_1 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_120 (->pairData_2 (-> ['twapData'])) := TMP_166(uint96)
Function name: _addUSDVPair
asgn

Name: TMP_166 Function: _addUSDVPair
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_120

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: REF_120 Function: _addUSDVPair
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: foreignUnit Function: global
Num: -1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_120 (->pairData_2 (-> ['twapData'])) := TMP_166(uint96)
XXXXX
twapData_24(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_122(uint256) -> pairData_2 (-> ['twapData']).updatePeriod
Function name: _addUSDVPair
MEMBER
pairData
updatePeriod
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_122

Name: pairData.updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_3 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_2 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_122 (->pairData_3 (-> ['twapData'])) := updatePeriod_1(uint256)
Function name: _addUSDVPair
asgn

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_122

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_122 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: updatePeriod Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
twapData_25(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_123(uint256) -> pairData_3 (-> ['twapData']).lastMeasurement
Function name: _addUSDVPair
MEMBER
pairData
lastMeasurement
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_123

Name: pairData.lastMeasurement Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.lastMeasurement Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_4 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_3 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_123 (->pairData_4 (-> ['twapData'])) := block.timestamp(uint256)
Function name: _addUSDVPair
asgn
block.timestamp

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_123

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_123 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastMeasurement Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_123 (->pairData_4 (-> ['twapData'])) := block.timestamp(uint256)
XXXXX
twapData_26(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TUPLE_8(uint256,uint256,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_7(IVaderPoolV2), function:cumulativePrices, arguments:['foreignAsset_1']  
Function name: _addUSDVPair
High Call: cumulativePrices
func name:cumulativePrices
other func name:cumulativePrices
TUPLE_8
hlc contract name: VADERPOOL func_name: cumulativePrices
('c', [1], [-1], 0, None)
foreignAsset
('c', [-1], [-1], 'u', None)
foreignAsset
('c', [-1], [-1], 'u', None)
foreignAsset
wfc len: 3
COPIED
[i]Type for TUPLE_8

Name: TUPLE_8 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_8(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_4', 'vaderPool_7', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_9(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3', 'usdvPairs_8'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_17(uint256) := ϕ(['maxUpdateWindow_16', 'maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_23(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_1', 'totalLiquidityWeight_22', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_34(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_33', 'previousPrices_4'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
nativeTokenPriceCumulative_1(uint256)= UNPACK TUPLE_8 index: 0 
Function name: _addUSDVPair
Reading tuple TUPLE_8 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for nativeTokenPriceCumulative

Name: nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_125(uint256) -> pairData_4 (-> ['twapData']).nativeTokenPriceCumulative
Function name: _addUSDVPair
MEMBER
pairData
nativeTokenPriceCumulative
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_125

Name: pairData.nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: pairData.nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
pairData_5 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_4 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_125 (->pairData_5 (-> ['twapData'])) := nativeTokenPriceCumulative_1(uint256)
Function name: _addUSDVPair
asgn

Name: nativeTokenPriceCumulative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_125 Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
[W] Initializing defined variable to constant
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_125

Name: REF_125 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_125 Function: _addUSDVPair
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef

Name: nativeTokenPriceCumulative Function: global
Num: 1
Den: -1
Norm: -404
LF: None
Fields: 
Finance Type: undef
done.
twapData_27(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
TUPLE_9(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:vaderPool_8(IVaderPoolV2), function:getReserves, arguments:['foreignAsset_1']  
Function name: _addUSDVPair
High Call: getReserves
func name:getReserves
other func name:getReserves
TUPLE_9
hlc contract name: VADERPOOL func_name: getReserves
('c', [1], [-1], 0, None)
foreignAsset
('c', [2], [-1], 0, None)
foreignAsset
wfc len: 2
COPIED
[i]Type for TUPLE_9

Name: TUPLE_9 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaderPool_9(IVaderPoolV2) := ϕ(['vaderPool_9', 'vaderPool_8', 'vaderPool_4', 'vaderPool_1'])
Function name: _addUSDVPair
Phi
[i]Type for vaderPool

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
done.
usdvPairs_10(IERC20[]) := ϕ(['usdvPairs_2', 'usdvPairs_5', 'usdvPairs_4', 'usdvPairs_9', 'usdvPairs_13', 'usdvPairs_1', 'usdvPairs_3'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
maxUpdateWindow_18(uint256) := ϕ(['maxUpdateWindow_13', 'maxUpdateWindow_12', 'maxUpdateWindow_19', 'maxUpdateWindow_20', 'maxUpdateWindow_17'])
Function name: _addUSDVPair
Phi
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
totalLiquidityWeight_24(uint256[2]) := ϕ(['totalLiquidityWeight_4', 'totalLiquidityWeight_19', 'totalLiquidityWeight_26', 'totalLiquidityWeight_2', 'totalLiquidityWeight_23', 'totalLiquidityWeight_1', 'totalLiquidityWeight_17'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
previousPrices_35(uint256[2]) := ϕ(['previousPrices_28', 'previousPrices_25', 'previousPrices_7', 'previousPrices_30', 'previousPrices_9', 'previousPrices_21', 'previousPrices_36', 'previousPrices_4', 'previousPrices_34'])
Function name: _addUSDVPair
Phi
[i]Type for previousPrices

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserveNative_1(uint256)= UNPACK TUPLE_9 index: 0 
Function name: _addUSDVPair
Reading tuple TUPLE_9 index 0
Check copy_toekn_tuple
([1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserveNative

Name: reserveNative Function: _addUSDVPair
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
reserveForeign_1(uint256)= UNPACK TUPLE_9 index: 1 
Function name: _addUSDVPair
Reading tuple TUPLE_9 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for reserveForeign

Name: reserveForeign Function: _addUSDVPair
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_127(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: _addUSDVPair
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_127

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_167 = CONVERT REF_127 to uint256
Function name: _addUSDVPair

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_167 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_167

Name: TMP_167 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_128(uint256) -> previousPrices_35[TMP_167]
Function name: _addUSDVPair
INDEX

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_128

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_168(uint256) = reserveNative_1 (c)* REF_128
Function name: _addUSDVPair
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_70 Function: None
Num: 1, 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_168 Function: _addUSDVPair
Num: 1, 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_168

Name: TMP_168 Function: _addUSDVPair
Num: 1, 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_169 = CONVERT foreignAsset_1 to address
Function name: _addUSDVPair

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: TMP_169 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
[i]Type for TMP_169

Name: TMP_169 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef
done.
TMP_170(uint256) = INTERNAL_CALL, LiquidityBasedTWAP.getChainlinkPrice(address)(TMP_169)
Function name: _addUSDVPair
Internal call...
getChainlinkPrice
TMP_169
Function: getChainlinkPrice
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: ASSET
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: FOREIGNASSET
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'FOREIGNASSET', [], -1]
-100
Parameter length: 1
[[-1], [-1], 0, 'FOREIGNASSET', [], -1]
added
xyz
Function name: getChainlinkPrice
Function Visibility: public
clearning node...
clearing ir...?
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
has variable
[i] asset cleared
clearing ir...?
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
has variable
typecheckig node...
asset_1(address) := ϕ(['TMP_133', 'REF_42', 'TMP_127', 'foreignAsset_3', 'TMP_169', 'REF_38'])
Function name: getChainlinkPrice
Phi
[i]Type for asset

Name: asset Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: ASSET
Fields: 
Finance Type: undef
done.
oracles_1(mapping(address => IAggregatorV3)) := ϕ(['oracles_3', 'oracles_0', 'oracles_2', 'oracles_1'])
Function name: getChainlinkPrice
Phi
[i]Type for oracles

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_14(IAggregatorV3) -> oracles_1[asset_1]
has variable
clearing ir...?
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
has variable
[i] oracle cleared
typecheckig node...
REF_14(IAggregatorV3) -> oracles_1[asset_1]
Function name: getChainlinkPrice
INDEX

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_14

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
oracle_1(IAggregatorV3) := REF_14(IAggregatorV3)
Function name: getChainlinkPrice
asgn

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: oracle Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for oracle

Name: oracle Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
has variable
clearing ir...?
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
has variable
[i] roundID cleared
clearing ir...?
price_1(int256)= UNPACK TUPLE_0 index: 1 
has variable
[i] price cleared
clearing ir...?
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
has variable
[i] answeredInRound cleared
typecheckig node...
TUPLE_0(uint80,int256,uint256,uint256,uint80) = HIGH_LEVEL_CALL, dest:oracle_1(IAggregatorV3), function:latestRoundData, arguments:[]  
Function name: getChainlinkPrice
High Call: latestRoundData
func name:latestRoundData
other func name:latestRoundData
TUPLE_0
hlc contract name: ORACLE func_name: latestRoundData
('c', [-1], [-1], 0, None)
('c', [2], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
('c', [-1], [-1], 0, None)
wfc len: 5
COPIED
[i]Type for TUPLE_0

Name: TUPLE_0 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
roundID_1(uint80)= UNPACK TUPLE_0 index: 0 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for roundID

Name: roundID Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
price_1(int256)= UNPACK TUPLE_0 index: 1 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 1
Check copy_toekn_tuple
([2], [-1], 0, None, -1)
----
Type: int256
int256
Final Type: int256
[i]Type for price

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
answeredInRound_1(uint80)= UNPACK TUPLE_0 index: 4 
Function name: getChainlinkPrice
Reading tuple TUPLE_0 index 4
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint80
uint80
Final Type: uint80
[i]Type for answeredInRound

Name: answeredInRound Function: getChainlinkPrice
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_30(bool) = answeredInRound_1 >= roundID_1
has variable
[i] TMP_30 cleared
clearing ir...?
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
typecheckig node...
TMP_30(bool) = answeredInRound_1 >= roundID_1
Function name: getChainlinkPrice
testing gt...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_30

Name: TMP_30 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_31(None) = SOLIDITY_CALL require(bool,string)(TMP_30,LBTWAP::getChainlinkPrice: Stale Chainlink Price)
[i]Type for TMP_31

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_32(bool) = price_1 > 0
has variable
[i] TMP_32 cleared
clearing ir...?
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
typecheckig node...
TMP_32(bool) = price_1 > 0
Function name: getChainlinkPrice
testing gt...
val: 0
val: 0
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_32

Name: TMP_32 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_33(None) = SOLIDITY_CALL require(bool,string)(TMP_32,LBTWAP::getChainlinkPrice: Chainlink Malfunction)
[i]Type for TMP_33

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_34 = CONVERT price_1 to uint256
has variable
[i] TMP_34 cleared
clearing ir...?
RETURN TMP_34
typecheckig node...
TMP_34 = CONVERT price_1 to uint256
Function name: getChainlinkPrice

Name: price Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_34 Function: getChainlinkPrice
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_34

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_34
RETURN

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "getChainlinkPrice":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: getChainlinkPrice

Name: TMP_34 Function: getChainlinkPrice
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_170

Name: TMP_170 Function: _addUSDVPair
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_171(uint256) = reserveForeign_1 (c)* TMP_170
Function name: _addUSDVPair
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_72 Function: None
Num: 2, 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_171 Function: _addUSDVPair
Num: 2, 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_171

Name: TMP_171 Function: _addUSDVPair
Num: 2, 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_172(uint256) = TMP_168 (c)+ TMP_171
Function name: _addUSDVPair

Name: TMP_172 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_172

Name: TMP_172 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairLiquidityEvaluation_1(uint256) := TMP_172(uint256)
Function name: _addUSDVPair
asgn

Name: TMP_172 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairLiquidityEvaluation

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
pairLiquidityEvaluation_1(uint256) := TMP_172(uint256)
XXXXX
typecheckig node...
REF_129(uint256) -> pairData_5 (-> ['twapData']).pastLiquidityEvaluation
Function name: _addUSDVPair
MEMBER
pairData
pastLiquidityEvaluation
_addUSDVPair
pairData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_129

Name: pairData.pastLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pairData.pastLiquidityEvaluation Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairData_6 (-> ['twapData'])(ILiquidityBasedTWAP.ExchangePair) := ϕ(["pairData_5 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for pairData

Name: pairData Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
REF_129 (->pairData_6 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
Function name: _addUSDVPair
asgn

Name: pairLiquidityEvaluation Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_129

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_129 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: pastLiquidityEvaluation Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_129 (->pairData_6 (-> ['twapData'])) := pairLiquidityEvaluation_1(uint256)
XXXXX
twapData_28(mapping(address => ILiquidityBasedTWAP.ExchangePair)) := ϕ(["pairData_6 (-> ['twapData'])"])
Function name: _addUSDVPair
Phi
[i]Type for twapData

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
done.
typecheckig node...
REF_130(ILiquidityBasedTWAP.Paths) -> Paths.USDV
Function name: _addUSDVPair
MEMBER
Paths
Paths
USDV
global
Paths Fields:
VADER
USDV
^^^

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_130

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: USDV Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_173 = CONVERT REF_130 to uint256
Function name: _addUSDVPair

Name: Paths.USDV Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_173 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_173

Name: TMP_173 Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_131(uint256) -> totalLiquidityWeight_25[TMP_173]
Function name: _addUSDVPair
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
totalLiquidityWeight
[i]Type for REF_131

Name: None Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_131(uint256) -> totalLiquidityWeight_25[TMP_173]
XXXXX
totalLiquidityWeight_26(uint256[2]) := ϕ(['totalLiquidityWeight_25'])
Function name: _addUSDVPair
Phi
[i]Type for totalLiquidityWeight

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_131(-> totalLiquidityWeight_26) = REF_131 (c)+ pairLiquidityEvaluation_1
Function name: _addUSDVPair

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_131

Name: REF_131 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_131(-> totalLiquidityWeight_26) = REF_131 (c)+ pairLiquidityEvaluation_1
XXXXX
typecheckig node...
REF_133 -> LENGTH usdvPairs_11
[i]Type for REF_133

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_175(uint256) := REF_133(uint256)
Function name: _addUSDVPair
asgn

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_175 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_175

Name: TMP_175 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_176(uint256) = TMP_175 (c)+ 1
Function name: _addUSDVPair
val: 1

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_176

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
usdvPairs_12(IERC20[]) := ϕ(['usdvPairs_11'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_133 (->usdvPairs_12) := TMP_176(uint256)
Function name: _addUSDVPair
asgn

Name: TMP_176 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_133

Name: REF_133 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_134(IERC20) -> usdvPairs_12[TMP_175]
Function name: _addUSDVPair
INDEX

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_134

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
usdvPairs_13(IERC20[]) := ϕ(['usdvPairs_12'])
Function name: _addUSDVPair
Phi
[i]Type for usdvPairs

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
REF_134 (->usdvPairs_13) := foreignAsset_1(IERC20)
Function name: _addUSDVPair
asgn

Name: foreignAsset Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: ASSET
Fields: 
Finance Type: undef

Name: REF_134 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_134

Name: REF_134 Function: _addUSDVPair
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_177(bool) = maxUpdateWindow_19 < updatePeriod_1
Function name: _addUSDVPair
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_177

Name: TMP_177 Function: _addUSDVPair
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_177
Condition...
Conidtion: 
TMP_177
TMP_177
typecheckig node...
maxUpdateWindow_20(uint256) := updatePeriod_1(uint256)
Function name: _addUSDVPair
asgn

Name: updatePeriod Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxUpdateWindow Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for maxUpdateWindow

Name: maxUpdateWindow Function: _addUSDVPair
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
WORKLIST iteration 1 for function call "_addUSDVPair":
 New undefined nodes- 5
 Old undefined nodes- 5
Saving return values for: _addUSDVPair
done.
This IR caused addback:
INTERNAL_CALL, LiquidityBasedTWAP._addUSDVPair(IERC20,IAggregatorV3,uint256)(foreignAsset_1,oracle_1,updatePeriod_1)
XXXXX
WORKLIST iteration 1 for function call "addUSDVPair":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: addUSDVPair
State_var: oracles
Finding type for oracles...
mapping(address => IAggregatorV3)
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: mapping(address => IAggregatorV3)
mapping(address => IAggregatorV3)
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: previousPrices
Finding type for previousPrices...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPool
Finding type for vaderPool...
IVaderPoolV2
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPOOL')
----
Type: IVaderPoolV2
IVaderPoolV2
Final Type: IVaderPoolV2
 NO FIELDS

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxUpdateWindow
Finding type for maxUpdateWindow...
uint256
Check copy_toekn_tuple
(-1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalLiquidityWeight
Finding type for totalLiquidityWeight...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: twapData
Finding type for twapData...
mapping(address => ILiquidityBasedTWAP.ExchangePair)
Check copy_toekn_tuple
(-1, -1, 0, 'EXCHANGEPAIR')
----
Type: mapping(address => ILiquidityBasedTWAP.ExchangePair)
mapping(address => ILiquidityBasedTWAP.ExchangePair)
ILiquidityBasedTWAP.ExchangePair
Final Type: ILiquidityBasedTWAP.ExchangePair
global
twapData
nativeTokenPriceCumulative
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
nativeTokenPriceAverage
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
nativeTokenPriceAverage
_x
FIELDS:
nativeTokenPriceAverage Fields:
^^^
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
twapData.nativeTokenPriceAverage
_x
FIELDS:
twapData.nativeTokenPriceAverage Fields:
^^^
global
twapData
lastMeasurement
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
updatePeriod
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
pastLiquidityEvaluation
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
foreignAsset
Check copy_toekn_tuple
([-1], [-1], [0], 'FOREIGNASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
twapData
foreignUnit
Check copy_toekn_tuple
([-1], [-1], [-404], None)
----
Type: uint96
uint96
Final Type: uint96
Type: uint96
uint96
Final Type: uint96
FIELDS:
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
[*]Type fetched successfully
State_var: vader
Finding type for vader...
address
Check copy_toekn_tuple
(2, -1, 0, 'VADER')
----
Type: address
address
Final Type: address

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPairs
Finding type for vaderPairs...
IUniswapV2Pair[]
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPAIR')
----
Type: IUniswapV2Pair[]
IUniswapV2Pair[]
IUniswapV2Pair
Final Type: IUniswapV2Pair
 NO FIELDS

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 0, 'OWNER')
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: usdvPairs
Finding type for usdvPairs...
IERC20[]
Check copy_toekn_tuple
(-1, -1, 0, 'USDVPAIR')
----
Type: IERC20[]
IERC20[]
IERC20
Final Type: IERC20
 NO FIELDS

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _addUSDVPair
Function _addUSDVPair not marked
Mark Iterations TRUE, proceeding anyway
Function name: _addUSDVPair
Function Visibility (test): internal
State_var: oracles
Finding type for oracles...
mapping(address => IAggregatorV3)
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: mapping(address => IAggregatorV3)
mapping(address => IAggregatorV3)
IAggregatorV3
Final Type: IAggregatorV3
 NO FIELDS

Name: oracles Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: previousPrices
Finding type for previousPrices...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: previousPrices Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPool
Finding type for vaderPool...
IVaderPoolV2
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPOOL')
----
Type: IVaderPoolV2
IVaderPoolV2
Final Type: IVaderPoolV2
 NO FIELDS

Name: vaderPool Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPOOL
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxUpdateWindow
Finding type for maxUpdateWindow...
uint256
Check copy_toekn_tuple
(-1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: maxUpdateWindow Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: totalLiquidityWeight
Finding type for totalLiquidityWeight...
uint256[2]
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256[2]
uint256[2]
uint256
Final Type: uint256

Name: totalLiquidityWeight Function: global
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: twapData
Finding type for twapData...
mapping(address => ILiquidityBasedTWAP.ExchangePair)
Check copy_toekn_tuple
(-1, -1, 0, 'EXCHANGEPAIR')
----
Type: mapping(address => ILiquidityBasedTWAP.ExchangePair)
mapping(address => ILiquidityBasedTWAP.ExchangePair)
ILiquidityBasedTWAP.ExchangePair
Final Type: ILiquidityBasedTWAP.ExchangePair
global
twapData
nativeTokenPriceCumulative
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
nativeTokenPriceAverage
Check copy_toekn_tuple
([1], [-1], [-404], None)
----
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
nativeTokenPriceAverage
_x
FIELDS:
nativeTokenPriceAverage Fields:
^^^
Type: FixedPoint.uq112x112
FixedPoint.uq112x112
Final Type: FixedPoint.uq112x112
global
twapData.nativeTokenPriceAverage
_x
FIELDS:
twapData.nativeTokenPriceAverage Fields:
^^^
global
twapData
lastMeasurement
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
updatePeriod
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
pastLiquidityEvaluation
Check copy_toekn_tuple
([-1], [-1], ['u'], None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
twapData
foreignAsset
Check copy_toekn_tuple
([-1], [-1], [0], 'FOREIGNASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
twapData
foreignUnit
Check copy_toekn_tuple
([-1], [-1], [-404], None)
----
Type: uint96
uint96
Final Type: uint96
Type: uint96
uint96
Final Type: uint96
FIELDS:
twapData Fields:
nativeTokenPriceCumulative
nativeTokenPriceAverage
lastMeasurement
updatePeriod
pastLiquidityEvaluation
foreignAsset
foreignUnit
^^^

Name: twapData Function: global
Num: -1
Den: -1
Norm: 0
LF: EXCHANGEPAIR
Fields: nativeTokenPriceCumulative, nativeTokenPriceAverage, lastMeasurement, updatePeriod, pastLiquidityEvaluation, foreignAsset, foreignUnit
Finance Type: undef
[*]Type fetched successfully
State_var: vader
Finding type for vader...
address
Check copy_toekn_tuple
(2, -1, 0, 'VADER')
----
Type: address
address
Final Type: address

Name: vader Function: global
Num: 2
Den: -1
Norm: 0
LF: VADER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaderPairs
Finding type for vaderPairs...
IUniswapV2Pair[]
Check copy_toekn_tuple
(-1, -1, 0, 'VADERPAIR')
----
Type: IUniswapV2Pair[]
IUniswapV2Pair[]
IUniswapV2Pair
Final Type: IUniswapV2Pair
 NO FIELDS

Name: vaderPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: VADERPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 0, 'OWNER')
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: 0
LF: OWNER
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: usdvPairs
Finding type for usdvPairs...
IERC20[]
Check copy_toekn_tuple
(-1, -1, 0, 'USDVPAIR')
----
Type: IERC20[]
IERC20[]
IERC20
Final Type: IERC20
 NO FIELDS

Name: usdvPairs Function: global
Num: -1
Den: -1
Norm: 0
LF: USDVPAIR
Fields: 
Finance Type: undef
[*]Type fetched successfully
Errors: [<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f5145e0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f436910>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f408460>, <slither.slithir.variables.reference_ssa.ReferenceVariableSSA object at 0x7f4b4f408a60>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f4138e0>, <slither.slithir.variables.reference_ssa.ReferenceVariableSSA object at 0x7f4b4f37c460>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f4b4f386d30>]
Seen contract: {'LiquidityBasedTWAP': True} Contract name out: Babylonian
[x] Babylonian not run
Seen contract: {'LiquidityBasedTWAP': True, 'Babylonian': True} Contract name out: BitMath
[x] BitMath not run
Seen contract: {'LiquidityBasedTWAP': True, 'Babylonian': True, 'BitMath': True} Contract name out: FixedPoint
[x] FixedPoint not run
Seen contract: {'LiquidityBasedTWAP': True, 'Babylonian': True, 'BitMath': True, 'FixedPoint': True} Contract name out: FullMath
[x] FullMath not run
Seen contract: {'LiquidityBasedTWAP': True, 'Babylonian': True, 'BitMath': True, 'FixedPoint': True, 'FullMath': True} Contract name out: UniswapV2OracleLibrary
[x] UniswapV2OracleLibrary not run
Seen contract: {'LiquidityBasedTWAP': True, 'Babylonian': True, 'BitMath': True, 'FixedPoint': True, 'FullMath': True, 'UniswapV2OracleLibrary': True} Contract name out: IBasePoolV2
[x] IBasePoolV2 not run
Seen contract: {'LiquidityBasedTWAP': True, 'Babylonian': True, 'BitMath': True, 'FixedPoint': True, 'FullMath': True, 'UniswapV2OracleLibrary': True, 'IBasePoolV2': True} Contract name out: IVaderPoolV2
[x] IVaderPoolV2 not run
Seen contract: {'LiquidityBasedTWAP': True, 'Babylonian': True, 'BitMath': True, 'FixedPoint': True, 'FullMath': True, 'UniswapV2OracleLibrary': True, 'IBasePoolV2': True, 'IVaderPoolV2': True} Contract name out: IAggregatorV3
[x] IAggregatorV3 not run
Seen contract: {'LiquidityBasedTWAP': True, 'Babylonian': True, 'BitMath': True, 'FixedPoint': True, 'FullMath': True, 'UniswapV2OracleLibrary': True, 'IBasePoolV2': True, 'IVaderPoolV2': True, 'IAggregatorV3': True} Contract name out: IUniswapV2ERC20
[x] IUniswapV2ERC20 not run
Seen contract: {'LiquidityBasedTWAP': True, 'Babylonian': True, 'BitMath': True, 'FixedPoint': True, 'FullMath': True, 'UniswapV2OracleLibrary': True, 'IBasePoolV2': True, 'IVaderPoolV2': True, 'IAggregatorV3': True, 'IUniswapV2ERC20': True} Contract name out: IUniswapV2Pair
[x] IUniswapV2Pair not run
Seen contract: {'LiquidityBasedTWAP': True, 'Babylonian': True, 'BitMath': True, 'FixedPoint': True, 'FullMath': True, 'UniswapV2OracleLibrary': True, 'IBasePoolV2': True, 'IVaderPoolV2': True, 'IAggregatorV3': True, 'IUniswapV2ERC20': True, 'IUniswapV2Pair': True} Contract name out: ILiquidityBasedTWAP
[x] ILiquidityBasedTWAP not run
Seen contract: {'LiquidityBasedTWAP': True, 'Babylonian': True, 'BitMath': True, 'FixedPoint': True, 'FullMath': True, 'UniswapV2OracleLibrary': True, 'IBasePoolV2': True, 'IVaderPoolV2': True, 'IAggregatorV3': True, 'IUniswapV2ERC20': True, 'IUniswapV2Pair': True, 'ILiquidityBasedTWAP': True} Contract name out: Ownable
[x] Ownable not run
Seen contract: {'LiquidityBasedTWAP': True, 'Babylonian': True, 'BitMath': True, 'FixedPoint': True, 'FullMath': True, 'UniswapV2OracleLibrary': True, 'IBasePoolV2': True, 'IVaderPoolV2': True, 'IAggregatorV3': True, 'IUniswapV2ERC20': True, 'IUniswapV2Pair': True, 'ILiquidityBasedTWAP': True, 'Ownable': True} Contract name out: IERC20
[x] IERC20 not run
Seen contract: {'LiquidityBasedTWAP': True, 'Babylonian': True, 'BitMath': True, 'FixedPoint': True, 'FullMath': True, 'UniswapV2OracleLibrary': True, 'IBasePoolV2': True, 'IVaderPoolV2': True, 'IAggregatorV3': True, 'IUniswapV2ERC20': True, 'IUniswapV2Pair': True, 'ILiquidityBasedTWAP': True, 'Ownable': True, 'IERC20': True} Contract name out: IERC20Metadata
[x] IERC20Metadata not run
Seen contract: {'LiquidityBasedTWAP': True, 'Babylonian': True, 'BitMath': True, 'FixedPoint': True, 'FullMath': True, 'UniswapV2OracleLibrary': True, 'IBasePoolV2': True, 'IVaderPoolV2': True, 'IAggregatorV3': True, 'IUniswapV2ERC20': True, 'IUniswapV2Pair': True, 'ILiquidityBasedTWAP': True, 'Ownable': True, 'IERC20': True, 'IERC20Metadata': True} Contract name out: IERC721
[x] IERC721 not run
Seen contract: {'LiquidityBasedTWAP': True, 'Babylonian': True, 'BitMath': True, 'FixedPoint': True, 'FullMath': True, 'UniswapV2OracleLibrary': True, 'IBasePoolV2': True, 'IVaderPoolV2': True, 'IAggregatorV3': True, 'IUniswapV2ERC20': True, 'IUniswapV2Pair': True, 'ILiquidityBasedTWAP': True, 'Ownable': True, 'IERC20': True, 'IERC20Metadata': True, 'IERC721': True} Contract name out: Context
[x] Context not run
Seen contract: {'LiquidityBasedTWAP': True, 'Babylonian': True, 'BitMath': True, 'FixedPoint': True, 'FullMath': True, 'UniswapV2OracleLibrary': True, 'IBasePoolV2': True, 'IVaderPoolV2': True, 'IAggregatorV3': True, 'IUniswapV2ERC20': True, 'IUniswapV2Pair': True, 'ILiquidityBasedTWAP': True, 'Ownable': True, 'IERC20': True, 'IERC20Metadata': True, 'IERC721': True, 'Context': True} Contract name out: IERC165
[x] IERC165 not run
Function count: 36
