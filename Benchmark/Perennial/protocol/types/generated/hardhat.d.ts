/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "Collateral",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Collateral__factory>;
    getContractFactory(
      name: "LeveragedEther",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LeveragedEther__factory>;
    getContractFactory(
      name: "ShortEther",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortEther__factory>;
    getContractFactory(
      name: "Squeeth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Squeeth__factory>;
    getContractFactory(
      name: "Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Factory__factory>;
    getContractFactory(
      name: "UFactoryProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UFactoryProvider__factory>;
    getContractFactory(
      name: "Incentivizer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Incentivizer__factory>;
    getContractFactory(
      name: "ProgramInfoLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProgramInfoLib__factory>;
    getContractFactory(
      name: "ICollateral",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICollateral__factory>;
    getContractFactory(
      name: "IFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFactory__factory>;
    getContractFactory(
      name: "IIncentivizer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIncentivizer__factory>;
    getContractFactory(
      name: "IOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOracle__factory>;
    getContractFactory(
      name: "IProduct",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProduct__factory>;
    getContractFactory(
      name: "IProductProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProductProvider__factory>;
    getContractFactory(
      name: "ChainlinkOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkOracle__factory>;
    getContractFactory(
      name: "IChainlinkFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainlinkFeed__factory>;
    getContractFactory(
      name: "Product",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Product__factory>;
    getContractFactory(
      name: "ProductProviderBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProductProviderBase__factory>;
    getContractFactory(
      name: "MockFixed18",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockFixed18__factory>;
    getContractFactory(
      name: "MockToken18",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockToken18__factory>;
    getContractFactory(
      name: "MockUFixed18",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockUFixed18__factory>;
    getContractFactory(
      name: "MockUOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockUOwnable__factory>;
    getContractFactory(
      name: "MockUReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockUReentrancyGuard__factory>;
    getContractFactory(
      name: "Fixed18Lib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Fixed18Lib__factory>;
    getContractFactory(
      name: "Token18Lib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Token18Lib__factory>;
    getContractFactory(
      name: "UFixed18Lib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UFixed18Lib__factory>;
    getContractFactory(
      name: "UOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UOwnable__factory>;
    getContractFactory(
      name: "UReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UReentrancyGuard__factory>;

    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "Collateral",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Collateral>;
    getContractAt(
      name: "LeveragedEther",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LeveragedEther>;
    getContractAt(
      name: "ShortEther",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ShortEther>;
    getContractAt(
      name: "Squeeth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Squeeth>;
    getContractAt(
      name: "Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Factory>;
    getContractAt(
      name: "UFactoryProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UFactoryProvider>;
    getContractAt(
      name: "Incentivizer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Incentivizer>;
    getContractAt(
      name: "ProgramInfoLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProgramInfoLib>;
    getContractAt(
      name: "ICollateral",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICollateral>;
    getContractAt(
      name: "IFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFactory>;
    getContractAt(
      name: "IIncentivizer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIncentivizer>;
    getContractAt(
      name: "IOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOracle>;
    getContractAt(
      name: "IProduct",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProduct>;
    getContractAt(
      name: "IProductProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProductProvider>;
    getContractAt(
      name: "ChainlinkOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkOracle>;
    getContractAt(
      name: "IChainlinkFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChainlinkFeed>;
    getContractAt(
      name: "Product",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Product>;
    getContractAt(
      name: "ProductProviderBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProductProviderBase>;
    getContractAt(
      name: "MockFixed18",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockFixed18>;
    getContractAt(
      name: "MockToken18",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockToken18>;
    getContractAt(
      name: "MockUFixed18",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockUFixed18>;
    getContractAt(
      name: "MockUOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockUOwnable>;
    getContractAt(
      name: "MockUReentrancyGuard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockUReentrancyGuard>;
    getContractAt(
      name: "Fixed18Lib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Fixed18Lib>;
    getContractAt(
      name: "Token18Lib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Token18Lib>;
    getContractAt(
      name: "UFixed18Lib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UFixed18Lib>;
    getContractAt(
      name: "UOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UOwnable>;
    getContractAt(
      name: "UReentrancyGuard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UReentrancyGuard>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
