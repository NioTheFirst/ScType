/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockUOwnable, MockUOwnableInterface } from "../MockUOwnable";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "UOwnableNotOwnerError",
    type: "error",
  },
  {
    inputs: [],
    name: "UOwnableZeroAddressError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "__initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103cb806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063f2fde38b14610079578063f80ce32b14610095575b600080fd5b61005961009f565b005b610063610122565b604051610070919061031c565b60405180910390f35b610093600480360381019061008e9190610368565b610150565b005b61009d61023a565b005b3373ffffffffffffffffffffffffffffffffffffffff166100be610122565b73ffffffffffffffffffffffffffffffffffffffff161461011657336040517f9950d22a00000000000000000000000000000000000000000000000000000000815260040161010d919061031c565b60405180910390fd5b6101206000610244565b565b6000807ffab28ef60f9b87df8726d5dcddc937862ba30f639cf9076b70cb7cba809b88109050805491505090565b3373ffffffffffffffffffffffffffffffffffffffff1661016f610122565b73ffffffffffffffffffffffffffffffffffffffff16146101c757336040517f9950d22a0000000000000000000000000000000000000000000000000000000081526004016101be919061031c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561022e576040517f3e1925f200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61023781610244565b50565b6102426102d0565b565b6000807ffab28ef60f9b87df8726d5dcddc937862ba30f639cf9076b70cb7cba809b88109050805491508281558273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b6102d933610244565b565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610306826102db565b9050919050565b610316816102fb565b82525050565b6000602082019050610331600083018461030d565b92915050565b600080fd5b610345816102fb565b811461035057600080fd5b50565b6000813590506103628161033c565b92915050565b60006020828403121561037e5761037d610337565b5b600061038c84828501610353565b9150509291505056fea2646970667358221220fde15c4c9d24134aa38672e96de4eaa98194f37a5dd630ab06f8c995718adfb164736f6c634300080a0033";

export class MockUOwnable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockUOwnable> {
    return super.deploy(overrides || {}) as Promise<MockUOwnable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockUOwnable {
    return super.attach(address) as MockUOwnable;
  }
  connect(signer: Signer): MockUOwnable__factory {
    return super.connect(signer) as MockUOwnable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUOwnableInterface {
    return new utils.Interface(_abi) as MockUOwnableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockUOwnable {
    return new Contract(address, _abi, signerOrProvider) as MockUOwnable;
  }
}
