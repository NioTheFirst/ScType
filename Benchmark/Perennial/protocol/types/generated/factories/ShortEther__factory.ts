/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ShortEther, ShortEtherInterface } from "../ShortEther";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IOracle",
        name: "oracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Fixed18OverflowError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "Fixed18",
        name: "price",
        type: "int256",
      },
    ],
    name: "Version",
    type: "event",
  },
  {
    inputs: [],
    name: "currentVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fundingFee",
    outputs: [
      {
        internalType: "UFixed18",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "maintenance",
    outputs: [
      {
        internalType: "UFixed18",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "makerFee",
    outputs: [
      {
        internalType: "UFixed18",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "makerLimit",
    outputs: [
      {
        internalType: "UFixed18",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Fixed18",
        name: "price",
        type: "int256",
      },
    ],
    name: "payoff",
    outputs: [
      {
        internalType: "Fixed18",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "priceAtVersion",
    outputs: [
      {
        internalType: "Fixed18",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "UFixed18",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "UFixed18",
            name: "taker",
            type: "uint256",
          },
        ],
        internalType: "struct Position",
        name: "position",
        type: "tuple",
      },
    ],
    name: "rate",
    outputs: [
      {
        internalType: "Fixed18",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "sync",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "takerFee",
    outputs: [
      {
        internalType: "UFixed18",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "timestampAtVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200106b3803806200106b8339818101604052810190620000379190620000fe565b80806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000130565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b28262000085565b9050919050565b6000620000c682620000a5565b9050919050565b620000d881620000b9565b8114620000e457600080fd5b50565b600081519050620000f881620000cd565b92915050565b60006020828403121562000117576200011662000080565b5b60006200012784828501620000e7565b91505092915050565b610f2b80620001406000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80637dc0d1d011610081578063d7c7a9351161005b578063d7c7a9351461021d578063fc741c7c1461024d578063fff6cae91461026b576100d4565b80637dc0d1d0146101b15780639d888e86146101cf578063d1af41ec146101ed576100d4565b80635d16e120116100b25780635d16e1201461014557806360ec91d6146101635780636c376cc514610193576100d4565b806319377567146100d957806343f0179b146100f75780634d4e9ec214610115575b600080fd5b6100e1610275565b6040516100ee919061084d565b60405180910390f35b6100ff610287565b60405161010c919061084d565b60405180910390f35b61012f600480360381019061012a91906108a3565b61028c565b60405161013c91906108df565b60405180910390f35b61014d610330565b60405161015a919061084d565b60405180910390f35b61017d60048036038101906101789190610a07565b610343565b60405161018a9190610a6f565b60405180910390f35b61019b610404565b6040516101a8919061084d565b60405180910390f35b6101b9610417565b6040516101c69190610aff565b60405180910390f35b6101d761043b565b6040516101e491906108df565b60405180910390f35b610207600480360381019061020291906108a3565b6104d2565b6040516102149190610a6f565b60405180910390f35b61023760048036038101906102329190610b46565b61057d565b6040516102449190610a6f565b60405180910390f35b6102556105c1565b604051610262919061084d565b60405180910390f35b6102736105c6565b005b60006102826103e8610648565b905090565b600090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634d4e9ec2836040518263ffffffff1660e01b81526004016102e891906108df565b602060405180830381865afa158015610305573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103299190610b88565b9050919050565b600061033e600a6064610665565b905090565b6000610352826000015161068e565b1561036057600090506103ff565b600061037d8360000151846020015161069a90919063ffffffff16565b9050600061039382670de0b6b3a76400006106c3565b905060006103d86103a460026106e7565b6103ca6103b360016002610704565b6103bc8661072d565b6107a090919063ffffffff16565b6107b690919063ffffffff16565b90506103f96103ea6301e133806106e7565b826107df90919063ffffffff16565b93505050505b919050565b6000610412601e6064610665565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639d888e866040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd9190610b88565b905090565b600061057660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d1af41ec846040518263ffffffff1660e01b815260040161053091906108df565b602060405180830381865afa15801561054d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105719190610bca565b61057d565b9050919050565b60006105ba826105ac7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6106e7565b6107b690919063ffffffff16565b9050919050565b600090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fff6cae96040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561062e57600080fd5b505af1158015610642573d6000803e3d6000fd5b50505050565b6000670de0b6b3a76400008261065e9190610c26565b9050919050565b600081670de0b6b3a76400008461067c9190610c26565b6106869190610caf565b905092915050565b60008082149050919050565b600081670de0b6b3a7640000846106b19190610c26565b6106bb9190610caf565b905092915050565b60008060008484915091508082106106db57806106dd565b815b9250505092915050565b6000670de0b6b3a7640000826106fd9190610ce0565b9050919050565b600081670de0b6b3a76400008461071b9190610ce0565b6107259190610df7565b905092915050565b6000808290507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81111561079757806040517ea07eb500000000000000000000000000000000000000000000000000000000815260040161078e91906108df565b60405180910390fd5b80915050919050565b600081836107ae9190610e61565b905092915050565b6000670de0b6b3a764000082846107cd9190610ce0565b6107d79190610df7565b905092915050565b600081670de0b6b3a7640000846107f69190610ce0565b6108009190610df7565b905092915050565b6000819050919050565b6000819050919050565b600061083761083261082d84610808565b610812565b610808565b9050919050565b6108478161081c565b82525050565b6000602082019050610862600083018461083e565b92915050565b6000604051905090565b600080fd5b61088081610808565b811461088b57600080fd5b50565b60008135905061089d81610877565b92915050565b6000602082840312156108b9576108b8610872565b5b60006108c78482850161088e565b91505092915050565b6108d981610808565b82525050565b60006020820190506108f460008301846108d0565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610948826108ff565b810181811067ffffffffffffffff8211171561096757610966610910565b5b80604052505050565b600061097a610868565b9050610986828261093f565b919050565b61099481610808565b811461099f57600080fd5b50565b6000813590506109b18161098b565b92915050565b6000604082840312156109cd576109cc6108fa565b5b6109d76040610970565b905060006109e7848285016109a2565b60008301525060206109fb848285016109a2565b60208301525092915050565b600060408284031215610a1d57610a1c610872565b5b6000610a2b848285016109b7565b91505092915050565b6000819050919050565b6000610a59610a54610a4f84610a34565b610812565b610a34565b9050919050565b610a6981610a3e565b82525050565b6000602082019050610a846000830184610a60565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ac5610ac0610abb84610a8a565b610812565b610a8a565b9050919050565b6000610ad782610aaa565b9050919050565b6000610ae982610acc565b9050919050565b610af981610ade565b82525050565b6000602082019050610b146000830184610af0565b92915050565b610b2381610a34565b8114610b2e57600080fd5b50565b600081359050610b4081610b1a565b92915050565b600060208284031215610b5c57610b5b610872565b5b6000610b6a84828501610b31565b91505092915050565b600081519050610b8281610877565b92915050565b600060208284031215610b9e57610b9d610872565b5b6000610bac84828501610b73565b91505092915050565b600081519050610bc481610b1a565b92915050565b600060208284031215610be057610bdf610872565b5b6000610bee84828501610bb5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c3182610808565b9150610c3c83610808565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c7557610c74610bf7565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cba82610808565b9150610cc583610808565b925082610cd557610cd4610c80565b5b828204905092915050565b6000610ceb82610a34565b9150610cf683610a34565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d3557610d34610bf7565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d7257610d71610bf7565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610daf57610dae610bf7565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dec57610deb610bf7565b5b828202905092915050565b6000610e0282610a34565b9150610e0d83610a34565b925082610e1d57610e1c610c80565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615610e5657610e55610bf7565b5b828205905092915050565b6000610e6c82610a34565b9150610e7783610a34565b9250827f800000000000000000000000000000000000000000000000000000000000000001821260008412151615610eb257610eb1610bf7565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018213600084121615610eea57610ee9610bf7565b5b82820390509291505056fea264697066735822122063f112f1b40730456409617f03ccab84b082407b9ef3f5283e7c0cf3f11f88f764736f6c634300080a0033";

export class ShortEther__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    oracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShortEther> {
    return super.deploy(oracle, overrides || {}) as Promise<ShortEther>;
  }
  getDeployTransaction(
    oracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(oracle, overrides || {});
  }
  attach(address: string): ShortEther {
    return super.attach(address) as ShortEther;
  }
  connect(signer: Signer): ShortEther__factory {
    return super.connect(signer) as ShortEther__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShortEtherInterface {
    return new utils.Interface(_abi) as ShortEtherInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShortEther {
    return new Contract(address, _abi, signerOrProvider) as ShortEther;
  }
}
