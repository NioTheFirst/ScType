'use strict'
Object.defineProperty(exports, '__esModule', { value: true })
const contract = require('@truffle/contract')
const AuthorizedReceiver = contract({
 "contractName": "AuthorizedReceiver",
 "abi": [
  {
   "anonymous": false,
   "inputs": [
    {
     "indexed": false,
     "internalType": "address[]",
     "name": "senders",
     "type": "address[]"
    },
    {
     "indexed": false,
     "internalType": "address",
     "name": "changedBy",
     "type": "address"
    }
   ],
   "name": "AuthorizedSendersChanged",
   "type": "event"
  },
  {
   "inputs": [],
   "name": "getAuthorizedSenders",
   "outputs": [
    {
     "internalType": "address[]",
     "name": "",
     "type": "address[]"
    }
   ],
   "stateMutability": "view",
   "type": "function"
  },
  {
   "inputs": [
    {
     "internalType": "address",
     "name": "sender",
     "type": "address"
    }
   ],
   "name": "isAuthorizedSender",
   "outputs": [
    {
     "internalType": "bool",
     "name": "",
     "type": "bool"
    }
   ],
   "stateMutability": "view",
   "type": "function"
  },
  {
   "inputs": [
    {
     "internalType": "address[]",
     "name": "senders",
     "type": "address[]"
    }
   ],
   "name": "setAuthorizedSenders",
   "outputs": [],
   "stateMutability": "nonpayable",
   "type": "function"
  }
 ],
 "evm": {
  "bytecode": {
   "object": "0x",
   "sourceMap": ""
  },
  "deployedBytecode": {
   "object": "0x",
   "sourceMap": ""
  },
  "methodIdentifiers": {
   "getAuthorizedSenders()": "2408afaa",
   "isAuthorizedSender(address)": "fa00763a",
   "setAuthorizedSenders(address[])": "ee56997b"
  }
 },
 "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"senders\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"name\":\"AuthorizedSendersChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAuthorizedSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"isAuthorizedSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"senders\",\"type\":\"address[]\"}],\"name\":\"setAuthorizedSenders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAuthorizedSenders()\":{\"returns\":{\"_0\":\"array of addresses\"}},\"isAuthorizedSender(address)\":{\"params\":{\"sender\":\"The address of the Chainlink node\"},\"returns\":{\"_0\":\"The authorization status of the node\"}},\"setAuthorizedSenders(address[])\":{\"params\":{\"senders\":\"The addresses of the authorized Chainlink node\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAuthorizedSenders()\":{\"notice\":\"Retrieve a list of authorized senders\"},\"isAuthorizedSender(address)\":{\"notice\":\"Use this to check if a node is authorized for fulfilling requests\"},\"setAuthorizedSenders(address[])\":{\"notice\":\"Sets the fulfillment permission for a given node. Use `true` to allow, `false` to disallow.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.7/dev/AuthorizedReceiver.sol\":\"AuthorizedReceiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.7/dev/AuthorizedReceiver.sol\":{\"keccak256\":\"0xdf8629200c2b65826a638c955c193e3ac0cca520feee67cfba2ad562cf02c156\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc0cb2d401959af812abee6d6beaf4d194c3d1b74865164286596615e138d45b\",\"dweb:/ipfs/QmPRwok3wt2ikvDMtcpqBF1EiEYuJAwRuDyXzZTvQA1qJJ\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.7/interfaces/AuthorizedReceiverInterface.sol\":{\"keccak256\":\"0x647fc393b9d6be0c20e5ac5bcb19114f9a50e808d567979ed04abba5ee18a22f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef307221efe7b5e72ced7e24005a8363384013b1b26e307d9c9735e1624ac677\",\"dweb:/ipfs/QmYfcisfmWohe1v7bQH1EBA58Ct2zdkTNpSUjq3aKUqpkX\"]}},\"version\":1}"
})

if (process.env.NODE_ENV === 'test') {
  try {
    eval('AuthorizedReceiver.setProvider(web3.currentProvider)')
  } catch (e) {}
}

exports.AuthorizedReceiver = AuthorizedReceiver
