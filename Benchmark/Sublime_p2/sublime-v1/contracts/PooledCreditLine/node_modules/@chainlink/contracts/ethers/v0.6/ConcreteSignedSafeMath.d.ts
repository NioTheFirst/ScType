/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription,
} from ".";

interface ConcreteSignedSafeMathInterface extends Interface {
  functions: {
    testAdd: TypedFunctionDescription<{
      encode([_a, _b]: [BigNumberish, BigNumberish]): string;
    }>;

    testAvg: TypedFunctionDescription<{
      encode([_a, _b]: [BigNumberish, BigNumberish]): string;
    }>;
  };

  events: {};
}

export class ConcreteSignedSafeMath extends Contract {
  connect(signerOrProvider: Signer | Provider | string): ConcreteSignedSafeMath;
  attach(addressOrName: string): ConcreteSignedSafeMath;
  deployed(): Promise<ConcreteSignedSafeMath>;

  on(event: EventFilter | string, listener: Listener): ConcreteSignedSafeMath;
  once(event: EventFilter | string, listener: Listener): ConcreteSignedSafeMath;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): ConcreteSignedSafeMath;
  removeAllListeners(eventName: EventFilter | string): ConcreteSignedSafeMath;
  removeListener(eventName: any, listener: Listener): ConcreteSignedSafeMath;

  interface: ConcreteSignedSafeMathInterface;

  functions: {
    testAdd(
      _a: BigNumberish,
      _b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "testAdd(int256,int256)"(
      _a: BigNumberish,
      _b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    testAvg(
      _a: BigNumberish,
      _b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "testAvg(int256,int256)"(
      _a: BigNumberish,
      _b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;
  };

  testAdd(
    _a: BigNumberish,
    _b: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>;

  "testAdd(int256,int256)"(
    _a: BigNumberish,
    _b: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>;

  testAvg(
    _a: BigNumberish,
    _b: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>;

  "testAvg(int256,int256)"(
    _a: BigNumberish,
    _b: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>;

  filters: {};

  estimate: {
    testAdd(
      _a: BigNumberish,
      _b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "testAdd(int256,int256)"(
      _a: BigNumberish,
      _b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    testAvg(
      _a: BigNumberish,
      _b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "testAvg(int256,int256)"(
      _a: BigNumberish,
      _b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;
  };
}
