import { ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";
import { TransactionOverrides } from "..";
import { ValidatorProxy } from "../ValidatorProxy";
export declare class ValidatorProxy__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(aggregator: string, validator: string, overrides?: TransactionOverrides): Promise<ValidatorProxy>;
    getDeployTransaction(aggregator: string, validator: string, overrides?: TransactionOverrides): UnsignedTransaction;
    attach(address: string): ValidatorProxy;
    connect(signer: Signer): ValidatorProxy__factory;
    static connect(address: string, signerOrProvider: Signer | Provider): ValidatorProxy;
}
//# sourceMappingURL=ValidatorProxy__factory.d.ts.map