/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription,
} from ".";

interface EmptyAggregatorInterface extends Interface {
  functions: {
    fulfill: TypedFunctionDescription<{
      encode([_requestId, _saId, _oracle, _fulfillment]: [
        Arrayish,
        Arrayish,
        string,
        Arrayish
      ]): string;
    }>;

    initiateJob: TypedFunctionDescription<{
      encode([_saId, _serviceAgreementData]: [Arrayish, Arrayish]): string;
    }>;
  };

  events: {
    InitiatedJob: TypedEventDescription<{
      encodeTopics([said]: [null]): string[];
    }>;

    Fulfilled: TypedEventDescription<{
      encodeTopics([requestId, oracle, success, complete, fulfillment]: [
        null,
        null,
        null,
        null,
        null
      ]): string[];
    }>;
  };
}

export class EmptyAggregator extends Contract {
  connect(signerOrProvider: Signer | Provider | string): EmptyAggregator;
  attach(addressOrName: string): EmptyAggregator;
  deployed(): Promise<EmptyAggregator>;

  on(event: EventFilter | string, listener: Listener): EmptyAggregator;
  once(event: EventFilter | string, listener: Listener): EmptyAggregator;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): EmptyAggregator;
  removeAllListeners(eventName: EventFilter | string): EmptyAggregator;
  removeListener(eventName: any, listener: Listener): EmptyAggregator;

  interface: EmptyAggregatorInterface;

  functions: {
    fulfill(
      _requestId: Arrayish,
      _saId: Arrayish,
      _oracle: string,
      _fulfillment: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "fulfill(bytes32,bytes32,address,bytes32)"(
      _requestId: Arrayish,
      _saId: Arrayish,
      _oracle: string,
      _fulfillment: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    initiateJob(
      _saId: Arrayish,
      _serviceAgreementData: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "initiateJob(bytes32,bytes)"(
      _saId: Arrayish,
      _serviceAgreementData: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;
  };

  fulfill(
    _requestId: Arrayish,
    _saId: Arrayish,
    _oracle: string,
    _fulfillment: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "fulfill(bytes32,bytes32,address,bytes32)"(
    _requestId: Arrayish,
    _saId: Arrayish,
    _oracle: string,
    _fulfillment: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  initiateJob(
    _saId: Arrayish,
    _serviceAgreementData: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "initiateJob(bytes32,bytes)"(
    _saId: Arrayish,
    _serviceAgreementData: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  filters: {
    InitiatedJob(said: null): EventFilter;

    Fulfilled(
      requestId: null,
      oracle: null,
      success: null,
      complete: null,
      fulfillment: null
    ): EventFilter;
  };

  estimate: {
    fulfill(
      _requestId: Arrayish,
      _saId: Arrayish,
      _oracle: string,
      _fulfillment: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "fulfill(bytes32,bytes32,address,bytes32)"(
      _requestId: Arrayish,
      _saId: Arrayish,
      _oracle: string,
      _fulfillment: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    initiateJob(
      _saId: Arrayish,
      _serviceAgreementData: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "initiateJob(bytes32,bytes)"(
      _saId: Arrayish,
      _serviceAgreementData: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;
  };
}
