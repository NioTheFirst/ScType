"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MaliciousChainlinked__factory = void 0;
const ethers_1 = require("ethers");
class MaliciousChainlinked__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(overrides) {
        return super.deploy(overrides);
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides);
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MaliciousChainlinked__factory = MaliciousChainlinked__factory;
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: "id",
                type: "bytes32",
            },
        ],
        name: "ChainlinkRequested",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: "id",
                type: "bytes32",
            },
        ],
        name: "ChainlinkFulfilled",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: "id",
                type: "bytes32",
            },
        ],
        name: "ChainlinkCancelled",
        type: "event",
    },
];
const _bytecode = "0x608060405260016004556001600655348015601957600080fd5b5060358060276000396000f3006080604052600080fd00a165627a7a72305820e471be20dd0c535be2c18a9e33c77d17362b9e09726946f2e8b5c240ef3caa5b0029";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFsaWNpb3VzQ2hhaW5saW5rZWRfX2ZhY3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJNYWxpY2lvdXNDaGFpbmxpbmtlZF9fZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsK0NBQStDO0FBQy9DLG9CQUFvQjtBQUNwQixvQkFBb0I7OztBQUVwQixtQ0FBMkQ7QUFPM0QsTUFBYSw2QkFBOEIsU0FBUSx3QkFBZTtJQUNoRSxZQUFZLE1BQWU7UUFDekIsS0FBSyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVELE1BQU0sQ0FBQyxTQUFnQztRQUNyQyxPQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFrQyxDQUFDO0lBQ2xFLENBQUM7SUFDRCxvQkFBb0IsQ0FBQyxTQUFnQztRQUNuRCxPQUFPLEtBQUssQ0FBQyxvQkFBb0IsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBQ0QsTUFBTSxDQUFDLE9BQWU7UUFDcEIsT0FBTyxLQUFLLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBeUIsQ0FBQztJQUN2RCxDQUFDO0lBQ0QsT0FBTyxDQUFDLE1BQWM7UUFDcEIsT0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBa0MsQ0FBQztJQUNoRSxDQUFDO0lBQ0QsTUFBTSxDQUFDLE9BQU8sQ0FDWixPQUFlLEVBQ2YsZ0JBQW1DO1FBRW5DLE9BQU8sSUFBSSxpQkFBUSxDQUNqQixPQUFPLEVBQ1AsSUFBSSxFQUNKLGdCQUFnQixDQUNPLENBQUM7SUFDNUIsQ0FBQztDQUNGO0FBM0JELHNFQTJCQztBQUVELE1BQU0sSUFBSSxHQUFHO0lBQ1g7UUFDRSxTQUFTLEVBQUUsS0FBSztRQUNoQixNQUFNLEVBQUU7WUFDTjtnQkFDRSxPQUFPLEVBQUUsSUFBSTtnQkFDYixJQUFJLEVBQUUsSUFBSTtnQkFDVixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsSUFBSSxFQUFFLG9CQUFvQjtRQUMxQixJQUFJLEVBQUUsT0FBTztLQUNkO0lBQ0Q7UUFDRSxTQUFTLEVBQUUsS0FBSztRQUNoQixNQUFNLEVBQUU7WUFDTjtnQkFDRSxPQUFPLEVBQUUsSUFBSTtnQkFDYixJQUFJLEVBQUUsSUFBSTtnQkFDVixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsSUFBSSxFQUFFLG9CQUFvQjtRQUMxQixJQUFJLEVBQUUsT0FBTztLQUNkO0lBQ0Q7UUFDRSxTQUFTLEVBQUUsS0FBSztRQUNoQixNQUFNLEVBQUU7WUFDTjtnQkFDRSxPQUFPLEVBQUUsSUFBSTtnQkFDYixJQUFJLEVBQUUsSUFBSTtnQkFDVixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsSUFBSSxFQUFFLG9CQUFvQjtRQUMxQixJQUFJLEVBQUUsT0FBTztLQUNkO0NBQ0YsQ0FBQztBQUVGLE1BQU0sU0FBUyxHQUNiLDRMQUE0TCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyogQXV0b2dlbmVyYXRlZCBmaWxlLiBEbyBub3QgZWRpdCBtYW51YWxseS4gKi9cbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuXG5pbXBvcnQgeyBDb250cmFjdCwgQ29udHJhY3RGYWN0b3J5LCBTaWduZXIgfSBmcm9tIFwiZXRoZXJzXCI7XG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJldGhlcnMvcHJvdmlkZXJzXCI7XG5pbXBvcnQgeyBVbnNpZ25lZFRyYW5zYWN0aW9uIH0gZnJvbSBcImV0aGVycy91dGlscy90cmFuc2FjdGlvblwiO1xuXG5pbXBvcnQgeyBUcmFuc2FjdGlvbk92ZXJyaWRlcyB9IGZyb20gXCIuLlwiO1xuaW1wb3J0IHsgTWFsaWNpb3VzQ2hhaW5saW5rZWQgfSBmcm9tIFwiLi4vTWFsaWNpb3VzQ2hhaW5saW5rZWRcIjtcblxuZXhwb3J0IGNsYXNzIE1hbGljaW91c0NoYWlubGlua2VkX19mYWN0b3J5IGV4dGVuZHMgQ29udHJhY3RGYWN0b3J5IHtcbiAgY29uc3RydWN0b3Ioc2lnbmVyPzogU2lnbmVyKSB7XG4gICAgc3VwZXIoX2FiaSwgX2J5dGVjb2RlLCBzaWduZXIpO1xuICB9XG5cbiAgZGVwbG95KG92ZXJyaWRlcz86IFRyYW5zYWN0aW9uT3ZlcnJpZGVzKTogUHJvbWlzZTxNYWxpY2lvdXNDaGFpbmxpbmtlZD4ge1xuICAgIHJldHVybiBzdXBlci5kZXBsb3kob3ZlcnJpZGVzKSBhcyBQcm9taXNlPE1hbGljaW91c0NoYWlubGlua2VkPjtcbiAgfVxuICBnZXREZXBsb3lUcmFuc2FjdGlvbihvdmVycmlkZXM/OiBUcmFuc2FjdGlvbk92ZXJyaWRlcyk6IFVuc2lnbmVkVHJhbnNhY3Rpb24ge1xuICAgIHJldHVybiBzdXBlci5nZXREZXBsb3lUcmFuc2FjdGlvbihvdmVycmlkZXMpO1xuICB9XG4gIGF0dGFjaChhZGRyZXNzOiBzdHJpbmcpOiBNYWxpY2lvdXNDaGFpbmxpbmtlZCB7XG4gICAgcmV0dXJuIHN1cGVyLmF0dGFjaChhZGRyZXNzKSBhcyBNYWxpY2lvdXNDaGFpbmxpbmtlZDtcbiAgfVxuICBjb25uZWN0KHNpZ25lcjogU2lnbmVyKTogTWFsaWNpb3VzQ2hhaW5saW5rZWRfX2ZhY3Rvcnkge1xuICAgIHJldHVybiBzdXBlci5jb25uZWN0KHNpZ25lcikgYXMgTWFsaWNpb3VzQ2hhaW5saW5rZWRfX2ZhY3Rvcnk7XG4gIH1cbiAgc3RhdGljIGNvbm5lY3QoXG4gICAgYWRkcmVzczogc3RyaW5nLFxuICAgIHNpZ25lck9yUHJvdmlkZXI6IFNpZ25lciB8IFByb3ZpZGVyXG4gICk6IE1hbGljaW91c0NoYWlubGlua2VkIHtcbiAgICByZXR1cm4gbmV3IENvbnRyYWN0KFxuICAgICAgYWRkcmVzcyxcbiAgICAgIF9hYmksXG4gICAgICBzaWduZXJPclByb3ZpZGVyXG4gICAgKSBhcyBNYWxpY2lvdXNDaGFpbmxpbmtlZDtcbiAgfVxufVxuXG5jb25zdCBfYWJpID0gW1xuICB7XG4gICAgYW5vbnltb3VzOiBmYWxzZSxcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogdHJ1ZSxcbiAgICAgICAgbmFtZTogXCJpZFwiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzMzJcIixcbiAgICAgIH0sXG4gICAgXSxcbiAgICBuYW1lOiBcIkNoYWlubGlua1JlcXVlc3RlZFwiLFxuICAgIHR5cGU6IFwiZXZlbnRcIixcbiAgfSxcbiAge1xuICAgIGFub255bW91czogZmFsc2UsXG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IHRydWUsXG4gICAgICAgIG5hbWU6IFwiaWRcIixcbiAgICAgICAgdHlwZTogXCJieXRlczMyXCIsXG4gICAgICB9LFxuICAgIF0sXG4gICAgbmFtZTogXCJDaGFpbmxpbmtGdWxmaWxsZWRcIixcbiAgICB0eXBlOiBcImV2ZW50XCIsXG4gIH0sXG4gIHtcbiAgICBhbm9ueW1vdXM6IGZhbHNlLFxuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbmRleGVkOiB0cnVlLFxuICAgICAgICBuYW1lOiBcImlkXCIsXG4gICAgICAgIHR5cGU6IFwiYnl0ZXMzMlwiLFxuICAgICAgfSxcbiAgICBdLFxuICAgIG5hbWU6IFwiQ2hhaW5saW5rQ2FuY2VsbGVkXCIsXG4gICAgdHlwZTogXCJldmVudFwiLFxuICB9LFxuXTtcblxuY29uc3QgX2J5dGVjb2RlID1cbiAgXCIweDYwODA2MDQwNTI2MDAxNjAwNDU1NjAwMTYwMDY1NTM0ODAxNTYwMTk1NzYwMDA4MGZkNWI1MDYwMzU4MDYwMjc2MDAwMzk2MDAwZjMwMDYwODA2MDQwNTI2MDAwODBmZDAwYTE2NTYyN2E3YTcyMzA1ODIwZTQ3MWJlMjBkZDBjNTM1YmUyYzE4YTllMzNjNzdkMTczNjJiOWUwOTcyNjk0NmYyZThiNWMyNDBlZjNjYWE1YjAwMjlcIjtcbiJdfQ==