/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription,
} from ".";

interface LinkTokenReceiverInterface extends Interface {
  functions: {
    getChainlinkToken: TypedFunctionDescription<{ encode([]: []): string }>;

    onTokenTransfer: TypedFunctionDescription<{
      encode([sender, amount, data]: [string, BigNumberish, Arrayish]): string;
    }>;
  };

  events: {};
}

export class LinkTokenReceiver extends Contract {
  connect(signerOrProvider: Signer | Provider | string): LinkTokenReceiver;
  attach(addressOrName: string): LinkTokenReceiver;
  deployed(): Promise<LinkTokenReceiver>;

  on(event: EventFilter | string, listener: Listener): LinkTokenReceiver;
  once(event: EventFilter | string, listener: Listener): LinkTokenReceiver;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): LinkTokenReceiver;
  removeAllListeners(eventName: EventFilter | string): LinkTokenReceiver;
  removeListener(eventName: any, listener: Listener): LinkTokenReceiver;

  interface: LinkTokenReceiverInterface;

  functions: {
    getChainlinkToken(overrides?: TransactionOverrides): Promise<string>;

    "getChainlinkToken()"(overrides?: TransactionOverrides): Promise<string>;

    onTokenTransfer(
      sender: string,
      amount: BigNumberish,
      data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "onTokenTransfer(address,uint256,bytes)"(
      sender: string,
      amount: BigNumberish,
      data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;
  };

  getChainlinkToken(overrides?: TransactionOverrides): Promise<string>;

  "getChainlinkToken()"(overrides?: TransactionOverrides): Promise<string>;

  onTokenTransfer(
    sender: string,
    amount: BigNumberish,
    data: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "onTokenTransfer(address,uint256,bytes)"(
    sender: string,
    amount: BigNumberish,
    data: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  filters: {};

  estimate: {
    getChainlinkToken(overrides?: TransactionOverrides): Promise<BigNumber>;

    "getChainlinkToken()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    onTokenTransfer(
      sender: string,
      amount: BigNumberish,
      data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "onTokenTransfer(address,uint256,bytes)"(
      sender: string,
      amount: BigNumberish,
      data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;
  };
}
