/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription,
} from ".";

interface KeeperCompatibleInterfaceInterface extends Interface {
  functions: {
    checkUpkeep: TypedFunctionDescription<{
      encode([checkData]: [Arrayish]): string;
    }>;

    performUpkeep: TypedFunctionDescription<{
      encode([performData]: [Arrayish]): string;
    }>;
  };

  events: {};
}

export class KeeperCompatibleInterface extends Contract {
  connect(
    signerOrProvider: Signer | Provider | string
  ): KeeperCompatibleInterface;
  attach(addressOrName: string): KeeperCompatibleInterface;
  deployed(): Promise<KeeperCompatibleInterface>;

  on(
    event: EventFilter | string,
    listener: Listener
  ): KeeperCompatibleInterface;
  once(
    event: EventFilter | string,
    listener: Listener
  ): KeeperCompatibleInterface;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): KeeperCompatibleInterface;
  removeAllListeners(
    eventName: EventFilter | string
  ): KeeperCompatibleInterface;
  removeListener(eventName: any, listener: Listener): KeeperCompatibleInterface;

  interface: KeeperCompatibleInterfaceInterface;

  functions: {
    checkUpkeep(
      checkData: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "checkUpkeep(bytes)"(
      checkData: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    performUpkeep(
      performData: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "performUpkeep(bytes)"(
      performData: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;
  };

  checkUpkeep(
    checkData: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "checkUpkeep(bytes)"(
    checkData: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  performUpkeep(
    performData: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "performUpkeep(bytes)"(
    performData: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  filters: {};

  estimate: {
    checkUpkeep(
      checkData: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "checkUpkeep(bytes)"(
      checkData: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    performUpkeep(
      performData: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "performUpkeep(bytes)"(
      performData: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;
  };
}
