/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription,
} from ".";

interface ConcreteChainlinkedInterface extends Interface {
  functions: {
    publicLINK: TypedFunctionDescription<{
      encode([_amount]: [BigNumberish]): string;
    }>;

    publicCancelRequest: TypedFunctionDescription<{
      encode([_requestId, _payment, _callbackFunctionId, _expiration]: [
        Arrayish,
        BigNumberish,
        Arrayish,
        BigNumberish
      ]): string;
    }>;

    publicAddExternalRequest: TypedFunctionDescription<{
      encode([_oracle, _requestId]: [string, Arrayish]): string;
    }>;

    fulfillRequest: TypedFunctionDescription<{
      encode([_requestId]: [Arrayish, Arrayish]): string;
    }>;

    publicRequest: TypedFunctionDescription<{
      encode([_id, _address, _fulfillmentSignature, _wei]: [
        Arrayish,
        string,
        Arrayish,
        BigNumberish
      ]): string;
    }>;

    publicChainlinkToken: TypedFunctionDescription<{ encode([]: []): string }>;

    publicRequestRunTo: TypedFunctionDescription<{
      encode([_oracle, _id, _address, _fulfillmentSignature, _wei]: [
        string,
        Arrayish,
        string,
        Arrayish,
        BigNumberish
      ]): string;
    }>;

    publicFulfillChainlinkRequest: TypedFunctionDescription<{
      encode([_requestId]: [Arrayish, Arrayish]): string;
    }>;

    publicNewRequest: TypedFunctionDescription<{
      encode([_id, _address, _fulfillmentSignature]: [
        Arrayish,
        string,
        Arrayish
      ]): string;
    }>;

    publicOracleAddress: TypedFunctionDescription<{ encode([]: []): string }>;
  };

  events: {
    Request: TypedEventDescription<{
      encodeTopics([id, callbackAddress, callbackfunctionSelector, data]: [
        null,
        null,
        null,
        null
      ]): string[];
    }>;

    LinkAmount: TypedEventDescription<{
      encodeTopics([amount]: [null]): string[];
    }>;

    ChainlinkRequested: TypedEventDescription<{
      encodeTopics([id]: [Arrayish | null]): string[];
    }>;

    ChainlinkFulfilled: TypedEventDescription<{
      encodeTopics([id]: [Arrayish | null]): string[];
    }>;

    ChainlinkCancelled: TypedEventDescription<{
      encodeTopics([id]: [Arrayish | null]): string[];
    }>;
  };
}

export class ConcreteChainlinked extends Contract {
  connect(signerOrProvider: Signer | Provider | string): ConcreteChainlinked;
  attach(addressOrName: string): ConcreteChainlinked;
  deployed(): Promise<ConcreteChainlinked>;

  on(event: EventFilter | string, listener: Listener): ConcreteChainlinked;
  once(event: EventFilter | string, listener: Listener): ConcreteChainlinked;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): ConcreteChainlinked;
  removeAllListeners(eventName: EventFilter | string): ConcreteChainlinked;
  removeListener(eventName: any, listener: Listener): ConcreteChainlinked;

  interface: ConcreteChainlinkedInterface;

  functions: {
    publicLINK(
      _amount: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "publicLINK(uint256)"(
      _amount: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    publicCancelRequest(
      _requestId: Arrayish,
      _payment: BigNumberish,
      _callbackFunctionId: Arrayish,
      _expiration: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "publicCancelRequest(bytes32,uint256,bytes4,uint256)"(
      _requestId: Arrayish,
      _payment: BigNumberish,
      _callbackFunctionId: Arrayish,
      _expiration: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    publicAddExternalRequest(
      _oracle: string,
      _requestId: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "publicAddExternalRequest(address,bytes32)"(
      _oracle: string,
      _requestId: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    fulfillRequest(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "fulfillRequest(bytes32,bytes32)"(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    publicRequest(
      _id: Arrayish,
      _address: string,
      _fulfillmentSignature: Arrayish,
      _wei: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "publicRequest(bytes32,address,bytes,uint256)"(
      _id: Arrayish,
      _address: string,
      _fulfillmentSignature: Arrayish,
      _wei: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    publicChainlinkToken(overrides?: TransactionOverrides): Promise<string>;

    "publicChainlinkToken()"(overrides?: TransactionOverrides): Promise<string>;

    publicRequestRunTo(
      _oracle: string,
      _id: Arrayish,
      _address: string,
      _fulfillmentSignature: Arrayish,
      _wei: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "publicRequestRunTo(address,bytes32,address,bytes,uint256)"(
      _oracle: string,
      _id: Arrayish,
      _address: string,
      _fulfillmentSignature: Arrayish,
      _wei: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    publicFulfillChainlinkRequest(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "publicFulfillChainlinkRequest(bytes32,bytes32)"(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    publicNewRequest(
      _id: Arrayish,
      _address: string,
      _fulfillmentSignature: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "publicNewRequest(bytes32,address,bytes)"(
      _id: Arrayish,
      _address: string,
      _fulfillmentSignature: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    publicOracleAddress(overrides?: TransactionOverrides): Promise<string>;

    "publicOracleAddress()"(overrides?: TransactionOverrides): Promise<string>;
  };

  publicLINK(
    _amount: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "publicLINK(uint256)"(
    _amount: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  publicCancelRequest(
    _requestId: Arrayish,
    _payment: BigNumberish,
    _callbackFunctionId: Arrayish,
    _expiration: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "publicCancelRequest(bytes32,uint256,bytes4,uint256)"(
    _requestId: Arrayish,
    _payment: BigNumberish,
    _callbackFunctionId: Arrayish,
    _expiration: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  publicAddExternalRequest(
    _oracle: string,
    _requestId: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "publicAddExternalRequest(address,bytes32)"(
    _oracle: string,
    _requestId: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  fulfillRequest(
    _requestId: Arrayish,
    arg1: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "fulfillRequest(bytes32,bytes32)"(
    _requestId: Arrayish,
    arg1: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  publicRequest(
    _id: Arrayish,
    _address: string,
    _fulfillmentSignature: Arrayish,
    _wei: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "publicRequest(bytes32,address,bytes,uint256)"(
    _id: Arrayish,
    _address: string,
    _fulfillmentSignature: Arrayish,
    _wei: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  publicChainlinkToken(overrides?: TransactionOverrides): Promise<string>;

  "publicChainlinkToken()"(overrides?: TransactionOverrides): Promise<string>;

  publicRequestRunTo(
    _oracle: string,
    _id: Arrayish,
    _address: string,
    _fulfillmentSignature: Arrayish,
    _wei: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "publicRequestRunTo(address,bytes32,address,bytes,uint256)"(
    _oracle: string,
    _id: Arrayish,
    _address: string,
    _fulfillmentSignature: Arrayish,
    _wei: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  publicFulfillChainlinkRequest(
    _requestId: Arrayish,
    arg1: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "publicFulfillChainlinkRequest(bytes32,bytes32)"(
    _requestId: Arrayish,
    arg1: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  publicNewRequest(
    _id: Arrayish,
    _address: string,
    _fulfillmentSignature: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "publicNewRequest(bytes32,address,bytes)"(
    _id: Arrayish,
    _address: string,
    _fulfillmentSignature: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  publicOracleAddress(overrides?: TransactionOverrides): Promise<string>;

  "publicOracleAddress()"(overrides?: TransactionOverrides): Promise<string>;

  filters: {
    Request(
      id: null,
      callbackAddress: null,
      callbackfunctionSelector: null,
      data: null
    ): EventFilter;

    LinkAmount(amount: null): EventFilter;

    ChainlinkRequested(id: Arrayish | null): EventFilter;

    ChainlinkFulfilled(id: Arrayish | null): EventFilter;

    ChainlinkCancelled(id: Arrayish | null): EventFilter;
  };

  estimate: {
    publicLINK(
      _amount: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "publicLINK(uint256)"(
      _amount: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    publicCancelRequest(
      _requestId: Arrayish,
      _payment: BigNumberish,
      _callbackFunctionId: Arrayish,
      _expiration: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "publicCancelRequest(bytes32,uint256,bytes4,uint256)"(
      _requestId: Arrayish,
      _payment: BigNumberish,
      _callbackFunctionId: Arrayish,
      _expiration: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    publicAddExternalRequest(
      _oracle: string,
      _requestId: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "publicAddExternalRequest(address,bytes32)"(
      _oracle: string,
      _requestId: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    fulfillRequest(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "fulfillRequest(bytes32,bytes32)"(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    publicRequest(
      _id: Arrayish,
      _address: string,
      _fulfillmentSignature: Arrayish,
      _wei: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "publicRequest(bytes32,address,bytes,uint256)"(
      _id: Arrayish,
      _address: string,
      _fulfillmentSignature: Arrayish,
      _wei: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    publicChainlinkToken(overrides?: TransactionOverrides): Promise<BigNumber>;

    "publicChainlinkToken()"(
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    publicRequestRunTo(
      _oracle: string,
      _id: Arrayish,
      _address: string,
      _fulfillmentSignature: Arrayish,
      _wei: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "publicRequestRunTo(address,bytes32,address,bytes,uint256)"(
      _oracle: string,
      _id: Arrayish,
      _address: string,
      _fulfillmentSignature: Arrayish,
      _wei: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    publicFulfillChainlinkRequest(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "publicFulfillChainlinkRequest(bytes32,bytes32)"(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    publicNewRequest(
      _id: Arrayish,
      _address: string,
      _fulfillmentSignature: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "publicNewRequest(bytes32,address,bytes)"(
      _id: Arrayish,
      _address: string,
      _fulfillmentSignature: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    publicOracleAddress(overrides?: TransactionOverrides): Promise<BigNumber>;

    "publicOracleAddress()"(
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;
  };
}
