/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from "..";
import { MeanAggregator } from "../MeanAggregator";

export class MeanAggregator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<MeanAggregator> {
    return super.deploy(overrides) as Promise<MeanAggregator>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): MeanAggregator {
    return super.attach(address) as MeanAggregator;
  }
  connect(signer: Signer): MeanAggregator__factory {
    return super.connect(signer) as MeanAggregator__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MeanAggregator {
    return new Contract(address, _abi, signerOrProvider) as MeanAggregator;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "_requestId",
        type: "bytes32",
      },
      {
        name: "_sAId",
        type: "bytes32",
      },
      {
        name: "_oracle",
        type: "address",
      },
      {
        name: "_value",
        type: "bytes32",
      },
    ],
    name: "fulfill",
    outputs: [
      {
        name: "success",
        type: "bool",
      },
      {
        name: "complete",
        type: "bool",
      },
      {
        name: "response",
        type: "bytes",
      },
      {
        name: "paymentAmounts",
        type: "int256[]",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_sAId",
        type: "bytes32",
      },
      {
        name: "_serviceAgreementData",
        type: "bytes",
      },
    ],
    name: "initiateJob",
    outputs: [
      {
        name: "success",
        type: "bool",
      },
      {
        name: "message",
        type: "bytes",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ab9806100206000396000f3fe60806040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416639760168f8114610050578063d43a12f614610171575b600080fd5b34801561005c57600080fd5b506100a26004803603608081101561007357600080fd5b5080359060208101359073ffffffffffffffffffffffffffffffffffffffff60408201351690606001356102ae565b6040518085151515158152602001841515151581526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156100f75781810151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b508381038252845181528451602091820191808701910280838360005b83811015610159578181015183820152602001610141565b50505050905001965050505050505060405180910390f35b34801561017d57600080fd5b5061022b6004803603604081101561019457600080fd5b813591908101906040810160208201356401000000008111156101b657600080fd5b8201836020820111156101c857600080fd5b803590602001918460018302840111640100000000831117156101ea57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061052c945050505050565b604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561027257818101518382015260200161025a565b50505050905090810190601f16801561029f5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b600084815260036020908152604080832073ffffffffffffffffffffffffffffffffffffffff861684529091528120548190606090819015158061030d57506000878152600160209081526040808320548b8452600290925290912054145b156103545760408051808201909152601781527f6f7261636c6520616c7265616479207265706f727465640000000000000000006020820152600094508493509150610521565b6000878152600160205260408120548681151561036d57fe5b60008a815260016020526040812054929091049250908781151561038d57fe5b60008c8152600560209081526040808320548e8452600190925282205493909206935090830191828115156103be57fe5b60008e8152600460205260409020549190048582010191508110156103df57fe5b60008c81526004602090815260408083208490558d835260019091529020548281151561040857fe5b06600560008e8152602001908152602001600020819055506001600260008e815260200190815260200160002060008282540192505081905550600260008d815260200190815260200160002054600360008e815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060019750600160008c815260200190815260200160002080549050600260008e815260200190815260200160002054149650861561051c5760008c8152600460209081526040918290205482518083019190915282518082039092018252820190915295506105198b8d610650565b94505b505050505b945094509450949050565b60006060610538610981565b610541846107ce565b6000868152600160205260409020549091501561059757505060408051808201909152601581527f6a6f6220616c726561647920696e697469617465640000000000000000000000602082015260009150610649565b606081015151151561060c576000606060405190810160405280602281526020017f6d75737420646570656e64206f6e206174206c65617374206f6e65206f72616381526020017f6c650000000000000000000000000000000000000000000000000000000000008152509250925050610649565b606081015160008681526001602090815260409091208251610633939192909101906109c4565b5051600085815260208190526040902055600191505b9250929050565b6000828152600160209081526040918290205482518181528183028101909201909252606091801561068c578160200160208202803883390190505b506000848152600160209081526040808320549183905282205492935091905b6000868152600160205260409020548110156107c55760008581526003602090815260408083208984526001928390529083208054849190869081106106ee57fe5b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff168352820192909252604001902054039050600280850a908202600101840281151561073957fe5b04848481151561074557fe5b0460020203858381518110151561075857fe5b602090810290910181019190915260008781526003825260408082208a83526001909352812080548590811061078a57fe5b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff168352820192909252604001812055506001016106ac565b50505092915050565b6107d6610981565b6107de610981565b828060200190516101008110156107f457600080fd5b815160208301516040840151606085018051939592949193918301929164010000000081111561082357600080fd5b8201602081018481111561083657600080fd5b815185602082028301116401000000008211171561085357600080fd5b50509291906020018051906020019092919080519060200190929190805190602001909291908051906020019092919050505082925088600001896020018a6040018b6060018c6080018d60a0018e60c0018f60e001887bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250887bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525088815250889052888152508881525088815250505050505050505080915050919050565b60408051610100810182526000808252602082018190529181018290526060808201526080810182905260a0810182905260c0810182905260e081019190915290565b828054828255906000526020600020908101928215610a3e579160200282015b82811115610a3e57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906109e4565b50610a4a929150610a4e565b5090565b610a8a91905b80821115610a4a5780547fffffffffffffffffffffffff0000000000000000000000000000000000000000168155600101610a54565b9056fea165627a7a723058203c1b18ecf9ddaf1d3eed52de19cd40765072317c06e6f1e4fcd4eb232c721ae60029";
