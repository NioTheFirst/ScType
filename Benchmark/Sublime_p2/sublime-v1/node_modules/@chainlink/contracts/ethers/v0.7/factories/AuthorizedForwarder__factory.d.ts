import { ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";
import { Arrayish } from "ethers/utils";
import { TransactionOverrides } from "..";
import { AuthorizedForwarder } from "../AuthorizedForwarder";
export declare class AuthorizedForwarder__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(link: string, owner: string, recipient: string, message: Arrayish, overrides?: TransactionOverrides): Promise<AuthorizedForwarder>;
    getDeployTransaction(link: string, owner: string, recipient: string, message: Arrayish, overrides?: TransactionOverrides): UnsignedTransaction;
    attach(address: string): AuthorizedForwarder;
    connect(signer: Signer): AuthorizedForwarder__factory;
    static connect(address: string, signerOrProvider: Signer | Provider): AuthorizedForwarder;
}
//# sourceMappingURL=AuthorizedForwarder__factory.d.ts.map