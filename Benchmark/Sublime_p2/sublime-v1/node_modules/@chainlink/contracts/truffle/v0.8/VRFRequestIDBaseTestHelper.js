'use strict'
Object.defineProperty(exports, '__esModule', { value: true })
const contract = require('@truffle/contract')
const VRFRequestIDBaseTestHelper = contract({
 "contractName": "VRFRequestIDBaseTestHelper",
 "abi": [
  {
   "inputs": [
    {
     "internalType": "bytes32",
     "name": "_keyHash",
     "type": "bytes32"
    },
    {
     "internalType": "uint256",
     "name": "_vRFInputSeed",
     "type": "uint256"
    }
   ],
   "name": "makeRequestId_",
   "outputs": [
    {
     "internalType": "bytes32",
     "name": "",
     "type": "bytes32"
    }
   ],
   "stateMutability": "pure",
   "type": "function"
  },
  {
   "inputs": [
    {
     "internalType": "bytes32",
     "name": "_keyHash",
     "type": "bytes32"
    },
    {
     "internalType": "uint256",
     "name": "_userSeed",
     "type": "uint256"
    },
    {
     "internalType": "address",
     "name": "_requester",
     "type": "address"
    },
    {
     "internalType": "uint256",
     "name": "_nonce",
     "type": "uint256"
    }
   ],
   "name": "makeVRFInputSeed_",
   "outputs": [
    {
     "internalType": "uint256",
     "name": "",
     "type": "uint256"
    }
   ],
   "stateMutability": "pure",
   "type": "function"
  }
 ],
 "evm": {
  "bytecode": {
   "object": "0x608060405234801561001057600080fd5b5061016d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806337ab429a1461003b578063bda087ae146100af575b600080fd5b61009d61004936600461010a565b604080516020808201969096528082019490945273ffffffffffffffffffffffffffffffffffffffff9290921660608401526080808401919091528151808403909101815260a09092019052805191012090565b60405190815260200160405180910390f35b61009d6100bd3660046100e9565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600080604083850312156100fb578182fd5b50508035926020909101359150565b6000806000806080858703121561011f578182fd5b8435935060208501359250604085013573ffffffffffffffffffffffffffffffffffffffff81168114610150578283fd5b939692955092936060013592505056fea164736f6c6343000803000a",
   "sourceMap": "96:464:20:-:0;;;;;;;;;;;;;;;;;;;"
  },
  "deployedBytecode": {
   "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806337ab429a1461003b578063bda087ae146100af575b600080fd5b61009d61004936600461010a565b604080516020808201969096528082019490945273ffffffffffffffffffffffffffffffffffffffff9290921660608401526080808401919091528151808403909101815260a09092019052805191012090565b60405190815260200160405180910390f35b61009d6100bd3660046100e9565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600080604083850312156100fb578182fd5b50508035926020909101359150565b6000806000806080858703121561011f578182fd5b8435935060208501359250604085013573ffffffffffffffffffffffffffffffffffffffff81168114610150578283fd5b939692955092936060013592505056fea164736f6c6343000803000a",
   "sourceMap": "96:464:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;157:241;;;;;;:::i;:::-;1005:51:4;;;;;;;1481:25:24;;;;1522:18;;;1515:34;;;;1597:42;1585:55;;;;1565:18;;;1558:83;1657:18;;;;1650:34;;;;1005:51:4;;;;;;;;;;1453:19:24;;;;1005:51:4;;995:62;;;;;;157:241:20;;;;1214:25:24;;;1202:2;1187:18;157:241:20;;;;;;;402:156;;;;;;:::i;:::-;1600:41:4;;;;;;;973:19:24;;;;1008:12;;;1001:28;;;;1600:41:4;;;;;;;;;1045:12:24;;;;1600:41:4;;1590:52;;;;;;402:156:20;14:258:24;;;143:2;131:9;122:7;118:23;114:32;111:2;;;164:6;156;149:22;111:2;-1:-1:-1;;192:23:24;;;262:2;247:18;;;234:32;;-1:-1:-1;101:171:24:o;277:534::-;;;;;440:3;428:9;419:7;415:23;411:33;408:2;;;462:6;454;447:22;408:2;503:9;490:23;480:33;;560:2;549:9;545:18;532:32;522:42;;614:2;603:9;599:18;586:32;658:42;651:5;647:54;640:5;637:65;627:2;;721:6;713;706:22;627:2;398:413;;;;-1:-1:-1;749:5:24;;801:2;786:18;773:32;;-1:-1:-1;;398:413:24:o"
  },
  "methodIdentifiers": {
   "makeRequestId_(bytes32,uint256)": "bda087ae",
   "makeVRFInputSeed_(bytes32,uint256,address,uint256)": "37ab429a"
  }
 },
 "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_vRFInputSeed\",\"type\":\"uint256\"}],\"name\":\"makeRequestId_\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_userSeed\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_requester\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"makeVRFInputSeed_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.8/tests/VRFRequestIDBaseTestHelper.sol\":\"VRFRequestIDBaseTestHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.8/dev/VRFRequestIDBase.sol\":{\"keccak256\":\"0x7c8dad07e6c6c9269d97fd1191ccf9c0f0068683f1f88003e688eef9373de0d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d88c83a359c70f6b2e2e05d8f7611cce4a3d316a65e5175e14bcf9a6ced98af\",\"dweb:/ipfs/QmeH3BEuVvaaQsz7sN5myEnFLoabTG4j85vS9Z6rfJkads\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.8/tests/VRFRequestIDBaseTestHelper.sol\":{\"keccak256\":\"0xcd4df792fd27c40116dd619b7c4b60de250713d6e9d950b3e2c7f7e9b6ab0161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef3b00744b87340c364cd2946f6cb07202647dc6e814c5831c932dd1e7c3c706\",\"dweb:/ipfs/QmeZDPDp6cMT9UrxpA3TTtMNGJDR4mm2xuZiMRSa5wpmS4\"]}},\"version\":1}"
})

if (process.env.NODE_ENV === 'test') {
  try {
    eval('VRFRequestIDBaseTestHelper.setProvider(web3.currentProvider)')
  } catch (e) {}
}

exports.VRFRequestIDBaseTestHelper = VRFRequestIDBaseTestHelper
